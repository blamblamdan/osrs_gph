<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1526" onload="init(evt)" viewBox="0 0 1200 1526" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1526" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1509.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1509.00"> </text><svg id="frames" x="10" width="1180" total_samples="241"><g><title>osrs_gph.exe`ring_core_0_17_7_p256_point_add_affine (1 samples, 0.41%)</title><rect x="0.0000%" y="1461" width="0.4149%" height="15" fill="rgb(175,175,50)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1471.50"></text></g><g><title>osrs_gph.exe`ring_core_0_17_7_p256_sqr_mont (1 samples, 0.41%)</title><rect x="0.0000%" y="1445" width="0.4149%" height="15" fill="rgb(175,175,50)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1455.50"></text></g><g><title>`0x7FFE5948EAEE (1 samples, 0.41%)</title><rect x="0.4149%" y="1413" width="0.4149%" height="15" fill="rgb(221,221,66)" fg:x="1" fg:w="1"/><text x="0.6649%" y="1423.50"></text></g><g><title>`0x7FFE5942F0F0 (1 samples, 0.41%)</title><rect x="0.4149%" y="1397" width="0.4149%" height="15" fill="rgb(225,225,68)" fg:x="1" fg:w="1"/><text x="0.6649%" y="1407.50"></text></g><g><title>`0x7FFE5942F1AC (1 samples, 0.41%)</title><rect x="0.4149%" y="1381" width="0.4149%" height="15" fill="rgb(191,191,55)" fg:x="1" fg:w="1"/><text x="0.6649%" y="1391.50"></text></g><g><title>`0x7FFE5944F654 (1 samples, 0.41%)</title><rect x="0.4149%" y="1365" width="0.4149%" height="15" fill="rgb(205,205,61)" fg:x="1" fg:w="1"/><text x="0.6649%" y="1375.50"></text></g><g><title>`0x7FFE5941CE70 (1 samples, 0.41%)</title><rect x="0.8299%" y="1365" width="0.4149%" height="15" fill="rgb(213,213,63)" fg:x="2" fg:w="1"/><text x="1.0799%" y="1375.50"></text></g><g><title>`0x7FFE5941CDFE (1 samples, 0.41%)</title><rect x="0.8299%" y="1349" width="0.4149%" height="15" fill="rgb(180,180,52)" fg:x="2" fg:w="1"/><text x="1.0799%" y="1359.50"></text></g><g><title>`0x7FFE5941D04D (1 samples, 0.41%)</title><rect x="0.8299%" y="1333" width="0.4149%" height="15" fill="rgb(182,182,52)" fg:x="2" fg:w="1"/><text x="1.0799%" y="1343.50"></text></g><g><title>`0x7FFE593D869F (1 samples, 0.41%)</title><rect x="0.8299%" y="1317" width="0.4149%" height="15" fill="rgb(204,204,60)" fg:x="2" fg:w="1"/><text x="1.0799%" y="1327.50"></text></g><g><title>`0x7FFE570DA067 (1 samples, 0.41%)</title><rect x="0.8299%" y="1301" width="0.4149%" height="15" fill="rgb(229,229,69)" fg:x="2" fg:w="1"/><text x="1.0799%" y="1311.50"></text></g><g><title>`0x7FFE570D35BC (1 samples, 0.41%)</title><rect x="0.8299%" y="1285" width="0.4149%" height="15" fill="rgb(221,221,66)" fg:x="2" fg:w="1"/><text x="1.0799%" y="1295.50"></text></g><g><title>`0x7FFE570D3839 (1 samples, 0.41%)</title><rect x="0.8299%" y="1269" width="0.4149%" height="15" fill="rgb(179,179,51)" fg:x="2" fg:w="1"/><text x="1.0799%" y="1279.50"></text></g><g><title>`0x7FFE570D3953 (1 samples, 0.41%)</title><rect x="0.8299%" y="1253" width="0.4149%" height="15" fill="rgb(219,219,66)" fg:x="2" fg:w="1"/><text x="1.0799%" y="1263.50"></text></g><g><title>`0x7FFE570D6413 (1 samples, 0.41%)</title><rect x="0.8299%" y="1237" width="0.4149%" height="15" fill="rgb(224,224,68)" fg:x="2" fg:w="1"/><text x="1.0799%" y="1247.50"></text></g><g><title>`0x7FFE5944F454 (1 samples, 0.41%)</title><rect x="0.8299%" y="1221" width="0.4149%" height="15" fill="rgb(192,192,56)" fg:x="2" fg:w="1"/><text x="1.0799%" y="1231.50"></text></g><g><title>`0x7FFE58277C2F (1 samples, 0.41%)</title><rect x="1.2448%" y="1317" width="0.4149%" height="15" fill="rgb(179,179,51)" fg:x="3" fg:w="1"/><text x="1.4948%" y="1327.50"></text></g><g><title>`0x7FFE582939A2 (1 samples, 0.41%)</title><rect x="1.2448%" y="1301" width="0.4149%" height="15" fill="rgb(182,182,52)" fg:x="3" fg:w="1"/><text x="1.4948%" y="1311.50"></text></g><g><title>`0x7FFE58293BA4 (1 samples, 0.41%)</title><rect x="1.2448%" y="1285" width="0.4149%" height="15" fill="rgb(222,222,67)" fg:x="3" fg:w="1"/><text x="1.4948%" y="1295.50"></text></g><g><title>`0x7FFE58293F73 (1 samples, 0.41%)</title><rect x="1.2448%" y="1269" width="0.4149%" height="15" fill="rgb(181,181,52)" fg:x="3" fg:w="1"/><text x="1.4948%" y="1279.50"></text></g><g><title>`0x7FFE582938A9 (1 samples, 0.41%)</title><rect x="1.2448%" y="1253" width="0.4149%" height="15" fill="rgb(182,182,52)" fg:x="3" fg:w="1"/><text x="1.4948%" y="1263.50"></text></g><g><title>`0x7FFE5829DA1F (1 samples, 0.41%)</title><rect x="1.2448%" y="1237" width="0.4149%" height="15" fill="rgb(218,218,65)" fg:x="3" fg:w="1"/><text x="1.4948%" y="1247.50"></text></g><g><title>`0x7FFE5829D7A4 (1 samples, 0.41%)</title><rect x="1.2448%" y="1221" width="0.4149%" height="15" fill="rgb(176,176,50)" fg:x="3" fg:w="1"/><text x="1.4948%" y="1231.50"></text></g><g><title>`0x7FFE56B30158 (1 samples, 0.41%)</title><rect x="1.2448%" y="1205" width="0.4149%" height="15" fill="rgb(179,179,51)" fg:x="3" fg:w="1"/><text x="1.4948%" y="1215.50"></text></g><g><title>`0x7FFE56B308FF (1 samples, 0.41%)</title><rect x="1.2448%" y="1189" width="0.4149%" height="15" fill="rgb(206,206,61)" fg:x="3" fg:w="1"/><text x="1.4948%" y="1199.50"></text></g><g><title>`0x7FFE56B6954C (1 samples, 0.41%)</title><rect x="1.2448%" y="1173" width="0.4149%" height="15" fill="rgb(182,182,52)" fg:x="3" fg:w="1"/><text x="1.4948%" y="1183.50"></text></g><g><title>`0x7FFE56B3AF22 (1 samples, 0.41%)</title><rect x="1.2448%" y="1157" width="0.4149%" height="15" fill="rgb(201,201,59)" fg:x="3" fg:w="1"/><text x="1.4948%" y="1167.50"></text></g><g><title>`0x7FFE59456257 (1 samples, 0.41%)</title><rect x="1.2448%" y="1141" width="0.4149%" height="15" fill="rgb(213,213,63)" fg:x="3" fg:w="1"/><text x="1.4948%" y="1151.50"></text></g><g><title>`0x7FFE5941CE70 (3 samples, 1.24%)</title><rect x="0.8299%" y="1381" width="1.2448%" height="15" fill="rgb(210,210,62)" fg:x="2" fg:w="3"/><text x="1.0799%" y="1391.50"></text></g><g><title>`0x7FFE5941CDFE (2 samples, 0.83%)</title><rect x="1.2448%" y="1365" width="0.8299%" height="15" fill="rgb(183,183,53)" fg:x="3" fg:w="2"/><text x="1.4948%" y="1375.50"></text></g><g><title>`0x7FFE5941D04D (2 samples, 0.83%)</title><rect x="1.2448%" y="1349" width="0.8299%" height="15" fill="rgb(199,199,58)" fg:x="3" fg:w="2"/><text x="1.4948%" y="1359.50"></text></g><g><title>`0x7FFE593D869F (2 samples, 0.83%)</title><rect x="1.2448%" y="1333" width="0.8299%" height="15" fill="rgb(196,196,57)" fg:x="3" fg:w="2"/><text x="1.4948%" y="1343.50"></text></g><g><title>`0x7FFE58277BE7 (1 samples, 0.41%)</title><rect x="1.6598%" y="1317" width="0.4149%" height="15" fill="rgb(218,218,65)" fg:x="4" fg:w="1"/><text x="1.9098%" y="1327.50"></text></g><g><title>`0x7FFE58277E8A (1 samples, 0.41%)</title><rect x="1.6598%" y="1301" width="0.4149%" height="15" fill="rgb(220,220,66)" fg:x="4" fg:w="1"/><text x="1.9098%" y="1311.50"></text></g><g><title>`0x7FFE56B6DE20 (1 samples, 0.41%)</title><rect x="1.6598%" y="1285" width="0.4149%" height="15" fill="rgb(195,195,57)" fg:x="4" fg:w="1"/><text x="1.9098%" y="1295.50"></text></g><g><title>`0x7FFE593DEE08 (1 samples, 0.41%)</title><rect x="1.6598%" y="1269" width="0.4149%" height="15" fill="rgb(183,183,53)" fg:x="4" fg:w="1"/><text x="1.9098%" y="1279.50"></text></g><g><title>`0x7FFE594206DA (1 samples, 0.41%)</title><rect x="1.6598%" y="1253" width="0.4149%" height="15" fill="rgb(175,175,50)" fg:x="4" fg:w="1"/><text x="1.9098%" y="1263.50"></text></g><g><title>`0x7FFE5948EA75 (4 samples, 1.66%)</title><rect x="0.8299%" y="1413" width="1.6598%" height="15" fill="rgb(221,221,66)" fg:x="2" fg:w="4"/><text x="1.0799%" y="1423.50"></text></g><g><title>`0x7FFE5941CE70 (4 samples, 1.66%)</title><rect x="0.8299%" y="1397" width="1.6598%" height="15" fill="rgb(215,215,64)" fg:x="2" fg:w="4"/><text x="1.0799%" y="1407.50"></text></g><g><title>`0x7FFE5941CDFE (1 samples, 0.41%)</title><rect x="2.0747%" y="1381" width="0.4149%" height="15" fill="rgb(218,218,65)" fg:x="5" fg:w="1"/><text x="2.3247%" y="1391.50"></text></g><g><title>`0x7FFE5941D04D (1 samples, 0.41%)</title><rect x="2.0747%" y="1365" width="0.4149%" height="15" fill="rgb(189,189,55)" fg:x="5" fg:w="1"/><text x="2.3247%" y="1375.50"></text></g><g><title>`0x7FFE593D869F (1 samples, 0.41%)</title><rect x="2.0747%" y="1349" width="0.4149%" height="15" fill="rgb(191,191,56)" fg:x="5" fg:w="1"/><text x="2.3247%" y="1359.50"></text></g><g><title>`0x7FFE579C5BDA (1 samples, 0.41%)</title><rect x="2.0747%" y="1333" width="0.4149%" height="15" fill="rgb(197,197,58)" fg:x="5" fg:w="1"/><text x="2.3247%" y="1343.50"></text></g><g><title>`0x7FFE579C65B0 (1 samples, 0.41%)</title><rect x="2.0747%" y="1317" width="0.4149%" height="15" fill="rgb(202,202,60)" fg:x="5" fg:w="1"/><text x="2.3247%" y="1327.50"></text></g><g><title>`0x7FFE579C43D9 (1 samples, 0.41%)</title><rect x="2.0747%" y="1301" width="0.4149%" height="15" fill="rgb(224,224,68)" fg:x="5" fg:w="1"/><text x="2.3247%" y="1311.50"></text></g><g><title>`0x7FFE593E14E0 (1 samples, 0.41%)</title><rect x="2.0747%" y="1285" width="0.4149%" height="15" fill="rgb(198,198,58)" fg:x="5" fg:w="1"/><text x="2.3247%" y="1295.50"></text></g><g><title>`0x7FFE593E21CA (1 samples, 0.41%)</title><rect x="2.0747%" y="1269" width="0.4149%" height="15" fill="rgb(208,208,62)" fg:x="5" fg:w="1"/><text x="2.3247%" y="1279.50"></text></g><g><title>`0x7FFE593E2057 (1 samples, 0.41%)</title><rect x="2.0747%" y="1253" width="0.4149%" height="15" fill="rgb(220,220,66)" fg:x="5" fg:w="1"/><text x="2.3247%" y="1263.50"></text></g><g><title>`0x7FFE59452DC4 (1 samples, 0.41%)</title><rect x="2.0747%" y="1237" width="0.4149%" height="15" fill="rgb(189,189,55)" fg:x="5" fg:w="1"/><text x="2.3247%" y="1247.50"></text></g><g><title>`0x7FFE593DC3F8 (1 samples, 0.41%)</title><rect x="2.4896%" y="1253" width="0.4149%" height="15" fill="rgb(181,181,52)" fg:x="6" fg:w="1"/><text x="2.7396%" y="1263.50"></text></g><g><title>`0x7FFE593D46BB (1 samples, 0.41%)</title><rect x="2.4896%" y="1237" width="0.4149%" height="15" fill="rgb(183,183,53)" fg:x="6" fg:w="1"/><text x="2.7396%" y="1247.50"></text></g><g><title>`0x7FFE593D4906 (1 samples, 0.41%)</title><rect x="2.4896%" y="1221" width="0.4149%" height="15" fill="rgb(226,226,68)" fg:x="6" fg:w="1"/><text x="2.7396%" y="1231.50"></text></g><g><title>`0x7FFE593D58C4 (1 samples, 0.41%)</title><rect x="2.4896%" y="1205" width="0.4149%" height="15" fill="rgb(204,204,60)" fg:x="6" fg:w="1"/><text x="2.7396%" y="1215.50"></text></g><g><title>`0x7FFE593DCE29 (1 samples, 0.41%)</title><rect x="2.4896%" y="1189" width="0.4149%" height="15" fill="rgb(208,208,62)" fg:x="6" fg:w="1"/><text x="2.7396%" y="1199.50"></text></g><g><title>`0x7FFE593DC254 (1 samples, 0.41%)</title><rect x="2.4896%" y="1173" width="0.4149%" height="15" fill="rgb(209,209,62)" fg:x="6" fg:w="1"/><text x="2.7396%" y="1183.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.41%)</title><rect x="2.4896%" y="1157" width="0.4149%" height="15" fill="rgb(203,203,60)" fg:x="6" fg:w="1"/><text x="2.7396%" y="1167.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.41%)</title><rect x="2.4896%" y="1141" width="0.4149%" height="15" fill="rgb(210,210,62)" fg:x="6" fg:w="1"/><text x="2.7396%" y="1151.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.41%)</title><rect x="2.4896%" y="1125" width="0.4149%" height="15" fill="rgb(194,194,57)" fg:x="6" fg:w="1"/><text x="2.7396%" y="1135.50"></text></g><g><title>`0x7FFE593DC3F8 (5 samples, 2.07%)</title><rect x="2.4896%" y="1333" width="2.0747%" height="15" fill="rgb(177,177,51)" fg:x="6" fg:w="5"/><text x="2.7396%" y="1343.50">`..</text></g><g><title>`0x7FFE593D46BB (5 samples, 2.07%)</title><rect x="2.4896%" y="1317" width="2.0747%" height="15" fill="rgb(175,175,50)" fg:x="6" fg:w="5"/><text x="2.7396%" y="1327.50">`..</text></g><g><title>`0x7FFE593D4906 (5 samples, 2.07%)</title><rect x="2.4896%" y="1301" width="2.0747%" height="15" fill="rgb(186,186,54)" fg:x="6" fg:w="5"/><text x="2.7396%" y="1311.50">`..</text></g><g><title>`0x7FFE593D58C4 (5 samples, 2.07%)</title><rect x="2.4896%" y="1285" width="2.0747%" height="15" fill="rgb(177,177,50)" fg:x="6" fg:w="5"/><text x="2.7396%" y="1295.50">`..</text></g><g><title>`0x7FFE593DCE29 (5 samples, 2.07%)</title><rect x="2.4896%" y="1269" width="2.0747%" height="15" fill="rgb(229,229,69)" fg:x="6" fg:w="5"/><text x="2.7396%" y="1279.50">`..</text></g><g><title>`0x7FFE593DC254 (4 samples, 1.66%)</title><rect x="2.9046%" y="1253" width="1.6598%" height="15" fill="rgb(210,210,62)" fg:x="7" fg:w="4"/><text x="3.1546%" y="1263.50"></text></g><g><title>`0x7FFE593DC0CA (4 samples, 1.66%)</title><rect x="2.9046%" y="1237" width="1.6598%" height="15" fill="rgb(191,191,55)" fg:x="7" fg:w="4"/><text x="3.1546%" y="1247.50"></text></g><g><title>`0x7FFE593DC4CC (4 samples, 1.66%)</title><rect x="2.9046%" y="1221" width="1.6598%" height="15" fill="rgb(198,198,58)" fg:x="7" fg:w="4"/><text x="3.1546%" y="1231.50"></text></g><g><title>`0x7FFE5944F874 (4 samples, 1.66%)</title><rect x="2.9046%" y="1205" width="1.6598%" height="15" fill="rgb(208,208,62)" fg:x="7" fg:w="4"/><text x="3.1546%" y="1215.50"></text></g><g><title>`0x7FFE593DC399 (1 samples, 0.41%)</title><rect x="4.5643%" y="1333" width="0.4149%" height="15" fill="rgb(193,193,56)" fg:x="11" fg:w="1"/><text x="4.8143%" y="1343.50"></text></g><g><title>`0x7FFE593DAF24 (1 samples, 0.41%)</title><rect x="4.5643%" y="1317" width="0.4149%" height="15" fill="rgb(217,217,65)" fg:x="11" fg:w="1"/><text x="4.8143%" y="1327.50"></text></g><g><title>`0x7FFE593DB0BF (1 samples, 0.41%)</title><rect x="4.5643%" y="1301" width="0.4149%" height="15" fill="rgb(190,190,55)" fg:x="11" fg:w="1"/><text x="4.8143%" y="1311.50"></text></g><g><title>`0x7FFE5948E8EF (9 samples, 3.73%)</title><rect x="2.4896%" y="1413" width="3.7344%" height="15" fill="rgb(211,211,63)" fg:x="6" fg:w="9"/><text x="2.7396%" y="1423.50">`0x7..</text></g><g><title>`0x7FFE593D46BB (9 samples, 3.73%)</title><rect x="2.4896%" y="1397" width="3.7344%" height="15" fill="rgb(183,183,53)" fg:x="6" fg:w="9"/><text x="2.7396%" y="1407.50">`0x7..</text></g><g><title>`0x7FFE593D4906 (9 samples, 3.73%)</title><rect x="2.4896%" y="1381" width="3.7344%" height="15" fill="rgb(202,202,60)" fg:x="6" fg:w="9"/><text x="2.7396%" y="1391.50">`0x7..</text></g><g><title>`0x7FFE593D58C4 (9 samples, 3.73%)</title><rect x="2.4896%" y="1365" width="3.7344%" height="15" fill="rgb(187,187,54)" fg:x="6" fg:w="9"/><text x="2.7396%" y="1375.50">`0x7..</text></g><g><title>`0x7FFE593DCE29 (9 samples, 3.73%)</title><rect x="2.4896%" y="1349" width="3.7344%" height="15" fill="rgb(195,195,57)" fg:x="6" fg:w="9"/><text x="2.7396%" y="1359.50">`0x7..</text></g><g><title>`0x7FFE593DC254 (3 samples, 1.24%)</title><rect x="4.9793%" y="1333" width="1.2448%" height="15" fill="rgb(203,203,60)" fg:x="12" fg:w="3"/><text x="5.2293%" y="1343.50"></text></g><g><title>`0x7FFE593DC0CA (3 samples, 1.24%)</title><rect x="4.9793%" y="1317" width="1.2448%" height="15" fill="rgb(185,185,53)" fg:x="12" fg:w="3"/><text x="5.2293%" y="1327.50"></text></g><g><title>`0x7FFE593DC4CC (3 samples, 1.24%)</title><rect x="4.9793%" y="1301" width="1.2448%" height="15" fill="rgb(184,184,53)" fg:x="12" fg:w="3"/><text x="5.2293%" y="1311.50"></text></g><g><title>`0x7FFE5944F874 (3 samples, 1.24%)</title><rect x="4.9793%" y="1285" width="1.2448%" height="15" fill="rgb(225,225,68)" fg:x="12" fg:w="3"/><text x="5.2293%" y="1295.50"></text></g><g><title>`0x7FFE5948E67C (1 samples, 0.41%)</title><rect x="6.2241%" y="1413" width="0.4149%" height="15" fill="rgb(194,194,56)" fg:x="15" fg:w="1"/><text x="6.4741%" y="1423.50"></text></g><g><title>`0x7FFE593B9838 (1 samples, 0.41%)</title><rect x="6.2241%" y="1397" width="0.4149%" height="15" fill="rgb(198,198,58)" fg:x="15" fg:w="1"/><text x="6.4741%" y="1407.50"></text></g><g><title>`0x7FFE5944F654 (1 samples, 0.41%)</title><rect x="6.2241%" y="1381" width="0.4149%" height="15" fill="rgb(226,226,68)" fg:x="15" fg:w="1"/><text x="6.4741%" y="1391.50"></text></g><g><title>`0x7FFE593D8AF2 (1 samples, 0.41%)</title><rect x="6.6390%" y="1365" width="0.4149%" height="15" fill="rgb(194,194,57)" fg:x="16" fg:w="1"/><text x="6.8890%" y="1375.50"></text></g><g><title>`0x7FFE59401C3C (1 samples, 0.41%)</title><rect x="6.6390%" y="1349" width="0.4149%" height="15" fill="rgb(220,220,66)" fg:x="16" fg:w="1"/><text x="6.8890%" y="1359.50"></text></g><g><title>`0x7FFE593D6ADF (1 samples, 0.41%)</title><rect x="6.6390%" y="1333" width="0.4149%" height="15" fill="rgb(225,225,68)" fg:x="16" fg:w="1"/><text x="6.8890%" y="1343.50"></text></g><g><title>`0x7FFE593DD62D (1 samples, 0.41%)</title><rect x="7.0539%" y="1349" width="0.4149%" height="15" fill="rgb(204,204,60)" fg:x="17" fg:w="1"/><text x="7.3039%" y="1359.50"></text></g><g><title>`0x7FFE5941CE70 (1 samples, 0.41%)</title><rect x="7.0539%" y="1333" width="0.4149%" height="15" fill="rgb(227,227,69)" fg:x="17" fg:w="1"/><text x="7.3039%" y="1343.50"></text></g><g><title>`0x7FFE5941CDFE (1 samples, 0.41%)</title><rect x="7.0539%" y="1317" width="0.4149%" height="15" fill="rgb(191,191,55)" fg:x="17" fg:w="1"/><text x="7.3039%" y="1327.50"></text></g><g><title>`0x7FFE5941D04D (1 samples, 0.41%)</title><rect x="7.0539%" y="1301" width="0.4149%" height="15" fill="rgb(179,179,51)" fg:x="17" fg:w="1"/><text x="7.3039%" y="1311.50"></text></g><g><title>`0x7FFE593D869F (1 samples, 0.41%)</title><rect x="7.0539%" y="1285" width="0.4149%" height="15" fill="rgb(204,204,60)" fg:x="17" fg:w="1"/><text x="7.3039%" y="1295.50"></text></g><g><title>`0x7FFE56B3C763 (1 samples, 0.41%)</title><rect x="7.0539%" y="1269" width="0.4149%" height="15" fill="rgb(215,215,64)" fg:x="17" fg:w="1"/><text x="7.3039%" y="1279.50"></text></g><g><title>`0x7FFE56B3D413 (1 samples, 0.41%)</title><rect x="7.0539%" y="1253" width="0.4149%" height="15" fill="rgb(214,214,64)" fg:x="17" fg:w="1"/><text x="7.3039%" y="1263.50"></text></g><g><title>`0x7FFE56B3C2CA (1 samples, 0.41%)</title><rect x="7.0539%" y="1237" width="0.4149%" height="15" fill="rgb(226,226,68)" fg:x="17" fg:w="1"/><text x="7.3039%" y="1247.50"></text></g><g><title>`0x7FFE56B10C66 (1 samples, 0.41%)</title><rect x="7.0539%" y="1221" width="0.4149%" height="15" fill="rgb(202,202,60)" fg:x="17" fg:w="1"/><text x="7.3039%" y="1231.50"></text></g><g><title>`0x7FFE56B10A7B (1 samples, 0.41%)</title><rect x="7.0539%" y="1205" width="0.4149%" height="15" fill="rgb(198,198,58)" fg:x="17" fg:w="1"/><text x="7.3039%" y="1215.50"></text></g><g><title>`0x7FFE56B3C492 (1 samples, 0.41%)</title><rect x="7.0539%" y="1189" width="0.4149%" height="15" fill="rgb(177,177,50)" fg:x="17" fg:w="1"/><text x="7.3039%" y="1199.50"></text></g><g><title>`0x7FFE56B3FA50 (1 samples, 0.41%)</title><rect x="7.0539%" y="1173" width="0.4149%" height="15" fill="rgb(209,209,62)" fg:x="17" fg:w="1"/><text x="7.3039%" y="1183.50"></text></g><g><title>`0x7FFE593D8940 (2 samples, 0.83%)</title><rect x="7.0539%" y="1365" width="0.8299%" height="15" fill="rgb(198,198,58)" fg:x="17" fg:w="2"/><text x="7.3039%" y="1375.50"></text></g><g><title>`0x7FFE593DD5E1 (1 samples, 0.41%)</title><rect x="7.4689%" y="1349" width="0.4149%" height="15" fill="rgb(224,224,68)" fg:x="18" fg:w="1"/><text x="7.7189%" y="1359.50"></text></g><g><title>`0x7FFE593DE809 (1 samples, 0.41%)</title><rect x="7.4689%" y="1333" width="0.4149%" height="15" fill="rgb(214,214,64)" fg:x="18" fg:w="1"/><text x="7.7189%" y="1343.50"></text></g><g><title>`0x7FFE593DE7EF (1 samples, 0.41%)</title><rect x="7.4689%" y="1317" width="0.4149%" height="15" fill="rgb(205,205,61)" fg:x="18" fg:w="1"/><text x="7.7189%" y="1327.50"></text></g><g><title>`0x7FFE593DE8CC (1 samples, 0.41%)</title><rect x="7.4689%" y="1301" width="0.4149%" height="15" fill="rgb(179,179,51)" fg:x="18" fg:w="1"/><text x="7.7189%" y="1311.50"></text></g><g><title>`0x7FFE59423C10 (1 samples, 0.41%)</title><rect x="7.4689%" y="1285" width="0.4149%" height="15" fill="rgb(200,200,59)" fg:x="18" fg:w="1"/><text x="7.7189%" y="1295.50"></text></g><g><title>`0x7FFE5944FCF4 (1 samples, 0.41%)</title><rect x="7.4689%" y="1269" width="0.4149%" height="15" fill="rgb(181,181,52)" fg:x="18" fg:w="1"/><text x="7.7189%" y="1279.50"></text></g><g><title>`0x7FFE593D4774 (1 samples, 0.41%)</title><rect x="7.8838%" y="1301" width="0.4149%" height="15" fill="rgb(228,228,69)" fg:x="19" fg:w="1"/><text x="8.1338%" y="1311.50"></text></g><g><title>`0x7FFE593D3FDE (1 samples, 0.41%)</title><rect x="7.8838%" y="1285" width="0.4149%" height="15" fill="rgb(180,180,51)" fg:x="19" fg:w="1"/><text x="8.1338%" y="1295.50"></text></g><g><title>`0x7FFE593D46BB (1 samples, 0.41%)</title><rect x="8.2988%" y="1301" width="0.4149%" height="15" fill="rgb(180,180,52)" fg:x="20" fg:w="1"/><text x="8.5488%" y="1311.50"></text></g><g><title>`0x7FFE593D4906 (1 samples, 0.41%)</title><rect x="8.2988%" y="1285" width="0.4149%" height="15" fill="rgb(176,176,50)" fg:x="20" fg:w="1"/><text x="8.5488%" y="1295.50"></text></g><g><title>`0x7FFE593D58C4 (1 samples, 0.41%)</title><rect x="8.2988%" y="1269" width="0.4149%" height="15" fill="rgb(194,194,57)" fg:x="20" fg:w="1"/><text x="8.5488%" y="1279.50"></text></g><g><title>`0x7FFE593DCE29 (1 samples, 0.41%)</title><rect x="8.2988%" y="1253" width="0.4149%" height="15" fill="rgb(191,191,56)" fg:x="20" fg:w="1"/><text x="8.5488%" y="1263.50"></text></g><g><title>`0x7FFE593DC254 (1 samples, 0.41%)</title><rect x="8.2988%" y="1237" width="0.4149%" height="15" fill="rgb(191,191,55)" fg:x="20" fg:w="1"/><text x="8.5488%" y="1247.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.41%)</title><rect x="8.2988%" y="1221" width="0.4149%" height="15" fill="rgb(219,219,66)" fg:x="20" fg:w="1"/><text x="8.5488%" y="1231.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.41%)</title><rect x="8.2988%" y="1205" width="0.4149%" height="15" fill="rgb(202,202,59)" fg:x="20" fg:w="1"/><text x="8.5488%" y="1215.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.41%)</title><rect x="8.2988%" y="1189" width="0.4149%" height="15" fill="rgb(221,221,66)" fg:x="20" fg:w="1"/><text x="8.5488%" y="1199.50"></text></g><g><title>`0x7FFE593DC3F8 (3 samples, 1.24%)</title><rect x="7.8838%" y="1317" width="1.2448%" height="15" fill="rgb(200,200,59)" fg:x="19" fg:w="3"/><text x="8.1338%" y="1327.50"></text></g><g><title>`0x7FFE593D4676 (1 samples, 0.41%)</title><rect x="8.7137%" y="1301" width="0.4149%" height="15" fill="rgb(216,216,65)" fg:x="21" fg:w="1"/><text x="8.9637%" y="1311.50"></text></g><g><title>`0x7FFE5948E5BF (7 samples, 2.90%)</title><rect x="6.6390%" y="1413" width="2.9046%" height="15" fill="rgb(202,202,59)" fg:x="16" fg:w="7"/><text x="6.8890%" y="1423.50">`0..</text></g><g><title>`0x7FFE593DA25A (7 samples, 2.90%)</title><rect x="6.6390%" y="1397" width="2.9046%" height="15" fill="rgb(213,213,63)" fg:x="16" fg:w="7"/><text x="6.8890%" y="1407.50">`0..</text></g><g><title>`0x7FFE593C8CAC (7 samples, 2.90%)</title><rect x="6.6390%" y="1381" width="2.9046%" height="15" fill="rgb(216,216,65)" fg:x="16" fg:w="7"/><text x="6.8890%" y="1391.50">`0..</text></g><g><title>`0x7FFE593D88B6 (4 samples, 1.66%)</title><rect x="7.8838%" y="1365" width="1.6598%" height="15" fill="rgb(180,180,52)" fg:x="19" fg:w="4"/><text x="8.1338%" y="1375.50"></text></g><g><title>`0x7FFE593DDDA9 (4 samples, 1.66%)</title><rect x="7.8838%" y="1349" width="1.6598%" height="15" fill="rgb(203,203,60)" fg:x="19" fg:w="4"/><text x="8.1338%" y="1359.50"></text></g><g><title>`0x7FFE593DCE29 (4 samples, 1.66%)</title><rect x="7.8838%" y="1333" width="1.6598%" height="15" fill="rgb(192,192,56)" fg:x="19" fg:w="4"/><text x="8.1338%" y="1343.50"></text></g><g><title>`0x7FFE593DC254 (1 samples, 0.41%)</title><rect x="9.1286%" y="1317" width="0.4149%" height="15" fill="rgb(191,191,56)" fg:x="22" fg:w="1"/><text x="9.3786%" y="1327.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.41%)</title><rect x="9.1286%" y="1301" width="0.4149%" height="15" fill="rgb(205,205,60)" fg:x="22" fg:w="1"/><text x="9.3786%" y="1311.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.41%)</title><rect x="9.1286%" y="1285" width="0.4149%" height="15" fill="rgb(183,183,53)" fg:x="22" fg:w="1"/><text x="9.3786%" y="1295.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.41%)</title><rect x="9.1286%" y="1269" width="0.4149%" height="15" fill="rgb(204,204,60)" fg:x="22" fg:w="1"/><text x="9.3786%" y="1279.50"></text></g><g><title>`0x7FFE5948D791 (1 samples, 0.41%)</title><rect x="9.5436%" y="1413" width="0.4149%" height="15" fill="rgb(178,178,51)" fg:x="23" fg:w="1"/><text x="9.7936%" y="1423.50"></text></g><g><title>`0x7FFE5940812A (1 samples, 0.41%)</title><rect x="9.5436%" y="1397" width="0.4149%" height="15" fill="rgb(206,206,61)" fg:x="23" fg:w="1"/><text x="9.7936%" y="1407.50"></text></g><g><title>`0x7FFE594087EF (1 samples, 0.41%)</title><rect x="9.5436%" y="1381" width="0.4149%" height="15" fill="rgb(186,186,54)" fg:x="23" fg:w="1"/><text x="9.7936%" y="1391.50"></text></g><g><title>`0x7FFE59408894 (1 samples, 0.41%)</title><rect x="9.5436%" y="1365" width="0.4149%" height="15" fill="rgb(218,218,65)" fg:x="23" fg:w="1"/><text x="9.7936%" y="1375.50"></text></g><g><title>`0x7FFE593CE888 (1 samples, 0.41%)</title><rect x="9.5436%" y="1349" width="0.4149%" height="15" fill="rgb(178,178,51)" fg:x="23" fg:w="1"/><text x="9.7936%" y="1359.50"></text></g><g><title>`0x7FFE59408371 (1 samples, 0.41%)</title><rect x="9.5436%" y="1333" width="0.4149%" height="15" fill="rgb(229,229,69)" fg:x="23" fg:w="1"/><text x="9.7936%" y="1343.50"></text></g><g><title>`0x7FFE594084D0 (1 samples, 0.41%)</title><rect x="9.5436%" y="1317" width="0.4149%" height="15" fill="rgb(188,188,54)" fg:x="23" fg:w="1"/><text x="9.7936%" y="1327.50"></text></g><g><title>`0x7FFE5940855D (1 samples, 0.41%)</title><rect x="9.5436%" y="1301" width="0.4149%" height="15" fill="rgb(177,177,50)" fg:x="23" fg:w="1"/><text x="9.7936%" y="1311.50"></text></g><g><title>`0x7FFE593CEA5E (1 samples, 0.41%)</title><rect x="9.5436%" y="1285" width="0.4149%" height="15" fill="rgb(189,189,55)" fg:x="23" fg:w="1"/><text x="9.7936%" y="1295.50"></text></g><g><title>`0x7FFE5947A184 (24 samples, 9.96%)</title><rect x="0.4149%" y="1429" width="9.9585%" height="15" fill="rgb(204,204,60)" fg:x="1" fg:w="24"/><text x="0.6649%" y="1439.50">`0x7FFE5947A184</text></g><g><title>`0x7FFE5948D5C9 (1 samples, 0.41%)</title><rect x="9.9585%" y="1413" width="0.4149%" height="15" fill="rgb(201,201,59)" fg:x="24" fg:w="1"/><text x="10.2085%" y="1423.50"></text></g><g><title>`0x7FFE5948EE6E (1 samples, 0.41%)</title><rect x="9.9585%" y="1397" width="0.4149%" height="15" fill="rgb(179,179,51)" fg:x="24" fg:w="1"/><text x="10.2085%" y="1407.50"></text></g><g><title>`0x7FFE593F7AE2 (1 samples, 0.41%)</title><rect x="9.9585%" y="1381" width="0.4149%" height="15" fill="rgb(184,184,53)" fg:x="24" fg:w="1"/><text x="10.2085%" y="1391.50"></text></g><g><title>`0x7FFE59423EB3 (25 samples, 10.37%)</title><rect x="0.4149%" y="1445" width="10.3734%" height="15" fill="rgb(204,204,60)" fg:x="1" fg:w="25"/><text x="0.6649%" y="1455.50">`0x7FFE59423EB3</text></g><g><title>`0x7FFE59423F7F (1 samples, 0.41%)</title><rect x="10.3734%" y="1429" width="0.4149%" height="15" fill="rgb(204,204,60)" fg:x="25" fg:w="1"/><text x="10.6234%" y="1439.50"></text></g><g><title>`0x7FFE593D847F (1 samples, 0.41%)</title><rect x="10.3734%" y="1413" width="0.4149%" height="15" fill="rgb(198,198,58)" fg:x="25" fg:w="1"/><text x="10.6234%" y="1423.50"></text></g><g><title>`0x7FFE593D869F (1 samples, 0.41%)</title><rect x="10.3734%" y="1397" width="0.4149%" height="15" fill="rgb(219,219,66)" fg:x="25" fg:w="1"/><text x="10.6234%" y="1407.50"></text></g><g><title>`0x7FFE37DAFF42 (1 samples, 0.41%)</title><rect x="10.3734%" y="1381" width="0.4149%" height="15" fill="rgb(224,224,68)" fg:x="25" fg:w="1"/><text x="10.6234%" y="1391.50"></text></g><g><title>`0x7FFE37DA6859 (1 samples, 0.41%)</title><rect x="10.3734%" y="1365" width="0.4149%" height="15" fill="rgb(222,222,67)" fg:x="25" fg:w="1"/><text x="10.6234%" y="1375.50"></text></g><g><title>`0x7FFE37DA6A01 (1 samples, 0.41%)</title><rect x="10.3734%" y="1349" width="0.4149%" height="15" fill="rgb(223,223,67)" fg:x="25" fg:w="1"/><text x="10.6234%" y="1359.50"></text></g><g><title>`0x7FFE57DC0DF0 (1 samples, 0.41%)</title><rect x="10.3734%" y="1333" width="0.4149%" height="15" fill="rgb(186,186,54)" fg:x="25" fg:w="1"/><text x="10.6234%" y="1343.50"></text></g><g><title>`0x7FFE59423DDE (26 samples, 10.79%)</title><rect x="0.4149%" y="1461" width="10.7884%" height="15" fill="rgb(183,183,53)" fg:x="1" fg:w="26"/><text x="0.6649%" y="1471.50">`0x7FFE59423DDE</text></g><g><title>`0x7FFE59423E02 (1 samples, 0.41%)</title><rect x="10.7884%" y="1445" width="0.4149%" height="15" fill="rgb(182,182,52)" fg:x="26" fg:w="1"/><text x="11.0384%" y="1455.50"></text></g><g><title>`0x7FFE579B573B (1 samples, 0.41%)</title><rect x="11.2033%" y="709" width="0.4149%" height="15" fill="rgb(223,223,67)" fg:x="27" fg:w="1"/><text x="11.4533%" y="719.50"></text></g><g><title>`0x7FFE579B8276 (1 samples, 0.41%)</title><rect x="11.2033%" y="693" width="0.4149%" height="15" fill="rgb(199,199,58)" fg:x="27" fg:w="1"/><text x="11.4533%" y="703.50"></text></g><g><title>`0x7FFE579BA105 (1 samples, 0.41%)</title><rect x="11.2033%" y="677" width="0.4149%" height="15" fill="rgb(201,201,59)" fg:x="27" fg:w="1"/><text x="11.4533%" y="687.50"></text></g><g><title>`0x7FFE579BA2E9 (1 samples, 0.41%)</title><rect x="11.2033%" y="661" width="0.4149%" height="15" fill="rgb(192,192,56)" fg:x="27" fg:w="1"/><text x="11.4533%" y="671.50"></text></g><g><title>`0x7FFE55B56D24 (1 samples, 0.41%)</title><rect x="11.2033%" y="645" width="0.4149%" height="15" fill="rgb(198,198,58)" fg:x="27" fg:w="1"/><text x="11.4533%" y="655.50"></text></g><g><title>`0x7FFE55B57393 (1 samples, 0.41%)</title><rect x="11.2033%" y="629" width="0.4149%" height="15" fill="rgb(180,180,51)" fg:x="27" fg:w="1"/><text x="11.4533%" y="639.50"></text></g><g><title>`0x7FFE5944FE14 (1 samples, 0.41%)</title><rect x="11.2033%" y="613" width="0.4149%" height="15" fill="rgb(214,214,64)" fg:x="27" fg:w="1"/><text x="11.4533%" y="623.50"></text></g><g><title>`0x7FFE4E8E3A36 (1 samples, 0.41%)</title><rect x="11.6183%" y="629" width="0.4149%" height="15" fill="rgb(181,181,52)" fg:x="28" fg:w="1"/><text x="11.8683%" y="639.50"></text></g><g><title>`0x7FFE58C81B31 (1 samples, 0.41%)</title><rect x="11.6183%" y="613" width="0.4149%" height="15" fill="rgb(200,200,59)" fg:x="28" fg:w="1"/><text x="11.8683%" y="623.50"></text></g><g><title>`0x7FFE58BFC08A (1 samples, 0.41%)</title><rect x="11.6183%" y="597" width="0.4149%" height="15" fill="rgb(184,184,53)" fg:x="28" fg:w="1"/><text x="11.8683%" y="607.50"></text></g><g><title>`0x7FFE4E8E3981 (1 samples, 0.41%)</title><rect x="12.0332%" y="629" width="0.4149%" height="15" fill="rgb(191,191,55)" fg:x="29" fg:w="1"/><text x="12.2832%" y="639.50"></text></g><g><title>`0x7FFE4E8E41F2 (1 samples, 0.41%)</title><rect x="12.0332%" y="613" width="0.4149%" height="15" fill="rgb(176,176,50)" fg:x="29" fg:w="1"/><text x="12.2832%" y="623.50"></text></g><g><title>`0x7FFE58BE4206 (1 samples, 0.41%)</title><rect x="12.0332%" y="597" width="0.4149%" height="15" fill="rgb(179,179,51)" fg:x="29" fg:w="1"/><text x="12.2832%" y="607.50"></text></g><g><title>`0x7FFE58BE8CD3 (1 samples, 0.41%)</title><rect x="12.0332%" y="581" width="0.4149%" height="15" fill="rgb(194,194,57)" fg:x="29" fg:w="1"/><text x="12.2832%" y="591.50"></text></g><g><title>`0x7FFE58BE93A5 (1 samples, 0.41%)</title><rect x="12.0332%" y="565" width="0.4149%" height="15" fill="rgb(181,181,52)" fg:x="29" fg:w="1"/><text x="12.2832%" y="575.50"></text></g><g><title>`0x7FFE58BE9883 (1 samples, 0.41%)</title><rect x="12.0332%" y="549" width="0.4149%" height="15" fill="rgb(219,219,66)" fg:x="29" fg:w="1"/><text x="12.2832%" y="559.50"></text></g><g><title>`0x7FFE58BDD55A (1 samples, 0.41%)</title><rect x="12.0332%" y="533" width="0.4149%" height="15" fill="rgb(216,216,65)" fg:x="29" fg:w="1"/><text x="12.2832%" y="543.50"></text></g><g><title>`0x7FFE59450284 (1 samples, 0.41%)</title><rect x="12.0332%" y="517" width="0.4149%" height="15" fill="rgb(223,223,67)" fg:x="29" fg:w="1"/><text x="12.2832%" y="527.50"></text></g><g><title>`0x7FFE579BC8DB (3 samples, 1.24%)</title><rect x="11.6183%" y="661" width="1.2448%" height="15" fill="rgb(193,193,56)" fg:x="28" fg:w="3"/><text x="11.8683%" y="671.50"></text></g><g><title>`0x7FFE4E8E35FB (3 samples, 1.24%)</title><rect x="11.6183%" y="645" width="1.2448%" height="15" fill="rgb(205,205,61)" fg:x="28" fg:w="3"/><text x="11.8683%" y="655.50"></text></g><g><title>`0x7FFE4E8E3872 (1 samples, 0.41%)</title><rect x="12.4481%" y="629" width="0.4149%" height="15" fill="rgb(186,186,54)" fg:x="30" fg:w="1"/><text x="12.6981%" y="639.50"></text></g><g><title>`0x7FFE4E8E2C3C (1 samples, 0.41%)</title><rect x="12.4481%" y="613" width="0.4149%" height="15" fill="rgb(191,191,55)" fg:x="30" fg:w="1"/><text x="12.6981%" y="623.50"></text></g><g><title>`0x7FFE4E8E7D44 (1 samples, 0.41%)</title><rect x="12.4481%" y="597" width="0.4149%" height="15" fill="rgb(195,195,57)" fg:x="30" fg:w="1"/><text x="12.6981%" y="607.50"></text></g><g><title>`0x7FFE4E8E31B2 (1 samples, 0.41%)</title><rect x="12.4481%" y="581" width="0.4149%" height="15" fill="rgb(185,185,53)" fg:x="30" fg:w="1"/><text x="12.6981%" y="591.50"></text></g><g><title>`0x7FFE593DB9F7 (1 samples, 0.41%)</title><rect x="12.4481%" y="565" width="0.4149%" height="15" fill="rgb(212,212,63)" fg:x="30" fg:w="1"/><text x="12.6981%" y="575.50"></text></g><g><title>`0x7FFE593D3117 (1 samples, 0.41%)</title><rect x="12.4481%" y="549" width="0.4149%" height="15" fill="rgb(188,188,54)" fg:x="30" fg:w="1"/><text x="12.6981%" y="559.50"></text></g><g><title>`0x7FFE593DC3F8 (1 samples, 0.41%)</title><rect x="12.8631%" y="517" width="0.4149%" height="15" fill="rgb(175,175,50)" fg:x="31" fg:w="1"/><text x="13.1131%" y="527.50"></text></g><g><title>`0x7FFE593D4774 (1 samples, 0.41%)</title><rect x="12.8631%" y="501" width="0.4149%" height="15" fill="rgb(182,182,52)" fg:x="31" fg:w="1"/><text x="13.1131%" y="511.50"></text></g><g><title>`0x7FFE593D3C6C (1 samples, 0.41%)</title><rect x="12.8631%" y="485" width="0.4149%" height="15" fill="rgb(193,193,56)" fg:x="31" fg:w="1"/><text x="13.1131%" y="495.50"></text></g><g><title>`0x7FFE593C070F (2 samples, 0.83%)</title><rect x="12.8631%" y="533" width="0.8299%" height="15" fill="rgb(209,209,62)" fg:x="31" fg:w="2"/><text x="13.1131%" y="543.50"></text></g><g><title>`0x7FFE593DC254 (1 samples, 0.41%)</title><rect x="13.2780%" y="517" width="0.4149%" height="15" fill="rgb(180,180,51)" fg:x="32" fg:w="1"/><text x="13.5280%" y="527.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.41%)</title><rect x="13.2780%" y="501" width="0.4149%" height="15" fill="rgb(215,215,64)" fg:x="32" fg:w="1"/><text x="13.5280%" y="511.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.41%)</title><rect x="13.2780%" y="485" width="0.4149%" height="15" fill="rgb(212,212,63)" fg:x="32" fg:w="1"/><text x="13.5280%" y="495.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.41%)</title><rect x="13.2780%" y="469" width="0.4149%" height="15" fill="rgb(226,226,68)" fg:x="32" fg:w="1"/><text x="13.5280%" y="479.50"></text></g><g><title>`0x7FFE593C10F0 (3 samples, 1.24%)</title><rect x="12.8631%" y="549" width="1.2448%" height="15" fill="rgb(176,176,50)" fg:x="31" fg:w="3"/><text x="13.1131%" y="559.50"></text></g><g><title>`0x7FFE593C065C (1 samples, 0.41%)</title><rect x="13.6929%" y="533" width="0.4149%" height="15" fill="rgb(199,199,58)" fg:x="33" fg:w="1"/><text x="13.9429%" y="543.50"></text></g><g><title>`0x7FFE5944F9D4 (1 samples, 0.41%)</title><rect x="13.6929%" y="517" width="0.4149%" height="15" fill="rgb(198,198,58)" fg:x="33" fg:w="1"/><text x="13.9429%" y="527.50"></text></g><g><title>`0x7FFE579B91DB (7 samples, 2.90%)</title><rect x="11.6183%" y="677" width="2.9046%" height="15" fill="rgb(211,211,63)" fg:x="28" fg:w="7"/><text x="11.8683%" y="687.50">`0..</text></g><g><title>`0x7FFE579BC8BE (4 samples, 1.66%)</title><rect x="12.8631%" y="661" width="1.6598%" height="15" fill="rgb(223,223,67)" fg:x="31" fg:w="4"/><text x="13.1131%" y="671.50"></text></g><g><title>`0x7FFE579BC94A (4 samples, 1.66%)</title><rect x="12.8631%" y="645" width="1.6598%" height="15" fill="rgb(180,180,51)" fg:x="31" fg:w="4"/><text x="13.1131%" y="655.50"></text></g><g><title>`0x7FFE56B26452 (4 samples, 1.66%)</title><rect x="12.8631%" y="629" width="1.6598%" height="15" fill="rgb(187,187,54)" fg:x="31" fg:w="4"/><text x="13.1131%" y="639.50"></text></g><g><title>`0x7FFE593DA25A (4 samples, 1.66%)</title><rect x="12.8631%" y="613" width="1.6598%" height="15" fill="rgb(181,181,52)" fg:x="31" fg:w="4"/><text x="13.1131%" y="623.50"></text></g><g><title>`0x7FFE593C8CAC (4 samples, 1.66%)</title><rect x="12.8631%" y="597" width="1.6598%" height="15" fill="rgb(184,184,53)" fg:x="31" fg:w="4"/><text x="13.1131%" y="607.50"></text></g><g><title>`0x7FFE593D88D4 (4 samples, 1.66%)</title><rect x="12.8631%" y="581" width="1.6598%" height="15" fill="rgb(227,227,69)" fg:x="31" fg:w="4"/><text x="13.1131%" y="591.50"></text></g><g><title>`0x7FFE593C0EBF (4 samples, 1.66%)</title><rect x="12.8631%" y="565" width="1.6598%" height="15" fill="rgb(181,181,52)" fg:x="31" fg:w="4"/><text x="13.1131%" y="575.50"></text></g><g><title>`0x7FFE593C1082 (1 samples, 0.41%)</title><rect x="14.1079%" y="549" width="0.4149%" height="15" fill="rgb(188,188,54)" fg:x="34" fg:w="1"/><text x="14.3579%" y="559.50"></text></g><g><title>`0x7FFE593DA407 (1 samples, 0.41%)</title><rect x="14.1079%" y="533" width="0.4149%" height="15" fill="rgb(206,206,61)" fg:x="34" fg:w="1"/><text x="14.3579%" y="543.50"></text></g><g><title>`0x7FFE593DAC49 (1 samples, 0.41%)</title><rect x="14.1079%" y="517" width="0.4149%" height="15" fill="rgb(225,225,68)" fg:x="34" fg:w="1"/><text x="14.3579%" y="527.50"></text></g><g><title>`0x7FFE5944FB14 (1 samples, 0.41%)</title><rect x="14.1079%" y="501" width="0.4149%" height="15" fill="rgb(182,182,52)" fg:x="34" fg:w="1"/><text x="14.3579%" y="511.50"></text></g><g><title>`0x7FFE551C7726 (1 samples, 0.41%)</title><rect x="14.5228%" y="533" width="0.4149%" height="15" fill="rgb(210,210,63)" fg:x="35" fg:w="1"/><text x="14.7728%" y="543.50"></text></g><g><title>`0x7FFE58C81B6B (1 samples, 0.41%)</title><rect x="14.5228%" y="517" width="0.4149%" height="15" fill="rgb(212,212,63)" fg:x="35" fg:w="1"/><text x="14.7728%" y="527.50"></text></g><g><title>`0x7FFE58C826EA (1 samples, 0.41%)</title><rect x="14.5228%" y="501" width="0.4149%" height="15" fill="rgb(221,221,66)" fg:x="35" fg:w="1"/><text x="14.7728%" y="511.50"></text></g><g><title>`0x7FFE58BB933F (1 samples, 0.41%)</title><rect x="14.5228%" y="485" width="0.4149%" height="15" fill="rgb(207,207,61)" fg:x="35" fg:w="1"/><text x="14.7728%" y="495.50"></text></g><g><title>`0x7FFE58BF9E69 (1 samples, 0.41%)</title><rect x="14.5228%" y="469" width="0.4149%" height="15" fill="rgb(186,186,54)" fg:x="35" fg:w="1"/><text x="14.7728%" y="479.50"></text></g><g><title>`0x7FFE58BEAC1B (1 samples, 0.41%)</title><rect x="14.5228%" y="453" width="0.4149%" height="15" fill="rgb(185,185,53)" fg:x="35" fg:w="1"/><text x="14.7728%" y="463.50"></text></g><g><title>`0x7FFE58BEE6B2 (1 samples, 0.41%)</title><rect x="14.5228%" y="437" width="0.4149%" height="15" fill="rgb(178,178,51)" fg:x="35" fg:w="1"/><text x="14.7728%" y="447.50"></text></g><g><title>`0x7FFE594504E4 (1 samples, 0.41%)</title><rect x="14.5228%" y="421" width="0.4149%" height="15" fill="rgb(218,218,65)" fg:x="35" fg:w="1"/><text x="14.7728%" y="431.50"></text></g><g><title>`0x7FFE58BD6143 (1 samples, 0.41%)</title><rect x="14.9378%" y="453" width="0.4149%" height="15" fill="rgb(216,216,65)" fg:x="36" fg:w="1"/><text x="15.1878%" y="463.50"></text></g><g><title>`0x7FFE58BD6468 (1 samples, 0.41%)</title><rect x="14.9378%" y="437" width="0.4149%" height="15" fill="rgb(175,175,50)" fg:x="36" fg:w="1"/><text x="15.1878%" y="447.50"></text></g><g><title>`0x7FFE56B2A279 (1 samples, 0.41%)</title><rect x="14.9378%" y="421" width="0.4149%" height="15" fill="rgb(204,204,60)" fg:x="36" fg:w="1"/><text x="15.1878%" y="431.50"></text></g><g><title>`0x7FFE56B2A3C8 (1 samples, 0.41%)</title><rect x="14.9378%" y="405" width="0.4149%" height="15" fill="rgb(180,180,51)" fg:x="36" fg:w="1"/><text x="15.1878%" y="415.50"></text></g><g><title>`0x7FFE56B2B1E4 (1 samples, 0.41%)</title><rect x="14.9378%" y="389" width="0.4149%" height="15" fill="rgb(223,223,67)" fg:x="36" fg:w="1"/><text x="15.1878%" y="399.50"></text></g><g><title>`0x7FFE59451884 (1 samples, 0.41%)</title><rect x="14.9378%" y="373" width="0.4149%" height="15" fill="rgb(189,189,55)" fg:x="36" fg:w="1"/><text x="15.1878%" y="383.50"></text></g><g><title>`0x7FFE551DA11C (3 samples, 1.24%)</title><rect x="14.5228%" y="565" width="1.2448%" height="15" fill="rgb(224,224,68)" fg:x="35" fg:w="3"/><text x="14.7728%" y="575.50"></text></g><g><title>`0x7FFE551C6E15 (3 samples, 1.24%)</title><rect x="14.5228%" y="549" width="1.2448%" height="15" fill="rgb(188,188,54)" fg:x="35" fg:w="3"/><text x="14.7728%" y="559.50"></text></g><g><title>`0x7FFE551C7677 (2 samples, 0.83%)</title><rect x="14.9378%" y="533" width="0.8299%" height="15" fill="rgb(193,193,56)" fg:x="36" fg:w="2"/><text x="15.1878%" y="543.50"></text></g><g><title>`0x7FFE551C93C8 (2 samples, 0.83%)</title><rect x="14.9378%" y="517" width="0.8299%" height="15" fill="rgb(204,204,60)" fg:x="36" fg:w="2"/><text x="15.1878%" y="527.50"></text></g><g><title>`0x7FFE551C5E1E (2 samples, 0.83%)</title><rect x="14.9378%" y="501" width="0.8299%" height="15" fill="rgb(221,221,66)" fg:x="36" fg:w="2"/><text x="15.1878%" y="511.50"></text></g><g><title>`0x7FFE551C5C98 (2 samples, 0.83%)</title><rect x="14.9378%" y="485" width="0.8299%" height="15" fill="rgb(216,216,65)" fg:x="36" fg:w="2"/><text x="15.1878%" y="495.50"></text></g><g><title>`0x7FFE58BE4E32 (2 samples, 0.83%)</title><rect x="14.9378%" y="469" width="0.8299%" height="15" fill="rgb(223,223,67)" fg:x="36" fg:w="2"/><text x="15.1878%" y="479.50"></text></g><g><title>`0x7FFE58BD6017 (1 samples, 0.41%)</title><rect x="15.3527%" y="453" width="0.4149%" height="15" fill="rgb(188,188,55)" fg:x="37" fg:w="1"/><text x="15.6027%" y="463.50"></text></g><g><title>`0x7FFE58BD62CF (1 samples, 0.41%)</title><rect x="15.3527%" y="437" width="0.4149%" height="15" fill="rgb(217,217,65)" fg:x="37" fg:w="1"/><text x="15.6027%" y="447.50"></text></g><g><title>`0x7FFE58BD5E31 (1 samples, 0.41%)</title><rect x="15.3527%" y="421" width="0.4149%" height="15" fill="rgb(225,225,68)" fg:x="37" fg:w="1"/><text x="15.6027%" y="431.50"></text></g><g><title>`0x7FFE56B26E39 (1 samples, 0.41%)</title><rect x="15.3527%" y="405" width="0.4149%" height="15" fill="rgb(205,205,61)" fg:x="37" fg:w="1"/><text x="15.6027%" y="415.50"></text></g><g><title>`0x7FFE56B26F8F (1 samples, 0.41%)</title><rect x="15.3527%" y="389" width="0.4149%" height="15" fill="rgb(214,214,64)" fg:x="37" fg:w="1"/><text x="15.6027%" y="399.50"></text></g><g><title>`0x7FFE56B2B1E4 (1 samples, 0.41%)</title><rect x="15.3527%" y="373" width="0.4149%" height="15" fill="rgb(215,215,64)" fg:x="37" fg:w="1"/><text x="15.6027%" y="383.50"></text></g><g><title>`0x7FFE59451884 (1 samples, 0.41%)</title><rect x="15.3527%" y="357" width="0.4149%" height="15" fill="rgb(209,209,62)" fg:x="37" fg:w="1"/><text x="15.6027%" y="367.50"></text></g><g><title>`0x7FFE551CC2CE (1 samples, 0.41%)</title><rect x="15.7676%" y="533" width="0.4149%" height="15" fill="rgb(210,210,63)" fg:x="38" fg:w="1"/><text x="16.0176%" y="543.50"></text></g><g><title>`0x7FFE551DC47C (1 samples, 0.41%)</title><rect x="15.7676%" y="517" width="0.4149%" height="15" fill="rgb(183,183,53)" fg:x="38" fg:w="1"/><text x="16.0176%" y="527.50"></text></g><g><title>`0x7FFE56B2A279 (1 samples, 0.41%)</title><rect x="15.7676%" y="501" width="0.4149%" height="15" fill="rgb(196,196,57)" fg:x="38" fg:w="1"/><text x="16.0176%" y="511.50"></text></g><g><title>`0x7FFE56B2A3C8 (1 samples, 0.41%)</title><rect x="15.7676%" y="485" width="0.4149%" height="15" fill="rgb(226,226,68)" fg:x="38" fg:w="1"/><text x="16.0176%" y="495.50"></text></g><g><title>`0x7FFE56B2B1E4 (1 samples, 0.41%)</title><rect x="15.7676%" y="469" width="0.4149%" height="15" fill="rgb(208,208,62)" fg:x="38" fg:w="1"/><text x="16.0176%" y="479.50"></text></g><g><title>`0x7FFE59451884 (1 samples, 0.41%)</title><rect x="15.7676%" y="453" width="0.4149%" height="15" fill="rgb(215,215,64)" fg:x="38" fg:w="1"/><text x="16.0176%" y="463.50"></text></g><g><title>`0x7FFE551D9E37 (2 samples, 0.83%)</title><rect x="15.7676%" y="565" width="0.8299%" height="15" fill="rgb(226,226,68)" fg:x="38" fg:w="2"/><text x="16.0176%" y="575.50"></text></g><g><title>`0x7FFE551C9B49 (2 samples, 0.83%)</title><rect x="15.7676%" y="549" width="0.8299%" height="15" fill="rgb(196,196,57)" fg:x="38" fg:w="2"/><text x="16.0176%" y="559.50"></text></g><g><title>`0x7FFE551CC241 (1 samples, 0.41%)</title><rect x="16.1826%" y="533" width="0.4149%" height="15" fill="rgb(221,221,66)" fg:x="39" fg:w="1"/><text x="16.4326%" y="543.50"></text></g><g><title>`0x7FFE551CC456 (1 samples, 0.41%)</title><rect x="16.1826%" y="517" width="0.4149%" height="15" fill="rgb(196,196,57)" fg:x="39" fg:w="1"/><text x="16.4326%" y="527.50"></text></g><g><title>`0x7FFE56B2A653 (1 samples, 0.41%)</title><rect x="16.1826%" y="501" width="0.4149%" height="15" fill="rgb(200,200,59)" fg:x="39" fg:w="1"/><text x="16.4326%" y="511.50"></text></g><g><title>`0x7FFE56B2ACD9 (1 samples, 0.41%)</title><rect x="16.1826%" y="485" width="0.4149%" height="15" fill="rgb(192,192,56)" fg:x="39" fg:w="1"/><text x="16.4326%" y="495.50"></text></g><g><title>`0x7FFE5944F654 (1 samples, 0.41%)</title><rect x="16.1826%" y="469" width="0.4149%" height="15" fill="rgb(208,208,62)" fg:x="39" fg:w="1"/><text x="16.4326%" y="479.50"></text></g><g><title>`0x7FFE579B8EF6 (13 samples, 5.39%)</title><rect x="11.6183%" y="693" width="5.3942%" height="15" fill="rgb(218,218,65)" fg:x="28" fg:w="13"/><text x="11.8683%" y="703.50">`0x7FFE..</text></g><g><title>`0x7FFE579B9113 (6 samples, 2.49%)</title><rect x="14.5228%" y="677" width="2.4896%" height="15" fill="rgb(178,178,51)" fg:x="35" fg:w="6"/><text x="14.7728%" y="687.50">`0..</text></g><g><title>`0x7FFE579B9413 (6 samples, 2.49%)</title><rect x="14.5228%" y="661" width="2.4896%" height="15" fill="rgb(177,177,50)" fg:x="35" fg:w="6"/><text x="14.7728%" y="671.50">`0..</text></g><g><title>`0x7FFE579B979F (6 samples, 2.49%)</title><rect x="14.5228%" y="645" width="2.4896%" height="15" fill="rgb(182,182,52)" fg:x="35" fg:w="6"/><text x="14.7728%" y="655.50">`0..</text></g><g><title>`0x7FFE55B531F8 (6 samples, 2.49%)</title><rect x="14.5228%" y="629" width="2.4896%" height="15" fill="rgb(188,188,54)" fg:x="35" fg:w="6"/><text x="14.7728%" y="639.50">`0..</text></g><g><title>`0x7FFE55B538BB (6 samples, 2.49%)</title><rect x="14.5228%" y="613" width="2.4896%" height="15" fill="rgb(198,198,58)" fg:x="35" fg:w="6"/><text x="14.7728%" y="623.50">`0..</text></g><g><title>`0x7FFE55B53BD5 (6 samples, 2.49%)</title><rect x="14.5228%" y="597" width="2.4896%" height="15" fill="rgb(200,200,59)" fg:x="35" fg:w="6"/><text x="14.7728%" y="607.50">`0..</text></g><g><title>`0x7FFE551D8166 (6 samples, 2.49%)</title><rect x="14.5228%" y="581" width="2.4896%" height="15" fill="rgb(186,186,54)" fg:x="35" fg:w="6"/><text x="14.7728%" y="591.50">`0..</text></g><g><title>`0x7FFE551D9DFF (1 samples, 0.41%)</title><rect x="16.5975%" y="565" width="0.4149%" height="15" fill="rgb(206,206,61)" fg:x="40" fg:w="1"/><text x="16.8475%" y="575.50"></text></g><g><title>`0x7FFE551DCD33 (1 samples, 0.41%)</title><rect x="16.5975%" y="549" width="0.4149%" height="15" fill="rgb(181,181,52)" fg:x="40" fg:w="1"/><text x="16.8475%" y="559.50"></text></g><g><title>`0x7FFE551DCE2F (1 samples, 0.41%)</title><rect x="16.5975%" y="533" width="0.4149%" height="15" fill="rgb(193,193,56)" fg:x="40" fg:w="1"/><text x="16.8475%" y="543.50"></text></g><g><title>`0x7FFE551DE32D (1 samples, 0.41%)</title><rect x="16.5975%" y="517" width="0.4149%" height="15" fill="rgb(198,198,58)" fg:x="40" fg:w="1"/><text x="16.8475%" y="527.50"></text></g><g><title>`0x7FFE551E18DE (1 samples, 0.41%)</title><rect x="16.5975%" y="501" width="0.4149%" height="15" fill="rgb(191,191,55)" fg:x="40" fg:w="1"/><text x="16.8475%" y="511.50"></text></g><g><title>`0x7FFE551DAA8E (1 samples, 0.41%)</title><rect x="16.5975%" y="485" width="0.4149%" height="15" fill="rgb(206,206,61)" fg:x="40" fg:w="1"/><text x="16.8475%" y="495.50"></text></g><g><title>`0x7FFE551DC304 (1 samples, 0.41%)</title><rect x="16.5975%" y="469" width="0.4149%" height="15" fill="rgb(186,186,54)" fg:x="40" fg:w="1"/><text x="16.8475%" y="479.50"></text></g><g><title>`0x7FFE56B274CB (1 samples, 0.41%)</title><rect x="16.5975%" y="453" width="0.4149%" height="15" fill="rgb(219,219,66)" fg:x="40" fg:w="1"/><text x="16.8475%" y="463.50"></text></g><g><title>`0x7FFE56B2762C (1 samples, 0.41%)</title><rect x="16.5975%" y="437" width="0.4149%" height="15" fill="rgb(207,207,61)" fg:x="40" fg:w="1"/><text x="16.8475%" y="447.50"></text></g><g><title>`0x7FFE56B27946 (1 samples, 0.41%)</title><rect x="16.5975%" y="421" width="0.4149%" height="15" fill="rgb(208,208,62)" fg:x="40" fg:w="1"/><text x="16.8475%" y="431.50"></text></g><g><title>`0x7FFE56B2831E (1 samples, 0.41%)</title><rect x="16.5975%" y="405" width="0.4149%" height="15" fill="rgb(187,187,54)" fg:x="40" fg:w="1"/><text x="16.8475%" y="415.50"></text></g><g><title>`0x7FFE5944F714 (1 samples, 0.41%)</title><rect x="16.5975%" y="389" width="0.4149%" height="15" fill="rgb(228,228,69)" fg:x="40" fg:w="1"/><text x="16.8475%" y="399.50"></text></g><g><title>`0x7FFE593C070F (1 samples, 0.41%)</title><rect x="17.0124%" y="485" width="0.4149%" height="15" fill="rgb(228,228,69)" fg:x="41" fg:w="1"/><text x="17.2624%" y="495.50"></text></g><g><title>`0x7FFE593DC254 (1 samples, 0.41%)</title><rect x="17.0124%" y="469" width="0.4149%" height="15" fill="rgb(213,213,64)" fg:x="41" fg:w="1"/><text x="17.2624%" y="479.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.41%)</title><rect x="17.0124%" y="453" width="0.4149%" height="15" fill="rgb(197,197,58)" fg:x="41" fg:w="1"/><text x="17.2624%" y="463.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.41%)</title><rect x="17.0124%" y="437" width="0.4149%" height="15" fill="rgb(191,191,55)" fg:x="41" fg:w="1"/><text x="17.2624%" y="447.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.41%)</title><rect x="17.0124%" y="421" width="0.4149%" height="15" fill="rgb(195,195,57)" fg:x="41" fg:w="1"/><text x="17.2624%" y="431.50"></text></g><g><title>`0x7FFE593C10F0 (2 samples, 0.83%)</title><rect x="17.0124%" y="501" width="0.8299%" height="15" fill="rgb(211,211,63)" fg:x="41" fg:w="2"/><text x="17.2624%" y="511.50"></text></g><g><title>`0x7FFE593C06B6 (1 samples, 0.41%)</title><rect x="17.4274%" y="485" width="0.4149%" height="15" fill="rgb(226,226,68)" fg:x="42" fg:w="1"/><text x="17.6774%" y="495.50"></text></g><g><title>`0x7FFE5944FCB4 (1 samples, 0.41%)</title><rect x="17.4274%" y="469" width="0.4149%" height="15" fill="rgb(227,227,69)" fg:x="42" fg:w="1"/><text x="17.6774%" y="479.50"></text></g><g><title>`0x7FFE579B9113 (3 samples, 1.24%)</title><rect x="17.0124%" y="677" width="1.2448%" height="15" fill="rgb(206,206,61)" fg:x="41" fg:w="3"/><text x="17.2624%" y="687.50"></text></g><g><title>`0x7FFE579B9413 (3 samples, 1.24%)</title><rect x="17.0124%" y="661" width="1.2448%" height="15" fill="rgb(221,221,66)" fg:x="41" fg:w="3"/><text x="17.2624%" y="671.50"></text></g><g><title>`0x7FFE579B987A (3 samples, 1.24%)</title><rect x="17.0124%" y="645" width="1.2448%" height="15" fill="rgb(205,205,61)" fg:x="41" fg:w="3"/><text x="17.2624%" y="655.50"></text></g><g><title>`0x7FFE579B9B5A (3 samples, 1.24%)</title><rect x="17.0124%" y="629" width="1.2448%" height="15" fill="rgb(202,202,59)" fg:x="41" fg:w="3"/><text x="17.2624%" y="639.50"></text></g><g><title>`0x7FFE579B9C6E (3 samples, 1.24%)</title><rect x="17.0124%" y="613" width="1.2448%" height="15" fill="rgb(228,228,69)" fg:x="41" fg:w="3"/><text x="17.2624%" y="623.50"></text></g><g><title>`0x7FFE56B224F1 (3 samples, 1.24%)</title><rect x="17.0124%" y="597" width="1.2448%" height="15" fill="rgb(228,228,69)" fg:x="41" fg:w="3"/><text x="17.2624%" y="607.50"></text></g><g><title>`0x7FFE56B26452 (3 samples, 1.24%)</title><rect x="17.0124%" y="581" width="1.2448%" height="15" fill="rgb(201,201,59)" fg:x="41" fg:w="3"/><text x="17.2624%" y="591.50"></text></g><g><title>`0x7FFE593DA25A (3 samples, 1.24%)</title><rect x="17.0124%" y="565" width="1.2448%" height="15" fill="rgb(224,224,68)" fg:x="41" fg:w="3"/><text x="17.2624%" y="575.50"></text></g><g><title>`0x7FFE593C8CAC (3 samples, 1.24%)</title><rect x="17.0124%" y="549" width="1.2448%" height="15" fill="rgb(185,185,53)" fg:x="41" fg:w="3"/><text x="17.2624%" y="559.50"></text></g><g><title>`0x7FFE593D88D4 (3 samples, 1.24%)</title><rect x="17.0124%" y="533" width="1.2448%" height="15" fill="rgb(204,204,60)" fg:x="41" fg:w="3"/><text x="17.2624%" y="543.50"></text></g><g><title>`0x7FFE593C0EBF (3 samples, 1.24%)</title><rect x="17.0124%" y="517" width="1.2448%" height="15" fill="rgb(221,221,66)" fg:x="41" fg:w="3"/><text x="17.2624%" y="527.50"></text></g><g><title>`0x7FFE593C1082 (1 samples, 0.41%)</title><rect x="17.8423%" y="501" width="0.4149%" height="15" fill="rgb(194,194,57)" fg:x="43" fg:w="1"/><text x="18.0923%" y="511.50"></text></g><g><title>`0x7FFE593DA407 (1 samples, 0.41%)</title><rect x="17.8423%" y="485" width="0.4149%" height="15" fill="rgb(190,190,55)" fg:x="43" fg:w="1"/><text x="18.0923%" y="495.50"></text></g><g><title>`0x7FFE593DAC49 (1 samples, 0.41%)</title><rect x="17.8423%" y="469" width="0.4149%" height="15" fill="rgb(186,186,54)" fg:x="43" fg:w="1"/><text x="18.0923%" y="479.50"></text></g><g><title>`0x7FFE5944FB14 (1 samples, 0.41%)</title><rect x="17.8423%" y="453" width="0.4149%" height="15" fill="rgb(182,182,52)" fg:x="43" fg:w="1"/><text x="18.0923%" y="463.50"></text></g><g><title>`0x7FFE55B526EE (1 samples, 0.41%)</title><rect x="18.2573%" y="565" width="0.4149%" height="15" fill="rgb(208,208,62)" fg:x="44" fg:w="1"/><text x="18.5073%" y="575.50"></text></g><g><title>`0x7FFE551E1B84 (1 samples, 0.41%)</title><rect x="18.2573%" y="549" width="0.4149%" height="15" fill="rgb(213,213,63)" fg:x="44" fg:w="1"/><text x="18.5073%" y="559.50"></text></g><g><title>`0x7FFE551E1C92 (1 samples, 0.41%)</title><rect x="18.2573%" y="533" width="0.4149%" height="15" fill="rgb(228,228,69)" fg:x="44" fg:w="1"/><text x="18.5073%" y="543.50"></text></g><g><title>`0x7FFE551E18DE (1 samples, 0.41%)</title><rect x="18.2573%" y="517" width="0.4149%" height="15" fill="rgb(227,227,68)" fg:x="44" fg:w="1"/><text x="18.5073%" y="527.50"></text></g><g><title>`0x7FFE551DAA8E (1 samples, 0.41%)</title><rect x="18.2573%" y="501" width="0.4149%" height="15" fill="rgb(217,217,65)" fg:x="44" fg:w="1"/><text x="18.5073%" y="511.50"></text></g><g><title>`0x7FFE551DC450 (1 samples, 0.41%)</title><rect x="18.2573%" y="485" width="0.4149%" height="15" fill="rgb(207,207,61)" fg:x="44" fg:w="1"/><text x="18.5073%" y="495.50"></text></g><g><title>`0x7FFE56B2A279 (1 samples, 0.41%)</title><rect x="18.2573%" y="469" width="0.4149%" height="15" fill="rgb(222,222,67)" fg:x="44" fg:w="1"/><text x="18.5073%" y="479.50"></text></g><g><title>`0x7FFE56B2A3C8 (1 samples, 0.41%)</title><rect x="18.2573%" y="453" width="0.4149%" height="15" fill="rgb(228,228,69)" fg:x="44" fg:w="1"/><text x="18.5073%" y="463.50"></text></g><g><title>`0x7FFE56B2B1E4 (1 samples, 0.41%)</title><rect x="18.2573%" y="437" width="0.4149%" height="15" fill="rgb(219,219,66)" fg:x="44" fg:w="1"/><text x="18.5073%" y="447.50"></text></g><g><title>`0x7FFE59451884 (1 samples, 0.41%)</title><rect x="18.2573%" y="421" width="0.4149%" height="15" fill="rgb(223,223,67)" fg:x="44" fg:w="1"/><text x="18.5073%" y="431.50"></text></g><g><title>`0x7FFE593D8940 (1 samples, 0.41%)</title><rect x="18.6722%" y="213" width="0.4149%" height="15" fill="rgb(229,229,69)" fg:x="45" fg:w="1"/><text x="18.9222%" y="223.50"></text></g><g><title>`0x7FFE593DD62D (1 samples, 0.41%)</title><rect x="18.6722%" y="197" width="0.4149%" height="15" fill="rgb(216,216,65)" fg:x="45" fg:w="1"/><text x="18.9222%" y="207.50"></text></g><g><title>`0x7FFE5941CDFE (1 samples, 0.41%)</title><rect x="18.6722%" y="181" width="0.4149%" height="15" fill="rgb(183,183,52)" fg:x="45" fg:w="1"/><text x="18.9222%" y="191.50"></text></g><g><title>`0x7FFE5941D04D (1 samples, 0.41%)</title><rect x="18.6722%" y="165" width="0.4149%" height="15" fill="rgb(188,188,55)" fg:x="45" fg:w="1"/><text x="18.9222%" y="175.50"></text></g><g><title>`0x7FFE593D869F (1 samples, 0.41%)</title><rect x="18.6722%" y="149" width="0.4149%" height="15" fill="rgb(191,191,55)" fg:x="45" fg:w="1"/><text x="18.9222%" y="159.50"></text></g><g><title>`0x7FFE5515B22A (1 samples, 0.41%)</title><rect x="18.6722%" y="133" width="0.4149%" height="15" fill="rgb(229,229,69)" fg:x="45" fg:w="1"/><text x="18.9222%" y="143.50"></text></g><g><title>`0x7FFE5515BDA9 (1 samples, 0.41%)</title><rect x="18.6722%" y="117" width="0.4149%" height="15" fill="rgb(182,182,52)" fg:x="45" fg:w="1"/><text x="18.9222%" y="127.50"></text></g><g><title>`0x7FFE55159965 (1 samples, 0.41%)</title><rect x="18.6722%" y="101" width="0.4149%" height="15" fill="rgb(213,213,63)" fg:x="45" fg:w="1"/><text x="18.9222%" y="111.50"></text></g><g><title>`0x7FFE5940D6E6 (1 samples, 0.41%)</title><rect x="18.6722%" y="85" width="0.4149%" height="15" fill="rgb(212,212,63)" fg:x="45" fg:w="1"/><text x="18.9222%" y="95.50"></text></g><g><title>`0x7FFE593E21CA (1 samples, 0.41%)</title><rect x="18.6722%" y="69" width="0.4149%" height="15" fill="rgb(175,175,50)" fg:x="45" fg:w="1"/><text x="18.9222%" y="79.50"></text></g><g><title>`0x7FFE593E2057 (1 samples, 0.41%)</title><rect x="18.6722%" y="53" width="0.4149%" height="15" fill="rgb(217,217,65)" fg:x="45" fg:w="1"/><text x="18.9222%" y="63.50"></text></g><g><title>`0x7FFE59452DC4 (1 samples, 0.41%)</title><rect x="18.6722%" y="37" width="0.4149%" height="15" fill="rgb(180,180,52)" fg:x="45" fg:w="1"/><text x="18.9222%" y="47.50"></text></g><g><title>`0x7FFE593C070F (1 samples, 0.41%)</title><rect x="19.0871%" y="165" width="0.4149%" height="15" fill="rgb(178,178,51)" fg:x="46" fg:w="1"/><text x="19.3371%" y="175.50"></text></g><g><title>`0x7FFE593DC254 (1 samples, 0.41%)</title><rect x="19.0871%" y="149" width="0.4149%" height="15" fill="rgb(227,227,69)" fg:x="46" fg:w="1"/><text x="19.3371%" y="159.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.41%)</title><rect x="19.0871%" y="133" width="0.4149%" height="15" fill="rgb(222,222,67)" fg:x="46" fg:w="1"/><text x="19.3371%" y="143.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.41%)</title><rect x="19.0871%" y="117" width="0.4149%" height="15" fill="rgb(198,198,58)" fg:x="46" fg:w="1"/><text x="19.3371%" y="127.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.41%)</title><rect x="19.0871%" y="101" width="0.4149%" height="15" fill="rgb(201,201,59)" fg:x="46" fg:w="1"/><text x="19.3371%" y="111.50"></text></g><g><title>`0x7FFE593C0BC8 (2 samples, 0.83%)</title><rect x="19.0871%" y="181" width="0.8299%" height="15" fill="rgb(194,194,57)" fg:x="46" fg:w="2"/><text x="19.3371%" y="191.50"></text></g><g><title>`0x7FFE593C06B6 (1 samples, 0.41%)</title><rect x="19.5021%" y="165" width="0.4149%" height="15" fill="rgb(210,210,63)" fg:x="47" fg:w="1"/><text x="19.7521%" y="175.50"></text></g><g><title>`0x7FFE5944FCB4 (1 samples, 0.41%)</title><rect x="19.5021%" y="149" width="0.4149%" height="15" fill="rgb(183,183,53)" fg:x="47" fg:w="1"/><text x="19.7521%" y="159.50"></text></g><g><title>`0x7FFE551F81C2 (4 samples, 1.66%)</title><rect x="18.6722%" y="309" width="1.6598%" height="15" fill="rgb(194,194,56)" fg:x="45" fg:w="4"/><text x="18.9222%" y="319.50"></text></g><g><title>`0x7FFE551ED8D2 (4 samples, 1.66%)</title><rect x="18.6722%" y="293" width="1.6598%" height="15" fill="rgb(228,228,69)" fg:x="45" fg:w="4"/><text x="18.9222%" y="303.50"></text></g><g><title>`0x7FFE593DB9F7 (4 samples, 1.66%)</title><rect x="18.6722%" y="277" width="1.6598%" height="15" fill="rgb(207,207,61)" fg:x="45" fg:w="4"/><text x="18.9222%" y="287.50"></text></g><g><title>`0x7FFE593D2C35 (4 samples, 1.66%)</title><rect x="18.6722%" y="261" width="1.6598%" height="15" fill="rgb(182,182,52)" fg:x="45" fg:w="4"/><text x="18.9222%" y="271.50"></text></g><g><title>`0x7FFE593C5C8E (4 samples, 1.66%)</title><rect x="18.6722%" y="245" width="1.6598%" height="15" fill="rgb(207,207,61)" fg:x="45" fg:w="4"/><text x="18.9222%" y="255.50"></text></g><g><title>`0x7FFE593C8AD0 (4 samples, 1.66%)</title><rect x="18.6722%" y="229" width="1.6598%" height="15" fill="rgb(195,195,57)" fg:x="45" fg:w="4"/><text x="18.9222%" y="239.50"></text></g><g><title>`0x7FFE593D88D4 (3 samples, 1.24%)</title><rect x="19.0871%" y="213" width="1.2448%" height="15" fill="rgb(217,217,65)" fg:x="46" fg:w="3"/><text x="19.3371%" y="223.50"></text></g><g><title>`0x7FFE593C0F90 (3 samples, 1.24%)</title><rect x="19.0871%" y="197" width="1.2448%" height="15" fill="rgb(190,190,55)" fg:x="46" fg:w="3"/><text x="19.3371%" y="207.50"></text></g><g><title>`0x7FFE593C0AFE (1 samples, 0.41%)</title><rect x="19.9170%" y="181" width="0.4149%" height="15" fill="rgb(183,183,53)" fg:x="48" fg:w="1"/><text x="20.1670%" y="191.50"></text></g><g><title>`0x7FFE593DDB51 (1 samples, 0.41%)</title><rect x="19.9170%" y="165" width="0.4149%" height="15" fill="rgb(190,190,55)" fg:x="48" fg:w="1"/><text x="20.1670%" y="175.50"></text></g><g><title>`0x7FFE593DA407 (1 samples, 0.41%)</title><rect x="19.9170%" y="149" width="0.4149%" height="15" fill="rgb(192,192,56)" fg:x="48" fg:w="1"/><text x="20.1670%" y="159.50"></text></g><g><title>`0x7FFE593DAC49 (1 samples, 0.41%)</title><rect x="19.9170%" y="133" width="0.4149%" height="15" fill="rgb(196,196,57)" fg:x="48" fg:w="1"/><text x="20.1670%" y="143.50"></text></g><g><title>`0x7FFE5944FB14 (1 samples, 0.41%)</title><rect x="19.9170%" y="117" width="0.4149%" height="15" fill="rgb(223,223,67)" fg:x="48" fg:w="1"/><text x="20.1670%" y="127.50"></text></g><g><title>`0x7FFE55152A90 (1 samples, 0.41%)</title><rect x="20.3320%" y="309" width="0.4149%" height="15" fill="rgb(193,193,56)" fg:x="49" fg:w="1"/><text x="20.5820%" y="319.50"></text></g><g><title>`0x7FFE579A12E0 (1 samples, 0.41%)</title><rect x="20.3320%" y="293" width="0.4149%" height="15" fill="rgb(193,193,56)" fg:x="49" fg:w="1"/><text x="20.5820%" y="303.50"></text></g><g><title>`0x7FFE5944F454 (1 samples, 0.41%)</title><rect x="20.3320%" y="277" width="0.4149%" height="15" fill="rgb(208,208,62)" fg:x="49" fg:w="1"/><text x="20.5820%" y="287.50"></text></g><g><title>`0x7FFE593D8940 (6 samples, 2.49%)</title><rect x="18.6722%" y="453" width="2.4896%" height="15" fill="rgb(207,207,61)" fg:x="45" fg:w="6"/><text x="18.9222%" y="463.50">`0..</text></g><g><title>`0x7FFE593DD62D (6 samples, 2.49%)</title><rect x="18.6722%" y="437" width="2.4896%" height="15" fill="rgb(181,181,52)" fg:x="45" fg:w="6"/><text x="18.9222%" y="447.50">`0..</text></g><g><title>`0x7FFE5941CDFE (6 samples, 2.49%)</title><rect x="18.6722%" y="421" width="2.4896%" height="15" fill="rgb(214,214,64)" fg:x="45" fg:w="6"/><text x="18.9222%" y="431.50">`0..</text></g><g><title>`0x7FFE5941D04D (6 samples, 2.49%)</title><rect x="18.6722%" y="405" width="2.4896%" height="15" fill="rgb(215,215,64)" fg:x="45" fg:w="6"/><text x="18.9222%" y="415.50">`0..</text></g><g><title>`0x7FFE593D869F (6 samples, 2.49%)</title><rect x="18.6722%" y="389" width="2.4896%" height="15" fill="rgb(195,195,57)" fg:x="45" fg:w="6"/><text x="18.9222%" y="399.50">`0..</text></g><g><title>`0x7FFE551F7B3A (6 samples, 2.49%)</title><rect x="18.6722%" y="373" width="2.4896%" height="15" fill="rgb(186,186,54)" fg:x="45" fg:w="6"/><text x="18.9222%" y="383.50">`0..</text></g><g><title>`0x7FFE551F9077 (6 samples, 2.49%)</title><rect x="18.6722%" y="357" width="2.4896%" height="15" fill="rgb(179,179,51)" fg:x="45" fg:w="6"/><text x="18.9222%" y="367.50">`0..</text></g><g><title>`0x7FFE551E31AD (6 samples, 2.49%)</title><rect x="18.6722%" y="341" width="2.4896%" height="15" fill="rgb(194,194,57)" fg:x="45" fg:w="6"/><text x="18.9222%" y="351.50">`0..</text></g><g><title>`0x7FFE551E3314 (6 samples, 2.49%)</title><rect x="18.6722%" y="325" width="2.4896%" height="15" fill="rgb(222,222,67)" fg:x="45" fg:w="6"/><text x="18.9222%" y="335.50">`0..</text></g><g><title>`0x7FFE55152A48 (1 samples, 0.41%)</title><rect x="20.7469%" y="309" width="0.4149%" height="15" fill="rgb(220,220,66)" fg:x="50" fg:w="1"/><text x="20.9969%" y="319.50"></text></g><g><title>`0x7FFE55153782 (1 samples, 0.41%)</title><rect x="20.7469%" y="293" width="0.4149%" height="15" fill="rgb(225,225,68)" fg:x="50" fg:w="1"/><text x="20.9969%" y="303.50"></text></g><g><title>`0x7FFE5515B731 (1 samples, 0.41%)</title><rect x="20.7469%" y="277" width="0.4149%" height="15" fill="rgb(213,213,64)" fg:x="50" fg:w="1"/><text x="20.9969%" y="287.50"></text></g><g><title>`0x7FFE551599B2 (1 samples, 0.41%)</title><rect x="20.7469%" y="261" width="0.4149%" height="15" fill="rgb(229,229,69)" fg:x="50" fg:w="1"/><text x="20.9969%" y="271.50"></text></g><g><title>`0x7FFE593DB9F7 (1 samples, 0.41%)</title><rect x="20.7469%" y="245" width="0.4149%" height="15" fill="rgb(195,195,57)" fg:x="50" fg:w="1"/><text x="20.9969%" y="255.50"></text></g><g><title>`0x7FFE593D2C35 (1 samples, 0.41%)</title><rect x="20.7469%" y="229" width="0.4149%" height="15" fill="rgb(185,185,53)" fg:x="50" fg:w="1"/><text x="20.9969%" y="239.50"></text></g><g><title>`0x7FFE593C5C8E (1 samples, 0.41%)</title><rect x="20.7469%" y="213" width="0.4149%" height="15" fill="rgb(217,217,65)" fg:x="50" fg:w="1"/><text x="20.9969%" y="223.50"></text></g><g><title>`0x7FFE593C8AD0 (1 samples, 0.41%)</title><rect x="20.7469%" y="197" width="0.4149%" height="15" fill="rgb(217,217,65)" fg:x="50" fg:w="1"/><text x="20.9969%" y="207.50"></text></g><g><title>`0x7FFE593D88B6 (1 samples, 0.41%)</title><rect x="20.7469%" y="181" width="0.4149%" height="15" fill="rgb(227,227,69)" fg:x="50" fg:w="1"/><text x="20.9969%" y="191.50"></text></g><g><title>`0x7FFE593DDDA9 (1 samples, 0.41%)</title><rect x="20.7469%" y="165" width="0.4149%" height="15" fill="rgb(215,215,64)" fg:x="50" fg:w="1"/><text x="20.9969%" y="175.50"></text></g><g><title>`0x7FFE593DCE29 (1 samples, 0.41%)</title><rect x="20.7469%" y="149" width="0.4149%" height="15" fill="rgb(179,179,51)" fg:x="50" fg:w="1"/><text x="20.9969%" y="159.50"></text></g><g><title>`0x7FFE593DC254 (1 samples, 0.41%)</title><rect x="20.7469%" y="133" width="0.4149%" height="15" fill="rgb(176,176,50)" fg:x="50" fg:w="1"/><text x="20.9969%" y="143.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.41%)</title><rect x="20.7469%" y="117" width="0.4149%" height="15" fill="rgb(209,209,62)" fg:x="50" fg:w="1"/><text x="20.9969%" y="127.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.41%)</title><rect x="20.7469%" y="101" width="0.4149%" height="15" fill="rgb(206,206,61)" fg:x="50" fg:w="1"/><text x="20.9969%" y="111.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.41%)</title><rect x="20.7469%" y="85" width="0.4149%" height="15" fill="rgb(176,176,50)" fg:x="50" fg:w="1"/><text x="20.9969%" y="95.50"></text></g><g><title>`0x7FFE593DC3F8 (1 samples, 0.41%)</title><rect x="21.1618%" y="389" width="0.4149%" height="15" fill="rgb(198,198,58)" fg:x="51" fg:w="1"/><text x="21.4118%" y="399.50"></text></g><g><title>`0x7FFE593D46BB (1 samples, 0.41%)</title><rect x="21.1618%" y="373" width="0.4149%" height="15" fill="rgb(175,175,50)" fg:x="51" fg:w="1"/><text x="21.4118%" y="383.50"></text></g><g><title>`0x7FFE593D4906 (1 samples, 0.41%)</title><rect x="21.1618%" y="357" width="0.4149%" height="15" fill="rgb(225,225,68)" fg:x="51" fg:w="1"/><text x="21.4118%" y="367.50"></text></g><g><title>`0x7FFE593D5AF5 (1 samples, 0.41%)</title><rect x="21.1618%" y="341" width="0.4149%" height="15" fill="rgb(207,207,61)" fg:x="51" fg:w="1"/><text x="21.4118%" y="351.50"></text></g><g><title>`0x7FFE593C0BC8 (2 samples, 0.83%)</title><rect x="21.1618%" y="421" width="0.8299%" height="15" fill="rgb(207,207,61)" fg:x="51" fg:w="2"/><text x="21.4118%" y="431.50"></text></g><g><title>`0x7FFE593C070F (2 samples, 0.83%)</title><rect x="21.1618%" y="405" width="0.8299%" height="15" fill="rgb(179,179,51)" fg:x="51" fg:w="2"/><text x="21.4118%" y="415.50"></text></g><g><title>`0x7FFE593DC254 (1 samples, 0.41%)</title><rect x="21.5768%" y="389" width="0.4149%" height="15" fill="rgb(219,219,66)" fg:x="52" fg:w="1"/><text x="21.8268%" y="399.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.41%)</title><rect x="21.5768%" y="373" width="0.4149%" height="15" fill="rgb(227,227,69)" fg:x="52" fg:w="1"/><text x="21.8268%" y="383.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.41%)</title><rect x="21.5768%" y="357" width="0.4149%" height="15" fill="rgb(218,218,65)" fg:x="52" fg:w="1"/><text x="21.8268%" y="367.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.41%)</title><rect x="21.5768%" y="341" width="0.4149%" height="15" fill="rgb(188,188,54)" fg:x="52" fg:w="1"/><text x="21.8268%" y="351.50"></text></g><g><title>`0x7FFE579C1195 (10 samples, 4.15%)</title><rect x="18.2573%" y="597" width="4.1494%" height="15" fill="rgb(198,198,58)" fg:x="44" fg:w="10"/><text x="18.5073%" y="607.50">`0x7F..</text></g><g><title>`0x7FFE55B52658 (10 samples, 4.15%)</title><rect x="18.2573%" y="581" width="4.1494%" height="15" fill="rgb(225,225,68)" fg:x="44" fg:w="10"/><text x="18.5073%" y="591.50">`0x7F..</text></g><g><title>`0x7FFE55B526C0 (9 samples, 3.73%)</title><rect x="18.6722%" y="565" width="3.7344%" height="15" fill="rgb(176,176,50)" fg:x="45" fg:w="9"/><text x="18.9222%" y="575.50">`0x7..</text></g><g><title>`0x7FFE55B617B0 (9 samples, 3.73%)</title><rect x="18.6722%" y="549" width="3.7344%" height="15" fill="rgb(223,223,67)" fg:x="45" fg:w="9"/><text x="18.9222%" y="559.50">`0x7..</text></g><g><title>`0x7FFE55B5E8C2 (9 samples, 3.73%)</title><rect x="18.6722%" y="533" width="3.7344%" height="15" fill="rgb(224,224,67)" fg:x="45" fg:w="9"/><text x="18.9222%" y="543.50">`0x7..</text></g><g><title>`0x7FFE593DB9F7 (9 samples, 3.73%)</title><rect x="18.6722%" y="517" width="3.7344%" height="15" fill="rgb(188,188,54)" fg:x="45" fg:w="9"/><text x="18.9222%" y="527.50">`0x7..</text></g><g><title>`0x7FFE593D2C35 (9 samples, 3.73%)</title><rect x="18.6722%" y="501" width="3.7344%" height="15" fill="rgb(219,219,66)" fg:x="45" fg:w="9"/><text x="18.9222%" y="511.50">`0x7..</text></g><g><title>`0x7FFE593C5C8E (9 samples, 3.73%)</title><rect x="18.6722%" y="485" width="3.7344%" height="15" fill="rgb(201,201,59)" fg:x="45" fg:w="9"/><text x="18.9222%" y="495.50">`0x7..</text></g><g><title>`0x7FFE593C8AD0 (9 samples, 3.73%)</title><rect x="18.6722%" y="469" width="3.7344%" height="15" fill="rgb(210,210,62)" fg:x="45" fg:w="9"/><text x="18.9222%" y="479.50">`0x7..</text></g><g><title>`0x7FFE593D88D4 (3 samples, 1.24%)</title><rect x="21.1618%" y="453" width="1.2448%" height="15" fill="rgb(224,224,67)" fg:x="51" fg:w="3"/><text x="21.4118%" y="463.50"></text></g><g><title>`0x7FFE593C0F90 (3 samples, 1.24%)</title><rect x="21.1618%" y="437" width="1.2448%" height="15" fill="rgb(211,211,63)" fg:x="51" fg:w="3"/><text x="21.4118%" y="447.50"></text></g><g><title>`0x7FFE593C0AFE (1 samples, 0.41%)</title><rect x="21.9917%" y="421" width="0.4149%" height="15" fill="rgb(211,211,63)" fg:x="53" fg:w="1"/><text x="22.2417%" y="431.50"></text></g><g><title>`0x7FFE593DDB51 (1 samples, 0.41%)</title><rect x="21.9917%" y="405" width="0.4149%" height="15" fill="rgb(208,208,62)" fg:x="53" fg:w="1"/><text x="22.2417%" y="415.50"></text></g><g><title>`0x7FFE593DA407 (1 samples, 0.41%)</title><rect x="21.9917%" y="389" width="0.4149%" height="15" fill="rgb(190,190,55)" fg:x="53" fg:w="1"/><text x="22.2417%" y="399.50"></text></g><g><title>`0x7FFE593DAC49 (1 samples, 0.41%)</title><rect x="21.9917%" y="373" width="0.4149%" height="15" fill="rgb(186,186,54)" fg:x="53" fg:w="1"/><text x="22.2417%" y="383.50"></text></g><g><title>`0x7FFE5944FB14 (1 samples, 0.41%)</title><rect x="21.9917%" y="357" width="0.4149%" height="15" fill="rgb(192,192,56)" fg:x="53" fg:w="1"/><text x="22.2417%" y="367.50"></text></g><g><title>`0x7FFE57DB79D2 (1 samples, 0.41%)</title><rect x="22.4066%" y="373" width="0.4149%" height="15" fill="rgb(185,185,53)" fg:x="54" fg:w="1"/><text x="22.6566%" y="383.50"></text></g><g><title>`0x7FFE5944F9D4 (1 samples, 0.41%)</title><rect x="22.4066%" y="357" width="0.4149%" height="15" fill="rgb(210,210,63)" fg:x="54" fg:w="1"/><text x="22.6566%" y="367.50"></text></g><g><title>`0x7FFE593C1814 (1 samples, 0.41%)</title><rect x="22.8216%" y="341" width="0.4149%" height="15" fill="rgb(181,181,52)" fg:x="55" fg:w="1"/><text x="23.0716%" y="351.50"></text></g><g><title>`0x7FFE593C282E (1 samples, 0.41%)</title><rect x="22.8216%" y="325" width="0.4149%" height="15" fill="rgb(206,206,61)" fg:x="55" fg:w="1"/><text x="23.0716%" y="335.50"></text></g><g><title>`0x7FFE594201BA (1 samples, 0.41%)</title><rect x="22.8216%" y="309" width="0.4149%" height="15" fill="rgb(191,191,55)" fg:x="55" fg:w="1"/><text x="23.0716%" y="319.50"></text></g><g><title>`0x7FFE593BB300 (1 samples, 0.41%)</title><rect x="22.8216%" y="293" width="0.4149%" height="15" fill="rgb(191,191,55)" fg:x="55" fg:w="1"/><text x="23.0716%" y="303.50"></text></g><g><title>`0x7FFE593BA2BB (1 samples, 0.41%)</title><rect x="22.8216%" y="277" width="0.4149%" height="15" fill="rgb(209,209,62)" fg:x="55" fg:w="1"/><text x="23.0716%" y="287.50"></text></g><g><title>`0x7FFE5944F5B4 (1 samples, 0.41%)</title><rect x="22.8216%" y="261" width="0.4149%" height="15" fill="rgb(181,181,52)" fg:x="55" fg:w="1"/><text x="23.0716%" y="271.50"></text></g><g><title>`0x7FFE593DC3F8 (3 samples, 1.24%)</title><rect x="22.4066%" y="469" width="1.2448%" height="15" fill="rgb(203,203,60)" fg:x="54" fg:w="3"/><text x="22.6566%" y="479.50"></text></g><g><title>`0x7FFE593D452F (3 samples, 1.24%)</title><rect x="22.4066%" y="453" width="1.2448%" height="15" fill="rgb(198,198,58)" fg:x="54" fg:w="3"/><text x="22.6566%" y="463.50"></text></g><g><title>`0x7FFE5942152C (3 samples, 1.24%)</title><rect x="22.4066%" y="437" width="1.2448%" height="15" fill="rgb(181,181,52)" fg:x="54" fg:w="3"/><text x="22.6566%" y="447.50"></text></g><g><title>`0x7FFE57DC1081 (3 samples, 1.24%)</title><rect x="22.4066%" y="421" width="1.2448%" height="15" fill="rgb(209,209,62)" fg:x="54" fg:w="3"/><text x="22.6566%" y="431.50"></text></g><g><title>`0x7FFE56B84DB0 (3 samples, 1.24%)</title><rect x="22.4066%" y="405" width="1.2448%" height="15" fill="rgb(195,195,57)" fg:x="54" fg:w="3"/><text x="22.6566%" y="415.50"></text></g><g><title>`0x7FFE57DB67A7 (3 samples, 1.24%)</title><rect x="22.4066%" y="389" width="1.2448%" height="15" fill="rgb(195,195,57)" fg:x="54" fg:w="3"/><text x="22.6566%" y="399.50"></text></g><g><title>`0x7FFE57DB6D0D (2 samples, 0.83%)</title><rect x="22.8216%" y="373" width="0.8299%" height="15" fill="rgb(224,224,67)" fg:x="55" fg:w="2"/><text x="23.0716%" y="383.50"></text></g><g><title>`0x7FFE57DB7BF5 (2 samples, 0.83%)</title><rect x="22.8216%" y="357" width="0.8299%" height="15" fill="rgb(223,223,67)" fg:x="55" fg:w="2"/><text x="23.0716%" y="367.50"></text></g><g><title>`0x7FFE593C17B3 (1 samples, 0.41%)</title><rect x="23.2365%" y="341" width="0.4149%" height="15" fill="rgb(189,189,55)" fg:x="56" fg:w="1"/><text x="23.4865%" y="351.50"></text></g><g><title>`0x7FFE593CED59 (1 samples, 0.41%)</title><rect x="23.2365%" y="325" width="0.4149%" height="15" fill="rgb(217,217,65)" fg:x="56" fg:w="1"/><text x="23.4865%" y="335.50"></text></g><g><title>`0x7FFE593BA10E (1 samples, 0.41%)</title><rect x="23.2365%" y="309" width="0.4149%" height="15" fill="rgb(178,178,51)" fg:x="56" fg:w="1"/><text x="23.4865%" y="319.50"></text></g><g><title>`0x7FFE59451304 (1 samples, 0.41%)</title><rect x="23.2365%" y="293" width="0.4149%" height="15" fill="rgb(181,181,52)" fg:x="56" fg:w="1"/><text x="23.4865%" y="303.50"></text></g><g><title>`0x7FFE593C10F0 (4 samples, 1.66%)</title><rect x="22.4066%" y="501" width="1.6598%" height="15" fill="rgb(183,183,53)" fg:x="54" fg:w="4"/><text x="22.6566%" y="511.50"></text></g><g><title>`0x7FFE593C070F (4 samples, 1.66%)</title><rect x="22.4066%" y="485" width="1.6598%" height="15" fill="rgb(191,191,55)" fg:x="54" fg:w="4"/><text x="22.6566%" y="495.50"></text></g><g><title>`0x7FFE593DC254 (1 samples, 0.41%)</title><rect x="23.6515%" y="469" width="0.4149%" height="15" fill="rgb(203,203,60)" fg:x="57" fg:w="1"/><text x="23.9015%" y="479.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.41%)</title><rect x="23.6515%" y="453" width="0.4149%" height="15" fill="rgb(198,198,58)" fg:x="57" fg:w="1"/><text x="23.9015%" y="463.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.41%)</title><rect x="23.6515%" y="437" width="0.4149%" height="15" fill="rgb(176,176,50)" fg:x="57" fg:w="1"/><text x="23.9015%" y="447.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.41%)</title><rect x="23.6515%" y="421" width="0.4149%" height="15" fill="rgb(198,198,58)" fg:x="57" fg:w="1"/><text x="23.9015%" y="431.50"></text></g><g><title>`0x7FFE579B56FE (31 samples, 12.86%)</title><rect x="11.6183%" y="709" width="12.8631%" height="15" fill="rgb(176,176,50)" fg:x="28" fg:w="31"/><text x="11.8683%" y="719.50">`0x7FFE579B56FE</text></g><g><title>`0x7FFE579B8EAA (18 samples, 7.47%)</title><rect x="17.0124%" y="693" width="7.4689%" height="15" fill="rgb(220,220,66)" fg:x="41" fg:w="18"/><text x="17.2624%" y="703.50">`0x7FFE579..</text></g><g><title>`0x7FFE579B90ED (15 samples, 6.22%)</title><rect x="18.2573%" y="677" width="6.2241%" height="15" fill="rgb(195,195,57)" fg:x="44" fg:w="15"/><text x="18.5073%" y="687.50">`0x7FFE5..</text></g><g><title>`0x7FFE579B9F8B (15 samples, 6.22%)</title><rect x="18.2573%" y="661" width="6.2241%" height="15" fill="rgb(199,199,58)" fg:x="44" fg:w="15"/><text x="18.5073%" y="671.50">`0x7FFE5..</text></g><g><title>`0x7FFE579BAC26 (15 samples, 6.22%)</title><rect x="18.2573%" y="645" width="6.2241%" height="15" fill="rgb(215,215,64)" fg:x="44" fg:w="15"/><text x="18.5073%" y="655.50">`0x7FFE5..</text></g><g><title>`0x7FFE579C0EFE (15 samples, 6.22%)</title><rect x="18.2573%" y="629" width="6.2241%" height="15" fill="rgb(202,202,59)" fg:x="44" fg:w="15"/><text x="18.5073%" y="639.50">`0x7FFE5..</text></g><g><title>`0x7FFE579C1069 (15 samples, 6.22%)</title><rect x="18.2573%" y="613" width="6.2241%" height="15" fill="rgb(219,219,66)" fg:x="44" fg:w="15"/><text x="18.5073%" y="623.50">`0x7FFE5..</text></g><g><title>`0x7FFE579C1142 (5 samples, 2.07%)</title><rect x="22.4066%" y="597" width="2.0747%" height="15" fill="rgb(197,197,58)" fg:x="54" fg:w="5"/><text x="22.6566%" y="607.50">`..</text></g><g><title>`0x7FFE56B26452 (5 samples, 2.07%)</title><rect x="22.4066%" y="581" width="2.0747%" height="15" fill="rgb(220,220,66)" fg:x="54" fg:w="5"/><text x="22.6566%" y="591.50">`..</text></g><g><title>`0x7FFE593DA25A (5 samples, 2.07%)</title><rect x="22.4066%" y="565" width="2.0747%" height="15" fill="rgb(211,211,63)" fg:x="54" fg:w="5"/><text x="22.6566%" y="575.50">`..</text></g><g><title>`0x7FFE593C8CAC (5 samples, 2.07%)</title><rect x="22.4066%" y="549" width="2.0747%" height="15" fill="rgb(180,180,51)" fg:x="54" fg:w="5"/><text x="22.6566%" y="559.50">`..</text></g><g><title>`0x7FFE593D88D4 (5 samples, 2.07%)</title><rect x="22.4066%" y="533" width="2.0747%" height="15" fill="rgb(225,225,68)" fg:x="54" fg:w="5"/><text x="22.6566%" y="543.50">`..</text></g><g><title>`0x7FFE593C0EBF (5 samples, 2.07%)</title><rect x="22.4066%" y="517" width="2.0747%" height="15" fill="rgb(208,208,62)" fg:x="54" fg:w="5"/><text x="22.6566%" y="527.50">`..</text></g><g><title>`0x7FFE593C1082 (1 samples, 0.41%)</title><rect x="24.0664%" y="501" width="0.4149%" height="15" fill="rgb(197,197,58)" fg:x="58" fg:w="1"/><text x="24.3164%" y="511.50"></text></g><g><title>`0x7FFE593DA407 (1 samples, 0.41%)</title><rect x="24.0664%" y="485" width="0.4149%" height="15" fill="rgb(217,217,65)" fg:x="58" fg:w="1"/><text x="24.3164%" y="495.50"></text></g><g><title>`0x7FFE593DAC49 (1 samples, 0.41%)</title><rect x="24.0664%" y="469" width="0.4149%" height="15" fill="rgb(214,214,64)" fg:x="58" fg:w="1"/><text x="24.3164%" y="479.50"></text></g><g><title>`0x7FFE5944FB14 (1 samples, 0.41%)</title><rect x="24.0664%" y="453" width="0.4149%" height="15" fill="rgb(183,183,53)" fg:x="58" fg:w="1"/><text x="24.3164%" y="463.50"></text></g><g><title>`0x7FFE579BCF29 (1 samples, 0.41%)</title><rect x="24.4813%" y="629" width="0.4149%" height="15" fill="rgb(214,214,64)" fg:x="59" fg:w="1"/><text x="24.7313%" y="639.50"></text></g><g><title>`0x7FFE579BA105 (1 samples, 0.41%)</title><rect x="24.4813%" y="613" width="0.4149%" height="15" fill="rgb(224,224,67)" fg:x="59" fg:w="1"/><text x="24.7313%" y="623.50"></text></g><g><title>`0x7FFE579BA2E9 (1 samples, 0.41%)</title><rect x="24.4813%" y="597" width="0.4149%" height="15" fill="rgb(203,203,60)" fg:x="59" fg:w="1"/><text x="24.7313%" y="607.50"></text></g><g><title>`0x7FFE55B56D24 (1 samples, 0.41%)</title><rect x="24.4813%" y="581" width="0.4149%" height="15" fill="rgb(200,200,59)" fg:x="59" fg:w="1"/><text x="24.7313%" y="591.50"></text></g><g><title>`0x7FFE55B56F55 (1 samples, 0.41%)</title><rect x="24.4813%" y="565" width="0.4149%" height="15" fill="rgb(208,208,62)" fg:x="59" fg:w="1"/><text x="24.7313%" y="575.50"></text></g><g><title>`0x7FFE55B57941 (1 samples, 0.41%)</title><rect x="24.4813%" y="549" width="0.4149%" height="15" fill="rgb(195,195,57)" fg:x="59" fg:w="1"/><text x="24.7313%" y="559.50"></text></g><g><title>`0x7FFE55B54FE6 (1 samples, 0.41%)</title><rect x="24.4813%" y="533" width="0.4149%" height="15" fill="rgb(220,220,66)" fg:x="59" fg:w="1"/><text x="24.7313%" y="543.50"></text></g><g><title>`0x7FFE56B2A279 (1 samples, 0.41%)</title><rect x="24.4813%" y="517" width="0.4149%" height="15" fill="rgb(201,201,59)" fg:x="59" fg:w="1"/><text x="24.7313%" y="527.50"></text></g><g><title>`0x7FFE56B2A3C8 (1 samples, 0.41%)</title><rect x="24.4813%" y="501" width="0.4149%" height="15" fill="rgb(195,195,57)" fg:x="59" fg:w="1"/><text x="24.7313%" y="511.50"></text></g><g><title>`0x7FFE56B2B1E4 (1 samples, 0.41%)</title><rect x="24.4813%" y="485" width="0.4149%" height="15" fill="rgb(221,221,66)" fg:x="59" fg:w="1"/><text x="24.7313%" y="495.50"></text></g><g><title>`0x7FFE59451884 (1 samples, 0.41%)</title><rect x="24.4813%" y="469" width="0.4149%" height="15" fill="rgb(181,181,52)" fg:x="59" fg:w="1"/><text x="24.7313%" y="479.50"></text></g><g><title>`0x7FFE579BA2E9 (1 samples, 0.41%)</title><rect x="24.8963%" y="597" width="0.4149%" height="15" fill="rgb(188,188,54)" fg:x="60" fg:w="1"/><text x="25.1463%" y="607.50"></text></g><g><title>`0x7FFE55B56D24 (1 samples, 0.41%)</title><rect x="24.8963%" y="581" width="0.4149%" height="15" fill="rgb(226,226,68)" fg:x="60" fg:w="1"/><text x="25.1463%" y="591.50"></text></g><g><title>`0x7FFE55B56F55 (1 samples, 0.41%)</title><rect x="24.8963%" y="565" width="0.4149%" height="15" fill="rgb(223,223,67)" fg:x="60" fg:w="1"/><text x="25.1463%" y="575.50"></text></g><g><title>`0x7FFE55B57941 (1 samples, 0.41%)</title><rect x="24.8963%" y="549" width="0.4149%" height="15" fill="rgb(202,202,60)" fg:x="60" fg:w="1"/><text x="25.1463%" y="559.50"></text></g><g><title>`0x7FFE55B5505B (1 samples, 0.41%)</title><rect x="24.8963%" y="533" width="0.4149%" height="15" fill="rgb(192,192,56)" fg:x="60" fg:w="1"/><text x="25.1463%" y="543.50"></text></g><g><title>`0x7FFE56B2C7D9 (1 samples, 0.41%)</title><rect x="24.8963%" y="517" width="0.4149%" height="15" fill="rgb(208,208,62)" fg:x="60" fg:w="1"/><text x="25.1463%" y="527.50"></text></g><g><title>`0x7FFE5944F554 (1 samples, 0.41%)</title><rect x="24.8963%" y="501" width="0.4149%" height="15" fill="rgb(179,179,51)" fg:x="60" fg:w="1"/><text x="25.1463%" y="511.50"></text></g><g><title>`0x7FFE593C0724 (1 samples, 0.41%)</title><rect x="25.3112%" y="437" width="0.4149%" height="15" fill="rgb(222,222,67)" fg:x="61" fg:w="1"/><text x="25.5612%" y="447.50"></text></g><g><title>`0x7FFE5944F554 (1 samples, 0.41%)</title><rect x="25.3112%" y="421" width="0.4149%" height="15" fill="rgb(201,201,59)" fg:x="61" fg:w="1"/><text x="25.5612%" y="431.50"></text></g><g><title>`0x7FFE593C070F (1 samples, 0.41%)</title><rect x="25.7261%" y="437" width="0.4149%" height="15" fill="rgb(204,204,60)" fg:x="62" fg:w="1"/><text x="25.9761%" y="447.50"></text></g><g><title>`0x7FFE593DC254 (1 samples, 0.41%)</title><rect x="25.7261%" y="421" width="0.4149%" height="15" fill="rgb(196,196,57)" fg:x="62" fg:w="1"/><text x="25.9761%" y="431.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.41%)</title><rect x="25.7261%" y="405" width="0.4149%" height="15" fill="rgb(211,211,63)" fg:x="62" fg:w="1"/><text x="25.9761%" y="415.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.41%)</title><rect x="25.7261%" y="389" width="0.4149%" height="15" fill="rgb(210,210,62)" fg:x="62" fg:w="1"/><text x="25.9761%" y="399.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.41%)</title><rect x="25.7261%" y="373" width="0.4149%" height="15" fill="rgb(213,213,63)" fg:x="62" fg:w="1"/><text x="25.9761%" y="383.50"></text></g><g><title>`0x7FFE593C10F0 (3 samples, 1.24%)</title><rect x="25.3112%" y="453" width="1.2448%" height="15" fill="rgb(187,187,54)" fg:x="61" fg:w="3"/><text x="25.5612%" y="463.50"></text></g><g><title>`0x7FFE593C06B6 (1 samples, 0.41%)</title><rect x="26.1411%" y="437" width="0.4149%" height="15" fill="rgb(207,207,61)" fg:x="63" fg:w="1"/><text x="26.3911%" y="447.50"></text></g><g><title>`0x7FFE5944FCB4 (1 samples, 0.41%)</title><rect x="26.1411%" y="421" width="0.4149%" height="15" fill="rgb(194,194,56)" fg:x="63" fg:w="1"/><text x="26.3911%" y="431.50"></text></g><g><title>osrs_gph.exe`std::sys_common::net::impl$6::try_from::closure$0 (38 samples, 15.77%)</title><rect x="11.2033%" y="773" width="15.7676%" height="15" fill="rgb(77,190,190)" fg:x="27" fg:w="38"/><text x="11.4533%" y="783.50">osrs_gph.exe`std::sys_co..</text></g><g><title>osrs_gph.exe`std::sys::windows::net::cvt_gai (38 samples, 15.77%)</title><rect x="11.2033%" y="757" width="15.7676%" height="15" fill="rgb(96,207,207)" fg:x="27" fg:w="38"/><text x="11.4533%" y="767.50">osrs_gph.exe`std::sys::w..</text></g><g><title>`0x7FFE579B3D93 (38 samples, 15.77%)</title><rect x="11.2033%" y="741" width="15.7676%" height="15" fill="rgb(177,177,50)" fg:x="27" fg:w="38"/><text x="11.4533%" y="751.50">`0x7FFE579B3D93</text></g><g><title>`0x7FFE579B4304 (38 samples, 15.77%)</title><rect x="11.2033%" y="725" width="15.7676%" height="15" fill="rgb(200,200,59)" fg:x="27" fg:w="38"/><text x="11.4533%" y="735.50">`0x7FFE579B4304</text></g><g><title>`0x7FFE579B5672 (6 samples, 2.49%)</title><rect x="24.4813%" y="709" width="2.4896%" height="15" fill="rgb(227,227,69)" fg:x="59" fg:w="6"/><text x="24.7313%" y="719.50">`0..</text></g><g><title>`0x7FFE579B5938 (6 samples, 2.49%)</title><rect x="24.4813%" y="693" width="2.4896%" height="15" fill="rgb(187,187,54)" fg:x="59" fg:w="6"/><text x="24.7313%" y="703.50">`0..</text></g><g><title>`0x7FFE579B59C5 (6 samples, 2.49%)</title><rect x="24.4813%" y="677" width="2.4896%" height="15" fill="rgb(212,212,63)" fg:x="59" fg:w="6"/><text x="24.7313%" y="687.50">`0..</text></g><g><title>`0x7FFE56B61151 (6 samples, 2.49%)</title><rect x="24.4813%" y="661" width="2.4896%" height="15" fill="rgb(180,180,51)" fg:x="59" fg:w="6"/><text x="24.7313%" y="671.50">`0..</text></g><g><title>`0x7FFE593E23FA (6 samples, 2.49%)</title><rect x="24.4813%" y="645" width="2.4896%" height="15" fill="rgb(179,179,51)" fg:x="59" fg:w="6"/><text x="24.7313%" y="655.50">`0..</text></g><g><title>`0x7FFE579BCF02 (5 samples, 2.07%)</title><rect x="24.8963%" y="629" width="2.0747%" height="15" fill="rgb(185,185,53)" fg:x="60" fg:w="5"/><text x="25.1463%" y="639.50">`..</text></g><g><title>`0x7FFE579BA105 (5 samples, 2.07%)</title><rect x="24.8963%" y="613" width="2.0747%" height="15" fill="rgb(199,199,59)" fg:x="60" fg:w="5"/><text x="25.1463%" y="623.50">`..</text></g><g><title>`0x7FFE579BA25E (4 samples, 1.66%)</title><rect x="25.3112%" y="597" width="1.6598%" height="15" fill="rgb(194,194,57)" fg:x="61" fg:w="4"/><text x="25.5612%" y="607.50"></text></g><g><title>`0x7FFE579BAB10 (4 samples, 1.66%)</title><rect x="25.3112%" y="581" width="1.6598%" height="15" fill="rgb(183,183,52)" fg:x="61" fg:w="4"/><text x="25.5612%" y="591.50"></text></g><g><title>`0x7FFE579BC02E (4 samples, 1.66%)</title><rect x="25.3112%" y="565" width="1.6598%" height="15" fill="rgb(225,225,68)" fg:x="61" fg:w="4"/><text x="25.5612%" y="575.50"></text></g><g><title>`0x7FFE579BCA78 (4 samples, 1.66%)</title><rect x="25.3112%" y="549" width="1.6598%" height="15" fill="rgb(211,211,63)" fg:x="61" fg:w="4"/><text x="25.5612%" y="559.50"></text></g><g><title>`0x7FFE56B26452 (4 samples, 1.66%)</title><rect x="25.3112%" y="533" width="1.6598%" height="15" fill="rgb(190,190,55)" fg:x="61" fg:w="4"/><text x="25.5612%" y="543.50"></text></g><g><title>`0x7FFE593DA25A (4 samples, 1.66%)</title><rect x="25.3112%" y="517" width="1.6598%" height="15" fill="rgb(213,213,64)" fg:x="61" fg:w="4"/><text x="25.5612%" y="527.50"></text></g><g><title>`0x7FFE593C8CAC (4 samples, 1.66%)</title><rect x="25.3112%" y="501" width="1.6598%" height="15" fill="rgb(208,208,62)" fg:x="61" fg:w="4"/><text x="25.5612%" y="511.50"></text></g><g><title>`0x7FFE593D88D4 (4 samples, 1.66%)</title><rect x="25.3112%" y="485" width="1.6598%" height="15" fill="rgb(229,229,69)" fg:x="61" fg:w="4"/><text x="25.5612%" y="495.50"></text></g><g><title>`0x7FFE593C0EBF (4 samples, 1.66%)</title><rect x="25.3112%" y="469" width="1.6598%" height="15" fill="rgb(225,225,68)" fg:x="61" fg:w="4"/><text x="25.5612%" y="479.50"></text></g><g><title>`0x7FFE593C1082 (1 samples, 0.41%)</title><rect x="26.5560%" y="453" width="0.4149%" height="15" fill="rgb(214,214,64)" fg:x="64" fg:w="1"/><text x="26.8060%" y="463.50"></text></g><g><title>`0x7FFE593DA407 (1 samples, 0.41%)</title><rect x="26.5560%" y="437" width="0.4149%" height="15" fill="rgb(178,178,51)" fg:x="64" fg:w="1"/><text x="26.8060%" y="447.50"></text></g><g><title>`0x7FFE593DAC49 (1 samples, 0.41%)</title><rect x="26.5560%" y="421" width="0.4149%" height="15" fill="rgb(183,183,53)" fg:x="64" fg:w="1"/><text x="26.8060%" y="431.50"></text></g><g><title>`0x7FFE5944FB14 (1 samples, 0.41%)</title><rect x="26.5560%" y="405" width="0.4149%" height="15" fill="rgb(218,218,65)" fg:x="64" fg:w="1"/><text x="26.8060%" y="415.50"></text></g><g><title>`0x7FFE579BDF42 (1 samples, 0.41%)</title><rect x="26.9710%" y="549" width="0.4149%" height="15" fill="rgb(184,184,53)" fg:x="65" fg:w="1"/><text x="27.2210%" y="559.50"></text></g><g><title>`0x7FFE56B2C7D9 (1 samples, 0.41%)</title><rect x="26.9710%" y="533" width="0.4149%" height="15" fill="rgb(201,201,59)" fg:x="65" fg:w="1"/><text x="27.2210%" y="543.50"></text></g><g><title>`0x7FFE5944F554 (1 samples, 0.41%)</title><rect x="26.9710%" y="517" width="0.4149%" height="15" fill="rgb(221,221,66)" fg:x="65" fg:w="1"/><text x="27.2210%" y="527.50"></text></g><g><title>`0x7FFE579BE7E8 (1 samples, 0.41%)</title><rect x="27.3859%" y="533" width="0.4149%" height="15" fill="rgb(200,200,59)" fg:x="66" fg:w="1"/><text x="27.6359%" y="543.50"></text></g><g><title>`0x7FFE579BE9B3 (1 samples, 0.41%)</title><rect x="27.3859%" y="517" width="0.4149%" height="15" fill="rgb(228,228,69)" fg:x="66" fg:w="1"/><text x="27.6359%" y="527.50"></text></g><g><title>`0x7FFE56B28529 (1 samples, 0.41%)</title><rect x="27.3859%" y="501" width="0.4149%" height="15" fill="rgb(229,229,69)" fg:x="66" fg:w="1"/><text x="27.6359%" y="511.50"></text></g><g><title>`0x7FFE56B2ACD9 (1 samples, 0.41%)</title><rect x="27.3859%" y="485" width="0.4149%" height="15" fill="rgb(222,222,67)" fg:x="66" fg:w="1"/><text x="27.6359%" y="495.50"></text></g><g><title>`0x7FFE5944F654 (1 samples, 0.41%)</title><rect x="27.3859%" y="469" width="0.4149%" height="15" fill="rgb(225,225,68)" fg:x="66" fg:w="1"/><text x="27.6359%" y="479.50"></text></g><g><title>`0x7FFE579BDD8C (3 samples, 1.24%)</title><rect x="26.9710%" y="565" width="1.2448%" height="15" fill="rgb(221,221,67)" fg:x="65" fg:w="3"/><text x="27.2210%" y="575.50"></text></g><g><title>`0x7FFE579BDF34 (2 samples, 0.83%)</title><rect x="27.3859%" y="549" width="0.8299%" height="15" fill="rgb(197,197,58)" fg:x="66" fg:w="2"/><text x="27.6359%" y="559.50"></text></g><g><title>`0x7FFE579BE720 (1 samples, 0.41%)</title><rect x="27.8008%" y="533" width="0.4149%" height="15" fill="rgb(184,184,53)" fg:x="67" fg:w="1"/><text x="28.0508%" y="543.50"></text></g><g><title>`0x7FFE579BE9B3 (1 samples, 0.41%)</title><rect x="27.8008%" y="517" width="0.4149%" height="15" fill="rgb(201,201,59)" fg:x="67" fg:w="1"/><text x="28.0508%" y="527.50"></text></g><g><title>`0x7FFE56B285DF (1 samples, 0.41%)</title><rect x="27.8008%" y="501" width="0.4149%" height="15" fill="rgb(210,210,62)" fg:x="67" fg:w="1"/><text x="28.0508%" y="511.50"></text></g><g><title>`0x7FFE56B2ACD9 (1 samples, 0.41%)</title><rect x="27.8008%" y="485" width="0.4149%" height="15" fill="rgb(182,182,52)" fg:x="67" fg:w="1"/><text x="28.0508%" y="495.50"></text></g><g><title>`0x7FFE5944F654 (1 samples, 0.41%)</title><rect x="27.8008%" y="469" width="0.4149%" height="15" fill="rgb(192,192,56)" fg:x="67" fg:w="1"/><text x="28.0508%" y="479.50"></text></g><g><title>`0x7FFE579BD74C (4 samples, 1.66%)</title><rect x="26.9710%" y="597" width="1.6598%" height="15" fill="rgb(226,226,68)" fg:x="65" fg:w="4"/><text x="27.2210%" y="607.50"></text></g><g><title>`0x7FFE579BEE24 (4 samples, 1.66%)</title><rect x="26.9710%" y="581" width="1.6598%" height="15" fill="rgb(201,201,59)" fg:x="65" fg:w="4"/><text x="27.2210%" y="591.50"></text></g><g><title>`0x7FFE579BDC73 (1 samples, 0.41%)</title><rect x="28.2158%" y="565" width="0.4149%" height="15" fill="rgb(180,180,51)" fg:x="68" fg:w="1"/><text x="28.4658%" y="575.50"></text></g><g><title>`0x7FFE579BDB58 (1 samples, 0.41%)</title><rect x="28.2158%" y="549" width="0.4149%" height="15" fill="rgb(208,208,62)" fg:x="68" fg:w="1"/><text x="28.4658%" y="559.50"></text></g><g><title>`0x7FFE56B2CC1D (1 samples, 0.41%)</title><rect x="28.2158%" y="533" width="0.4149%" height="15" fill="rgb(215,215,64)" fg:x="68" fg:w="1"/><text x="28.4658%" y="543.50"></text></g><g><title>`0x7FFE59451784 (1 samples, 0.41%)</title><rect x="28.2158%" y="517" width="0.4149%" height="15" fill="rgb(203,203,60)" fg:x="68" fg:w="1"/><text x="28.4658%" y="527.50"></text></g><g><title>`0x7FFE579BE1C7 (1 samples, 0.41%)</title><rect x="28.6307%" y="565" width="0.4149%" height="15" fill="rgb(195,195,57)" fg:x="69" fg:w="1"/><text x="28.8807%" y="575.50"></text></g><g><title>`0x7FFE579BE450 (1 samples, 0.41%)</title><rect x="28.6307%" y="549" width="0.4149%" height="15" fill="rgb(184,184,53)" fg:x="69" fg:w="1"/><text x="28.8807%" y="559.50"></text></g><g><title>`0x7FFE56B28529 (1 samples, 0.41%)</title><rect x="28.6307%" y="533" width="0.4149%" height="15" fill="rgb(203,203,60)" fg:x="69" fg:w="1"/><text x="28.8807%" y="543.50"></text></g><g><title>`0x7FFE56B2AE26 (1 samples, 0.41%)</title><rect x="28.6307%" y="517" width="0.4149%" height="15" fill="rgb(214,214,64)" fg:x="69" fg:w="1"/><text x="28.8807%" y="527.50"></text></g><g><title>`0x7FFE593ECD59 (1 samples, 0.41%)</title><rect x="28.6307%" y="501" width="0.4149%" height="15" fill="rgb(202,202,59)" fg:x="69" fg:w="1"/><text x="28.8807%" y="511.50"></text></g><g><title>`0x7FFE593EF738 (1 samples, 0.41%)</title><rect x="28.6307%" y="485" width="0.4149%" height="15" fill="rgb(176,176,50)" fg:x="69" fg:w="1"/><text x="28.8807%" y="495.50"></text></g><g><title>`0x7FFE593F57DB (1 samples, 0.41%)</title><rect x="28.6307%" y="469" width="0.4149%" height="15" fill="rgb(182,182,52)" fg:x="69" fg:w="1"/><text x="28.8807%" y="479.50"></text></g><g><title>`0x7FFE593F5C25 (1 samples, 0.41%)</title><rect x="28.6307%" y="453" width="0.4149%" height="15" fill="rgb(196,196,57)" fg:x="69" fg:w="1"/><text x="28.8807%" y="463.50"></text></g><g><title>`0x7FFE593F5D75 (1 samples, 0.41%)</title><rect x="28.6307%" y="437" width="0.4149%" height="15" fill="rgb(224,224,68)" fg:x="69" fg:w="1"/><text x="28.8807%" y="447.50"></text></g><g><title>`0x7FFE579BD6DA (2 samples, 0.83%)</title><rect x="28.6307%" y="597" width="0.8299%" height="15" fill="rgb(212,212,63)" fg:x="69" fg:w="2"/><text x="28.8807%" y="607.50"></text></g><g><title>`0x7FFE579BEDE4 (2 samples, 0.83%)</title><rect x="28.6307%" y="581" width="0.8299%" height="15" fill="rgb(221,221,66)" fg:x="69" fg:w="2"/><text x="28.8807%" y="591.50"></text></g><g><title>`0x7FFE579BE0F2 (1 samples, 0.41%)</title><rect x="29.0456%" y="565" width="0.4149%" height="15" fill="rgb(201,201,59)" fg:x="70" fg:w="1"/><text x="29.2956%" y="575.50"></text></g><g><title>`0x7FFE56B26E39 (1 samples, 0.41%)</title><rect x="29.0456%" y="549" width="0.4149%" height="15" fill="rgb(191,191,56)" fg:x="70" fg:w="1"/><text x="29.2956%" y="559.50"></text></g><g><title>`0x7FFE56B26F8F (1 samples, 0.41%)</title><rect x="29.0456%" y="533" width="0.4149%" height="15" fill="rgb(181,181,52)" fg:x="70" fg:w="1"/><text x="29.2956%" y="543.50"></text></g><g><title>`0x7FFE56B2B1E4 (1 samples, 0.41%)</title><rect x="29.0456%" y="517" width="0.4149%" height="15" fill="rgb(200,200,59)" fg:x="70" fg:w="1"/><text x="29.2956%" y="527.50"></text></g><g><title>`0x7FFE59451884 (1 samples, 0.41%)</title><rect x="29.0456%" y="501" width="0.4149%" height="15" fill="rgb(228,228,69)" fg:x="70" fg:w="1"/><text x="29.2956%" y="511.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::blocking::pool::impl$6::spawn_thread::closure$0 (45 samples, 18.67%)</title><rect x="11.2033%" y="1237" width="18.6722%" height="15" fill="rgb(96,207,207)" fg:x="27" fg:w="45"/><text x="11.4533%" y="1247.50">osrs_gph.exe`tokio::runtime::..</text></g><g><title>osrs_gph.exe`tokio::runtime::blocking::pool::Inner::run (45 samples, 18.67%)</title><rect x="11.2033%" y="1221" width="18.6722%" height="15" fill="rgb(56,170,170)" fg:x="27" fg:w="45"/><text x="11.4533%" y="1231.50">osrs_gph.exe`tokio::runtime::..</text></g><g><title>osrs_gph.exe`tokio::runtime::blocking::pool::Task::run (45 samples, 18.67%)</title><rect x="11.2033%" y="1205" width="18.6722%" height="15" fill="rgb(62,176,176)" fg:x="27" fg:w="45"/><text x="11.4533%" y="1215.50">osrs_gph.exe`tokio::runtime::..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::UnownedTask&lt;tokio::runtime::blocking::schedule::BlockingSchedule&gt;::run(tokio::runtime::task::UnownedTask (45 samples, 18.67%)</title><rect x="11.2033%" y="1189" width="18.6722%" height="15" fill="rgb(101,211,211)" fg:x="27" fg:w="45"/><text x="11.4533%" y="1199.50">osrs_gph.exe`tokio::runtime::..</text></g><g><title>osrs_gph.exe`core::mem::drop(tokio::runtime::task::Task (45 samples, 18.67%)</title><rect x="11.2033%" y="1173" width="18.6722%" height="15" fill="rgb(89,201,201)" fg:x="27" fg:w="45"/><text x="11.4533%" y="1183.50">osrs_gph.exe`core::mem::drop(..</text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tokio::runtime::task::Task (45 samples, 18.67%)</title><rect x="11.2033%" y="1157" width="18.6722%" height="15" fill="rgb(89,200,200)" fg:x="27" fg:w="45"/><text x="11.4533%" y="1167.50">osrs_gph.exe`core::ptr::drop_..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::impl$13::drop(tokio::runtime::task::Task (45 samples, 18.67%)</title><rect x="11.2033%" y="1141" width="18.6722%" height="15" fill="rgb(102,213,213)" fg:x="27" fg:w="45"/><text x="11.4533%" y="1151.50">osrs_gph.exe`tokio::runtime::..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::state::State::ref_dec (45 samples, 18.67%)</title><rect x="11.2033%" y="1125" width="18.6722%" height="15" fill="rgb(88,200,200)" fg:x="27" fg:w="45"/><text x="11.4533%" y="1135.50">osrs_gph.exe`tokio::runtime::..</text></g><g><title>osrs_gph.exe`core::sync::atomic::AtomicUsize::fetch_sub (45 samples, 18.67%)</title><rect x="11.2033%" y="1109" width="18.6722%" height="15" fill="rgb(83,196,196)" fg:x="27" fg:w="45"/><text x="11.4533%" y="1119.50">osrs_gph.exe`core::sync::atom..</text></g><g><title>osrs_gph.exe`core::sync::atomic::atomic_sub (45 samples, 18.67%)</title><rect x="11.2033%" y="1093" width="18.6722%" height="15" fill="rgb(72,185,185)" fg:x="27" fg:w="45"/><text x="11.4533%" y="1103.50">osrs_gph.exe`core::sync::atom..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask&lt;hyper::client::connect::dns::impl$7::call::closure_env$0&gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;::poll&lt;tokio::runtime::blocking::task::BlockingTask&lt;hyper::client::connect::dns::impl$7::call::closure_env$0&gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask (45 samples, 18.67%)</title><rect x="11.2033%" y="1077" width="18.6722%" height="15" fill="rgb(109,219,219)" fg:x="27" fg:w="45"/><text x="11.4533%" y="1087.50">osrs_gph.exe`tokio::runtime::..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask&lt;hyper::client::connect::dns::impl$7::call::closure_env$0&gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;::poll_inner (45 samples, 18.67%)</title><rect x="11.2033%" y="1061" width="18.6722%" height="15" fill="rgb(95,206,206)" fg:x="27" fg:w="45"/><text x="11.4533%" y="1071.50">osrs_gph.exe`tokio::runtime::..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::poll_future(tokio::runtime::task::core::Core&lt;tokio::runtime::blocking::task::BlockingTask (45 samples, 18.67%)</title><rect x="11.2033%" y="1045" width="18.6722%" height="15" fill="rgb(93,205,205)" fg:x="27" fg:w="45"/><text x="11.4533%" y="1055.50">osrs_gph.exe`tokio::runtime::..</text></g><g><title>osrs_gph.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask (45 samples, 18.67%)</title><rect x="11.2033%" y="1029" width="18.6722%" height="15" fill="rgb(94,205,205)" fg:x="27" fg:w="45"/><text x="11.4533%" y="1039.50">osrs_gph.exe`std::panic::catc..</text></g><g><title>osrs_gph.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask (45 samples, 18.67%)</title><rect x="11.2033%" y="1013" width="18.6722%" height="15" fill="rgb(87,198,198)" fg:x="27" fg:w="45"/><text x="11.4533%" y="1023.50">osrs_gph.exe`std::panicking::..</text></g><g><title>osrs_gph.exe`std::panicking::try::do_call (45 samples, 18.67%)</title><rect x="11.2033%" y="997" width="18.6722%" height="15" fill="rgb(98,209,209)" fg:x="27" fg:w="45"/><text x="11.4533%" y="1007.50">osrs_gph.exe`std::panicking::..</text></g><g><title>osrs_gph.exe`core::panic::unwind_safe::impl$23::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask (45 samples, 18.67%)</title><rect x="11.2033%" y="981" width="18.6722%" height="15" fill="rgb(67,180,180)" fg:x="27" fg:w="45"/><text x="11.4533%" y="991.50">osrs_gph.exe`core::panic::unw..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::poll_future::closure$0(tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask (45 samples, 18.67%)</title><rect x="11.2033%" y="965" width="18.6722%" height="15" fill="rgb(106,216,216)" fg:x="27" fg:w="45"/><text x="11.4533%" y="975.50">osrs_gph.exe`tokio::runtime::..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::core::Core&lt;tokio::runtime::blocking::task::BlockingTask&lt;hyper::client::connect::dns::impl$7::call::closure_env$0&gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;::poll (45 samples, 18.67%)</title><rect x="11.2033%" y="949" width="18.6722%" height="15" fill="rgb(99,210,210)" fg:x="27" fg:w="45"/><text x="11.4533%" y="959.50">osrs_gph.exe`tokio::runtime::..</text></g><g><title>osrs_gph.exe`tokio::loom::std::unsafe_cell::UnsafeCell&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;hyper::client::connect::dns::impl$7::call::closure_env$0&gt; &gt; &gt; &gt;::with_mut(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask (45 samples, 18.67%)</title><rect x="11.2033%" y="933" width="18.6722%" height="15" fill="rgb(70,184,184)" fg:x="27" fg:w="45"/><text x="11.4533%" y="943.50">osrs_gph.exe`tokio::loom::std..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::core::impl$6::poll::closure$0(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;hyper::client::connect::dns::impl$7::call::closure_env$0&gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;, enum2$&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask (45 samples, 18.67%)</title><rect x="11.2033%" y="917" width="18.6722%" height="15" fill="rgb(52,167,167)" fg:x="27" fg:w="45"/><text x="11.4533%" y="927.50">osrs_gph.exe`tokio::runtime::..</text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (45 samples, 18.67%)</title><rect x="11.2033%" y="901" width="18.6722%" height="15" fill="rgb(100,210,210)" fg:x="27" fg:w="45"/><text x="11.4533%" y="911.50">osrs_gph.exe`core::ptr::drop_..</text></g><g><title>osrs_gph.exe`tokio::runtime::blocking::task::impl$2::poll&lt;hyper::client::connect::dns::impl$7::call::closure_env$0,enum2$&lt;core::result::Result&lt;hyper::client::connect::dns::SocketAddrs,std::io::error::Error&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::blocking::task::BlockingTask (45 samples, 18.67%)</title><rect x="11.2033%" y="885" width="18.6722%" height="15" fill="rgb(59,173,173)" fg:x="27" fg:w="45"/><text x="11.4533%" y="895.50">osrs_gph.exe`tokio::runtime::..</text></g><g><title>osrs_gph.exe`hyper::client::connect::dns::impl$7::call::closure$0 (45 samples, 18.67%)</title><rect x="11.2033%" y="869" width="18.6722%" height="15" fill="rgb(52,167,167)" fg:x="27" fg:w="45"/><text x="11.4533%" y="879.50">osrs_gph.exe`hyper::client::c..</text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;alloc::vec::into_iter::IntoIter&lt;enum2$&lt;core::net::socket_addr::SocketAddr&gt;,alloc::alloc::Global&gt;,std::io::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;alloc::vec::into_iter::IntoIter&lt;enum2$ (45 samples, 18.67%)</title><rect x="11.2033%" y="853" width="18.6722%" height="15" fill="rgb(77,190,190)" fg:x="27" fg:w="45"/><text x="11.4533%" y="863.50">osrs_gph.exe`enum2$&lt;core::res..</text></g><g><title>osrs_gph.exe`std::net::socket_addr::impl$10::to_socket_addrs (45 samples, 18.67%)</title><rect x="11.2033%" y="837" width="18.6722%" height="15" fill="rgb(87,199,199)" fg:x="27" fg:w="45"/><text x="11.4533%" y="847.50">osrs_gph.exe`std::net::socket..</text></g><g><title>osrs_gph.exe`core::convert::impl$6::try_into (45 samples, 18.67%)</title><rect x="11.2033%" y="821" width="18.6722%" height="15" fill="rgb(53,168,168)" fg:x="27" fg:w="45"/><text x="11.4533%" y="831.50">osrs_gph.exe`core::convert::i..</text></g><g><title>osrs_gph.exe`std::sys_common::net::impl$6::try_from (45 samples, 18.67%)</title><rect x="11.2033%" y="805" width="18.6722%" height="15" fill="rgb(78,190,190)" fg:x="27" fg:w="45"/><text x="11.4533%" y="815.50">osrs_gph.exe`std::sys_common:..</text></g><g><title>osrs_gph.exe`std::sys::common::small_c_string::run_with_cstr (45 samples, 18.67%)</title><rect x="11.2033%" y="789" width="18.6722%" height="15" fill="rgb(85,197,197)" fg:x="27" fg:w="45"/><text x="11.4533%" y="799.50">osrs_gph.exe`std::sys::common..</text></g><g><title>osrs_gph.exe`std::sync::once_lock::OnceLock::initialize&lt;i32 (*)(),std::sync::once_lock::impl$0::get_or_init::closure_env$0&lt;i32 (*)(),std::sys::windows::net::init::closure_env$0&gt;,never$&gt; (7 samples, 2.90%)</title><rect x="26.9710%" y="773" width="2.9046%" height="15" fill="rgb(103,214,214)" fg:x="65" fg:w="7"/><text x="27.2210%" y="783.50">os..</text></g><g><title>osrs_gph.exe`std::sys_common::once::queue::Once::call (7 samples, 2.90%)</title><rect x="26.9710%" y="757" width="2.9046%" height="15" fill="rgb(70,184,184)" fg:x="65" fg:w="7"/><text x="27.2210%" y="767.50">os..</text></g><g><title>osrs_gph.exe`core::cell::Cell::get (7 samples, 2.90%)</title><rect x="26.9710%" y="741" width="2.9046%" height="15" fill="rgb(91,203,203)" fg:x="65" fg:w="7"/><text x="27.2210%" y="751.50">os..</text></g><g><title>osrs_gph.exe`core::ops::function::FnOnce::call_once&lt;std::sync::once::impl$2::call_once_force::closure_env$0&lt;std::sync::once_lock::impl$0::initialize::closure_env$0&lt;i32 (*)(),std::sync::once_lock::impl$0::get_or_init::closure_env$0&lt;i32 (*)(),std::sys::windows::net::init::closure_env$0&gt;,never$&gt; &gt;,tuple$&lt;ref$&lt;std::sync::once::OnceState&gt; &gt; &gt; (7 samples, 2.90%)</title><rect x="26.9710%" y="725" width="2.9046%" height="15" fill="rgb(53,168,168)" fg:x="65" fg:w="7"/><text x="27.2210%" y="735.50">os..</text></g><g><title>osrs_gph.exe`core::ops::function::FnOnce::call_once (7 samples, 2.90%)</title><rect x="26.9710%" y="709" width="2.9046%" height="15" fill="rgb(82,194,194)" fg:x="65" fg:w="7"/><text x="27.2210%" y="719.50">os..</text></g><g><title>osrs_gph.exe`std::sync::once::impl$2::call_once_force::closure$0 (7 samples, 2.90%)</title><rect x="26.9710%" y="693" width="2.9046%" height="15" fill="rgb(88,200,200)" fg:x="65" fg:w="7"/><text x="27.2210%" y="703.50">os..</text></g><g><title>osrs_gph.exe`std::sync::once_lock::impl$0::initialize::closure$0 (7 samples, 2.90%)</title><rect x="26.9710%" y="677" width="2.9046%" height="15" fill="rgb(96,207,207)" fg:x="65" fg:w="7"/><text x="27.2210%" y="687.50">os..</text></g><g><title>osrs_gph.exe`std::sync::once_lock::impl$0::get_or_init::closure$0 (7 samples, 2.90%)</title><rect x="26.9710%" y="661" width="2.9046%" height="15" fill="rgb(96,207,207)" fg:x="65" fg:w="7"/><text x="27.2210%" y="671.50">os..</text></g><g><title>osrs_gph.exe`std::sys::windows::net::init::closure$0 (7 samples, 2.90%)</title><rect x="26.9710%" y="645" width="2.9046%" height="15" fill="rgb(68,181,181)" fg:x="65" fg:w="7"/><text x="27.2210%" y="655.50">os..</text></g><g><title>`0x7FFE579BF167 (7 samples, 2.90%)</title><rect x="26.9710%" y="629" width="2.9046%" height="15" fill="rgb(207,207,61)" fg:x="65" fg:w="7"/><text x="27.2210%" y="639.50">`0..</text></g><g><title>`0x7FFE579BF319 (7 samples, 2.90%)</title><rect x="26.9710%" y="613" width="2.9046%" height="15" fill="rgb(191,191,55)" fg:x="65" fg:w="7"/><text x="27.2210%" y="623.50">`0..</text></g><g><title>`0x7FFE579BD4A8 (1 samples, 0.41%)</title><rect x="29.4606%" y="597" width="0.4149%" height="15" fill="rgb(220,220,66)" fg:x="71" fg:w="1"/><text x="29.7106%" y="607.50"></text></g><g><title>`0x7FFE579BFCA0 (1 samples, 0.41%)</title><rect x="29.4606%" y="581" width="0.4149%" height="15" fill="rgb(210,210,62)" fg:x="71" fg:w="1"/><text x="29.7106%" y="591.50"></text></g><g><title>`0x7FFE56B26E39 (1 samples, 0.41%)</title><rect x="29.4606%" y="565" width="0.4149%" height="15" fill="rgb(182,182,52)" fg:x="71" fg:w="1"/><text x="29.7106%" y="575.50"></text></g><g><title>`0x7FFE56B26F8F (1 samples, 0.41%)</title><rect x="29.4606%" y="549" width="0.4149%" height="15" fill="rgb(220,220,66)" fg:x="71" fg:w="1"/><text x="29.7106%" y="559.50"></text></g><g><title>`0x7FFE56B2B447 (1 samples, 0.41%)</title><rect x="29.4606%" y="533" width="0.4149%" height="15" fill="rgb(183,183,53)" fg:x="71" fg:w="1"/><text x="29.7106%" y="543.50"></text></g><g><title>`0x7FFE56B7C3CB (1 samples, 0.41%)</title><rect x="29.4606%" y="517" width="0.4149%" height="15" fill="rgb(196,196,57)" fg:x="71" fg:w="1"/><text x="29.7106%" y="527.50"></text></g><g><title>`0x7FFE5944F5B4 (1 samples, 0.41%)</title><rect x="29.4606%" y="501" width="0.4149%" height="15" fill="rgb(190,190,55)" fg:x="71" fg:w="1"/><text x="29.7106%" y="511.50"></text></g><g><title>osrs_gph.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$ (46 samples, 19.09%)</title><rect x="11.2033%" y="1333" width="19.0871%" height="15" fill="rgb(53,168,168)" fg:x="27" fg:w="46"/><text x="11.4533%" y="1343.50">osrs_gph.exe`core::ops::functi..</text></g><g><title>osrs_gph.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$ (46 samples, 19.09%)</title><rect x="11.2033%" y="1317" width="19.0871%" height="15" fill="rgb(67,181,181)" fg:x="27" fg:w="46"/><text x="11.4533%" y="1327.50">osrs_gph.exe`std::thread::impl..</text></g><g><title>osrs_gph.exe`alloc::sync::impl$29::deref(alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$ (46 samples, 19.09%)</title><rect x="11.2033%" y="1301" width="19.0871%" height="15" fill="rgb(88,200,200)" fg:x="27" fg:w="46"/><text x="11.4533%" y="1311.50">osrs_gph.exe`alloc::sync::impl..</text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::inner (46 samples, 19.09%)</title><rect x="11.2033%" y="1285" width="19.0871%" height="15" fill="rgb(58,172,172)" fg:x="27" fg:w="46"/><text x="11.4533%" y="1295.50">osrs_gph.exe`alloc::sync::Arc&lt;..</text></g><g><title>osrs_gph.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt; &gt; &gt;::as_ref (46 samples, 19.09%)</title><rect x="11.2033%" y="1269" width="19.0871%" height="15" fill="rgb(104,214,214)" fg:x="27" fg:w="46"/><text x="11.4533%" y="1279.50">osrs_gph.exe`core::ptr::non_nu..</text></g><g><title>osrs_gph.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$&lt;&gt; &gt; (46 samples, 19.09%)</title><rect x="11.2033%" y="1253" width="19.0871%" height="15" fill="rgb(64,178,178)" fg:x="27" fg:w="46"/><text x="11.4533%" y="1263.50">osrs_gph.exe`std::sys_common::..</text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt;::drop_slow&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; (1 samples, 0.41%)</title><rect x="29.8755%" y="1237" width="0.4149%" height="15" fill="rgb(69,183,183)" fg:x="72" fg:w="1"/><text x="30.1255%" y="1247.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="29.8755%" y="1221" width="0.4149%" height="15" fill="rgb(55,170,170)" fg:x="72" fg:w="1"/><text x="30.1255%" y="1231.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="29.8755%" y="1205" width="0.4149%" height="15" fill="rgb(52,167,167)" fg:x="72" fg:w="1"/><text x="30.1255%" y="1215.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::sync::Arc (1 samples, 0.41%)</title><rect x="29.8755%" y="1189" width="0.4149%" height="15" fill="rgb(76,189,189)" fg:x="72" fg:w="1"/><text x="30.1255%" y="1199.50"></text></g><g><title>osrs_gph.exe`alloc::sync::impl$33::drop(alloc::sync::Arc (1 samples, 0.41%)</title><rect x="29.8755%" y="1173" width="0.4149%" height="15" fill="rgb(56,171,171)" fg:x="72" fg:w="1"/><text x="30.1255%" y="1183.50"></text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;tokio::runtime::blocking::pool::Inner,alloc::alloc::Global&gt;::inner (1 samples, 0.41%)</title><rect x="29.8755%" y="1157" width="0.4149%" height="15" fill="rgb(93,204,204)" fg:x="72" fg:w="1"/><text x="30.1255%" y="1167.50"></text></g><g><title>osrs_gph.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;tokio::runtime::blocking::pool::Inner&gt; &gt;::as_ref (1 samples, 0.41%)</title><rect x="29.8755%" y="1141" width="0.4149%" height="15" fill="rgb(102,213,213)" fg:x="72" fg:w="1"/><text x="30.1255%" y="1151.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;tokio::runtime::driver::Handle&gt; (1 samples, 0.41%)</title><rect x="29.8755%" y="1125" width="0.4149%" height="15" fill="rgb(106,216,216)" fg:x="72" fg:w="1"/><text x="30.1255%" y="1135.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$ (1 samples, 0.41%)</title><rect x="29.8755%" y="1109" width="0.4149%" height="15" fill="rgb(58,172,172)" fg:x="72" fg:w="1"/><text x="30.1255%" y="1119.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="29.8755%" y="1093" width="0.4149%" height="15" fill="rgb(83,195,195)" fg:x="72" fg:w="1"/><text x="30.1255%" y="1103.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tokio::loom::std::mutex::Mutex (1 samples, 0.41%)</title><rect x="29.8755%" y="1077" width="0.4149%" height="15" fill="rgb(85,197,197)" fg:x="72" fg:w="1"/><text x="30.1255%" y="1087.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(std::sync::mutex::Mutex (1 samples, 0.41%)</title><rect x="29.8755%" y="1061" width="0.4149%" height="15" fill="rgb(68,181,181)" fg:x="72" fg:w="1"/><text x="30.1255%" y="1071.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(core::cell::UnsafeCell (1 samples, 0.41%)</title><rect x="29.8755%" y="1045" width="0.4149%" height="15" fill="rgb(69,183,183)" fg:x="72" fg:w="1"/><text x="30.1255%" y="1055.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="29.8755%" y="1029" width="0.4149%" height="15" fill="rgb(66,180,180)" fg:x="72" fg:w="1"/><text x="30.1255%" y="1039.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;alloc::sync::Arc (1 samples, 0.41%)</title><rect x="29.8755%" y="1013" width="0.4149%" height="15" fill="rgb(92,203,203)" fg:x="72" fg:w="1"/><text x="30.1255%" y="1023.50"></text></g><g><title>osrs_gph.exe`alloc::vec::impl$24::drop(alloc::vec::Vec&lt;alloc::sync::Arc (1 samples, 0.41%)</title><rect x="29.8755%" y="997" width="0.4149%" height="15" fill="rgb(91,203,203)" fg:x="72" fg:w="1"/><text x="30.1255%" y="1007.50"></text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;mio::sys::windows::selector::SelectorInner,alloc::alloc::Global&gt;::drop_slow&lt;mio::sys::windows::selector::SelectorInner,alloc::alloc::Global&gt; (1 samples, 0.41%)</title><rect x="29.8755%" y="981" width="0.4149%" height="15" fill="rgb(93,204,204)" fg:x="72" fg:w="1"/><text x="30.1255%" y="991.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="29.8755%" y="965" width="0.4149%" height="15" fill="rgb(107,217,217)" fg:x="72" fg:w="1"/><text x="30.1255%" y="975.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::sync::Arc (1 samples, 0.41%)</title><rect x="29.8755%" y="949" width="0.4149%" height="15" fill="rgb(104,215,215)" fg:x="72" fg:w="1"/><text x="30.1255%" y="959.50"></text></g><g><title>osrs_gph.exe`alloc::sync::impl$33::drop(alloc::sync::Arc (1 samples, 0.41%)</title><rect x="29.8755%" y="933" width="0.4149%" height="15" fill="rgb(61,175,175)" fg:x="72" fg:w="1"/><text x="30.1255%" y="943.50"></text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;mio::sys::windows::iocp::CompletionPort,alloc::alloc::Global&gt;::inner (1 samples, 0.41%)</title><rect x="29.8755%" y="917" width="0.4149%" height="15" fill="rgb(91,203,203)" fg:x="72" fg:w="1"/><text x="30.1255%" y="927.50"></text></g><g><title>osrs_gph.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;mio::sys::windows::iocp::CompletionPort&gt; &gt;::as_ref (1 samples, 0.41%)</title><rect x="29.8755%" y="901" width="0.4149%" height="15" fill="rgb(70,183,183)" fg:x="72" fg:w="1"/><text x="30.1255%" y="911.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::impl$6::drop (1 samples, 0.41%)</title><rect x="29.8755%" y="885" width="0.4149%" height="15" fill="rgb(68,181,181)" fg:x="72" fg:w="1"/><text x="30.1255%" y="895.50"></text></g><g><title>osrs_gph.exe`__chkstk() (1 samples, 0.41%)</title><rect x="29.8755%" y="869" width="0.4149%" height="15" fill="rgb(195,195,57)" fg:x="72" fg:w="1"/><text x="30.1255%" y="879.50"></text></g><g><title>osrs_gph.exe`slog_term::impl$19::flush(slog_term::PlainRecordDecorator (1 samples, 0.41%)</title><rect x="30.2905%" y="1045" width="0.4149%" height="15" fill="rgb(79,192,192)" fg:x="73" fg:w="1"/><text x="30.5405%" y="1055.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(core::cell::RefMut (1 samples, 0.41%)</title><rect x="30.2905%" y="1029" width="0.4149%" height="15" fill="rgb(66,179,179)" fg:x="73" fg:w="1"/><text x="30.5405%" y="1039.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="30.2905%" y="1013" width="0.4149%" height="15" fill="rgb(63,177,177)" fg:x="73" fg:w="1"/><text x="30.5405%" y="1023.50"></text></g><g><title>osrs_gph.exe`core::cell::impl$42::drop (1 samples, 0.41%)</title><rect x="30.2905%" y="997" width="0.4149%" height="15" fill="rgb(65,178,178)" fg:x="73" fg:w="1"/><text x="30.5405%" y="1007.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;isize&gt;::set (1 samples, 0.41%)</title><rect x="30.2905%" y="981" width="0.4149%" height="15" fill="rgb(80,192,192)" fg:x="73" fg:w="1"/><text x="30.5405%" y="991.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;isize&gt;::replace (1 samples, 0.41%)</title><rect x="30.2905%" y="965" width="0.4149%" height="15" fill="rgb(89,201,201)" fg:x="73" fg:w="1"/><text x="30.5405%" y="975.50"></text></g><g><title>osrs_gph.exe`core::mem::replace (1 samples, 0.41%)</title><rect x="30.2905%" y="949" width="0.4149%" height="15" fill="rgb(62,176,176)" fg:x="73" fg:w="1"/><text x="30.5405%" y="959.50"></text></g><g><title>osrs_gph.exe`core::ptr::write (1 samples, 0.41%)</title><rect x="30.2905%" y="933" width="0.4149%" height="15" fill="rgb(76,189,189)" fg:x="73" fg:w="1"/><text x="30.5405%" y="943.50"></text></g><g><title>osrs_gph.exe`sloggers::file::impl$6::flush (1 samples, 0.41%)</title><rect x="30.2905%" y="917" width="0.4149%" height="15" fill="rgb(58,172,172)" fg:x="73" fg:w="1"/><text x="30.5405%" y="927.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufwriter::impl$6::flush(std::io::buffered::bufwriter::BufWriter (1 samples, 0.41%)</title><rect x="30.2905%" y="901" width="0.4149%" height="15" fill="rgb(80,193,193)" fg:x="73" fg:w="1"/><text x="30.5405%" y="911.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;::flush_buf&lt;std::fs::File&gt; (1 samples, 0.41%)</title><rect x="30.2905%" y="885" width="0.4149%" height="15" fill="rgb(55,169,169)" fg:x="73" fg:w="1"/><text x="30.5405%" y="895.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$ (1 samples, 0.41%)</title><rect x="30.7054%" y="1045" width="0.4149%" height="15" fill="rgb(84,196,196)" fg:x="74" fg:w="1"/><text x="30.9554%" y="1055.50"></text></g><g><title>osrs_gph.exe`slog::impl$69::serialize&lt;tuple$&lt;slog::SingleKV&lt;slog::FnValue&lt;alloc::string::String,alloc::string::String (*)(ref$&lt;slog::Record&gt;)&gt; &gt;,tuple$&lt;&gt; &gt; &gt;(slog::OwnedKVListNode&lt;tuple$&lt;slog::SingleKV&lt;slog::FnValue&lt;alloc::string::String,alloc::string::String (*)(ref$&lt;slog::Record&gt;)&gt; &gt;,tuple$&lt;&gt; &gt; &gt;*, slog::Record*, ref_mut$&lt;dyn$ (1 samples, 0.41%)</title><rect x="30.7054%" y="1029" width="0.4149%" height="15" fill="rgb(51,166,166)" fg:x="74" fg:w="1"/><text x="30.9554%" y="1039.50"></text></g><g><title>osrs_gph.exe`slog::impl$64::serialize(tuple$&lt;slog::SingleKV&lt;slog::FnValue&lt;alloc::string::String,alloc::string::String (*)(ref$&lt;slog::Record&gt;)&gt; &gt;,tuple$&lt;&gt; &gt;*, slog::Record*, ref_mut$&lt;dyn$ (1 samples, 0.41%)</title><rect x="30.7054%" y="1013" width="0.4149%" height="15" fill="rgb(50,165,165)" fg:x="74" fg:w="1"/><text x="30.9554%" y="1023.50"></text></g><g><title>osrs_gph.exe`slog::impl$62::serialize(slog::SingleKV&lt;slog::FnValue&lt;alloc::string::String,alloc::string::String (*)(ref$&lt;slog::Record&gt;)&gt; &gt;*, slog::Record*, ref_mut$&lt;dyn$ (1 samples, 0.41%)</title><rect x="30.7054%" y="997" width="0.4149%" height="15" fill="rgb(72,185,185)" fg:x="74" fg:w="1"/><text x="30.9554%" y="1007.50"></text></g><g><title>osrs_gph.exe`slog::impl$54::serialize(slog::FnValue&lt;alloc::string::String,alloc::string::String (*)(ref$&lt;slog::Record&gt;)&gt;*, slog::Record*, ref$&lt;str$&gt;, ref_mut$&lt;dyn$ (1 samples, 0.41%)</title><rect x="30.7054%" y="981" width="0.4149%" height="15" fill="rgb(78,191,191)" fg:x="74" fg:w="1"/><text x="30.9554%" y="991.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="30.7054%" y="965" width="0.4149%" height="15" fill="rgb(62,176,176)" fg:x="74" fg:w="1"/><text x="30.9554%" y="975.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.41%)</title><rect x="30.7054%" y="949" width="0.4149%" height="15" fill="rgb(91,203,203)" fg:x="74" fg:w="1"/><text x="30.9554%" y="959.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.41%)</title><rect x="30.7054%" y="933" width="0.4149%" height="15" fill="rgb(105,215,215)" fg:x="74" fg:w="1"/><text x="30.9554%" y="943.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1 samples, 0.41%)</title><rect x="30.7054%" y="917" width="0.4149%" height="15" fill="rgb(65,179,179)" fg:x="74" fg:w="1"/><text x="30.9554%" y="927.50"></text></g><g><title>osrs_gph.exe`slog::impl$45::serialize(alloc::string::String*, slog::Record*, ref$&lt;str$&gt;, ref_mut$&lt;dyn$ (1 samples, 0.41%)</title><rect x="30.7054%" y="901" width="0.4149%" height="15" fill="rgb(71,184,184)" fg:x="74" fg:w="1"/><text x="30.9554%" y="911.50"></text></g><g><title>osrs_gph.exe`slog_term::impl$13::emit_str(slog_term::CompactFormatSerializer*, ref$&lt;str$&gt;, ref$ (1 samples, 0.41%)</title><rect x="30.7054%" y="885" width="0.4149%" height="15" fill="rgb(92,204,204)" fg:x="74" fg:w="1"/><text x="30.9554%" y="895.50"></text></g><g><title>osrs_gph.exe`std::io::Write::write_fmt(alloc::vec::Vec (1 samples, 0.41%)</title><rect x="30.7054%" y="869" width="0.4149%" height="15" fill="rgb(62,176,176)" fg:x="74" fg:w="1"/><text x="30.9554%" y="879.50"></text></g><g><title>osrs_gph.exe`core::fmt::write (1 samples, 0.41%)</title><rect x="30.7054%" y="853" width="0.4149%" height="15" fill="rgb(83,195,195)" fg:x="74" fg:w="1"/><text x="30.9554%" y="863.50"></text></g><g><title>osrs_gph.exe`std::io::Write::write_fmt::impl$0::write_str&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;(std::io::Write::write_fmt::Adapter&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;*, ref$ (1 samples, 0.41%)</title><rect x="30.7054%" y="837" width="0.4149%" height="15" fill="rgb(99,210,210)" fg:x="74" fg:w="1"/><text x="30.9554%" y="847.50"></text></g><g><title>osrs_gph.exe`std::path::impl$44::deref (1 samples, 0.41%)</title><rect x="31.1203%" y="805" width="0.4149%" height="15" fill="rgb(86,198,198)" fg:x="75" fg:w="1"/><text x="31.3703%" y="815.50"></text></g><g><title>osrs_gph.exe`std::fs::metadata(ref$ (1 samples, 0.41%)</title><rect x="31.1203%" y="789" width="0.4149%" height="15" fill="rgb(56,170,170)" fg:x="75" fg:w="1"/><text x="31.3703%" y="799.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;std::sys::windows::fs::FileAttr,std::io::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;std::sys::windows::fs::FileAttr,std::io::error::Error&gt; &gt;, std::fs::Metadata (*) (1 samples, 0.41%)</title><rect x="31.1203%" y="773" width="0.4149%" height="15" fill="rgb(53,167,167)" fg:x="75" fg:w="1"/><text x="31.3703%" y="783.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::fs::stat (1 samples, 0.41%)</title><rect x="31.1203%" y="757" width="0.4149%" height="15" fill="rgb(109,219,219)" fg:x="75" fg:w="1"/><text x="31.3703%" y="767.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::fs::metadata (1 samples, 0.41%)</title><rect x="31.1203%" y="741" width="0.4149%" height="15" fill="rgb(82,194,194)" fg:x="75" fg:w="1"/><text x="31.3703%" y="751.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::fs::File::open (1 samples, 0.41%)</title><rect x="31.1203%" y="725" width="0.4149%" height="15" fill="rgb(67,181,181)" fg:x="75" fg:w="1"/><text x="31.3703%" y="735.50"></text></g><g><title>osrs_gph.exe`core::convert::impl$6::try_into (1 samples, 0.41%)</title><rect x="31.1203%" y="709" width="0.4149%" height="15" fill="rgb(82,195,195)" fg:x="75" fg:w="1"/><text x="31.3703%" y="719.50"></text></g><g><title>osrs_gph.exe`std::os::windows::io::handle::impl$12::try_from (1 samples, 0.41%)</title><rect x="31.1203%" y="693" width="0.4149%" height="15" fill="rgb(75,188,188)" fg:x="75" fg:w="1"/><text x="31.3703%" y="703.50"></text></g><g><title>`0x7FFE56B24CDC (1 samples, 0.41%)</title><rect x="31.1203%" y="677" width="0.4149%" height="15" fill="rgb(199,199,58)" fg:x="75" fg:w="1"/><text x="31.3703%" y="687.50"></text></g><g><title>`0x7FFE56B25370 (1 samples, 0.41%)</title><rect x="31.1203%" y="661" width="0.4149%" height="15" fill="rgb(199,199,59)" fg:x="75" fg:w="1"/><text x="31.3703%" y="671.50"></text></g><g><title>`0x7FFE5944FE14 (1 samples, 0.41%)</title><rect x="31.1203%" y="645" width="0.4149%" height="15" fill="rgb(221,221,66)" fg:x="75" fg:w="1"/><text x="31.3703%" y="655.50"></text></g><g><title>osrs_gph.exe`slog_term::CompactFormatSerializer::finish (4 samples, 1.66%)</title><rect x="31.1203%" y="1029" width="1.6598%" height="15" fill="rgb(106,217,217)" fg:x="75" fg:w="4"/><text x="31.3703%" y="1039.50"></text></g><g><title>osrs_gph.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (4 samples, 1.66%)</title><rect x="31.1203%" y="1013" width="1.6598%" height="15" fill="rgb(88,199,199)" fg:x="75" fg:w="4"/><text x="31.3703%" y="1023.50"></text></g><g><title>osrs_gph.exe`std::io::Write::write_all&lt;slog_term::PlainRecordDecorator&lt;sloggers::file::FileAppender&gt; &gt;(slog_term::PlainRecordDecorator&lt;sloggers::file::FileAppender&gt;*, ref$&lt;slice2$ (4 samples, 1.66%)</title><rect x="31.1203%" y="997" width="1.6598%" height="15" fill="rgb(53,167,167)" fg:x="75" fg:w="4"/><text x="31.3703%" y="1007.50"></text></g><g><title>osrs_gph.exe`slog_term::impl$19::write(slog_term::PlainRecordDecorator&lt;sloggers::file::FileAppender&gt;*, ref$&lt;slice2$ (4 samples, 1.66%)</title><rect x="31.1203%" y="981" width="1.6598%" height="15" fill="rgb(72,185,185)" fg:x="75" fg:w="4"/><text x="31.3703%" y="991.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(core::cell::RefMut (4 samples, 1.66%)</title><rect x="31.1203%" y="965" width="1.6598%" height="15" fill="rgb(75,188,188)" fg:x="75" fg:w="4"/><text x="31.3703%" y="975.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (4 samples, 1.66%)</title><rect x="31.1203%" y="949" width="1.6598%" height="15" fill="rgb(76,188,188)" fg:x="75" fg:w="4"/><text x="31.3703%" y="959.50"></text></g><g><title>osrs_gph.exe`core::cell::impl$42::drop (4 samples, 1.66%)</title><rect x="31.1203%" y="933" width="1.6598%" height="15" fill="rgb(93,205,205)" fg:x="75" fg:w="4"/><text x="31.3703%" y="943.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;isize&gt;::set (4 samples, 1.66%)</title><rect x="31.1203%" y="917" width="1.6598%" height="15" fill="rgb(60,174,174)" fg:x="75" fg:w="4"/><text x="31.3703%" y="927.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;isize&gt;::replace (4 samples, 1.66%)</title><rect x="31.1203%" y="901" width="1.6598%" height="15" fill="rgb(97,208,208)" fg:x="75" fg:w="4"/><text x="31.3703%" y="911.50"></text></g><g><title>osrs_gph.exe`core::mem::replace (4 samples, 1.66%)</title><rect x="31.1203%" y="885" width="1.6598%" height="15" fill="rgb(96,207,207)" fg:x="75" fg:w="4"/><text x="31.3703%" y="895.50"></text></g><g><title>osrs_gph.exe`core::ptr::write (4 samples, 1.66%)</title><rect x="31.1203%" y="869" width="1.6598%" height="15" fill="rgb(86,198,198)" fg:x="75" fg:w="4"/><text x="31.3703%" y="879.50"></text></g><g><title>osrs_gph.exe`sloggers::file::impl$6::write(sloggers::file::FileAppender*, ref$&lt;slice2$ (4 samples, 1.66%)</title><rect x="31.1203%" y="853" width="1.6598%" height="15" fill="rgb(102,213,213)" fg:x="75" fg:w="4"/><text x="31.3703%" y="863.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (4 samples, 1.66%)</title><rect x="31.1203%" y="837" width="1.6598%" height="15" fill="rgb(62,176,176)" fg:x="75" fg:w="4"/><text x="31.3703%" y="847.50"></text></g><g><title>osrs_gph.exe`sloggers::file::FileAppender::reopen_if_needed (4 samples, 1.66%)</title><rect x="31.1203%" y="821" width="1.6598%" height="15" fill="rgb(56,170,170)" fg:x="75" fg:w="4"/><text x="31.3703%" y="831.50"></text></g><g><title>osrs_gph.exe`std::fs::OpenOptions::open (3 samples, 1.24%)</title><rect x="31.5353%" y="805" width="1.2448%" height="15" fill="rgb(52,167,167)" fg:x="76" fg:w="3"/><text x="31.7853%" y="815.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::fs::File::open (3 samples, 1.24%)</title><rect x="31.5353%" y="789" width="1.2448%" height="15" fill="rgb(94,206,206)" fg:x="76" fg:w="3"/><text x="31.7853%" y="799.50"></text></g><g><title>osrs_gph.exe`core::convert::impl$6::try_into (3 samples, 1.24%)</title><rect x="31.5353%" y="773" width="1.2448%" height="15" fill="rgb(94,206,206)" fg:x="76" fg:w="3"/><text x="31.7853%" y="783.50"></text></g><g><title>osrs_gph.exe`std::os::windows::io::handle::impl$12::try_from (3 samples, 1.24%)</title><rect x="31.5353%" y="757" width="1.2448%" height="15" fill="rgb(68,182,182)" fg:x="76" fg:w="3"/><text x="31.7853%" y="767.50"></text></g><g><title>`0x7FFE56B24CDC (3 samples, 1.24%)</title><rect x="31.5353%" y="741" width="1.2448%" height="15" fill="rgb(216,216,65)" fg:x="76" fg:w="3"/><text x="31.7853%" y="751.50"></text></g><g><title>`0x7FFE56B25370 (3 samples, 1.24%)</title><rect x="31.5353%" y="725" width="1.2448%" height="15" fill="rgb(196,196,57)" fg:x="76" fg:w="3"/><text x="31.7853%" y="735.50"></text></g><g><title>`0x7FFE5944FE14 (3 samples, 1.24%)</title><rect x="31.5353%" y="709" width="1.2448%" height="15" fill="rgb(224,224,68)" fg:x="76" fg:w="3"/><text x="31.7853%" y="719.50"></text></g><g><title>osrs_gph.exe`slog_async::AsyncRecord::log_to&lt;ref$&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt; &gt;(slog_async::AsyncRecord, slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (7 samples, 2.90%)</title><rect x="30.2905%" y="1173" width="2.9046%" height="15" fill="rgb(61,175,175)" fg:x="73" fg:w="7"/><text x="30.5405%" y="1183.50">os..</text></g><g><title>osrs_gph.exe`slog::impl$3::log(slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (7 samples, 2.90%)</title><rect x="30.2905%" y="1157" width="2.9046%" height="15" fill="rgb(53,168,168)" fg:x="73" fg:w="7"/><text x="30.5405%" y="1167.50">os..</text></g><g><title>osrs_gph.exe`slog::impl$23::log(slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (7 samples, 2.90%)</title><rect x="30.2905%" y="1141" width="2.9046%" height="15" fill="rgb(102,212,212)" fg:x="73" fg:w="7"/><text x="30.5405%" y="1151.50">os..</text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt;::unwrap_or_else(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt;, slog::impl$23::log::closure_env$0&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (7 samples, 2.90%)</title><rect x="30.2905%" y="1125" width="2.9046%" height="15" fill="rgb(73,186,186)" fg:x="73" fg:w="7"/><text x="30.5405%" y="1135.50">os..</text></g><g><title>osrs_gph.exe`slog_term::impl$7::log&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt;(slog_term::CompactFormat&lt;slog_term::PlainDecorator (7 samples, 2.90%)</title><rect x="30.2905%" y="1109" width="2.9046%" height="15" fill="rgb(97,208,208)" fg:x="73" fg:w="7"/><text x="30.5405%" y="1119.50">os..</text></g><g><title>osrs_gph.exe`slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt;::format_compact (7 samples, 2.90%)</title><rect x="30.2905%" y="1093" width="2.9046%" height="15" fill="rgb(87,199,199)" fg:x="73" fg:w="7"/><text x="30.5405%" y="1103.50">os..</text></g><g><title>osrs_gph.exe`slog_term::impl$18::with_record(slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt;*, slog::Record*, slog::OwnedKVList*, slog_term::impl$8::format_compact::closure_env$0&lt;slog_term::PlainDecorator (7 samples, 2.90%)</title><rect x="30.2905%" y="1077" width="2.9046%" height="15" fill="rgb(66,180,180)" fg:x="73" fg:w="7"/><text x="30.5405%" y="1087.50">os..</text></g><g><title>osrs_gph.exe`slog_term::impl$8::format_compact::closure$0(slog_term::impl$8::format_compact::closure_env$0&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt;, ref_mut$&lt;dyn$ (7 samples, 2.90%)</title><rect x="30.2905%" y="1061" width="2.9046%" height="15" fill="rgb(78,191,191)" fg:x="73" fg:w="7"/><text x="30.5405%" y="1071.50">os..</text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (5 samples, 2.07%)</title><rect x="31.1203%" y="1045" width="2.0747%" height="15" fill="rgb(80,193,193)" fg:x="75" fg:w="5"/><text x="31.3703%" y="1055.50">o..</text></g><g><title>osrs_gph.exe`core::ops::function::Fn::call&lt;enum2$&lt;core::result::Result&lt;bool,std::io::error::Error&gt; &gt; (*)(ref$&lt;dyn$&lt;slog_term::ThreadSafeTimestampFn&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt; &gt; &gt; &gt; &gt;,ref_mut$&lt;dyn$&lt;slog_term::RecordDecorator&gt; &gt;,ref$&lt;slog::Record&gt;,bool),tuple$&lt;ref$&lt;dyn$&lt;slog_term::ThreadSafeTimestampFn&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt; &gt; &gt; &gt; &gt;,ref_mut$&lt;dyn$&lt;slog_term::RecordDecorator&gt; &gt;,ref$&lt;slog::Record&gt;,bool&gt; &gt;(enum2$&lt;core::result::Result&lt;bool,std::io::error::Error&gt; &gt; (**)(ref$&lt;dyn$&lt;slog_term::ThreadSafeTimestampFn&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt; &gt; &gt; &gt; &gt;, ref_mut$&lt;dyn$&lt;slog_term::RecordDecorator&gt; &gt;, slog::Record*, bool), ref$&lt;dyn$&lt;slog_term::ThreadSafeTimestampFn&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt; &gt; &gt; &gt; &gt;, ref_mut$&lt;dyn$ (1 samples, 0.41%)</title><rect x="32.7801%" y="1029" width="0.4149%" height="15" fill="rgb(56,171,171)" fg:x="79" fg:w="1"/><text x="33.0301%" y="1039.50"></text></g><g><title>osrs_gph.exe`slog_term::print_msg_header(ref$&lt;dyn$&lt;slog_term::ThreadSafeTimestampFn&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt; &gt; &gt; &gt; &gt;, ref_mut$&lt;dyn$ (1 samples, 0.41%)</title><rect x="32.7801%" y="1013" width="0.4149%" height="15" fill="rgb(74,187,187)" fg:x="79" fg:w="1"/><text x="33.0301%" y="1023.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 0.41%)</title><rect x="32.7801%" y="997" width="0.4149%" height="15" fill="rgb(104,215,215)" fg:x="79" fg:w="1"/><text x="33.0301%" y="1007.50"></text></g><g><title>osrs_gph.exe`slog_term::timestamp_local(ref_mut$&lt;dyn$ (1 samples, 0.41%)</title><rect x="32.7801%" y="981" width="0.4149%" height="15" fill="rgb(68,181,181)" fg:x="79" fg:w="1"/><text x="33.0301%" y="991.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,enum2$&lt;time::error::format::Format&gt; &gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;alloc::string::String,enum2$&lt;time::error::format::Format&gt; &gt; &gt;, std::io::error::Error (*)(enum2$ (1 samples, 0.41%)</title><rect x="32.7801%" y="965" width="0.4149%" height="15" fill="rgb(87,199,199)" fg:x="79" fg:w="1"/><text x="33.0301%" y="975.50"></text></g><g><title>osrs_gph.exe`time::formatting::formattable::sealed::Sealed::format&lt;slice2$&lt;enum2$&lt;time::format_description::borrowed_format_item::BorrowedFormatItem&gt; &gt; &gt;(ref$&lt;slice2$&lt;enum2$&lt;time::format_description::borrowed_format_item::BorrowedFormatItem&gt; &gt; &gt;, enum2$&lt;core::option::Option&lt;time::date::Date&gt; &gt;, enum2$&lt;core::option::Option&lt;time::time::Time&gt; &gt;, enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="32.7801%" y="949" width="0.4149%" height="15" fill="rgb(80,192,192)" fg:x="79" fg:w="1"/><text x="33.0301%" y="959.50"></text></g><g><title>osrs_gph.exe`time::formatting::formattable::impl$9::format_into(ref$&lt;slice2$&lt;enum2$&lt;time::format_description::borrowed_format_item::BorrowedFormatItem&gt; &gt; &gt;, alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, enum2$&lt;core::option::Option&lt;time::date::Date&gt; &gt;, enum2$&lt;core::option::Option&lt;time::time::Time&gt; &gt;, enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="32.7801%" y="933" width="0.4149%" height="15" fill="rgb(51,166,166)" fg:x="79" fg:w="1"/><text x="33.0301%" y="943.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;usize,enum2$ (1 samples, 0.41%)</title><rect x="32.7801%" y="917" width="0.4149%" height="15" fill="rgb(91,203,203)" fg:x="79" fg:w="1"/><text x="33.0301%" y="927.50"></text></g><g><title>osrs_gph.exe`time::formatting::formattable::impl$8::format_into&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;(enum2$&lt;time::format_description::borrowed_format_item::BorrowedFormatItem&gt;*, alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, enum2$&lt;core::option::Option&lt;time::date::Date&gt; &gt;, enum2$&lt;core::option::Option&lt;time::time::Time&gt; &gt;, enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="32.7801%" y="901" width="0.4149%" height="15" fill="rgb(68,182,182)" fg:x="79" fg:w="1"/><text x="33.0301%" y="911.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;usize,enum2$ (1 samples, 0.41%)</title><rect x="32.7801%" y="885" width="0.4149%" height="15" fill="rgb(80,193,193)" fg:x="79" fg:w="1"/><text x="33.0301%" y="895.50"></text></g><g><title>osrs_gph.exe`time::formatting::format_component&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, enum2$&lt;time::format_description::component::Component&gt;, enum2$&lt;core::option::Option&lt;time::date::Date&gt; &gt;, enum2$&lt;core::option::Option&lt;time::time::Time&gt; &gt;, enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="32.7801%" y="869" width="0.4149%" height="15" fill="rgb(71,185,185)" fg:x="79" fg:w="1"/><text x="33.0301%" y="879.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (1 samples, 0.41%)</title><rect x="32.7801%" y="853" width="0.4149%" height="15" fill="rgb(51,165,165)" fg:x="79" fg:w="1"/><text x="33.0301%" y="863.50"></text></g><g><title>osrs_gph.exe`time::formatting::format_number&lt;2,alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;,u8&gt;(alloc::vec::Vec (1 samples, 0.41%)</title><rect x="32.7801%" y="837" width="0.4149%" height="15" fill="rgb(90,202,202)" fg:x="79" fg:w="1"/><text x="33.0301%" y="847.50"></text></g><g><title>osrs_gph.exe`time::formatting::format_number_pad_space(alloc::vec::Vec (1 samples, 0.41%)</title><rect x="32.7801%" y="821" width="0.4149%" height="15" fill="rgb(57,171,171)" fg:x="79" fg:w="1"/><text x="33.0301%" y="831.50"></text></g><g><title>osrs_gph.exe`time::formatting::write(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="32.7801%" y="805" width="0.4149%" height="15" fill="rgb(74,187,187)" fg:x="79" fg:w="1"/><text x="33.0301%" y="815.50"></text></g><g><title>osrs_gph.exe`std::io::impls::impl$11::write_all(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="32.7801%" y="789" width="0.4149%" height="15" fill="rgb(79,192,192)" fg:x="79" fg:w="1"/><text x="33.0301%" y="799.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::extend_from_slice(ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="32.7801%" y="773" width="0.4149%" height="15" fill="rgb(50,165,165)" fg:x="79" fg:w="1"/><text x="33.0301%" y="783.50"></text></g><g><title>osrs_gph.exe`alloc::vec::spec_extend::impl$4::spec_extend(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, core::slice::iter::Iter (1 samples, 0.41%)</title><rect x="32.7801%" y="757" width="0.4149%" height="15" fill="rgb(104,214,214)" fg:x="79" fg:w="1"/><text x="33.0301%" y="767.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::append_elements(ptr_const$&lt;slice2$ (1 samples, 0.41%)</title><rect x="32.7801%" y="741" width="0.4149%" height="15" fill="rgb(105,215,215)" fg:x="79" fg:w="1"/><text x="33.0301%" y="751.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.41%)</title><rect x="32.7801%" y="725" width="0.4149%" height="15" fill="rgb(71,185,185)" fg:x="79" fg:w="1"/><text x="33.0301%" y="735.50"></text></g><g><title>`0x7FFE37DA1378 (1 samples, 0.41%)</title><rect x="32.7801%" y="709" width="0.4149%" height="15" fill="rgb(214,214,64)" fg:x="79" fg:w="1"/><text x="33.0301%" y="719.50"></text></g><g><title>osrs_gph.exe`slog_async::impl$5::spawn_thread::closure$0(slog_async::impl$5::spawn_thread::closure_env$0&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (8 samples, 3.32%)</title><rect x="30.2905%" y="1237" width="3.3195%" height="15" fill="rgb(98,209,209)" fg:x="73" fg:w="8"/><text x="30.5405%" y="1247.50">osr..</text></g><g><title>osrs_gph.exe`std::panicking::try&lt;tuple$&lt;&gt;,slog_async::impl$5::spawn_thread::closure$0::closure_env$0&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt; &gt;(slog_async::impl$5::spawn_thread::closure$0::closure_env$0&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (8 samples, 3.32%)</title><rect x="30.2905%" y="1221" width="3.3195%" height="15" fill="rgb(66,179,179)" fg:x="73" fg:w="8"/><text x="30.5405%" y="1231.50">osr..</text></g><g><title>osrs_gph.exe`std::panicking::try::do_call (8 samples, 3.32%)</title><rect x="30.2905%" y="1205" width="3.3195%" height="15" fill="rgb(69,183,183)" fg:x="73" fg:w="8"/><text x="30.5405%" y="1215.50">osr..</text></g><g><title>osrs_gph.exe`slog_async::impl$5::spawn_thread::closure$0::closure$0(slog_async::impl$5::spawn_thread::closure$0::closure_env$0&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (8 samples, 3.32%)</title><rect x="30.2905%" y="1189" width="3.3195%" height="15" fill="rgb(77,190,190)" fg:x="73" fg:w="8"/><text x="30.5405%" y="1199.50">osr..</text></g><g><title>osrs_gph.exe`crossbeam_channel::channel::Receiver&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;::recv&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt; (1 samples, 0.41%)</title><rect x="33.1950%" y="1173" width="0.4149%" height="15" fill="rgb(101,212,212)" fg:x="80" fg:w="1"/><text x="33.4450%" y="1183.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;enum2$&lt;slog_async::AsyncMsg&gt;,crossbeam_channel::err::RecvTimeoutError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;enum2$&lt;slog_async::AsyncMsg&gt;,crossbeam_channel::err::RecvTimeoutError&gt; &gt;, crossbeam_channel::channel::impl$12::recv::closure_env$0&lt;enum2$ (1 samples, 0.41%)</title><rect x="33.1950%" y="1157" width="0.4149%" height="15" fill="rgb(90,201,201)" fg:x="80" fg:w="1"/><text x="33.4450%" y="1167.50"></text></g><g><title>osrs_gph.exe`crossbeam_channel::flavors::array::Channel&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;::recv&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;(enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="33.1950%" y="1141" width="0.4149%" height="15" fill="rgb(79,192,192)" fg:x="80" fg:w="1"/><text x="33.4450%" y="1151.50"></text></g><g><title>osrs_gph.exe`crossbeam_channel::context::Context::with(crossbeam_channel::flavors::array::impl$1::recv::closure_env$1&lt;enum2$ (1 samples, 0.41%)</title><rect x="33.1950%" y="1125" width="0.4149%" height="15" fill="rgb(87,199,199)" fg:x="80" fg:w="1"/><text x="33.4450%" y="1135.50"></text></g><g><title>osrs_gph.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;enum2$&lt;core::option::Option&lt;crossbeam_channel::context::Context&gt; &gt; &gt; &gt;::try_with(crossbeam_channel::context::impl$0::with::closure_env$1&lt;crossbeam_channel::flavors::array::impl$1::recv::closure_env$1&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;,tuple$ (1 samples, 0.41%)</title><rect x="33.1950%" y="1109" width="0.4149%" height="15" fill="rgb(79,191,191)" fg:x="80" fg:w="1"/><text x="33.4450%" y="1119.50"></text></g><g><title>osrs_gph.exe`crossbeam_channel::context::impl$0::with::closure$1(crossbeam_channel::context::impl$0::with::closure_env$1&lt;crossbeam_channel::flavors::array::impl$1::recv::closure_env$1&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;,tuple$&lt;&gt; &gt;, core::cell::Cell&lt;enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="33.1950%" y="1093" width="0.4149%" height="15" fill="rgb(75,188,188)" fg:x="80" fg:w="1"/><text x="33.4450%" y="1103.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;enum2$&lt;core::option::Option&lt;crossbeam_channel::context::Context&gt; &gt; &gt;::set(enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="33.1950%" y="1077" width="0.4149%" height="15" fill="rgb(96,207,207)" fg:x="80" fg:w="1"/><text x="33.4450%" y="1087.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;enum2$&lt;core::option::Option&lt;crossbeam_channel::context::Context&gt; &gt; &gt;::replace(enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="33.1950%" y="1061" width="0.4149%" height="15" fill="rgb(69,182,182)" fg:x="80" fg:w="1"/><text x="33.4450%" y="1071.50"></text></g><g><title>osrs_gph.exe`core::mem::replace(enum2$&lt;core::option::Option&lt;crossbeam_channel::context::Context&gt; &gt;*, enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="33.1950%" y="1045" width="0.4149%" height="15" fill="rgb(67,181,181)" fg:x="80" fg:w="1"/><text x="33.4450%" y="1055.50"></text></g><g><title>osrs_gph.exe`core::ptr::read(enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="33.1950%" y="1029" width="0.4149%" height="15" fill="rgb(74,187,187)" fg:x="80" fg:w="1"/><text x="33.4450%" y="1039.50"></text></g><g><title>osrs_gph.exe`crossbeam_channel::flavors::array::impl$1::recv::closure$1&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;(crossbeam_channel::flavors::array::impl$1::recv::closure_env$1&lt;enum2$ (1 samples, 0.41%)</title><rect x="33.1950%" y="1013" width="0.4149%" height="15" fill="rgb(89,200,200)" fg:x="80" fg:w="1"/><text x="33.4450%" y="1023.50"></text></g><g><title>osrs_gph.exe`crossbeam_channel::context::Context::wait_until(enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="33.1950%" y="997" width="0.4149%" height="15" fill="rgb(64,178,178)" fg:x="80" fg:w="1"/><text x="33.4450%" y="1007.50"></text></g><g><title>osrs_gph.exe`core::sync::atomic::AtomicUsize::load (1 samples, 0.41%)</title><rect x="33.1950%" y="981" width="0.4149%" height="15" fill="rgb(97,208,208)" fg:x="80" fg:w="1"/><text x="33.4450%" y="991.50"></text></g><g><title>osrs_gph.exe`core::sync::atomic::atomic_load (1 samples, 0.41%)</title><rect x="33.1950%" y="965" width="0.4149%" height="15" fill="rgb(93,205,205)" fg:x="80" fg:w="1"/><text x="33.4450%" y="975.50"></text></g><g><title>osrs_gph.exe`std::thread::park (1 samples, 0.41%)</title><rect x="33.1950%" y="949" width="0.4149%" height="15" fill="rgb(69,182,182)" fg:x="80" fg:w="1"/><text x="33.4450%" y="959.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::thread_parking::Parker::park (1 samples, 0.41%)</title><rect x="33.1950%" y="933" width="0.4149%" height="15" fill="rgb(103,213,213)" fg:x="80" fg:w="1"/><text x="33.4450%" y="943.50"></text></g><g><title>osrs_gph.exe`core::sync::atomic::AtomicI8::compare_exchange (1 samples, 0.41%)</title><rect x="33.1950%" y="917" width="0.4149%" height="15" fill="rgb(101,212,212)" fg:x="80" fg:w="1"/><text x="33.4450%" y="927.50"></text></g><g><title>osrs_gph.exe`core::sync::atomic::atomic_compare_exchange (1 samples, 0.41%)</title><rect x="33.1950%" y="901" width="0.4149%" height="15" fill="rgb(76,188,188)" fg:x="80" fg:w="1"/><text x="33.4450%" y="911.50"></text></g><g><title>`0x7FFE56B72DF3 (1 samples, 0.41%)</title><rect x="33.1950%" y="885" width="0.4149%" height="15" fill="rgb(204,204,60)" fg:x="80" fg:w="1"/><text x="33.4450%" y="895.50"></text></g><g><title>`0x7FFE593FBA93 (1 samples, 0.41%)</title><rect x="33.1950%" y="869" width="0.4149%" height="15" fill="rgb(219,219,66)" fg:x="80" fg:w="1"/><text x="33.4450%" y="879.50"></text></g><g><title>`0x7FFE593FF9CC (1 samples, 0.41%)</title><rect x="33.1950%" y="853" width="0.4149%" height="15" fill="rgb(207,207,61)" fg:x="80" fg:w="1"/><text x="33.4450%" y="863.50"></text></g><g><title>`0x7FFE593E39D5 (1 samples, 0.41%)</title><rect x="33.1950%" y="837" width="0.4149%" height="15" fill="rgb(226,226,68)" fg:x="80" fg:w="1"/><text x="33.4450%" y="847.50"></text></g><g><title>`0x7FFE59452F64 (1 samples, 0.41%)</title><rect x="33.1950%" y="821" width="0.4149%" height="15" fill="rgb(202,202,60)" fg:x="80" fg:w="1"/><text x="33.4450%" y="831.50"></text></g><g><title>osrs_gph.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;slog_async::impl$5::spawn_thread::closure_env$0&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;slog_async::impl$5::spawn_thread::closure_env$0&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt;,tuple$ (9 samples, 3.73%)</title><rect x="30.2905%" y="1333" width="3.7344%" height="15" fill="rgb(108,219,219)" fg:x="73" fg:w="9"/><text x="30.5405%" y="1343.50">osrs..</text></g><g><title>osrs_gph.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;slog_async::impl$5::spawn_thread::closure_env$0&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt;,tuple$ (9 samples, 3.73%)</title><rect x="30.2905%" y="1317" width="3.7344%" height="15" fill="rgb(82,195,195)" fg:x="73" fg:w="9"/><text x="30.5405%" y="1327.50">osrs..</text></g><g><title>osrs_gph.exe`alloc::sync::impl$29::deref(alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$ (9 samples, 3.73%)</title><rect x="30.2905%" y="1301" width="3.7344%" height="15" fill="rgb(67,180,180)" fg:x="73" fg:w="9"/><text x="30.5405%" y="1311.50">osrs..</text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::inner (9 samples, 3.73%)</title><rect x="30.2905%" y="1285" width="3.7344%" height="15" fill="rgb(75,188,188)" fg:x="73" fg:w="9"/><text x="30.5405%" y="1295.50">osrs..</text></g><g><title>osrs_gph.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt; &gt; &gt;::as_ref (9 samples, 3.73%)</title><rect x="30.2905%" y="1269" width="3.7344%" height="15" fill="rgb(105,216,216)" fg:x="73" fg:w="9"/><text x="30.5405%" y="1279.50">osrs..</text></g><g><title>osrs_gph.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;slog_async::impl$5::spawn_thread::closure_env$0&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(slog_async::impl$5::spawn_thread::closure_env$0&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (9 samples, 3.73%)</title><rect x="30.2905%" y="1253" width="3.7344%" height="15" fill="rgb(94,205,205)" fg:x="73" fg:w="9"/><text x="30.5405%" y="1263.50">osrs..</text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt;(slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (1 samples, 0.41%)</title><rect x="33.6100%" y="1237" width="0.4149%" height="15" fill="rgb(58,172,172)" fg:x="81" fg:w="1"/><text x="33.8600%" y="1247.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(slog_term::CompactFormat&lt;slog_term::PlainDecorator (1 samples, 0.41%)</title><rect x="33.6100%" y="1221" width="0.4149%" height="15" fill="rgb(95,206,206)" fg:x="81" fg:w="1"/><text x="33.8600%" y="1231.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(core::cell::RefCell&lt;alloc::vec::Vec&lt;tuple$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;,alloc::vec::Vec (1 samples, 0.41%)</title><rect x="33.6100%" y="1205" width="0.4149%" height="15" fill="rgb(59,173,173)" fg:x="81" fg:w="1"/><text x="33.8600%" y="1215.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;tuple$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;,alloc::vec::Vec (1 samples, 0.41%)</title><rect x="33.6100%" y="1189" width="0.4149%" height="15" fill="rgb(52,167,167)" fg:x="81" fg:w="1"/><text x="33.8600%" y="1199.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;tuple$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;,alloc::vec::Vec (1 samples, 0.41%)</title><rect x="33.6100%" y="1173" width="0.4149%" height="15" fill="rgb(107,217,217)" fg:x="81" fg:w="1"/><text x="33.8600%" y="1183.50"></text></g><g><title>osrs_gph.exe`alloc::vec::impl$24::drop(alloc::vec::Vec&lt;tuple$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;,alloc::vec::Vec (1 samples, 0.41%)</title><rect x="33.6100%" y="1157" width="0.4149%" height="15" fill="rgb(81,193,193)" fg:x="81" fg:w="1"/><text x="33.8600%" y="1167.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt;(slog_term::PlainDecorator (1 samples, 0.41%)</title><rect x="33.6100%" y="1141" width="0.4149%" height="15" fill="rgb(75,188,188)" fg:x="81" fg:w="1"/><text x="33.8600%" y="1151.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(core::cell::RefCell (1 samples, 0.41%)</title><rect x="33.6100%" y="1125" width="0.4149%" height="15" fill="rgb(65,179,179)" fg:x="81" fg:w="1"/><text x="33.8600%" y="1135.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(core::cell::UnsafeCell (1 samples, 0.41%)</title><rect x="33.6100%" y="1109" width="0.4149%" height="15" fill="rgb(74,187,187)" fg:x="81" fg:w="1"/><text x="33.8600%" y="1119.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="33.6100%" y="1093" width="0.4149%" height="15" fill="rgb(71,184,184)" fg:x="81" fg:w="1"/><text x="33.8600%" y="1103.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;std::sync::mpsc::Receiver&lt;enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 0.41%)</title><rect x="33.6100%" y="1077" width="0.4149%" height="15" fill="rgb(81,193,193)" fg:x="81" fg:w="1"/><text x="33.8600%" y="1087.50"></text></g><g><title>`0x7FFE56B240AF (1 samples, 0.41%)</title><rect x="33.6100%" y="1061" width="0.4149%" height="15" fill="rgb(186,186,54)" fg:x="81" fg:w="1"/><text x="33.8600%" y="1071.50"></text></g><g><title>`0x7FFE5944F554 (1 samples, 0.41%)</title><rect x="33.6100%" y="1045" width="0.4149%" height="15" fill="rgb(226,226,68)" fg:x="81" fg:w="1"/><text x="33.8600%" y="1055.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::Harness&lt;hyper::client::pool::IdleTask&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;::poll&lt;hyper::client::pool::IdleTask&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;(tokio::runtime::task::harness::Harness&lt;hyper::client::pool::IdleTask&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::sync::Arc (1 samples, 0.41%)</title><rect x="34.0249%" y="917" width="0.4149%" height="15" fill="rgb(56,171,171)" fg:x="82" fg:w="1"/><text x="34.2749%" y="927.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::Harness&lt;hyper::client::pool::IdleTask&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;::poll_inner (1 samples, 0.41%)</title><rect x="34.0249%" y="901" width="0.4149%" height="15" fill="rgb(62,176,176)" fg:x="82" fg:w="1"/><text x="34.2749%" y="911.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::poll_future(tokio::runtime::task::core::Core&lt;hyper::client::pool::IdleTask&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::sync::Arc (1 samples, 0.41%)</title><rect x="34.0249%" y="885" width="0.4149%" height="15" fill="rgb(92,203,203)" fg:x="82" fg:w="1"/><text x="34.2749%" y="895.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::core::Core&lt;hyper::client::pool::IdleTask&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt;::poll&lt;hyper::client::pool::IdleTask&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt; (1 samples, 0.41%)</title><rect x="34.0249%" y="869" width="0.4149%" height="15" fill="rgb(67,181,181)" fg:x="82" fg:w="1"/><text x="34.2749%" y="879.50"></text></g><g><title>osrs_gph.exe`tokio::loom::std::unsafe_cell::UnsafeCell&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;hyper::client::pool::IdleTask&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt; &gt;::with_mut(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;hyper::client::pool::IdleTask&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::sync::Arc (1 samples, 0.41%)</title><rect x="34.0249%" y="853" width="0.4149%" height="15" fill="rgb(97,208,208)" fg:x="82" fg:w="1"/><text x="34.2749%" y="863.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::core::impl$6::poll::closure$0(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;hyper::client::pool::IdleTask&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt;, enum2$&lt;tokio::runtime::task::core::Stage&lt;hyper::client::pool::IdleTask&lt;hyper::client::client::PoolClient (1 samples, 0.41%)</title><rect x="34.0249%" y="837" width="0.4149%" height="15" fill="rgb(82,194,194)" fg:x="82" fg:w="1"/><text x="34.2749%" y="847.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="34.0249%" y="821" width="0.4149%" height="15" fill="rgb(102,213,213)" fg:x="82" fg:w="1"/><text x="34.2749%" y="831.50"></text></g><g><title>osrs_gph.exe`hyper::client::pool::impl$21::poll&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;hyper::client::pool::IdleTask&lt;hyper::client::client::PoolClient (1 samples, 0.41%)</title><rect x="34.0249%" y="805" width="0.4149%" height="15" fill="rgb(86,198,198)" fg:x="82" fg:w="1"/><text x="34.2749%" y="815.50"></text></g><g><title>osrs_gph.exe`tokio::time::interval::Interval::poll_tick (1 samples, 0.41%)</title><rect x="34.0249%" y="789" width="0.4149%" height="15" fill="rgb(91,202,202)" fg:x="82" fg:w="1"/><text x="34.2749%" y="799.50"></text></g><g><title>osrs_gph.exe`tokio::time::sleep::impl$1::poll(core::pin::Pin&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="34.0249%" y="773" width="0.4149%" height="15" fill="rgb(104,215,215)" fg:x="82" fg:w="1"/><text x="34.2749%" y="783.50"></text></g><g><title>osrs_gph.exe`tokio::time::sleep::Sleep::poll_elapsed(core::pin::Pin&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="34.0249%" y="757" width="0.4149%" height="15" fill="rgb(80,192,192)" fg:x="82" fg:w="1"/><text x="34.2749%" y="767.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::task::poll::Poll&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,tokio::time::error::Error&gt; &gt; &gt; &gt;::map(enum2$&lt;core::task::poll::Poll&lt;enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 0.41%)</title><rect x="34.0249%" y="741" width="0.4149%" height="15" fill="rgb(52,167,167)" fg:x="82" fg:w="1"/><text x="34.2749%" y="751.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::time::entry::TimerEntry::poll_elapsed(core::pin::Pin&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="34.0249%" y="725" width="0.4149%" height="15" fill="rgb(68,182,182)" fg:x="82" fg:w="1"/><text x="34.2749%" y="735.50"></text></g><g><title>osrs_gph.exe`core::task::wake::Context::waker (1 samples, 0.41%)</title><rect x="34.0249%" y="709" width="0.4149%" height="15" fill="rgb(91,203,203)" fg:x="82" fg:w="1"/><text x="34.2749%" y="719.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::time::handle::Handle::reregister(enum2$&lt;tokio::runtime::driver::IoHandle&gt;*, unsigned long long, core::ptr::non_null::NonNull (1 samples, 0.41%)</title><rect x="34.0249%" y="693" width="0.4149%" height="15" fill="rgb(60,174,174)" fg:x="82" fg:w="1"/><text x="34.2749%" y="703.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::time::wheel::Wheel::insert (1 samples, 0.41%)</title><rect x="34.0249%" y="677" width="0.4149%" height="15" fill="rgb(100,211,211)" fg:x="82" fg:w="1"/><text x="34.2749%" y="687.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::time::wheel::level::Level::add_entry (1 samples, 0.41%)</title><rect x="34.0249%" y="661" width="0.4149%" height="15" fill="rgb(54,169,169)" fg:x="82" fg:w="1"/><text x="34.2749%" y="671.50"></text></g><g><title>osrs_gph.exe`tokio::util::linked_list::LinkedList&lt;tokio::runtime::time::entry::TimerShared,tokio::runtime::time::entry::TimerShared&gt;::push_front (1 samples, 0.41%)</title><rect x="34.0249%" y="645" width="0.4149%" height="15" fill="rgb(71,185,185)" fg:x="82" fg:w="1"/><text x="34.2749%" y="655.50"></text></g><g><title>osrs_gph.exe`core::option::impl$14::eq(enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull&lt;tokio::runtime::time::entry::TimerShared&gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull (1 samples, 0.41%)</title><rect x="34.0249%" y="629" width="0.4149%" height="15" fill="rgb(66,180,180)" fg:x="82" fg:w="1"/><text x="34.2749%" y="639.50"></text></g><g><title>osrs_gph.exe`core::option::impl$16::eq(enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull&lt;tokio::runtime::time::entry::TimerShared&gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull (1 samples, 0.41%)</title><rect x="34.0249%" y="613" width="0.4149%" height="15" fill="rgb(64,178,178)" fg:x="82" fg:w="1"/><text x="34.2749%" y="623.50"></text></g><g><title>osrs_gph.exe`reqwest::connect::with_timeout::async_fn$0&lt;reqwest::connect::Conn,enum2$&lt;reqwest::connect::impl$0::connect_with_maybe_proxy::async_fn_env$0&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;reqwest::connect::with_timeout::async_fn_env$0&lt;reqwest::connect::Conn,enum2$ (1 samples, 0.41%)</title><rect x="34.4398%" y="581" width="0.4149%" height="15" fill="rgb(76,188,188)" fg:x="83" fg:w="1"/><text x="34.6898%" y="591.50"></text></g><g><title>osrs_gph.exe`reqwest::connect::impl$0::connect_with_maybe_proxy::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (1 samples, 0.41%)</title><rect x="34.4398%" y="565" width="0.4149%" height="15" fill="rgb(61,175,175)" fg:x="83" fg:w="1"/><text x="34.6898%" y="575.50"></text></g><g><title>osrs_gph.exe`hyper_rustls::connector::impl$3::call::async_block$3&lt;hyper::client::connect::http::HttpConnector&lt;reqwest::dns::resolve::DynResolver&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper_rustls::connector::impl$3::call::async_block_env$3&lt;hyper::client::connect::http::HttpConnector (1 samples, 0.41%)</title><rect x="34.4398%" y="549" width="0.4149%" height="15" fill="rgb(102,213,213)" fg:x="83" fg:w="1"/><text x="34.6898%" y="559.50"></text></g><g><title>osrs_gph.exe`hyper::client::connect::http::impl$3::call::async_block$0&lt;reqwest::dns::resolve::DynResolver&gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::client::connect::http::impl$3::call::async_block_env$0 (1 samples, 0.41%)</title><rect x="34.4398%" y="533" width="0.4149%" height="15" fill="rgb(58,173,173)" fg:x="83" fg:w="1"/><text x="34.6898%" y="543.50"></text></g><g><title>osrs_gph.exe`hyper::client::connect::http::impl$4::call_async::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::client::connect::http::impl$4::call_async::async_fn_env$0 (1 samples, 0.41%)</title><rect x="34.4398%" y="517" width="0.4149%" height="15" fill="rgb(58,172,172)" fg:x="83" fg:w="1"/><text x="34.6898%" y="527.50"></text></g><g><title>osrs_gph.exe`hyper::client::connect::dns::resolve::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::client::connect::dns::resolve::async_fn_env$0 (1 samples, 0.41%)</title><rect x="34.4398%" y="501" width="0.4149%" height="15" fill="rgb(101,212,212)" fg:x="83" fg:w="1"/><text x="34.6898%" y="511.50"></text></g><g><title>osrs_gph.exe`reqwest::dns::gai::impl$2::resolve (1 samples, 0.41%)</title><rect x="34.4398%" y="485" width="0.4149%" height="15" fill="rgb(55,170,170)" fg:x="83" fg:w="1"/><text x="34.6898%" y="495.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::blocking::pool::spawn_blocking&lt;hyper::client::connect::dns::impl$7::call::closure_env$0,enum2$&lt;core::result::Result&lt;hyper::client::connect::dns::SocketAddrs,std::io::error::Error&gt; &gt; &gt; (1 samples, 0.41%)</title><rect x="34.4398%" y="469" width="0.4149%" height="15" fill="rgb(50,165,165)" fg:x="83" fg:w="1"/><text x="34.6898%" y="479.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="34.4398%" y="453" width="0.4149%" height="15" fill="rgb(56,170,170)" fg:x="83" fg:w="1"/><text x="34.6898%" y="463.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$ (1 samples, 0.41%)</title><rect x="34.4398%" y="437" width="0.4149%" height="15" fill="rgb(73,186,186)" fg:x="83" fg:w="1"/><text x="34.6898%" y="447.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::blocking::pool::Spawner::spawn_blocking&lt;hyper::client::connect::dns::impl$7::call::closure_env$0,enum2$&lt;core::result::Result&lt;hyper::client::connect::dns::SocketAddrs,std::io::error::Error&gt; &gt; &gt; (1 samples, 0.41%)</title><rect x="34.4398%" y="421" width="0.4149%" height="15" fill="rgb(83,195,195)" fg:x="83" fg:w="1"/><text x="34.6898%" y="431.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::blocking::pool::Spawner::spawn_task (1 samples, 0.41%)</title><rect x="34.4398%" y="405" width="0.4149%" height="15" fill="rgb(87,199,199)" fg:x="83" fg:w="1"/><text x="34.6898%" y="415.50"></text></g><g><title>osrs_gph.exe`std::thread::Builder::spawn_unchecked&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$&lt;&gt; &gt; (1 samples, 0.41%)</title><rect x="34.4398%" y="389" width="0.4149%" height="15" fill="rgb(80,193,193)" fg:x="83" fg:w="1"/><text x="34.6898%" y="399.50"></text></g><g><title>osrs_gph.exe`std::thread::Builder::spawn_unchecked_(std::thread::Builder, tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0, enum2$&lt;core::option::Option&lt;alloc::sync::Arc (1 samples, 0.41%)</title><rect x="34.4398%" y="373" width="0.4149%" height="15" fill="rgb(73,186,186)" fg:x="83" fg:w="1"/><text x="34.6898%" y="383.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::thread::Thread::new (1 samples, 0.41%)</title><rect x="34.4398%" y="357" width="0.4149%" height="15" fill="rgb(92,204,204)" fg:x="83" fg:w="1"/><text x="34.6898%" y="367.50"></text></g><g><title>`0x7FFE57DC44ED (1 samples, 0.41%)</title><rect x="34.4398%" y="341" width="0.4149%" height="15" fill="rgb(190,190,55)" fg:x="83" fg:w="1"/><text x="34.6898%" y="351.50"></text></g><g><title>`0x7FFE56B3F24F (1 samples, 0.41%)</title><rect x="34.4398%" y="325" width="0.4149%" height="15" fill="rgb(198,198,58)" fg:x="83" fg:w="1"/><text x="34.6898%" y="335.50"></text></g><g><title>`0x7FFE59450C44 (1 samples, 0.41%)</title><rect x="34.4398%" y="309" width="0.4149%" height="15" fill="rgb(205,205,60)" fg:x="83" fg:w="1"/><text x="34.6898%" y="319.50"></text></g><g><title>osrs_gph.exe`hyper::common::lazy::impl$1::poll&lt;hyper::client::client::impl$3::connect_to::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;,enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::try_future::AndThen&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt;,enum2$&lt;futures_util::future::either::Either&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;enum2$&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::alloc::Global&gt; &gt;,futures_util::future::ready::Ready&lt;enum2$&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::error::Error&gt; &gt; &gt; &gt; &gt;,hyper::client::client::impl$3::connect_to::closure$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::ready::Ready&lt;enum2$&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::error::Error&gt; &gt; &gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;hyper::common::lazy::Lazy&lt;hyper::client::client::impl$3::connect_to::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;,enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::try_future::AndThen&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt;,enum2$&lt;futures_util::future::either::Either&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;enum2$&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::alloc::Global&gt; &gt;,futures_util::future::ready::Ready&lt;enum2$&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::error::Error&gt; &gt; &gt; &gt; &gt;,hyper::client::client::impl$3::connect_to::closure$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::ready::Ready&lt;enum2$&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient (2 samples, 0.83%)</title><rect x="34.4398%" y="661" width="0.8299%" height="15" fill="rgb(95,206,206)" fg:x="83" fg:w="2"/><text x="34.6898%" y="671.50"></text></g><g><title>osrs_gph.exe`futures_util::future::try_future::try_flatten::impl$2::poll&lt;futures_util::future::try_future::MapOk&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt;,hyper::client::client::impl$3::connect_to::closure$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;futures_util::future::try_future::MapOk&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt;,hyper::client::client::impl$3::connect_to::closure$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,enum2$&lt;futures_util::future::either::Either&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;enum2$&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::alloc::Global&gt; &gt;,futures_util::future::ready::Ready&lt;enum2$&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient (2 samples, 0.83%)</title><rect x="34.4398%" y="645" width="0.8299%" height="15" fill="rgb(51,166,166)" fg:x="83" fg:w="2"/><text x="34.6898%" y="655.50"></text></g><g><title>osrs_gph.exe`futures_util::future::future::map::impl$2::poll&lt;futures_util::future::try_future::into_future::IntoFuture&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt; &gt;,futures_util::fns::MapOkFn&lt;hyper::client::client::impl$3::connect_to::closure$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;futures_util::future::either::Either&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;enum2$&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::alloc::Global&gt; &gt;,futures_util::future::ready::Ready&lt;enum2$&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::error::Error&gt; &gt; &gt; &gt; &gt;,hyper::error::Error&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;futures_util::future::future::map::Map&lt;futures_util::future::try_future::into_future::IntoFuture&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt; &gt;,futures_util::fns::MapOkFn&lt;hyper::client::client::impl$3::connect_to::closure$0::closure_env$0 (2 samples, 0.83%)</title><rect x="34.4398%" y="629" width="0.8299%" height="15" fill="rgb(62,176,176)" fg:x="83" fg:w="2"/><text x="34.6898%" y="639.50"></text></g><g><title>osrs_gph.exe`futures_util::future::future::map::impl$2::poll&lt;futures_util::future::try_future::into_future::IntoFuture&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt; &gt;,futures_util::fns::MapErrFn&lt;hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt;,enum2$&lt;core::result::Result&lt;reqwest::connect::Conn,hyper::error::Error&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;futures_util::future::future::map::Map&lt;futures_util::future::try_future::into_future::IntoFuture&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt; &gt;,futures_util::fns::MapErrFn&lt;hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$ (2 samples, 0.83%)</title><rect x="34.4398%" y="613" width="0.8299%" height="15" fill="rgb(106,216,216)" fg:x="83" fg:w="2"/><text x="34.6898%" y="623.50"></text></g><g><title>osrs_gph.exe`hyper::service::oneshot::impl$0::poll&lt;reqwest::connect::Connector,http::uri::Uri&gt;(core::pin::Pin&lt;ref_mut$&lt;hyper::service::oneshot::Oneshot (2 samples, 0.83%)</title><rect x="34.4398%" y="597" width="0.8299%" height="15" fill="rgb(77,190,190)" fg:x="83" fg:w="2"/><text x="34.6898%" y="607.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;hyper::service::oneshot::State&lt;reqwest::connect::Connector,http::uri::Uri&gt; &gt;::project(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::service::oneshot::State (1 samples, 0.41%)</title><rect x="34.8548%" y="581" width="0.4149%" height="15" fill="rgb(91,203,203)" fg:x="84" fg:w="1"/><text x="35.1048%" y="591.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;reqwest::connect::Connector&gt; (1 samples, 0.41%)</title><rect x="34.8548%" y="565" width="0.4149%" height="15" fill="rgb(104,214,214)" fg:x="84" fg:w="1"/><text x="35.1048%" y="575.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::common::impl$3::poll_flush(core::pin::Pin&lt;ref_mut$&lt;tokio_rustls::common::Stream (1 samples, 0.41%)</title><rect x="35.2697%" y="517" width="0.4149%" height="15" fill="rgb(60,174,174)" fg:x="85" fg:w="1"/><text x="35.5197%" y="527.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::common::Stream&lt;tokio::net::tcp::stream::TcpStream,rustls::client::client_conn::ClientConnection&gt;::write_io (1 samples, 0.41%)</title><rect x="35.2697%" y="501" width="0.4149%" height="15" fill="rgb(64,178,178)" fg:x="85" fg:w="1"/><text x="35.5197%" y="511.50"></text></g><g><title>osrs_gph.exe`rustls::vecbuf::ChunkVecBuffer::write_to(ref_mut$&lt;dyn$ (1 samples, 0.41%)</title><rect x="35.2697%" y="485" width="0.4149%" height="15" fill="rgb(102,213,213)" fg:x="85" fg:w="1"/><text x="35.5197%" y="495.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (1 samples, 0.41%)</title><rect x="35.2697%" y="469" width="0.4149%" height="15" fill="rgb(76,189,189)" fg:x="85" fg:w="1"/><text x="35.5197%" y="479.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::common::impl$1::write_io::impl$1::write_vectored&lt;tokio::net::tcp::stream::TcpStream&gt;(tokio_rustls::common::impl$1::write_io::Writer&lt;tokio::net::tcp::stream::TcpStream&gt;*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="35.2697%" y="453" width="0.4149%" height="15" fill="rgb(104,215,215)" fg:x="85" fg:w="1"/><text x="35.5197%" y="463.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::common::impl$1::write_io::Writer&lt;tokio::net::tcp::stream::TcpStream&gt;::poll_with(tokio_rustls::common::impl$1::write_io::impl$1::write_vectored::closure_env$0 (1 samples, 0.41%)</title><rect x="35.2697%" y="437" width="0.4149%" height="15" fill="rgb(77,190,190)" fg:x="85" fg:w="1"/><text x="35.5197%" y="447.50"></text></g><g><title>osrs_gph.exe`tokio::net::tcp::stream::impl$3::poll_write_vectored(core::pin::Pin&lt;ref_mut$&lt;tokio::net::tcp::stream::TcpStream&gt; &gt;, core::task::wake::Context*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="35.2697%" y="421" width="0.4149%" height="15" fill="rgb(69,182,182)" fg:x="85" fg:w="1"/><text x="35.5197%" y="431.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::io::registration::Registration::poll_io&lt;usize,tokio::io::poll_evented::impl$6::poll_write_vectored::closure_env$0&lt;mio::net::tcp::stream::TcpStream&gt; &gt;(core::task::wake::Context*, tokio::runtime::io::driver::Direction, tokio::io::poll_evented::impl$6::poll_write_vectored::closure_env$0 (1 samples, 0.41%)</title><rect x="35.2697%" y="405" width="0.4149%" height="15" fill="rgb(106,217,217)" fg:x="85" fg:w="1"/><text x="35.5197%" y="415.50"></text></g><g><title>osrs_gph.exe`mio::net::tcp::stream::impl$4::write_vectored(mio::net::tcp::stream::TcpStream**, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="35.2697%" y="389" width="0.4149%" height="15" fill="rgb(93,204,204)" fg:x="85" fg:w="1"/><text x="35.5197%" y="399.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::IoSourceState::do_io&lt;std::net::tcp::TcpStream,mio::net::tcp::stream::impl$3::write_vectored::closure_env$0,usize&gt; (1 samples, 0.41%)</title><rect x="35.2697%" y="373" width="0.4149%" height="15" fill="rgb(73,186,186)" fg:x="85" fg:w="1"/><text x="35.5197%" y="383.50"></text></g><g><title>osrs_gph.exe`std::net::tcp::impl$4::write_vectored (1 samples, 0.41%)</title><rect x="35.2697%" y="357" width="0.4149%" height="15" fill="rgb(83,196,196)" fg:x="85" fg:w="1"/><text x="35.5197%" y="367.50"></text></g><g><title>osrs_gph.exe`std::sys_common::net::TcpStream::write_vectored (1 samples, 0.41%)</title><rect x="35.2697%" y="341" width="0.4149%" height="15" fill="rgb(101,212,212)" fg:x="85" fg:w="1"/><text x="35.5197%" y="351.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::net::Socket::write_vectored (1 samples, 0.41%)</title><rect x="35.2697%" y="325" width="0.4149%" height="15" fill="rgb(87,199,199)" fg:x="85" fg:w="1"/><text x="35.5197%" y="335.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::net::cvt (1 samples, 0.41%)</title><rect x="35.2697%" y="309" width="0.4149%" height="15" fill="rgb(78,191,191)" fg:x="85" fg:w="1"/><text x="35.5197%" y="319.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::net::impl$11::is_minus_one (1 samples, 0.41%)</title><rect x="35.2697%" y="293" width="0.4149%" height="15" fill="rgb(82,194,194)" fg:x="85" fg:w="1"/><text x="35.5197%" y="303.50"></text></g><g><title>`0x7FFE579B282F (1 samples, 0.41%)</title><rect x="35.2697%" y="277" width="0.4149%" height="15" fill="rgb(186,186,54)" fg:x="85" fg:w="1"/><text x="35.5197%" y="287.50"></text></g><g><title>`0x7FFE55B522BA (1 samples, 0.41%)</title><rect x="35.2697%" y="261" width="0.4149%" height="15" fill="rgb(219,219,66)" fg:x="85" fg:w="1"/><text x="35.5197%" y="271.50"></text></g><g><title>`0x7FFE5944F454 (1 samples, 0.41%)</title><rect x="35.2697%" y="245" width="0.4149%" height="15" fill="rgb(175,175,50)" fg:x="85" fg:w="1"/><text x="35.5197%" y="255.50"></text></g><g><title>osrs_gph.exe`rustls::client::tls13::impl$4::handle(rustls::client::tls13::ExpectCertificateVerify*, rustls::common_state::Context (1 samples, 0.41%)</title><rect x="35.6846%" y="421" width="0.4149%" height="15" fill="rgb(80,192,192)" fg:x="86" fg:w="1"/><text x="35.9346%" y="431.50"></text></g><g><title>osrs_gph.exe`rustls::verify::impl$6::verify_server_cert(rustls::verify::WebPkiVerifier*, rustls::key::Certificate*, ref$&lt;slice2$&lt;rustls::key::Certificate&gt; &gt;, enum2$&lt;rustls::client::client_conn::ServerName&gt;*, ref_mut$&lt;dyn$&lt;core::iter::traits::iterator::Iterator&lt;assoc$&lt;Item,ref$&lt;slice2$&lt;u8&gt; &gt; &gt; &gt; &gt; &gt;, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="35.6846%" y="405" width="0.4149%" height="15" fill="rgb(74,187,187)" fg:x="86" fg:w="1"/><text x="35.9346%" y="415.50"></text></g><g><title>osrs_gph.exe`alloc::sync::impl$29::deref(alloc::sync::Arc (1 samples, 0.41%)</title><rect x="35.6846%" y="389" width="0.4149%" height="15" fill="rgb(62,176,176)" fg:x="86" fg:w="1"/><text x="35.9346%" y="399.50"></text></g><g><title>osrs_gph.exe`rustls::verify::verify_server_cert_signed_by_trust_anchor(rustls::key::ParsedCertificate*, rustls::anchors::RootCertStore*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="35.6846%" y="373" width="0.4149%" height="15" fill="rgb(79,192,192)" fg:x="86" fg:w="1"/><text x="35.9346%" y="383.50"></text></g><g><title>osrs_gph.exe`webpki::end_entity::EndEntityCert::verify_for_usage(ref$&lt;slice2$&lt;ref$&lt;webpki::signed_data::SignatureAlgorithm&gt; &gt; &gt;, ref$&lt;slice2$&lt;webpki::trust_anchor::TrustAnchor&gt; &gt;, ref$&lt;slice2$&lt;ref$&lt;slice2$&lt;u8&gt; &gt; &gt; &gt;, webpki::time::Time, webpki::verify_cert::KeyUsage, ref$&lt;slice2$&lt;ref$&lt;dyn$ (1 samples, 0.41%)</title><rect x="35.6846%" y="357" width="0.4149%" height="15" fill="rgb(83,195,195)" fg:x="86" fg:w="1"/><text x="35.9346%" y="367.50"></text></g><g><title>osrs_gph.exe`webpki::end_entity::EndEntityCert::verify_is_valid_cert(ref$&lt;slice2$&lt;ref$&lt;webpki::signed_data::SignatureAlgorithm&gt; &gt; &gt;, ref$&lt;slice2$&lt;webpki::trust_anchor::TrustAnchor&gt; &gt;, ref$&lt;slice2$&lt;ref$&lt;slice2$&lt;u8&gt; &gt; &gt; &gt;, webpki::time::Time, webpki::verify_cert::KeyUsage, ref$&lt;slice2$&lt;ref$&lt;dyn$ (1 samples, 0.41%)</title><rect x="35.6846%" y="341" width="0.4149%" height="15" fill="rgb(92,203,203)" fg:x="86" fg:w="1"/><text x="35.9346%" y="351.50"></text></g><g><title>osrs_gph.exe`webpki::verify_cert::build_chain (1 samples, 0.41%)</title><rect x="35.6846%" y="325" width="0.4149%" height="15" fill="rgb(53,168,168)" fg:x="86" fg:w="1"/><text x="35.9346%" y="335.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;webpki::error::Error,webpki::error::Error&gt; &gt; &gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow (1 samples, 0.41%)</title><rect x="35.6846%" y="309" width="0.4149%" height="15" fill="rgb(107,217,217)" fg:x="86" fg:w="1"/><text x="35.9346%" y="319.50"></text></g><g><title>osrs_gph.exe`webpki::verify_cert::build_chain_inner (1 samples, 0.41%)</title><rect x="35.6846%" y="293" width="0.4149%" height="15" fill="rgb(104,214,214)" fg:x="86" fg:w="1"/><text x="35.9346%" y="303.50"></text></g><g><title>osrs_gph.exe`webpki::verify_cert::loop_while_non_fatal_error(webpki::error::Error, ref$&lt;slice2$&lt;ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="35.6846%" y="277" width="0.4149%" height="15" fill="rgb(95,207,207)" fg:x="86" fg:w="1"/><text x="35.9346%" y="287.50"></text></g><g><title>osrs_gph.exe`webpki::verify_cert::build_chain_inner::closure$1(webpki::verify_cert::build_chain_inner::closure_env$1*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="35.6846%" y="261" width="0.4149%" height="15" fill="rgb(63,177,177)" fg:x="86" fg:w="1"/><text x="35.9346%" y="271.50"></text></g><g><title>osrs_gph.exe`webpki::verify_cert::build_chain_inner (1 samples, 0.41%)</title><rect x="35.6846%" y="245" width="0.4149%" height="15" fill="rgb(86,198,198)" fg:x="86" fg:w="1"/><text x="35.9346%" y="255.50"></text></g><g><title>osrs_gph.exe`webpki::verify_cert::loop_while_non_fatal_error(webpki::error::Error, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="35.6846%" y="229" width="0.4149%" height="15" fill="rgb(55,170,170)" fg:x="86" fg:w="1"/><text x="35.9346%" y="239.50"></text></g><g><title>osrs_gph.exe`webpki::verify_cert::build_chain_inner::closure$0 (1 samples, 0.41%)</title><rect x="35.6846%" y="213" width="0.4149%" height="15" fill="rgb(66,179,179)" fg:x="86" fg:w="1"/><text x="35.9346%" y="223.50"></text></g><g><title>osrs_gph.exe`webpki::verify_cert::check_signed_chain(ref$&lt;slice2$&lt;ref$&lt;webpki::signed_data::SignatureAlgorithm&gt; &gt; &gt;, webpki::cert::Cert*, webpki::trust_anchor::TrustAnchor*, ref$&lt;slice2$&lt;ref$&lt;dyn$ (1 samples, 0.41%)</title><rect x="35.6846%" y="197" width="0.4149%" height="15" fill="rgb(109,219,219)" fg:x="86" fg:w="1"/><text x="35.9346%" y="207.50"></text></g><g><title>osrs_gph.exe`webpki::signed_data::verify_signed_data(ref$&lt;slice2$&lt;ref$ (1 samples, 0.41%)</title><rect x="35.6846%" y="181" width="0.4149%" height="15" fill="rgb(107,217,217)" fg:x="86" fg:w="1"/><text x="35.9346%" y="191.50"></text></g><g><title>osrs_gph.exe`webpki::signed_data::verify_signature (1 samples, 0.41%)</title><rect x="35.6846%" y="165" width="0.4149%" height="15" fill="rgb(95,206,206)" fg:x="86" fg:w="1"/><text x="35.9346%" y="175.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,ring::error::Unspecified&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 0.41%)</title><rect x="35.6846%" y="149" width="0.4149%" height="15" fill="rgb(71,184,184)" fg:x="86" fg:w="1"/><text x="35.9346%" y="159.50"></text></g><g><title>osrs_gph.exe`ring::ec::suite_b::ecdsa::verification::impl$0::verify (1 samples, 0.41%)</title><rect x="35.6846%" y="133" width="0.4149%" height="15" fill="rgb(101,211,211)" fg:x="86" fg:w="1"/><text x="35.9346%" y="143.50"></text></g><g><title>osrs_gph.exe`ring::ec::suite_b::ecdsa::verification::EcdsaVerificationAlgorithm::verify_digest(untrusted::input::Input, ring::ec::suite_b::ops::elem::Elem&lt;enum2$&lt;ring::ec::suite_b::ops::N&gt;,enum2$ (1 samples, 0.41%)</title><rect x="35.6846%" y="117" width="0.4149%" height="15" fill="rgb(100,210,210)" fg:x="86" fg:w="1"/><text x="35.9346%" y="127.50"></text></g><g><title>osrs_gph.exe`ring::ec::suite_b::ops::ScalarOps::scalar_product(ring::ec::suite_b::ops::elem::Elem&lt;enum2$&lt;ring::ec::suite_b::ops::N&gt;,enum2$&lt;ring::arithmetic::montgomery::Unencoded&gt; &gt;*, ring::ec::suite_b::ops::elem::Elem&lt;enum2$&lt;ring::ec::suite_b::ops::N&gt;,enum2$ (1 samples, 0.41%)</title><rect x="35.6846%" y="101" width="0.4149%" height="15" fill="rgb(82,194,194)" fg:x="86" fg:w="1"/><text x="35.9346%" y="111.50"></text></g><g><title>osrs_gph.exe`core::ops::function::FnOnce::call_once&lt;ring::ec::suite_b::ops::p256::PUBLIC_SCALAR_OPS::closure_env$0,tuple$&lt;ref$&lt;ring::ec::suite_b::ops::elem::Elem&lt;enum2$&lt;ring::ec::suite_b::ops::N&gt;,enum2$&lt;ring::arithmetic::montgomery::Unencoded&gt; &gt; &gt; &gt; &gt;(ring::ec::suite_b::ops::p256::PUBLIC_SCALAR_OPS::closure_env$0, ring::ec::suite_b::ops::elem::Elem&lt;enum2$&lt;ring::ec::suite_b::ops::N&gt;,enum2$ (1 samples, 0.41%)</title><rect x="35.6846%" y="85" width="0.4149%" height="15" fill="rgb(58,172,172)" fg:x="86" fg:w="1"/><text x="35.9346%" y="95.50"></text></g><g><title>osrs_gph.exe`ring::ec::suite_b::ops::p256::p256_scalar_inv_to_mont(ring::ec::suite_b::ops::elem::Elem&lt;enum2$&lt;ring::ec::suite_b::ops::N&gt;,enum2$ (1 samples, 0.41%)</title><rect x="35.6846%" y="69" width="0.4149%" height="15" fill="rgb(104,215,215)" fg:x="86" fg:w="1"/><text x="35.9346%" y="79.50"></text></g><g><title>osrs_gph.exe`rustls::client::tls13::impl$0::handle(rustls::client::tls13::ExpectEncryptedExtensions*, rustls::common_state::Context (1 samples, 0.41%)</title><rect x="36.0996%" y="421" width="0.4149%" height="15" fill="rgb(52,167,167)" fg:x="87" fg:w="1"/><text x="36.3496%" y="431.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="36.0996%" y="405" width="0.4149%" height="15" fill="rgb(76,188,188)" fg:x="87" fg:w="1"/><text x="36.3496%" y="415.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$ (1 samples, 0.41%)</title><rect x="36.0996%" y="389" width="0.4149%" height="15" fill="rgb(75,187,187)" fg:x="87" fg:w="1"/><text x="36.3496%" y="399.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="36.0996%" y="373" width="0.4149%" height="15" fill="rgb(78,191,191)" fg:x="87" fg:w="1"/><text x="36.3496%" y="383.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.41%)</title><rect x="36.0996%" y="357" width="0.4149%" height="15" fill="rgb(99,210,210)" fg:x="87" fg:w="1"/><text x="36.3496%" y="367.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.41%)</title><rect x="36.0996%" y="341" width="0.4149%" height="15" fill="rgb(94,206,206)" fg:x="87" fg:w="1"/><text x="36.3496%" y="351.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1 samples, 0.41%)</title><rect x="36.0996%" y="325" width="0.4149%" height="15" fill="rgb(66,179,179)" fg:x="87" fg:w="1"/><text x="36.3496%" y="335.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;rustls::msgs::handshake::HandshakeMessagePayload&gt; (1 samples, 0.41%)</title><rect x="36.0996%" y="309" width="0.4149%" height="15" fill="rgb(79,192,192)" fg:x="87" fg:w="1"/><text x="36.3496%" y="319.50"></text></g><g><title>osrs_gph.exe`rustls::hash_hs::HandshakeHashBuffer::start_hash (1 samples, 0.41%)</title><rect x="36.5145%" y="389" width="0.4149%" height="15" fill="rgb(80,193,193)" fg:x="88" fg:w="1"/><text x="36.7645%" y="399.50"></text></g><g><title>osrs_gph.exe`ring::digest::Context::update(ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="36.5145%" y="373" width="0.4149%" height="15" fill="rgb(81,193,193)" fg:x="88" fg:w="1"/><text x="36.7645%" y="383.50"></text></g><g><title>osrs_gph.exe`ring::digest::BlockContext::update(ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="36.5145%" y="357" width="0.4149%" height="15" fill="rgb(96,207,207)" fg:x="88" fg:w="1"/><text x="36.7645%" y="367.50"></text></g><g><title>osrs_gph.exe`core::num::impl$9::checked_add (1 samples, 0.41%)</title><rect x="36.5145%" y="341" width="0.4149%" height="15" fill="rgb(104,215,215)" fg:x="88" fg:w="1"/><text x="36.7645%" y="351.50"></text></g><g><title>osrs_gph.exe`core::num::impl$9::overflowing_add (1 samples, 0.41%)</title><rect x="36.5145%" y="325" width="0.4149%" height="15" fill="rgb(67,180,180)" fg:x="88" fg:w="1"/><text x="36.7645%" y="335.50"></text></g><g><title>osrs_gph.exe`ring_core_0_17_7_sha512_block_data_order (1 samples, 0.41%)</title><rect x="36.5145%" y="309" width="0.4149%" height="15" fill="rgb(228,228,69)" fg:x="88" fg:w="1"/><text x="36.7645%" y="319.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::impl$9::poll(core::pin::Pin&lt;ref_mut$&lt;tokio_rustls::Connect (5 samples, 2.07%)</title><rect x="35.2697%" y="549" width="2.0747%" height="15" fill="rgb(85,197,197)" fg:x="85" fg:w="5"/><text x="35.5197%" y="559.50">o..</text></g><g><title>osrs_gph.exe`tokio_rustls::common::handshake::impl$0::poll(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;tokio_rustls::common::handshake::MidHandshake&lt;tokio_rustls::client::TlsStream (5 samples, 2.07%)</title><rect x="35.2697%" y="533" width="2.0747%" height="15" fill="rgb(76,189,189)" fg:x="85" fg:w="5"/><text x="35.5197%" y="543.50">o..</text></g><g><title>osrs_gph.exe`tokio_rustls::common::Stream&lt;tokio::net::tcp::stream::TcpStream,rustls::client::client_conn::ClientConnection&gt;::handshake&lt;tokio::net::tcp::stream::TcpStream,rustls::client::client_conn::ClientConnection,rustls::client::client_conn::ClientConnectionData&gt; (4 samples, 1.66%)</title><rect x="35.6846%" y="517" width="1.6598%" height="15" fill="rgb(78,190,190)" fg:x="86" fg:w="4"/><text x="35.9346%" y="527.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::common::Stream&lt;tokio::net::tcp::stream::TcpStream,rustls::client::client_conn::ClientConnection&gt;::read_io&lt;tokio::net::tcp::stream::TcpStream,rustls::client::client_conn::ClientConnection,rustls::client::client_conn::ClientConnectionData&gt; (4 samples, 1.66%)</title><rect x="35.6846%" y="501" width="1.6598%" height="15" fill="rgb(76,189,189)" fg:x="86" fg:w="4"/><text x="35.9346%" y="511.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;rustls::common_state::IoState,enum2$&lt;rustls::error::Error&gt; &gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;rustls::common_state::IoState,enum2$&lt;rustls::error::Error&gt; &gt; &gt;, tokio_rustls::common::impl$1::read_io::closure_env$0 (4 samples, 1.66%)</title><rect x="35.6846%" y="485" width="1.6598%" height="15" fill="rgb(88,200,200)" fg:x="86" fg:w="4"/><text x="35.9346%" y="495.50"></text></g><g><title>osrs_gph.exe`rustls::conn::ConnectionCore&lt;rustls::client::client_conn::ClientConnectionData&gt;::process_new_packets&lt;rustls::client::client_conn::ClientConnectionData&gt; (4 samples, 1.66%)</title><rect x="35.6846%" y="469" width="1.6598%" height="15" fill="rgb(52,167,167)" fg:x="86" fg:w="4"/><text x="35.9346%" y="479.50"></text></g><g><title>osrs_gph.exe`rustls::conn::ConnectionCore&lt;rustls::client::client_conn::ClientConnectionData&gt;::process_msg(rustls::msgs::message::PlainMessage, alloc::boxed::Box&lt;dyn$&lt;rustls::common_state::State (4 samples, 1.66%)</title><rect x="35.6846%" y="453" width="1.6598%" height="15" fill="rgb(85,197,197)" fg:x="86" fg:w="4"/><text x="35.9346%" y="463.50"></text></g><g><title>osrs_gph.exe`rustls::common_state::CommonState::process_main_protocol(rustls::msgs::message::Message, alloc::boxed::Box&lt;dyn$&lt;rustls::common_state::State (4 samples, 1.66%)</title><rect x="35.6846%" y="437" width="1.6598%" height="15" fill="rgb(100,211,211)" fg:x="86" fg:w="4"/><text x="35.9346%" y="447.50"></text></g><g><title>osrs_gph.exe`rustls::client::hs::impl$2::handle(rustls::client::hs::ExpectServerHelloOrHelloRetryRequest*, rustls::common_state::Context (2 samples, 0.83%)</title><rect x="36.5145%" y="421" width="0.8299%" height="15" fill="rgb(84,196,196)" fg:x="88" fg:w="2"/><text x="36.7645%" y="431.50"></text></g><g><title>osrs_gph.exe`rustls::client::hs::impl$0::handle(rustls::client::hs::ExpectServerHello*, rustls::common_state::Context (2 samples, 0.83%)</title><rect x="36.5145%" y="405" width="0.8299%" height="15" fill="rgb(76,188,188)" fg:x="88" fg:w="2"/><text x="36.7645%" y="415.50"></text></g><g><title>osrs_gph.exe`rustls::client::tls13::handle_server_hello(alloc::sync::Arc&lt;rustls::client::client_conn::ClientConfig,alloc::alloc::Global&gt;, rustls::common_state::Context&lt;rustls::client::client_conn::ClientConnectionData&gt;*, rustls::msgs::handshake::ServerHelloPayload*, enum2$&lt;core::option::Option&lt;rustls::msgs::persist::Tls13ClientSessionValue&gt; &gt;, enum2$&lt;rustls::client::client_conn::ServerName&gt;, rustls::conn::ConnectionRandoms, rustls::tls13::Tls13CipherSuite*, rustls::hash_hs::HandshakeHash, enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="36.9295%" y="389" width="0.4149%" height="15" fill="rgb(98,209,209)" fg:x="89" fg:w="1"/><text x="37.1795%" y="399.50"></text></g><g><title>osrs_gph.exe`rustls::client::tls13::emit_fake_ccs (1 samples, 0.41%)</title><rect x="36.9295%" y="373" width="0.4149%" height="15" fill="rgb(86,198,198)" fg:x="89" fg:w="1"/><text x="37.1795%" y="383.50"></text></g><g><title>osrs_gph.exe`rustls::tls13::key_schedule::KeyScheduleHandshakeStart::derive_client_handshake_secrets(rustls::tls13::key_schedule::KeyScheduleHandshakeStart, bool, ring::digest::Digest, rustls::tls13::Tls13CipherSuite*, ref$&lt;dyn$ (1 samples, 0.41%)</title><rect x="36.9295%" y="357" width="0.4149%" height="15" fill="rgb(105,216,216)" fg:x="89" fg:w="1"/><text x="37.1795%" y="367.50"></text></g><g><title>osrs_gph.exe`rustls::tls13::key_schedule::KeyScheduleHandshakeStart::into_handshake(rustls::tls13::key_schedule::KeyScheduleHandshakeStart, ring::digest::Digest, ref$&lt;dyn$ (1 samples, 0.41%)</title><rect x="36.9295%" y="341" width="0.4149%" height="15" fill="rgb(74,187,187)" fg:x="89" fg:w="1"/><text x="37.1795%" y="351.50"></text></g><g><title>osrs_gph.exe`ring::digest::impl$3::as_ref (1 samples, 0.41%)</title><rect x="36.9295%" y="325" width="0.4149%" height="15" fill="rgb(97,208,208)" fg:x="89" fg:w="1"/><text x="37.1795%" y="335.50"></text></g><g><title>osrs_gph.exe`rustls::tls13::key_schedule::KeySchedule::derive_logged_secret(rustls::tls13::key_schedule::SecretKind, ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;dyn$ (1 samples, 0.41%)</title><rect x="36.9295%" y="309" width="0.4149%" height="15" fill="rgb(98,209,209)" fg:x="89" fg:w="1"/><text x="37.1795%" y="319.50"></text></g><g><title>osrs_gph.exe`rustls::tls13::key_schedule::SecretKind::log_label (1 samples, 0.41%)</title><rect x="36.9295%" y="293" width="0.4149%" height="15" fill="rgb(106,217,217)" fg:x="89" fg:w="1"/><text x="37.1795%" y="303.50"></text></g><g><title>osrs_gph.exe`rustls::client::hs::emit_client_hello_for_retry(rustls::hash_hs::HandshakeHashBuffer, enum2$&lt;core::option::Option&lt;ref$&lt;rustls::msgs::handshake::HelloRetryRequest&gt; &gt; &gt;, enum2$&lt;core::option::Option&lt;rustls::kx::KeyExchange&gt; &gt;, alloc::vec::Vec&lt;enum2$&lt;rustls::msgs::handshake::ClientExtension&gt;,alloc::alloc::Global&gt;, bool, enum2$&lt;core::option::Option&lt;enum2$&lt;rustls::suites::SupportedCipherSuite&gt; &gt; &gt;, rustls::client::hs::ClientHelloInput, rustls::common_state::Context (1 samples, 0.41%)</title><rect x="37.3444%" y="437" width="0.4149%" height="15" fill="rgb(96,207,207)" fg:x="90" fg:w="1"/><text x="37.5944%" y="447.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::option::Option&lt;ref$&lt;rustls::msgs::handshake::HelloRetryRequest&gt; &gt; &gt;::and_then(enum2$&lt;core::option::Option&lt;ref$&lt;rustls::msgs::handshake::HelloRetryRequest&gt; &gt; &gt;, enum2$&lt;core::option::Option&lt;ref$&lt;rustls::msgs::base::PayloadU16&gt; &gt; &gt; (*) (1 samples, 0.41%)</title><rect x="37.3444%" y="421" width="0.4149%" height="15" fill="rgb(52,167,167)" fg:x="90" fg:w="1"/><text x="37.5944%" y="431.50"></text></g><g><title>osrs_gph.exe`rustls::msgs::handshake::impl$89::encode(rustls::msgs::handshake::HandshakeMessagePayload*, alloc::vec::Vec (1 samples, 0.41%)</title><rect x="37.3444%" y="405" width="0.4149%" height="15" fill="rgb(63,177,177)" fg:x="90" fg:w="1"/><text x="37.5944%" y="415.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;rustls::msgs::handshake::HandshakePayload&gt;::encode(alloc::vec::Vec (1 samples, 0.41%)</title><rect x="37.3444%" y="389" width="0.4149%" height="15" fill="rgb(82,195,195)" fg:x="90" fg:w="1"/><text x="37.5944%" y="399.50"></text></g><g><title>osrs_gph.exe`rustls::msgs::codec::impl$7::encode&lt;enum2$&lt;rustls::msgs::handshake::ClientExtension&gt; &gt;(alloc::vec::Vec&lt;enum2$&lt;rustls::msgs::handshake::ClientExtension&gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 0.41%)</title><rect x="37.3444%" y="373" width="0.4149%" height="15" fill="rgb(102,213,213)" fg:x="90" fg:w="1"/><text x="37.5944%" y="383.50"></text></g><g><title>osrs_gph.exe`rustls::msgs::handshake::impl$35::encode(enum2$&lt;rustls::msgs::handshake::ClientExtension&gt;*, alloc::vec::Vec (1 samples, 0.41%)</title><rect x="37.3444%" y="357" width="0.4149%" height="15" fill="rgb(100,211,211)" fg:x="90" fg:w="1"/><text x="37.5944%" y="367.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;rustls::msgs::handshake::ClientExtension&gt;::get_type (1 samples, 0.41%)</title><rect x="37.3444%" y="341" width="0.4149%" height="15" fill="rgb(82,194,194)" fg:x="90" fg:w="1"/><text x="37.5944%" y="351.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::TlsConnector::connect(enum2$ (2 samples, 0.83%)</title><rect x="37.3444%" y="549" width="0.8299%" height="15" fill="rgb(102,212,212)" fg:x="90" fg:w="2"/><text x="37.5944%" y="559.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::TlsConnector::connect_with(enum2$&lt;rustls::client::client_conn::ServerName&gt;, tokio::net::tcp::stream::TcpStream, tokio_rustls::impl$2::connect::closure_env$0 (2 samples, 0.83%)</title><rect x="37.3444%" y="533" width="0.8299%" height="15" fill="rgb(65,179,179)" fg:x="90" fg:w="2"/><text x="37.5944%" y="543.50"></text></g><g><title>osrs_gph.exe`rustls::client::client_conn::ClientConnection::new(alloc::sync::Arc&lt;rustls::client::client_conn::ClientConfig,alloc::alloc::Global&gt;, enum2$ (2 samples, 0.83%)</title><rect x="37.3444%" y="517" width="0.8299%" height="15" fill="rgb(59,173,173)" fg:x="90" fg:w="2"/><text x="37.5944%" y="527.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;enum2$&lt;rustls::msgs::handshake::ClientExtension&gt;,alloc::alloc::Global&gt;::new (2 samples, 0.83%)</title><rect x="37.3444%" y="501" width="0.8299%" height="15" fill="rgb(67,180,180)" fg:x="90" fg:w="2"/><text x="37.5944%" y="511.50"></text></g><g><title>osrs_gph.exe`rustls::conn::ConnectionCore&lt;rustls::client::client_conn::ClientConnectionData&gt;::for_client(alloc::sync::Arc&lt;rustls::client::client_conn::ClientConfig,alloc::alloc::Global&gt;, enum2$&lt;rustls::client::client_conn::ServerName&gt;, alloc::vec::Vec&lt;enum2$&lt;rustls::msgs::handshake::ClientExtension&gt;,alloc::alloc::Global&gt;, enum2$ (2 samples, 0.83%)</title><rect x="37.3444%" y="485" width="0.8299%" height="15" fill="rgb(91,202,202)" fg:x="90" fg:w="2"/><text x="37.5944%" y="495.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;alloc::boxed::Box&lt;dyn$&lt;rustls::common_state::State&lt;rustls::client::client_conn::ClientConnectionData&gt; &gt;,alloc::alloc::Global&gt;,enum2$ (2 samples, 0.83%)</title><rect x="37.3444%" y="469" width="0.8299%" height="15" fill="rgb(50,165,165)" fg:x="90" fg:w="2"/><text x="37.5944%" y="479.50"></text></g><g><title>osrs_gph.exe`rustls::client::hs::start_handshake(enum2$&lt;rustls::client::client_conn::ServerName&gt;, alloc::vec::Vec&lt;enum2$&lt;rustls::msgs::handshake::ClientExtension&gt;,alloc::alloc::Global&gt;, alloc::sync::Arc&lt;rustls::client::client_conn::ClientConfig,alloc::alloc::Global&gt;, rustls::common_state::Context (2 samples, 0.83%)</title><rect x="37.3444%" y="453" width="0.8299%" height="15" fill="rgb(87,199,199)" fg:x="90" fg:w="2"/><text x="37.5944%" y="463.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;rustls::kx::KeyExchange,enum2$ (1 samples, 0.41%)</title><rect x="37.7593%" y="437" width="0.4149%" height="15" fill="rgb(56,171,171)" fg:x="91" fg:w="1"/><text x="38.0093%" y="447.50"></text></g><g><title>osrs_gph.exe`rustls::client::tls13::initial_key_share(rustls::client::client_conn::ClientConfig*, enum2$ (1 samples, 0.41%)</title><rect x="37.7593%" y="421" width="0.4149%" height="15" fill="rgb(89,201,201)" fg:x="91" fg:w="1"/><text x="38.0093%" y="431.50"></text></g><g><title>osrs_gph.exe`rustls::kx::KeyExchange::start (1 samples, 0.41%)</title><rect x="37.7593%" y="405" width="0.4149%" height="15" fill="rgb(70,183,183)" fg:x="91" fg:w="1"/><text x="38.0093%" y="415.50"></text></g><g><title>osrs_gph.exe`ring::agreement::EphemeralPrivateKey::compute_public_key (1 samples, 0.41%)</title><rect x="37.7593%" y="389" width="0.4149%" height="15" fill="rgb(51,166,166)" fg:x="91" fg:w="1"/><text x="38.0093%" y="399.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;ring::ec::keys::PublicKey,ring::error::Unspecified&gt; &gt;::map(enum2$&lt;core::result::Result (1 samples, 0.41%)</title><rect x="37.7593%" y="373" width="0.4149%" height="15" fill="rgb(109,219,219)" fg:x="91" fg:w="1"/><text x="38.0093%" y="383.50"></text></g><g><title>osrs_gph.exe`ring::ec::keys::Seed::compute_public_key (1 samples, 0.41%)</title><rect x="37.7593%" y="357" width="0.4149%" height="15" fill="rgb(104,214,214)" fg:x="91" fg:w="1"/><text x="38.0093%" y="367.50"></text></g><g><title>osrs_gph.exe`ring::ec::curve25519::x25519::x25519_public_from_private(ref_mut$&lt;slice2$ (1 samples, 0.41%)</title><rect x="37.7593%" y="341" width="0.4149%" height="15" fill="rgb(80,192,192)" fg:x="91" fg:w="1"/><text x="38.0093%" y="351.50"></text></g><g><title>osrs_gph.exe`ring_core_0_17_7_x25519_public_from_private_generic_masked(unsigned char*, unsigned char const*, int) (1 samples, 0.41%)</title><rect x="37.7593%" y="325" width="0.4149%" height="15" fill="rgb(220,220,66)" fg:x="91" fg:w="1"/><text x="38.0093%" y="335.50"></text></g><g><title>osrs_gph.exe`fe_add(fe_loose*, fe const*, fe const*) (1 samples, 0.41%)</title><rect x="37.7593%" y="309" width="0.4149%" height="15" fill="rgb(229,229,69)" fg:x="91" fg:w="1"/><text x="38.0093%" y="319.50"></text></g><g><title>osrs_gph.exe`fiat_25519_add(unsigned long long*, unsigned long long const*, unsigned long long const*) (1 samples, 0.41%)</title><rect x="37.7593%" y="293" width="0.4149%" height="15" fill="rgb(194,194,57)" fg:x="91" fg:w="1"/><text x="38.0093%" y="303.50"></text></g><g><title>osrs_gph.exe`ring_core_0_17_7_x25519_ge_scalarmult_base(ge_p3*, unsigned char const*, int) (1 samples, 0.41%)</title><rect x="37.7593%" y="277" width="0.4149%" height="15" fill="rgb(229,229,69)" fg:x="91" fg:w="1"/><text x="38.0093%" y="287.50"></text></g><g><title>osrs_gph.exe`table_select(ge_precomp*, const int, const char) (1 samples, 0.41%)</title><rect x="37.7593%" y="261" width="0.4149%" height="15" fill="rgb(221,221,66)" fg:x="91" fg:w="1"/><text x="38.0093%" y="271.50"></text></g><g><title>osrs_gph.exe`constant_time_conditional_memxor(void*, void const*, const unsigned long long, const unsigned long long) (1 samples, 0.41%)</title><rect x="37.7593%" y="245" width="0.4149%" height="15" fill="rgb(223,223,67)" fg:x="91" fg:w="1"/><text x="38.0093%" y="255.50"></text></g><g><title>osrs_gph.exe`socket2::socket::Socket::connect (1 samples, 0.41%)</title><rect x="38.1743%" y="453" width="0.4149%" height="15" fill="rgb(83,195,195)" fg:x="92" fg:w="1"/><text x="38.4243%" y="463.50"></text></g><g><title>osrs_gph.exe`socket2::sys::connect (1 samples, 0.41%)</title><rect x="38.1743%" y="437" width="0.4149%" height="15" fill="rgb(102,213,213)" fg:x="92" fg:w="1"/><text x="38.4243%" y="447.50"></text></g><g><title>`0x7FFE579C3394 (1 samples, 0.41%)</title><rect x="38.1743%" y="421" width="0.4149%" height="15" fill="rgb(200,200,59)" fg:x="92" fg:w="1"/><text x="38.4243%" y="431.50"></text></g><g><title>`0x7FFE579C34B1 (1 samples, 0.41%)</title><rect x="38.1743%" y="405" width="0.4149%" height="15" fill="rgb(177,177,50)" fg:x="92" fg:w="1"/><text x="38.4243%" y="415.50"></text></g><g><title>`0x7FFE55B5B870 (1 samples, 0.41%)</title><rect x="38.1743%" y="389" width="0.4149%" height="15" fill="rgb(226,226,68)" fg:x="92" fg:w="1"/><text x="38.4243%" y="399.50"></text></g><g><title>`0x7FFE55B5B71F (1 samples, 0.41%)</title><rect x="38.1743%" y="373" width="0.4149%" height="15" fill="rgb(222,222,67)" fg:x="92" fg:w="1"/><text x="38.4243%" y="383.50"></text></g><g><title>`0x7FFE55B5BC38 (1 samples, 0.41%)</title><rect x="38.1743%" y="357" width="0.4149%" height="15" fill="rgb(195,195,57)" fg:x="92" fg:w="1"/><text x="38.4243%" y="367.50"></text></g><g><title>`0x7FFE55B5CB65 (1 samples, 0.41%)</title><rect x="38.1743%" y="341" width="0.4149%" height="15" fill="rgb(200,200,59)" fg:x="92" fg:w="1"/><text x="38.4243%" y="351.50"></text></g><g><title>`0x7FFE57DC44ED (1 samples, 0.41%)</title><rect x="38.1743%" y="325" width="0.4149%" height="15" fill="rgb(225,225,68)" fg:x="92" fg:w="1"/><text x="38.4243%" y="335.50"></text></g><g><title>`0x7FFE56B3F24F (1 samples, 0.41%)</title><rect x="38.1743%" y="309" width="0.4149%" height="15" fill="rgb(178,178,51)" fg:x="92" fg:w="1"/><text x="38.4243%" y="319.50"></text></g><g><title>`0x7FFE59450C44 (1 samples, 0.41%)</title><rect x="38.1743%" y="293" width="0.4149%" height="15" fill="rgb(189,189,55)" fg:x="92" fg:w="1"/><text x="38.4243%" y="303.50"></text></g><g><title>osrs_gph.exe`hyper::client::connect::http::connect::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (2 samples, 0.83%)</title><rect x="38.1743%" y="485" width="0.8299%" height="15" fill="rgb(94,206,206)" fg:x="92" fg:w="2"/><text x="38.4243%" y="495.50"></text></g><g><title>osrs_gph.exe`tokio::net::tcp::socket::impl$0::connect::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (2 samples, 0.83%)</title><rect x="38.1743%" y="469" width="0.8299%" height="15" fill="rgb(102,213,213)" fg:x="92" fg:w="2"/><text x="38.4243%" y="479.50"></text></g><g><title>osrs_gph.exe`core::cmp::PartialEq::ne (1 samples, 0.41%)</title><rect x="38.5892%" y="453" width="0.4149%" height="15" fill="rgb(104,214,214)" fg:x="93" fg:w="1"/><text x="38.8392%" y="463.50"></text></g><g><title>osrs_gph.exe`std::io::error::impl$20::eq (1 samples, 0.41%)</title><rect x="38.5892%" y="437" width="0.4149%" height="15" fill="rgb(58,172,172)" fg:x="93" fg:w="1"/><text x="38.8392%" y="447.50"></text></g><g><title>osrs_gph.exe`std::io::error::Error::kind (1 samples, 0.41%)</title><rect x="38.5892%" y="421" width="0.4149%" height="15" fill="rgb(54,168,168)" fg:x="93" fg:w="1"/><text x="38.8392%" y="431.50"></text></g><g><title>osrs_gph.exe`std::io::error::repr_bitpacked::Repr::data (1 samples, 0.41%)</title><rect x="38.5892%" y="405" width="0.4149%" height="15" fill="rgb(106,216,216)" fg:x="93" fg:w="1"/><text x="38.8392%" y="415.50"></text></g><g><title>osrs_gph.exe`std::io::error::repr_bitpacked::decode_repr(core::ptr::non_null::NonNull&lt;tuple$ (1 samples, 0.41%)</title><rect x="38.5892%" y="389" width="0.4149%" height="15" fill="rgb(107,217,217)" fg:x="93" fg:w="1"/><text x="38.8392%" y="399.50"></text></g><g><title>osrs_gph.exe`socket2::sys::init (1 samples, 0.41%)</title><rect x="39.0041%" y="389" width="0.4149%" height="15" fill="rgb(93,204,204)" fg:x="94" fg:w="1"/><text x="39.2541%" y="399.50"></text></g><g><title>osrs_gph.exe`std::sync::once::Once::call_once (1 samples, 0.41%)</title><rect x="39.0041%" y="373" width="0.4149%" height="15" fill="rgb(84,196,196)" fg:x="94" fg:w="1"/><text x="39.2541%" y="383.50"></text></g><g><title>osrs_gph.exe`std::sys_common::once::queue::Once::call (1 samples, 0.41%)</title><rect x="39.0041%" y="357" width="0.4149%" height="15" fill="rgb(64,178,178)" fg:x="94" fg:w="1"/><text x="39.2541%" y="367.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell::get (1 samples, 0.41%)</title><rect x="39.0041%" y="341" width="0.4149%" height="15" fill="rgb(95,206,206)" fg:x="94" fg:w="1"/><text x="39.2541%" y="351.50"></text></g><g><title>osrs_gph.exe`std::sync::once::impl$2::call_once::closure$0&lt;socket2::sys::init::closure_env$0&gt;(std::sync::once::impl$2::call_once::closure_env$0 (1 samples, 0.41%)</title><rect x="39.0041%" y="325" width="0.4149%" height="15" fill="rgb(99,210,210)" fg:x="94" fg:w="1"/><text x="39.2541%" y="335.50"></text></g><g><title>osrs_gph.exe`socket2::sys::init::closure$0 (1 samples, 0.41%)</title><rect x="39.0041%" y="309" width="0.4149%" height="15" fill="rgb(76,189,189)" fg:x="94" fg:w="1"/><text x="39.2541%" y="319.50"></text></g><g><title>osrs_gph.exe`std::net::udp::UdpSocket::bind(ref$ (1 samples, 0.41%)</title><rect x="39.0041%" y="293" width="0.4149%" height="15" fill="rgb(99,210,210)" fg:x="94" fg:w="1"/><text x="39.2541%" y="303.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;std::sys_common::net::UdpSocket,std::io::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;std::sys_common::net::UdpSocket,std::io::error::Error&gt; &gt;, std::net::udp::UdpSocket (*) (1 samples, 0.41%)</title><rect x="39.0041%" y="277" width="0.4149%" height="15" fill="rgb(109,219,219)" fg:x="94" fg:w="1"/><text x="39.2541%" y="287.50"></text></g><g><title>osrs_gph.exe`std::net::each_addr&lt;ref$&lt;str$&gt;,enum2$&lt;core::result::Result&lt;std::sys_common::net::UdpSocket,std::io::error::Error&gt; &gt; (*)(enum2$&lt;core::result::Result&lt;ref$&lt;enum2$&lt;core::net::socket_addr::SocketAddr&gt; &gt;,std::io::error::Error&gt; &gt;),std::sys_common::net::UdpSocket&gt;(ref$&lt;str$&gt;, enum2$&lt;core::result::Result&lt;std::sys_common::net::UdpSocket,std::io::error::Error&gt; &gt; (*)(enum2$&lt;core::result::Result&lt;ref$&lt;enum2$ (1 samples, 0.41%)</title><rect x="39.0041%" y="261" width="0.4149%" height="15" fill="rgb(59,173,173)" fg:x="94" fg:w="1"/><text x="39.2541%" y="271.50"></text></g><g><title>osrs_gph.exe`std::sys_common::net::UdpSocket::bind (1 samples, 0.41%)</title><rect x="39.0041%" y="245" width="0.4149%" height="15" fill="rgb(77,190,190)" fg:x="94" fg:w="1"/><text x="39.2541%" y="255.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch (1 samples, 0.41%)</title><rect x="39.0041%" y="229" width="0.4149%" height="15" fill="rgb(73,186,186)" fg:x="94" fg:w="1"/><text x="39.2541%" y="239.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::net::Socket::new (1 samples, 0.41%)</title><rect x="39.0041%" y="213" width="0.4149%" height="15" fill="rgb(52,167,167)" fg:x="94" fg:w="1"/><text x="39.2541%" y="223.50"></text></g><g><title>`0x7FFE579BA2E9 (1 samples, 0.41%)</title><rect x="39.0041%" y="197" width="0.4149%" height="15" fill="rgb(207,207,61)" fg:x="94" fg:w="1"/><text x="39.2541%" y="207.50"></text></g><g><title>`0x7FFE55B56D24 (1 samples, 0.41%)</title><rect x="39.0041%" y="181" width="0.4149%" height="15" fill="rgb(227,227,69)" fg:x="94" fg:w="1"/><text x="39.2541%" y="191.50"></text></g><g><title>`0x7FFE55B57393 (1 samples, 0.41%)</title><rect x="39.0041%" y="165" width="0.4149%" height="15" fill="rgb(198,198,58)" fg:x="94" fg:w="1"/><text x="39.2541%" y="175.50"></text></g><g><title>`0x7FFE5944FE14 (1 samples, 0.41%)</title><rect x="39.0041%" y="149" width="0.4149%" height="15" fill="rgb(229,229,69)" fg:x="94" fg:w="1"/><text x="39.2541%" y="159.50"></text></g><g><title>osrs_gph.exe`futures_util::future::future::map::impl$2::poll&lt;futures_util::future::try_future::into_future::IntoFuture&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt; &gt;,futures_util::fns::MapOkFn&lt;hyper::client::client::impl$3::connect_to::closure$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;futures_util::future::either::Either&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;enum2$&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::alloc::Global&gt; &gt;,futures_util::future::ready::Ready&lt;enum2$&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::error::Error&gt; &gt; &gt; &gt; &gt;,hyper::error::Error&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;futures_util::future::future::map::Map&lt;futures_util::future::try_future::into_future::IntoFuture&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt; &gt;,futures_util::fns::MapOkFn&lt;hyper::client::client::impl$3::connect_to::closure$0::closure_env$0 (11 samples, 4.56%)</title><rect x="35.2697%" y="645" width="4.5643%" height="15" fill="rgb(67,180,180)" fg:x="85" fg:w="11"/><text x="35.5197%" y="655.50">osrs_..</text></g><g><title>osrs_gph.exe`futures_util::future::future::map::impl$2::poll&lt;futures_util::future::try_future::into_future::IntoFuture&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt; &gt;,futures_util::fns::MapErrFn&lt;hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt;,enum2$&lt;core::result::Result&lt;reqwest::connect::Conn,hyper::error::Error&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;futures_util::future::future::map::Map&lt;futures_util::future::try_future::into_future::IntoFuture&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt; &gt;,futures_util::fns::MapErrFn&lt;hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$ (11 samples, 4.56%)</title><rect x="35.2697%" y="629" width="4.5643%" height="15" fill="rgb(85,197,197)" fg:x="85" fg:w="11"/><text x="35.5197%" y="639.50">osrs_..</text></g><g><title>osrs_gph.exe`hyper::service::oneshot::impl$0::poll&lt;reqwest::connect::Connector,http::uri::Uri&gt;(core::pin::Pin&lt;ref_mut$&lt;hyper::service::oneshot::Oneshot (11 samples, 4.56%)</title><rect x="35.2697%" y="613" width="4.5643%" height="15" fill="rgb(96,207,207)" fg:x="85" fg:w="11"/><text x="35.5197%" y="623.50">osrs_..</text></g><g><title>osrs_gph.exe`reqwest::connect::with_timeout::async_fn$0&lt;reqwest::connect::Conn,enum2$&lt;reqwest::connect::impl$0::connect_with_maybe_proxy::async_fn_env$0&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;reqwest::connect::with_timeout::async_fn_env$0&lt;reqwest::connect::Conn,enum2$ (11 samples, 4.56%)</title><rect x="35.2697%" y="597" width="4.5643%" height="15" fill="rgb(91,203,203)" fg:x="85" fg:w="11"/><text x="35.5197%" y="607.50">osrs_..</text></g><g><title>osrs_gph.exe`reqwest::connect::impl$0::connect_with_maybe_proxy::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (11 samples, 4.56%)</title><rect x="35.2697%" y="581" width="4.5643%" height="15" fill="rgb(72,185,185)" fg:x="85" fg:w="11"/><text x="35.5197%" y="591.50">osrs_..</text></g><g><title>osrs_gph.exe`hyper_rustls::connector::impl$3::call::async_block$3&lt;hyper::client::connect::http::HttpConnector&lt;reqwest::dns::resolve::DynResolver&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper_rustls::connector::impl$3::call::async_block_env$3&lt;hyper::client::connect::http::HttpConnector (11 samples, 4.56%)</title><rect x="35.2697%" y="565" width="4.5643%" height="15" fill="rgb(82,195,195)" fg:x="85" fg:w="11"/><text x="35.5197%" y="575.50">osrs_..</text></g><g><title>osrs_gph.exe`hyper::client::connect::http::impl$3::call::async_block$0&lt;reqwest::dns::resolve::DynResolver&gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::client::connect::http::impl$3::call::async_block_env$0 (4 samples, 1.66%)</title><rect x="38.1743%" y="549" width="1.6598%" height="15" fill="rgb(64,178,178)" fg:x="92" fg:w="4"/><text x="38.4243%" y="559.50"></text></g><g><title>osrs_gph.exe`hyper::client::connect::http::impl$4::call_async::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::client::connect::http::impl$4::call_async::async_fn_env$0 (4 samples, 1.66%)</title><rect x="38.1743%" y="533" width="1.6598%" height="15" fill="rgb(103,213,213)" fg:x="92" fg:w="4"/><text x="38.4243%" y="543.50"></text></g><g><title>osrs_gph.exe`hyper::client::connect::http::impl$15::connect::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (4 samples, 1.66%)</title><rect x="38.1743%" y="517" width="1.6598%" height="15" fill="rgb(65,179,179)" fg:x="92" fg:w="4"/><text x="38.4243%" y="527.50"></text></g><g><title>osrs_gph.exe`hyper::client::connect::http::impl$14::connect::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (4 samples, 1.66%)</title><rect x="38.1743%" y="501" width="1.6598%" height="15" fill="rgb(100,211,211)" fg:x="92" fg:w="4"/><text x="38.4243%" y="511.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$ (2 samples, 0.83%)</title><rect x="39.0041%" y="485" width="0.8299%" height="15" fill="rgb(54,168,168)" fg:x="94" fg:w="2"/><text x="39.2541%" y="495.50"></text></g><g><title>osrs_gph.exe`hyper::client::connect::http::connect(enum2$&lt;core::net::socket_addr::SocketAddr&gt;*, hyper::client::connect::http::Config*, enum2$&lt;core::option::Option (2 samples, 0.83%)</title><rect x="39.0041%" y="469" width="0.8299%" height="15" fill="rgb(50,165,165)" fg:x="94" fg:w="2"/><text x="39.2541%" y="479.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;socket2::socket::Socket,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;socket2::socket::Socket,std::io::error::Error&gt; &gt;, hyper::client::connect::http::impl$8::m::closure_env$0&lt;ref$ (2 samples, 0.83%)</title><rect x="39.0041%" y="453" width="0.8299%" height="15" fill="rgb(83,195,195)" fg:x="94" fg:w="2"/><text x="39.2541%" y="463.50"></text></g><g><title>osrs_gph.exe`socket2::socket::Socket::new(socket2::Domain, socket2::Type, enum2$&lt;core::option::Option (2 samples, 0.83%)</title><rect x="39.0041%" y="437" width="0.8299%" height="15" fill="rgb(106,216,216)" fg:x="94" fg:w="2"/><text x="39.2541%" y="447.50"></text></g><g><title>osrs_gph.exe`socket2::socket::Socket::new_raw(socket2::Domain, socket2::Type, enum2$&lt;core::option::Option (2 samples, 0.83%)</title><rect x="39.0041%" y="421" width="0.8299%" height="15" fill="rgb(62,176,176)" fg:x="94" fg:w="2"/><text x="39.2541%" y="431.50"></text></g><g><title>osrs_gph.exe`socket2::sys::socket (2 samples, 0.83%)</title><rect x="39.0041%" y="405" width="0.8299%" height="15" fill="rgb(97,208,208)" fg:x="94" fg:w="2"/><text x="39.2541%" y="415.50"></text></g><g><title>`0x7FFE579BA2E9 (1 samples, 0.41%)</title><rect x="39.4191%" y="389" width="0.4149%" height="15" fill="rgb(227,227,68)" fg:x="95" fg:w="1"/><text x="39.6691%" y="399.50"></text></g><g><title>`0x7FFE55B56D24 (1 samples, 0.41%)</title><rect x="39.4191%" y="373" width="0.4149%" height="15" fill="rgb(189,189,55)" fg:x="95" fg:w="1"/><text x="39.6691%" y="383.50"></text></g><g><title>`0x7FFE55B57393 (1 samples, 0.41%)</title><rect x="39.4191%" y="357" width="0.4149%" height="15" fill="rgb(225,225,68)" fg:x="95" fg:w="1"/><text x="39.6691%" y="367.50"></text></g><g><title>`0x7FFE5944FE14 (1 samples, 0.41%)</title><rect x="39.4191%" y="341" width="0.4149%" height="15" fill="rgb(193,193,56)" fg:x="95" fg:w="1"/><text x="39.6691%" y="351.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::Harness&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;::poll&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;(tokio::runtime::task::harness::Harness&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt;,alloc::sync::Arc (14 samples, 5.81%)</title><rect x="34.4398%" y="917" width="5.8091%" height="15" fill="rgb(76,189,189)" fg:x="83" fg:w="14"/><text x="34.6898%" y="927.50">osrs_gp..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::Harness&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;::poll_inner (14 samples, 5.81%)</title><rect x="34.4398%" y="901" width="5.8091%" height="15" fill="rgb(101,212,212)" fg:x="83" fg:w="14"/><text x="34.6898%" y="911.50">osrs_gp..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::poll_future(tokio::runtime::task::core::Core&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt;,alloc::sync::Arc (14 samples, 5.81%)</title><rect x="34.4398%" y="885" width="5.8091%" height="15" fill="rgb(75,188,188)" fg:x="83" fg:w="14"/><text x="34.6898%" y="895.50">osrs_gp..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::core::Core&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt;::poll&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt; (14 samples, 5.81%)</title><rect x="34.4398%" y="869" width="5.8091%" height="15" fill="rgb(73,186,186)" fg:x="83" fg:w="14"/><text x="34.6898%" y="879.50">osrs_gp..</text></g><g><title>osrs_gph.exe`tokio::loom::std::unsafe_cell::UnsafeCell&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt; &gt; &gt; &gt;::with_mut(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt;,alloc::sync::Arc (14 samples, 5.81%)</title><rect x="34.4398%" y="853" width="5.8091%" height="15" fill="rgb(95,207,207)" fg:x="83" fg:w="14"/><text x="34.6898%" y="863.50">osrs_gp..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::core::impl$6::poll::closure$0(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt;, enum2$&lt;tokio::runtime::task::core::Stage&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0 (14 samples, 5.81%)</title><rect x="34.4398%" y="837" width="5.8091%" height="15" fill="rgb(69,182,182)" fg:x="83" fg:w="14"/><text x="34.6898%" y="847.50">osrs_gp..</text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (14 samples, 5.81%)</title><rect x="34.4398%" y="821" width="5.8091%" height="15" fill="rgb(66,180,180)" fg:x="83" fg:w="14"/><text x="34.6898%" y="831.50">osrs_gp..</text></g><g><title>osrs_gph.exe`reqwest::blocking::client::forward::async_fn$0&lt;reqwest::async_impl::client::Pending&gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0 (14 samples, 5.81%)</title><rect x="34.4398%" y="805" width="5.8091%" height="15" fill="rgb(71,184,184)" fg:x="83" fg:w="14"/><text x="34.6898%" y="815.50">osrs_gp..</text></g><g><title>osrs_gph.exe`futures_util::future::poll_fn::impl$2::poll(core::pin::Pin&lt;ref_mut$&lt;futures_util::future::poll_fn::PollFn&lt;reqwest::blocking::client::forward::async_fn$0::closure_env$0 (14 samples, 5.81%)</title><rect x="34.4398%" y="789" width="5.8091%" height="15" fill="rgb(78,190,190)" fg:x="83" fg:w="14"/><text x="34.6898%" y="799.50">osrs_gp..</text></g><g><title>osrs_gph.exe`reqwest::blocking::client::forward::async_fn$0::closure$0(reqwest::blocking::client::forward::async_fn$0::closure_env$0 (14 samples, 5.81%)</title><rect x="34.4398%" y="773" width="5.8091%" height="15" fill="rgb(50,165,165)" fg:x="83" fg:w="14"/><text x="34.6898%" y="783.50">osrs_gp..</text></g><g><title>osrs_gph.exe`reqwest::async_impl::client::impl$13::poll(core::pin::Pin&lt;ref_mut$ (14 samples, 5.81%)</title><rect x="34.4398%" y="757" width="5.8091%" height="15" fill="rgb(75,188,188)" fg:x="83" fg:w="14"/><text x="34.6898%" y="767.50">osrs_gp..</text></g><g><title>osrs_gph.exe`hyper::client::client::impl$10::poll(core::pin::Pin&lt;ref_mut$ (14 samples, 5.81%)</title><rect x="34.4398%" y="741" width="5.8091%" height="15" fill="rgb(79,191,191)" fg:x="83" fg:w="14"/><text x="34.6898%" y="751.50">osrs_gp..</text></g><g><title>osrs_gph.exe`hyper::client::client::impl$3::retryably_send_request::async_fn$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::client::client::impl$3::retryably_send_request::async_fn_env$0 (14 samples, 5.81%)</title><rect x="34.4398%" y="725" width="5.8091%" height="15" fill="rgb(64,178,178)" fg:x="83" fg:w="14"/><text x="34.6898%" y="735.50">osrs_gp..</text></g><g><title>osrs_gph.exe`hyper::client::client::impl$3::send_request::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::client::client::impl$3::send_request::async_fn_env$0 (14 samples, 5.81%)</title><rect x="34.4398%" y="709" width="5.8091%" height="15" fill="rgb(62,176,176)" fg:x="83" fg:w="14"/><text x="34.6898%" y="719.50">osrs_gp..</text></g><g><title>osrs_gph.exe`hyper::client::client::impl$3::connection_for::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::client::client::impl$3::connection_for::async_fn_env$0 (14 samples, 5.81%)</title><rect x="34.4398%" y="693" width="5.8091%" height="15" fill="rgb(55,169,169)" fg:x="83" fg:w="14"/><text x="34.6898%" y="703.50">osrs_gp..</text></g><g><title>osrs_gph.exe`futures_util::future::select::impl$1::poll(core::pin::Pin&lt;ref_mut$&lt;futures_util::future::select::Select&lt;hyper::client::pool::Checkout&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::common::lazy::Lazy&lt;hyper::client::client::impl$3::connect_to::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;,enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::try_future::AndThen&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt;,enum2$&lt;futures_util::future::either::Either&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;enum2$&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::alloc::Global&gt; &gt;,futures_util::future::ready::Ready&lt;enum2$&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::error::Error&gt; &gt; &gt; &gt; &gt;,hyper::client::client::impl$3::connect_to::closure$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::ready::Ready&lt;enum2$&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient (14 samples, 5.81%)</title><rect x="34.4398%" y="677" width="5.8091%" height="15" fill="rgb(103,213,213)" fg:x="83" fg:w="14"/><text x="34.6898%" y="687.50">osrs_gp..</text></g><g><title>osrs_gph.exe`futures_util::future::try_future::try_flatten::impl$2::poll&lt;futures_util::future::try_future::MapOk&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt;,hyper::client::client::impl$3::connect_to::closure$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;futures_util::future::try_future::MapOk&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt;,hyper::client::client::impl$3::connect_to::closure$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,enum2$&lt;futures_util::future::either::Either&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;enum2$&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::alloc::Global&gt; &gt;,futures_util::future::ready::Ready&lt;enum2$&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient (12 samples, 4.98%)</title><rect x="35.2697%" y="661" width="4.9793%" height="15" fill="rgb(87,199,199)" fg:x="85" fg:w="12"/><text x="35.5197%" y="671.50">osrs_g..</text></g><g><title>osrs_gph.exe`core::future::future::impl$1::poll&lt;alloc::boxed::Box&lt;enum2$&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::alloc::Global&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;enum2$&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block_env$0 (1 samples, 0.41%)</title><rect x="39.8340%" y="645" width="0.4149%" height="15" fill="rgb(78,190,190)" fg:x="96" fg:w="1"/><text x="40.0840%" y="655.50"></text></g><g><title>osrs_gph.exe`hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block_env$0 (1 samples, 0.41%)</title><rect x="39.8340%" y="629" width="0.4149%" height="15" fill="rgb(71,185,185)" fg:x="96" fg:w="1"/><text x="40.0840%" y="639.50"></text></g><g><title>osrs_gph.exe`hyper::client::conn::impl$11::handshake::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::client::conn::impl$11::handshake::async_block_env$0 (1 samples, 0.41%)</title><rect x="39.8340%" y="613" width="0.4149%" height="15" fill="rgb(73,186,186)" fg:x="96" fg:w="1"/><text x="40.0840%" y="623.50"></text></g><g><title>osrs_gph.exe`hyper::proto::h2::client::handshake::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::proto::h2::client::handshake::async_fn_env$0 (1 samples, 0.41%)</title><rect x="39.8340%" y="597" width="0.4149%" height="15" fill="rgb(51,165,165)" fg:x="96" fg:w="1"/><text x="40.0840%" y="607.50"></text></g><g><title>osrs_gph.exe`h2::client::impl$6::handshake2::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;h2::client::impl$6::handshake2::async_fn_env$0&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.41%)</title><rect x="39.8340%" y="581" width="0.4149%" height="15" fill="rgb(108,218,218)" fg:x="96" fg:w="1"/><text x="40.0840%" y="591.50"></text></g><g><title>osrs_gph.exe`h2::client::bind_connection::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;h2::client::bind_connection::async_fn_env$0 (1 samples, 0.41%)</title><rect x="39.8340%" y="565" width="0.4149%" height="15" fill="rgb(82,194,194)" fg:x="96" fg:w="1"/><text x="40.0840%" y="575.50"></text></g><g><title>osrs_gph.exe`tokio::io::util::write_all::impl$0::poll(core::pin::Pin&lt;ref_mut$&lt;tokio::io::util::write_all::WriteAll (1 samples, 0.41%)</title><rect x="39.8340%" y="549" width="0.4149%" height="15" fill="rgb(94,205,205)" fg:x="96" fg:w="1"/><text x="40.0840%" y="559.50"></text></g><g><title>osrs_gph.exe`reqwest::connect::rustls_tls_conn::impl$2::poll_write&lt;tokio::net::tcp::stream::TcpStream&gt;(core::pin::Pin&lt;ref_mut$&lt;reqwest::connect::rustls_tls_conn::RustlsTlsConn&lt;tokio::net::tcp::stream::TcpStream&gt; &gt; &gt;, core::task::wake::Context*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="39.8340%" y="533" width="0.4149%" height="15" fill="rgb(62,176,176)" fg:x="96" fg:w="1"/><text x="40.0840%" y="543.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::common::impl$3::poll_write&lt;tokio::net::tcp::stream::TcpStream,rustls::client::client_conn::ClientConnection,rustls::client::client_conn::ClientConnectionData&gt;(core::pin::Pin&lt;ref_mut$&lt;tokio_rustls::common::Stream&lt;tokio::net::tcp::stream::TcpStream,rustls::client::client_conn::ClientConnection&gt; &gt; &gt;, core::task::wake::Context*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="39.8340%" y="517" width="0.4149%" height="15" fill="rgb(105,216,216)" fg:x="96" fg:w="1"/><text x="40.0840%" y="527.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::common::Stream&lt;tokio::net::tcp::stream::TcpStream,rustls::client::client_conn::ClientConnection&gt;::write_io (1 samples, 0.41%)</title><rect x="39.8340%" y="501" width="0.4149%" height="15" fill="rgb(87,199,199)" fg:x="96" fg:w="1"/><text x="40.0840%" y="511.50"></text></g><g><title>osrs_gph.exe`rustls::vecbuf::ChunkVecBuffer::write_to(ref_mut$&lt;dyn$ (1 samples, 0.41%)</title><rect x="39.8340%" y="485" width="0.4149%" height="15" fill="rgb(72,185,185)" fg:x="96" fg:w="1"/><text x="40.0840%" y="495.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (1 samples, 0.41%)</title><rect x="39.8340%" y="469" width="0.4149%" height="15" fill="rgb(55,169,169)" fg:x="96" fg:w="1"/><text x="40.0840%" y="479.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::common::impl$1::write_io::impl$1::write_vectored&lt;tokio::net::tcp::stream::TcpStream&gt;(tokio_rustls::common::impl$1::write_io::Writer&lt;tokio::net::tcp::stream::TcpStream&gt;*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="39.8340%" y="453" width="0.4149%" height="15" fill="rgb(73,186,186)" fg:x="96" fg:w="1"/><text x="40.0840%" y="463.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::common::impl$1::write_io::Writer&lt;tokio::net::tcp::stream::TcpStream&gt;::poll_with(tokio_rustls::common::impl$1::write_io::impl$1::write_vectored::closure_env$0 (1 samples, 0.41%)</title><rect x="39.8340%" y="437" width="0.4149%" height="15" fill="rgb(53,168,168)" fg:x="96" fg:w="1"/><text x="40.0840%" y="447.50"></text></g><g><title>osrs_gph.exe`tokio::net::tcp::stream::impl$3::poll_write_vectored(core::pin::Pin&lt;ref_mut$&lt;tokio::net::tcp::stream::TcpStream&gt; &gt;, core::task::wake::Context*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="39.8340%" y="421" width="0.4149%" height="15" fill="rgb(67,181,181)" fg:x="96" fg:w="1"/><text x="40.0840%" y="431.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::io::registration::Registration::poll_io&lt;usize,tokio::io::poll_evented::impl$6::poll_write_vectored::closure_env$0&lt;mio::net::tcp::stream::TcpStream&gt; &gt;(core::task::wake::Context*, tokio::runtime::io::driver::Direction, tokio::io::poll_evented::impl$6::poll_write_vectored::closure_env$0 (1 samples, 0.41%)</title><rect x="39.8340%" y="405" width="0.4149%" height="15" fill="rgb(60,174,174)" fg:x="96" fg:w="1"/><text x="40.0840%" y="415.50"></text></g><g><title>osrs_gph.exe`mio::net::tcp::stream::impl$4::write_vectored(mio::net::tcp::stream::TcpStream**, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="39.8340%" y="389" width="0.4149%" height="15" fill="rgb(91,202,202)" fg:x="96" fg:w="1"/><text x="40.0840%" y="399.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::IoSourceState::do_io&lt;std::net::tcp::TcpStream,mio::net::tcp::stream::impl$3::write_vectored::closure_env$0,usize&gt; (1 samples, 0.41%)</title><rect x="39.8340%" y="373" width="0.4149%" height="15" fill="rgb(74,187,187)" fg:x="96" fg:w="1"/><text x="40.0840%" y="383.50"></text></g><g><title>osrs_gph.exe`std::net::tcp::impl$4::write_vectored (1 samples, 0.41%)</title><rect x="39.8340%" y="357" width="0.4149%" height="15" fill="rgb(79,192,192)" fg:x="96" fg:w="1"/><text x="40.0840%" y="367.50"></text></g><g><title>osrs_gph.exe`std::sys_common::net::TcpStream::write_vectored (1 samples, 0.41%)</title><rect x="39.8340%" y="341" width="0.4149%" height="15" fill="rgb(85,197,197)" fg:x="96" fg:w="1"/><text x="40.0840%" y="351.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::net::Socket::write_vectored (1 samples, 0.41%)</title><rect x="39.8340%" y="325" width="0.4149%" height="15" fill="rgb(76,189,189)" fg:x="96" fg:w="1"/><text x="40.0840%" y="335.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::net::cvt (1 samples, 0.41%)</title><rect x="39.8340%" y="309" width="0.4149%" height="15" fill="rgb(57,172,172)" fg:x="96" fg:w="1"/><text x="40.0840%" y="319.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::net::impl$11::is_minus_one (1 samples, 0.41%)</title><rect x="39.8340%" y="293" width="0.4149%" height="15" fill="rgb(67,181,181)" fg:x="96" fg:w="1"/><text x="40.0840%" y="303.50"></text></g><g><title>`0x7FFE579B282F (1 samples, 0.41%)</title><rect x="39.8340%" y="277" width="0.4149%" height="15" fill="rgb(177,177,50)" fg:x="96" fg:w="1"/><text x="40.0840%" y="287.50"></text></g><g><title>`0x7FFE55B522BA (1 samples, 0.41%)</title><rect x="39.8340%" y="261" width="0.4149%" height="15" fill="rgb(223,223,67)" fg:x="96" fg:w="1"/><text x="40.0840%" y="271.50"></text></g><g><title>`0x7FFE5944F454 (1 samples, 0.41%)</title><rect x="39.8340%" y="245" width="0.4149%" height="15" fill="rgb(211,211,63)" fg:x="96" fg:w="1"/><text x="40.0840%" y="255.50"></text></g><g><title>osrs_gph.exe`h2::proto::streams::recv::Recv::poll_complete&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt;(core::task::wake::Context*, h2::proto::streams::store::Store*, h2::proto::streams::counts::Counts*, h2::codec::Codec&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.41%)</title><rect x="40.2490%" y="677" width="0.4149%" height="15" fill="rgb(52,167,167)" fg:x="97" fg:w="1"/><text x="40.4990%" y="687.50"></text></g><g><title>osrs_gph.exe`h2::proto::streams::recv::Recv::send_connection_window_update(core::task::wake::Context*, h2::codec::Codec&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.41%)</title><rect x="40.2490%" y="661" width="0.4149%" height="15" fill="rgb(105,215,215)" fg:x="97" fg:w="1"/><text x="40.4990%" y="671.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,h2::codec::error::UserError&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,h2::codec::error::UserError&gt; &gt;, ref$ (1 samples, 0.41%)</title><rect x="40.2490%" y="645" width="0.4149%" height="15" fill="rgb(109,219,219)" fg:x="97" fg:w="1"/><text x="40.4990%" y="655.50"></text></g><g><title>osrs_gph.exe`h2::codec::framed_write::Encoder&lt;h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt;::buffer&lt;h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt;(enum2$&lt;h2::frame::Frame&lt;h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.41%)</title><rect x="40.2490%" y="629" width="0.4149%" height="15" fill="rgb(74,187,187)" fg:x="97" fg:w="1"/><text x="40.4990%" y="639.50"></text></g><g><title>osrs_gph.exe`h2::proto::streams::streams::Streams&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt;,h2::client::Peer&gt;::poll_complete&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt;,h2::client::Peer,reqwest::connect::Conn&gt;(core::task::wake::Context*, h2::codec::Codec&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (2 samples, 0.83%)</title><rect x="40.2490%" y="709" width="0.8299%" height="15" fill="rgb(52,167,167)" fg:x="97" fg:w="2"/><text x="40.4990%" y="719.50"></text></g><g><title>osrs_gph.exe`h2::proto::streams::streams::Inner::poll_complete(h2::proto::streams::streams::SendBuffer&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt;*, core::task::wake::Context*, h2::codec::Codec&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (2 samples, 0.83%)</title><rect x="40.2490%" y="693" width="0.8299%" height="15" fill="rgb(105,215,215)" fg:x="97" fg:w="2"/><text x="40.4990%" y="703.50"></text></g><g><title>osrs_gph.exe`h2::proto::streams::prioritize::Prioritize::poll_complete&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt;(core::task::wake::Context*, h2::proto::streams::buffer::Buffer&lt;enum2$&lt;h2::frame::Frame&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;*, h2::proto::streams::store::Store*, h2::proto::streams::counts::Counts*, h2::codec::Codec&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.41%)</title><rect x="40.6639%" y="677" width="0.4149%" height="15" fill="rgb(89,201,201)" fg:x="98" fg:w="1"/><text x="40.9139%" y="687.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,h2::codec::error::UserError&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,h2::codec::error::UserError&gt; &gt;, ref$ (1 samples, 0.41%)</title><rect x="40.6639%" y="661" width="0.4149%" height="15" fill="rgb(93,205,205)" fg:x="98" fg:w="1"/><text x="40.9139%" y="671.50"></text></g><g><title>osrs_gph.exe`h2::codec::framed_write::Encoder&lt;h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt;::buffer&lt;h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt;(enum2$&lt;h2::frame::Frame&lt;h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.41%)</title><rect x="40.6639%" y="645" width="0.4149%" height="15" fill="rgb(83,195,195)" fg:x="98" fg:w="1"/><text x="40.9139%" y="655.50"></text></g><g><title>osrs_gph.exe`h2::frame::headers::Headers::encode(h2::frame::headers::Headers, h2::hpack::encoder::Encoder*, bytes::buf::limit::Limit&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="40.6639%" y="629" width="0.4149%" height="15" fill="rgb(70,183,183)" fg:x="98" fg:w="1"/><text x="40.9139%" y="639.50"></text></g><g><title>osrs_gph.exe`h2::frame::headers::EncodingHeaderBlock::encode(h2::frame::headers::EncodingHeaderBlock, h2::frame::head::Head*, bytes::buf::limit::Limit&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="40.6639%" y="613" width="0.4149%" height="15" fill="rgb(98,209,209)" fg:x="98" fg:w="1"/><text x="40.9139%" y="623.50"></text></g><g><title>osrs_gph.exe`h2::frame::head::Head::encode(unsigned long long, bytes::buf::limit::Limit&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="40.6639%" y="597" width="0.4149%" height="15" fill="rgb(81,193,193)" fg:x="98" fg:w="1"/><text x="40.9139%" y="607.50"></text></g><g><title>osrs_gph.exe`bytes::buf::buf_mut::BufMut::put_u8(bytes::buf::limit::Limit&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="40.6639%" y="581" width="0.4149%" height="15" fill="rgb(100,211,211)" fg:x="98" fg:w="1"/><text x="40.9139%" y="591.50"></text></g><g><title>osrs_gph.exe`bytes::buf::buf_mut::BufMut::put_slice&lt;bytes::buf::limit::Limit&lt;ref_mut$&lt;bytes::bytes_mut::BytesMut&gt; &gt; &gt;(bytes::buf::limit::Limit&lt;ref_mut$&lt;bytes::bytes_mut::BytesMut&gt; &gt;*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="40.6639%" y="565" width="0.4149%" height="15" fill="rgb(102,212,212)" fg:x="98" fg:w="1"/><text x="40.9139%" y="575.50"></text></g><g><title>osrs_gph.exe`h2::proto::connection::Connection&lt;reqwest::connect::Conn,h2::client::Peer,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt;::poll_ready (1 samples, 0.41%)</title><rect x="41.0788%" y="693" width="0.4149%" height="15" fill="rgb(69,183,183)" fg:x="99" fg:w="1"/><text x="41.3288%" y="703.50"></text></g><g><title>osrs_gph.exe`rustls::conn::ConnectionCommon&lt;rustls::client::client_conn::ClientConnectionData&gt;::read_tls(ref_mut$&lt;dyn$ (3 samples, 1.24%)</title><rect x="41.4938%" y="533" width="1.2448%" height="15" fill="rgb(55,170,170)" fg:x="100" fg:w="3"/><text x="41.7438%" y="543.50"></text></g><g><title>osrs_gph.exe`rustls::msgs::deframer::MessageDeframer::read(ref_mut$&lt;dyn$ (3 samples, 1.24%)</title><rect x="41.4938%" y="517" width="1.2448%" height="15" fill="rgb(108,218,218)" fg:x="100" fg:w="3"/><text x="41.7438%" y="527.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (3 samples, 1.24%)</title><rect x="41.4938%" y="501" width="1.2448%" height="15" fill="rgb(61,175,175)" fg:x="100" fg:w="3"/><text x="41.7438%" y="511.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::common::impl$4::read&lt;tokio::net::tcp::stream::TcpStream&gt;(tokio_rustls::common::SyncReadAdapter&lt;tokio::net::tcp::stream::TcpStream&gt;*, ref_mut$&lt;slice2$ (3 samples, 1.24%)</title><rect x="41.4938%" y="485" width="1.2448%" height="15" fill="rgb(58,173,173)" fg:x="100" fg:w="3"/><text x="41.7438%" y="495.50"></text></g><g><title>osrs_gph.exe`tokio::net::tcp::stream::TcpStream::poll_read_priv (3 samples, 1.24%)</title><rect x="41.4938%" y="469" width="1.2448%" height="15" fill="rgb(52,166,166)" fg:x="100" fg:w="3"/><text x="41.7438%" y="479.50"></text></g><g><title>osrs_gph.exe`tokio::io::poll_evented::PollEvented&lt;mio::net::tcp::stream::TcpStream&gt;::poll_read (3 samples, 1.24%)</title><rect x="41.4938%" y="453" width="1.2448%" height="15" fill="rgb(56,170,170)" fg:x="100" fg:w="3"/><text x="41.7438%" y="463.50"></text></g><g><title>osrs_gph.exe`mio::net::tcp::stream::impl$2::read(mio::net::tcp::stream::TcpStream**, ref_mut$&lt;slice2$ (3 samples, 1.24%)</title><rect x="41.4938%" y="437" width="1.2448%" height="15" fill="rgb(98,209,209)" fg:x="100" fg:w="3"/><text x="41.7438%" y="447.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::IoSourceState::do_io&lt;std::net::tcp::TcpStream,mio::net::tcp::stream::impl$2::read::closure_env$0,usize&gt; (3 samples, 1.24%)</title><rect x="41.4938%" y="421" width="1.2448%" height="15" fill="rgb(95,206,206)" fg:x="100" fg:w="3"/><text x="41.7438%" y="431.50"></text></g><g><title>osrs_gph.exe`std::net::tcp::impl$3::read (3 samples, 1.24%)</title><rect x="41.4938%" y="405" width="1.2448%" height="15" fill="rgb(100,210,210)" fg:x="100" fg:w="3"/><text x="41.7438%" y="415.50"></text></g><g><title>osrs_gph.exe`std::sys_common::net::TcpStream::read (3 samples, 1.24%)</title><rect x="41.4938%" y="389" width="1.2448%" height="15" fill="rgb(85,197,197)" fg:x="100" fg:w="3"/><text x="41.7438%" y="399.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::net::Socket::read (3 samples, 1.24%)</title><rect x="41.4938%" y="373" width="1.2448%" height="15" fill="rgb(109,219,219)" fg:x="100" fg:w="3"/><text x="41.7438%" y="383.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::net::Socket::recv_with_flags (3 samples, 1.24%)</title><rect x="41.4938%" y="357" width="1.2448%" height="15" fill="rgb(78,191,191)" fg:x="100" fg:w="3"/><text x="41.7438%" y="367.50"></text></g><g><title>`0x7FFE579C2417 (3 samples, 1.24%)</title><rect x="41.4938%" y="341" width="1.2448%" height="15" fill="rgb(184,184,53)" fg:x="100" fg:w="3"/><text x="41.7438%" y="351.50"></text></g><g><title>`0x7FFE55B55945 (3 samples, 1.24%)</title><rect x="41.4938%" y="325" width="1.2448%" height="15" fill="rgb(200,200,59)" fg:x="100" fg:w="3"/><text x="41.7438%" y="335.50"></text></g><g><title>`0x7FFE5944F454 (3 samples, 1.24%)</title><rect x="41.4938%" y="309" width="1.2448%" height="15" fill="rgb(197,197,58)" fg:x="100" fg:w="3"/><text x="41.7438%" y="319.50"></text></g><g><title>osrs_gph.exe`rustls::record_layer::RecordLayer::decrypt_incoming (1 samples, 0.41%)</title><rect x="42.7386%" y="469" width="0.4149%" height="15" fill="rgb(105,215,215)" fg:x="103" fg:w="1"/><text x="42.9886%" y="479.50"></text></g><g><title>osrs_gph.exe`rustls::tls13::impl$5::decrypt (1 samples, 0.41%)</title><rect x="42.7386%" y="453" width="0.4149%" height="15" fill="rgb(52,167,167)" fg:x="103" fg:w="1"/><text x="42.9886%" y="463.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;ref_mut$&lt;slice2$&lt;u8&gt; &gt;,ring::error::Unspecified&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;ref_mut$&lt;slice2$ (1 samples, 0.41%)</title><rect x="42.7386%" y="437" width="0.4149%" height="15" fill="rgb(95,206,206)" fg:x="103" fg:w="1"/><text x="42.9886%" y="447.50"></text></g><g><title>osrs_gph.exe`ring::aead::less_safe_key::open_within_(ring::aead::less_safe_key::LessSafeKey*, ring::aead::nonce::Nonce, ring::aead::Aad&lt;ref$&lt;slice2$&lt;u8&gt; &gt; &gt;, ring::aead::Tag, ref_mut$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::RangeFrom (1 samples, 0.41%)</title><rect x="42.7386%" y="421" width="0.4149%" height="15" fill="rgb(74,187,187)" fg:x="103" fg:w="1"/><text x="42.9886%" y="431.50"></text></g><g><title>osrs_gph.exe`ring::constant_time::verify_slices_are_equal(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="42.7386%" y="405" width="0.4149%" height="15" fill="rgb(104,215,215)" fg:x="103" fg:w="1"/><text x="42.9886%" y="415.50"></text></g><g><title>osrs_gph.exe`ring::aead::aes_gcm::aes_gcm_open(enum2$&lt;ring::aead::KeyInner&gt;*, ring::aead::nonce::Nonce, ring::aead::Aad&lt;ref$&lt;slice2$&lt;u8&gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::RangeFrom (1 samples, 0.41%)</title><rect x="42.7386%" y="389" width="0.4149%" height="15" fill="rgb(51,166,166)" fg:x="103" fg:w="1"/><text x="42.9886%" y="399.50"></text></g><g><title>osrs_gph.exe`ring::aead::shift::shift_partial&lt;ring::aead::aes_gcm::aes_gcm_open::closure_env$0&gt;(tuple$&lt;usize,ref_mut$&lt;slice2$ (1 samples, 0.41%)</title><rect x="42.7386%" y="373" width="0.4149%" height="15" fill="rgb(108,218,218)" fg:x="103" fg:w="1"/><text x="42.9886%" y="383.50"></text></g><g><title>osrs_gph.exe`ring::aead::aes_gcm::aes_gcm_open::closure$0(ring::aead::aes_gcm::aes_gcm_open::closure_env$0, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="42.7386%" y="357" width="0.4149%" height="15" fill="rgb(83,195,195)" fg:x="103" fg:w="1"/><text x="42.9886%" y="367.50"></text></g><g><title>osrs_gph.exe`ring::aead::aes::Key::encrypt_iv_xor_block (1 samples, 0.41%)</title><rect x="42.7386%" y="341" width="0.4149%" height="15" fill="rgb(76,189,189)" fg:x="103" fg:w="1"/><text x="42.9886%" y="351.50"></text></g><g><title>osrs_gph.exe`ring::aead::aes::Key::encrypt_block (1 samples, 0.41%)</title><rect x="42.7386%" y="325" width="0.4149%" height="15" fill="rgb(50,165,165)" fg:x="103" fg:w="1"/><text x="42.9886%" y="335.50"></text></g><g><title>osrs_gph.exe`ring::aead::aes::encrypt_block_(void (*) (1 samples, 0.41%)</title><rect x="42.7386%" y="309" width="0.4149%" height="15" fill="rgb(92,204,204)" fg:x="103" fg:w="1"/><text x="42.9886%" y="319.50"></text></g><g><title>osrs_gph.exe`ring_core_0_17_7_aes_hw_encrypt (1 samples, 0.41%)</title><rect x="42.7386%" y="293" width="0.4149%" height="15" fill="rgb(225,225,68)" fg:x="103" fg:w="1"/><text x="42.9886%" y="303.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::task::poll::Poll&lt;enum2$&lt;core::result::Result&lt;usize,std::io::error::Error&gt; &gt; &gt; &gt;::map_err(enum2$&lt;core::task::poll::Poll&lt;enum2$&lt;core::result::Result&lt;usize,std::io::error::Error&gt; &gt; &gt; &gt;, tokio_util::codec::framed_impl::impl$8::poll_next::closure_env$2&lt;h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (5 samples, 2.07%)</title><rect x="41.4938%" y="645" width="2.0747%" height="15" fill="rgb(55,169,169)" fg:x="100" fg:w="5"/><text x="41.7438%" y="655.50">o..</text></g><g><title>osrs_gph.exe`tokio_util::util::poll_buf::poll_read_buf&lt;h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt;,bytes::bytes_mut::BytesMut&gt;(core::pin::Pin&lt;ref_mut$&lt;h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (5 samples, 2.07%)</title><rect x="41.4938%" y="629" width="2.0747%" height="15" fill="rgb(92,204,204)" fg:x="100" fg:w="5"/><text x="41.7438%" y="639.50">o..</text></g><g><title>osrs_gph.exe`core::task::poll::impl$4::branch(enum2$&lt;core::task::poll::Poll&lt;enum2$&lt;core::result::Result&lt;tuple$ (5 samples, 2.07%)</title><rect x="41.4938%" y="613" width="2.0747%" height="15" fill="rgb(78,191,191)" fg:x="100" fg:w="5"/><text x="41.7438%" y="623.50">o..</text></g><g><title>osrs_gph.exe`reqwest::connect::rustls_tls_conn::impl$1::poll_read&lt;tokio::net::tcp::stream::TcpStream&gt;(core::pin::Pin&lt;ref_mut$&lt;reqwest::connect::rustls_tls_conn::RustlsTlsConn (5 samples, 2.07%)</title><rect x="41.4938%" y="597" width="2.0747%" height="15" fill="rgb(56,170,170)" fg:x="100" fg:w="5"/><text x="41.7438%" y="607.50">o..</text></g><g><title>osrs_gph.exe`tokio_rustls::client::impl$3::poll_read(core::pin::Pin&lt;ref_mut$&lt;tokio_rustls::client::TlsStream (5 samples, 2.07%)</title><rect x="41.4938%" y="581" width="2.0747%" height="15" fill="rgb(62,176,176)" fg:x="100" fg:w="5"/><text x="41.7438%" y="591.50">o..</text></g><g><title>osrs_gph.exe`tokio_rustls::common::impl$2::poll_read&lt;tokio::net::tcp::stream::TcpStream,rustls::client::client_conn::ClientConnection,rustls::client::client_conn::ClientConnectionData&gt;(core::pin::Pin&lt;ref_mut$&lt;tokio_rustls::common::Stream (5 samples, 2.07%)</title><rect x="41.4938%" y="565" width="2.0747%" height="15" fill="rgb(59,173,173)" fg:x="100" fg:w="5"/><text x="41.7438%" y="575.50">o..</text></g><g><title>osrs_gph.exe`tokio_rustls::common::Stream&lt;tokio::net::tcp::stream::TcpStream,rustls::client::client_conn::ClientConnection&gt;::read_io&lt;tokio::net::tcp::stream::TcpStream,rustls::client::client_conn::ClientConnection,rustls::client::client_conn::ClientConnectionData&gt; (5 samples, 2.07%)</title><rect x="41.4938%" y="549" width="2.0747%" height="15" fill="rgb(82,194,194)" fg:x="100" fg:w="5"/><text x="41.7438%" y="559.50">o..</text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;rustls::common_state::IoState,enum2$&lt;rustls::error::Error&gt; &gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;rustls::common_state::IoState,enum2$&lt;rustls::error::Error&gt; &gt; &gt;, tokio_rustls::common::impl$1::read_io::closure_env$0 (2 samples, 0.83%)</title><rect x="42.7386%" y="533" width="0.8299%" height="15" fill="rgb(106,217,217)" fg:x="103" fg:w="2"/><text x="42.9886%" y="543.50"></text></g><g><title>osrs_gph.exe`rustls::conn::ConnectionCore&lt;rustls::client::client_conn::ClientConnectionData&gt;::process_new_packets&lt;rustls::client::client_conn::ClientConnectionData&gt; (2 samples, 0.83%)</title><rect x="42.7386%" y="517" width="0.8299%" height="15" fill="rgb(51,166,166)" fg:x="103" fg:w="2"/><text x="42.9886%" y="527.50"></text></g><g><title>osrs_gph.exe`rustls::conn::ConnectionCore&lt;rustls::client::client_conn::ClientConnectionData&gt;::deframe(enum2$&lt;core::option::Option&lt;ref$&lt;dyn$&lt;rustls::common_state::State (2 samples, 0.83%)</title><rect x="42.7386%" y="501" width="0.8299%" height="15" fill="rgb(72,185,185)" fg:x="103" fg:w="2"/><text x="42.9886%" y="511.50"></text></g><g><title>osrs_gph.exe`rustls::msgs::deframer::MessageDeframer::pop (2 samples, 0.83%)</title><rect x="42.7386%" y="485" width="0.8299%" height="15" fill="rgb(89,201,201)" fg:x="103" fg:w="2"/><text x="42.9886%" y="495.50"></text></g><g><title>osrs_gph.exe`rustls::msgs::message::OpaqueMessage::read (1 samples, 0.41%)</title><rect x="43.1535%" y="469" width="0.4149%" height="15" fill="rgb(91,203,203)" fg:x="104" fg:w="1"/><text x="43.4035%" y="479.50"></text></g><g><title>osrs_gph.exe`rustls::enums::impl$32::read (1 samples, 0.41%)</title><rect x="43.1535%" y="453" width="0.4149%" height="15" fill="rgb(58,173,173)" fg:x="104" fg:w="1"/><text x="43.4035%" y="463.50"></text></g><g><title>osrs_gph.exe`rustls::enums::impl$33::from (1 samples, 0.41%)</title><rect x="43.1535%" y="437" width="0.4149%" height="15" fill="rgb(75,188,188)" fg:x="104" fg:w="1"/><text x="43.4035%" y="447.50"></text></g><g><title>`0x7FFE593EC7BA (1 samples, 0.41%)</title><rect x="43.5685%" y="485" width="0.4149%" height="15" fill="rgb(191,191,56)" fg:x="105" fg:w="1"/><text x="43.8185%" y="495.50"></text></g><g><title>`0x7FFE593ED6DF (1 samples, 0.41%)</title><rect x="43.5685%" y="469" width="0.4149%" height="15" fill="rgb(212,212,63)" fg:x="105" fg:w="1"/><text x="43.8185%" y="479.50"></text></g><g><title>`0x7FFE593F1441 (1 samples, 0.41%)</title><rect x="43.5685%" y="453" width="0.4149%" height="15" fill="rgb(219,219,66)" fg:x="105" fg:w="1"/><text x="43.8185%" y="463.50"></text></g><g><title>osrs_gph.exe`tokio_util::codec::framed_impl::impl$8::poll_next&lt;h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt;,tokio_util::codec::length_delimited::LengthDelimitedCodec,tokio_util::codec::framed_impl::ReadFrame&gt;(core::pin::Pin&lt;ref_mut$&lt;tokio_util::codec::framed_impl::FramedImpl&lt;h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (7 samples, 2.90%)</title><rect x="41.4938%" y="661" width="2.9046%" height="15" fill="rgb(96,207,207)" fg:x="100" fg:w="7"/><text x="41.7438%" y="671.50">os..</text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;bytes::bytes_mut::BytesMut&gt; &gt;,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;bytes::bytes_mut::BytesMut&gt; &gt;,std::io::error::Error&gt; &gt;, tokio_util::codec::framed_impl::impl$8::poll_next::closure_env$1&lt;h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (2 samples, 0.83%)</title><rect x="43.5685%" y="645" width="0.8299%" height="15" fill="rgb(96,207,207)" fg:x="105" fg:w="2"/><text x="43.8185%" y="655.50"></text></g><g><title>osrs_gph.exe`tokio_util::codec::length_delimited::impl$1::decode (2 samples, 0.83%)</title><rect x="43.5685%" y="629" width="0.8299%" height="15" fill="rgb(61,175,175)" fg:x="105" fg:w="2"/><text x="43.8185%" y="639.50"></text></g><g><title>osrs_gph.exe`bytes::bytes_mut::BytesMut::reserve_inner (2 samples, 0.83%)</title><rect x="43.5685%" y="613" width="0.8299%" height="15" fill="rgb(96,207,207)" fg:x="105" fg:w="2"/><text x="43.8185%" y="623.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity (2 samples, 0.83%)</title><rect x="43.5685%" y="597" width="0.8299%" height="15" fill="rgb(77,190,190)" fg:x="105" fg:w="2"/><text x="43.8185%" y="607.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.83%)</title><rect x="43.5685%" y="581" width="0.8299%" height="15" fill="rgb(97,208,208)" fg:x="105" fg:w="2"/><text x="43.8185%" y="591.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.83%)</title><rect x="43.5685%" y="565" width="0.8299%" height="15" fill="rgb(69,183,183)" fg:x="105" fg:w="2"/><text x="43.8185%" y="575.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::allocate_in (2 samples, 0.83%)</title><rect x="43.5685%" y="549" width="0.8299%" height="15" fill="rgb(67,181,181)" fg:x="105" fg:w="2"/><text x="43.8185%" y="559.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::impl$1::allocate (2 samples, 0.83%)</title><rect x="43.5685%" y="533" width="0.8299%" height="15" fill="rgb(109,219,219)" fg:x="105" fg:w="2"/><text x="43.8185%" y="543.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::Global::alloc_impl (2 samples, 0.83%)</title><rect x="43.5685%" y="517" width="0.8299%" height="15" fill="rgb(86,198,198)" fg:x="105" fg:w="2"/><text x="43.8185%" y="527.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::alloc (2 samples, 0.83%)</title><rect x="43.5685%" y="501" width="0.8299%" height="15" fill="rgb(75,188,188)" fg:x="105" fg:w="2"/><text x="43.8185%" y="511.50"></text></g><g><title>`0x7FFE593EC637 (1 samples, 0.41%)</title><rect x="43.9834%" y="485" width="0.4149%" height="15" fill="rgb(194,194,57)" fg:x="106" fg:w="1"/><text x="44.2334%" y="495.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::Context::run_task(tokio::runtime::scheduler::current_thread::Core*, tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$1&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (26 samples, 10.79%)</title><rect x="34.0249%" y="1013" width="10.7884%" height="15" fill="rgb(96,207,207)" fg:x="82" fg:w="26"/><text x="34.2749%" y="1023.50">osrs_gph.exe`tok..</text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::Context::enter(tokio::runtime::scheduler::current_thread::Core*, tokio::runtime::scheduler::current_thread::impl$3::run_task::closure_env$0&lt;tuple$&lt;&gt;,tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$1&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (26 samples, 10.79%)</title><rect x="34.0249%" y="997" width="10.7884%" height="15" fill="rgb(99,210,210)" fg:x="82" fg:w="26"/><text x="34.2749%" y="1007.50">osrs_gph.exe`tok..</text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::impl$3::run_task::closure$0(tokio::runtime::scheduler::current_thread::impl$3::run_task::closure_env$0&lt;tuple$&lt;&gt;,tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$1&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (26 samples, 10.79%)</title><rect x="34.0249%" y="981" width="10.7884%" height="15" fill="rgb(78,190,190)" fg:x="82" fg:w="26"/><text x="34.2749%" y="991.50">osrs_gph.exe`tok..</text></g><g><title>osrs_gph.exe`tokio::runtime::coop::budget(tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$1&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (26 samples, 10.79%)</title><rect x="34.0249%" y="965" width="10.7884%" height="15" fill="rgb(83,195,195)" fg:x="82" fg:w="26"/><text x="34.2749%" y="975.50">osrs_gph.exe`tok..</text></g><g><title>osrs_gph.exe`tokio::runtime::coop::with_budget(tokio::runtime::coop::Budget, tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$1&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (26 samples, 10.79%)</title><rect x="34.0249%" y="949" width="10.7884%" height="15" fill="rgb(80,192,192)" fg:x="82" fg:w="26"/><text x="34.2749%" y="959.50">osrs_gph.exe`tok..</text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$&lt;core::result::Result (26 samples, 10.79%)</title><rect x="34.0249%" y="933" width="10.7884%" height="15" fill="rgb(82,194,194)" fg:x="82" fg:w="26"/><text x="34.2749%" y="943.50">osrs_gph.exe`cor..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::Harness&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;::poll&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;(tokio::runtime::task::harness::Harness&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc (11 samples, 4.56%)</title><rect x="40.2490%" y="917" width="4.5643%" height="15" fill="rgb(96,208,208)" fg:x="97" fg:w="11"/><text x="40.4990%" y="927.50">osrs_..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::Harness&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;::poll_inner (11 samples, 4.56%)</title><rect x="40.2490%" y="901" width="4.5643%" height="15" fill="rgb(74,187,187)" fg:x="97" fg:w="11"/><text x="40.4990%" y="911.50">osrs_..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::poll_future(tokio::runtime::task::core::Core&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc (11 samples, 4.56%)</title><rect x="40.2490%" y="885" width="4.5643%" height="15" fill="rgb(52,167,167)" fg:x="97" fg:w="11"/><text x="40.4990%" y="895.50">osrs_..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::core::Core&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt;::poll&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt; (11 samples, 4.56%)</title><rect x="40.2490%" y="869" width="4.5643%" height="15" fill="rgb(77,190,190)" fg:x="97" fg:w="11"/><text x="40.4990%" y="879.50">osrs_..</text></g><g><title>osrs_gph.exe`tokio::loom::std::unsafe_cell::UnsafeCell&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt; &gt; &gt; &gt;::with_mut(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc (11 samples, 4.56%)</title><rect x="40.2490%" y="853" width="4.5643%" height="15" fill="rgb(99,210,210)" fg:x="97" fg:w="11"/><text x="40.4990%" y="863.50">osrs_..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::core::impl$6::poll::closure$0(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt;, enum2$&lt;tokio::runtime::task::core::Stage&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (11 samples, 4.56%)</title><rect x="40.2490%" y="837" width="4.5643%" height="15" fill="rgb(84,196,196)" fg:x="97" fg:w="11"/><text x="40.4990%" y="847.50">osrs_..</text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (11 samples, 4.56%)</title><rect x="40.2490%" y="821" width="4.5643%" height="15" fill="rgb(89,201,201)" fg:x="97" fg:w="11"/><text x="40.4990%" y="831.50">osrs_..</text></g><g><title>osrs_gph.exe`hyper::proto::h2::client::conn_task::async_fn$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (11 samples, 4.56%)</title><rect x="40.2490%" y="805" width="4.5643%" height="15" fill="rgb(96,207,207)" fg:x="97" fg:w="11"/><text x="40.4990%" y="815.50">osrs_..</text></g><g><title>osrs_gph.exe`futures_util::future::select::impl$1::poll&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;futures_util::future::select::Select&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (11 samples, 4.56%)</title><rect x="40.2490%" y="789" width="4.5643%" height="15" fill="rgb(67,181,181)" fg:x="97" fg:w="11"/><text x="40.4990%" y="799.50">osrs_..</text></g><g><title>osrs_gph.exe`futures_util::future::future::map::impl$2::poll&lt;futures_util::future::try_future::into_future::IntoFuture&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt; &gt;,futures_util::fns::MapErrFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;futures_util::future::future::map::Map&lt;futures_util::future::try_future::into_future::IntoFuture&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt; &gt;,futures_util::fns::MapErrFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$2 (11 samples, 4.56%)</title><rect x="40.2490%" y="773" width="4.5643%" height="15" fill="rgb(81,193,193)" fg:x="97" fg:w="11"/><text x="40.4990%" y="783.50">osrs_..</text></g><g><title>osrs_gph.exe`h2::client::impl$7::poll&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf (11 samples, 4.56%)</title><rect x="40.2490%" y="757" width="4.5643%" height="15" fill="rgb(81,193,193)" fg:x="97" fg:w="11"/><text x="40.4990%" y="767.50">osrs_..</text></g><g><title>osrs_gph.exe`enum2$&lt;core::task::poll::Poll&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;h2::proto::error::Error&gt; &gt; &gt; &gt; &gt;::map_err(enum2$&lt;core::task::poll::Poll&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;h2::proto::error::Error&gt; &gt; &gt; &gt; &gt;, h2::error::Error (*)(enum2$ (11 samples, 4.56%)</title><rect x="40.2490%" y="741" width="4.5643%" height="15" fill="rgb(76,189,189)" fg:x="97" fg:w="11"/><text x="40.4990%" y="751.50">osrs_..</text></g><g><title>osrs_gph.exe`h2::proto::connection::Connection&lt;reqwest::connect::Conn,h2::client::Peer,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt;::poll&lt;reqwest::connect::Conn,h2::client::Peer,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; (11 samples, 4.56%)</title><rect x="40.2490%" y="725" width="4.5643%" height="15" fill="rgb(92,204,204)" fg:x="97" fg:w="11"/><text x="40.4990%" y="735.50">osrs_..</text></g><g><title>osrs_gph.exe`h2::proto::connection::Connection&lt;reqwest::connect::Conn,h2::client::Peer,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt;::poll2 (9 samples, 3.73%)</title><rect x="41.0788%" y="709" width="3.7344%" height="15" fill="rgb(99,210,210)" fg:x="99" fg:w="9"/><text x="41.3288%" y="719.50">osrs..</text></g><g><title>osrs_gph.exe`core::task::poll::impl$6::branch(enum2$&lt;core::task::poll::Poll&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;h2::frame::Frame&lt;bytes::bytes::Bytes&gt; &gt;,enum2$ (8 samples, 3.32%)</title><rect x="41.4938%" y="693" width="3.3195%" height="15" fill="rgb(60,174,174)" fg:x="100" fg:w="8"/><text x="41.7438%" y="703.50">osr..</text></g><g><title>osrs_gph.exe`h2::codec::framed_read::impl$1::poll_next&lt;h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;h2::codec::framed_read::FramedRead&lt;h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (8 samples, 3.32%)</title><rect x="41.4938%" y="677" width="3.3195%" height="15" fill="rgb(57,172,172)" fg:x="100" fg:w="8"/><text x="41.7438%" y="687.50">osr..</text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;h2::frame::Frame&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt;,enum2$ (1 samples, 0.41%)</title><rect x="44.3983%" y="661" width="0.4149%" height="15" fill="rgb(54,169,169)" fg:x="107" fg:w="1"/><text x="44.6483%" y="671.50"></text></g><g><title>osrs_gph.exe`h2::codec::framed_read::decode_frame(h2::hpack::decoder::Decoder*, unsigned long long, enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="44.3983%" y="645" width="0.4149%" height="15" fill="rgb(69,183,183)" fg:x="107" fg:w="1"/><text x="44.6483%" y="655.50"></text></g><g><title>osrs_gph.exe`h2::frame::headers::HeaderBlock::load (1 samples, 0.41%)</title><rect x="44.3983%" y="629" width="0.4149%" height="15" fill="rgb(52,167,167)" fg:x="107" fg:w="1"/><text x="44.6483%" y="639.50"></text></g><g><title>osrs_gph.exe`h2::hpack::decoder::Decoder::decode&lt;h2::frame::headers::impl$18::load::closure_env$0&gt;(std::io::cursor::Cursor&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="44.3983%" y="613" width="0.4149%" height="15" fill="rgb(99,210,210)" fg:x="107" fg:w="1"/><text x="44.6483%" y="623.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$&lt;h2::hpack::header::Header&lt;http::header::name::HeaderName&gt; &gt;,enum2$ (1 samples, 0.41%)</title><rect x="44.3983%" y="597" width="0.4149%" height="15" fill="rgb(95,206,206)" fg:x="107" fg:w="1"/><text x="44.6483%" y="607.50"></text></g><g><title>osrs_gph.exe`h2::hpack::decoder::Decoder::decode_literal(std::io::cursor::Cursor&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="44.3983%" y="581" width="0.4149%" height="15" fill="rgb(56,171,171)" fg:x="107" fg:w="1"/><text x="44.6483%" y="591.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;h2::hpack::decoder::StringMarker,enum2$ (1 samples, 0.41%)</title><rect x="44.3983%" y="565" width="0.4149%" height="15" fill="rgb(102,212,212)" fg:x="107" fg:w="1"/><text x="44.6483%" y="575.50"></text></g><g><title>osrs_gph.exe`h2::hpack::decoder::Decoder::try_decode_string(std::io::cursor::Cursor&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="44.3983%" y="549" width="0.4149%" height="15" fill="rgb(74,187,187)" fg:x="107" fg:w="1"/><text x="44.6483%" y="559.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;bytes::bytes_mut::BytesMut,enum2$&lt;h2::hpack::decoder::DecoderError&gt; &gt; &gt;::map(enum2$&lt;core::result::Result&lt;bytes::bytes_mut::BytesMut,enum2$ (1 samples, 0.41%)</title><rect x="44.3983%" y="533" width="0.4149%" height="15" fill="rgb(72,185,185)" fg:x="107" fg:w="1"/><text x="44.6483%" y="543.50"></text></g><g><title>osrs_gph.exe`h2::hpack::huffman::decode(ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="44.3983%" y="517" width="0.4149%" height="15" fill="rgb(84,196,196)" fg:x="107" fg:w="1"/><text x="44.6483%" y="527.50"></text></g><g><title>osrs_gph.exe`h2::hpack::huffman::Decoder::decode4 (1 samples, 0.41%)</title><rect x="44.3983%" y="501" width="0.4149%" height="15" fill="rgb(56,171,171)" fg:x="107" fg:w="1"/><text x="44.6483%" y="511.50"></text></g><g><title>osrs_gph.exe`core::slice::iter::impl$189::next(core::slice::iter::IterMut (1 samples, 0.41%)</title><rect x="44.8133%" y="773" width="0.4149%" height="15" fill="rgb(104,215,215)" fg:x="108" fg:w="1"/><text x="45.0633%" y="783.50"></text></g><g><title>osrs_gph.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;mio::sys::windows::iocp::CompletionStatus&gt;*, core::ptr::non_null::NonNull (1 samples, 0.41%)</title><rect x="44.8133%" y="757" width="0.4149%" height="15" fill="rgb(85,197,197)" fg:x="108" fg:w="1"/><text x="45.0633%" y="767.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::event::Events::clear (3 samples, 1.24%)</title><rect x="44.8133%" y="789" width="1.2448%" height="15" fill="rgb(57,171,171)" fg:x="108" fg:w="3"/><text x="45.0633%" y="799.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::SelectorInner::feed_events(alloc::vec::Vec&lt;mio::sys::windows::event::Event,alloc::alloc::Global&gt;*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="46.0581%" y="757" width="0.4149%" height="15" fill="rgb(101,211,211)" fg:x="111" fg:w="1"/><text x="46.3081%" y="767.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(std::sync::mutex::MutexGuard&lt;alloc::collections::vec_deque::VecDeque&lt;core::pin::Pin&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex (1 samples, 0.41%)</title><rect x="46.0581%" y="741" width="0.4149%" height="15" fill="rgb(51,166,166)" fg:x="111" fg:w="1"/><text x="46.3081%" y="751.50"></text></g><g><title>osrs_gph.exe`std::sync::mutex::impl$12::drop(std::sync::mutex::MutexGuard&lt;alloc::collections::vec_deque::VecDeque&lt;core::pin::Pin&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex (1 samples, 0.41%)</title><rect x="46.0581%" y="725" width="0.4149%" height="15" fill="rgb(109,219,219)" fg:x="111" fg:w="1"/><text x="46.3081%" y="735.50"></text></g><g><title>osrs_gph.exe`std::sync::poison::Flag::done (1 samples, 0.41%)</title><rect x="46.0581%" y="709" width="0.4149%" height="15" fill="rgb(51,166,166)" fg:x="111" fg:w="1"/><text x="46.3081%" y="719.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::AfdGroup::release_unused_afd (1 samples, 0.41%)</title><rect x="46.0581%" y="693" width="0.4149%" height="15" fill="rgb(89,200,200)" fg:x="111" fg:w="1"/><text x="46.3081%" y="703.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc (1 samples, 0.41%)</title><rect x="46.0581%" y="677" width="0.4149%" height="15" fill="rgb(62,176,176)" fg:x="111" fg:w="1"/><text x="46.3081%" y="687.50"></text></g><g><title>osrs_gph.exe`std::sync::mutex::impl$12::drop(std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc (1 samples, 0.41%)</title><rect x="46.0581%" y="661" width="0.4149%" height="15" fill="rgb(103,214,214)" fg:x="111" fg:w="1"/><text x="46.3081%" y="671.50"></text></g><g><title>osrs_gph.exe`std::sync::poison::Flag::done (1 samples, 0.41%)</title><rect x="46.0581%" y="645" width="0.4149%" height="15" fill="rgb(72,185,185)" fg:x="111" fg:w="1"/><text x="46.3081%" y="655.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;alloc::sync::Arc&lt;mio::sys::windows::afd::Afd,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;::retain&lt;alloc::sync::Arc&lt;mio::sys::windows::afd::Afd,alloc::alloc::Global&gt;,alloc::alloc::Global,mio::sys::windows::selector::impl$0::release_unused_afd::closure_env$0&gt; (1 samples, 0.41%)</title><rect x="46.0581%" y="629" width="0.4149%" height="15" fill="rgb(54,169,169)" fg:x="111" fg:w="1"/><text x="46.3081%" y="639.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;alloc::sync::Arc&lt;mio::sys::windows::afd::Afd,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;::retain_mut(alloc::vec::impl$1::retain::closure_env$0&lt;alloc::sync::Arc (1 samples, 0.41%)</title><rect x="46.0581%" y="613" width="0.4149%" height="15" fill="rgb(68,182,182)" fg:x="111" fg:w="1"/><text x="46.3081%" y="623.50"></text></g><g><title>osrs_gph.exe`alloc::vec::impl$1::retain_mut::process_loop(unsigned long long, alloc::vec::impl$1::retain::closure_env$0&lt;alloc::sync::Arc&lt;mio::sys::windows::afd::Afd,alloc::alloc::Global&gt;,alloc::alloc::Global,mio::sys::windows::selector::impl$0::release_unused_afd::closure_env$0&gt;*, alloc::vec::impl$1::retain_mut::BackshiftOnDrop&lt;alloc::sync::Arc (1 samples, 0.41%)</title><rect x="46.0581%" y="597" width="0.4149%" height="15" fill="rgb(62,176,176)" fg:x="111" fg:w="1"/><text x="46.3081%" y="607.50"></text></g><g><title>osrs_gph.exe`alloc::vec::impl$1::retain::closure$0(alloc::vec::impl$1::retain::closure_env$0&lt;alloc::sync::Arc&lt;mio::sys::windows::afd::Afd,alloc::alloc::Global&gt;,alloc::alloc::Global,mio::sys::windows::selector::impl$0::release_unused_afd::closure_env$0&gt;*, alloc::sync::Arc (1 samples, 0.41%)</title><rect x="46.0581%" y="581" width="0.4149%" height="15" fill="rgb(63,177,177)" fg:x="111" fg:w="1"/><text x="46.3081%" y="591.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::impl$0::release_unused_afd::closure$0(mio::sys::windows::selector::impl$0::release_unused_afd::closure_env$0*, alloc::sync::Arc (1 samples, 0.41%)</title><rect x="46.0581%" y="565" width="0.4149%" height="15" fill="rgb(101,212,212)" fg:x="111" fg:w="1"/><text x="46.3081%" y="575.50"></text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;mio::sys::windows::afd::Afd,alloc::alloc::Global&gt;::strong_count (1 samples, 0.41%)</title><rect x="46.0581%" y="549" width="0.4149%" height="15" fill="rgb(55,169,169)" fg:x="111" fg:w="1"/><text x="46.3081%" y="559.50"></text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;mio::sys::windows::afd::Afd,alloc::alloc::Global&gt;::inner (1 samples, 0.41%)</title><rect x="46.0581%" y="533" width="0.4149%" height="15" fill="rgb(61,175,175)" fg:x="111" fg:w="1"/><text x="46.3081%" y="543.50"></text></g><g><title>osrs_gph.exe`core::sync::atomic::atomic_load (1 samples, 0.41%)</title><rect x="46.0581%" y="517" width="0.4149%" height="15" fill="rgb(53,168,168)" fg:x="111" fg:w="1"/><text x="46.3081%" y="527.50"></text></g><g><title>osrs_gph.exe`core::sync::atomic::AtomicBool::store (1 samples, 0.41%)</title><rect x="46.4730%" y="757" width="0.4149%" height="15" fill="rgb(107,217,217)" fg:x="112" fg:w="1"/><text x="46.7230%" y="767.50"></text></g><g><title>osrs_gph.exe`core::sync::atomic::atomic_store (1 samples, 0.41%)</title><rect x="46.4730%" y="741" width="0.4149%" height="15" fill="rgb(91,202,202)" fg:x="112" fg:w="1"/><text x="46.7230%" y="751.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::iocp::CompletionPort::get_many(ref_mut$&lt;slice2$&lt;mio::sys::windows::iocp::CompletionStatus&gt; &gt;, enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="46.4730%" y="725" width="0.4149%" height="15" fill="rgb(63,177,177)" fg:x="112" fg:w="1"/><text x="46.7230%" y="735.50"></text></g><g><title>`0x7FFE56BD0594 (1 samples, 0.41%)</title><rect x="46.4730%" y="709" width="0.4149%" height="15" fill="rgb(196,196,57)" fg:x="112" fg:w="1"/><text x="46.7230%" y="719.50"></text></g><g><title>`0x7FFE59452304 (1 samples, 0.41%)</title><rect x="46.4730%" y="693" width="0.4149%" height="15" fill="rgb(212,212,63)" fg:x="112" fg:w="1"/><text x="46.7230%" y="703.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::SockState::update(core::pin::Pin&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex (5 samples, 2.07%)</title><rect x="46.8880%" y="725" width="2.0747%" height="15" fill="rgb(78,190,190)" fg:x="113" fg:w="5"/><text x="47.1380%" y="735.50">o..</text></g><g><title>osrs_gph.exe`mio::sys::windows::afd::Afd::poll (5 samples, 2.07%)</title><rect x="46.8880%" y="709" width="2.0747%" height="15" fill="rgb(98,209,209)" fg:x="113" fg:w="5"/><text x="47.1380%" y="719.50">o..</text></g><g><title>`0x7FFE5944F454 (5 samples, 2.07%)</title><rect x="46.8880%" y="693" width="2.0747%" height="15" fill="rgb(207,207,61)" fg:x="113" fg:w="5"/><text x="47.1380%" y="703.50">`..</text></g><g><title>osrs_gph.exe`tokio::runtime::time::Driver::park_thread_timeout (11 samples, 4.56%)</title><rect x="44.8133%" y="901" width="4.5643%" height="15" fill="rgb(87,199,199)" fg:x="108" fg:w="11"/><text x="45.0633%" y="911.50">osrs_..</text></g><g><title>osrs_gph.exe`enum2$&lt;tokio::runtime::driver::IoStack&gt;::park_timeout (11 samples, 4.56%)</title><rect x="44.8133%" y="885" width="4.5643%" height="15" fill="rgb(69,183,183)" fg:x="108" fg:w="11"/><text x="45.0633%" y="895.50">osrs_..</text></g><g><title>osrs_gph.exe`tokio::runtime::io::driver::Driver::park_timeout (11 samples, 4.56%)</title><rect x="44.8133%" y="869" width="4.5643%" height="15" fill="rgb(95,206,206)" fg:x="108" fg:w="11"/><text x="45.0633%" y="879.50">osrs_..</text></g><g><title>osrs_gph.exe`tokio::runtime::io::driver::Driver::turn(tokio::runtime::io::driver::Handle*, enum2$&lt;core::option::Option (11 samples, 4.56%)</title><rect x="44.8133%" y="853" width="4.5643%" height="15" fill="rgb(78,190,190)" fg:x="108" fg:w="11"/><text x="45.0633%" y="863.50">osrs_..</text></g><g><title>osrs_gph.exe`mio::poll::Poll::poll(mio::event::events::Events*, enum2$&lt;core::option::Option (11 samples, 4.56%)</title><rect x="44.8133%" y="837" width="4.5643%" height="15" fill="rgb(81,193,193)" fg:x="108" fg:w="11"/><text x="45.0633%" y="847.50">osrs_..</text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::Selector::select(mio::sys::windows::event::Events*, enum2$&lt;core::option::Option (11 samples, 4.56%)</title><rect x="44.8133%" y="821" width="4.5643%" height="15" fill="rgb(62,176,176)" fg:x="108" fg:w="11"/><text x="45.0633%" y="831.50">osrs_..</text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::SelectorInner::select(mio::sys::windows::event::Events*, enum2$&lt;core::option::Option (11 samples, 4.56%)</title><rect x="44.8133%" y="805" width="4.5643%" height="15" fill="rgb(96,207,207)" fg:x="108" fg:w="11"/><text x="45.0633%" y="815.50">osrs_..</text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (8 samples, 3.32%)</title><rect x="46.0581%" y="789" width="3.3195%" height="15" fill="rgb(81,194,194)" fg:x="111" fg:w="8"/><text x="46.3081%" y="799.50">osr..</text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::SelectorInner::select2(ref_mut$&lt;slice2$&lt;mio::sys::windows::iocp::CompletionStatus&gt; &gt;, alloc::vec::Vec&lt;mio::sys::windows::event::Event,alloc::alloc::Global&gt;*, enum2$&lt;core::option::Option (8 samples, 3.32%)</title><rect x="46.0581%" y="773" width="3.3195%" height="15" fill="rgb(81,193,193)" fg:x="111" fg:w="8"/><text x="46.3081%" y="783.50">osr..</text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (6 samples, 2.49%)</title><rect x="46.8880%" y="757" width="2.4896%" height="15" fill="rgb(92,204,204)" fg:x="113" fg:w="6"/><text x="47.1380%" y="767.50">os..</text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::SelectorInner::update_sockets_events (6 samples, 2.49%)</title><rect x="46.8880%" y="741" width="2.4896%" height="15" fill="rgb(105,216,216)" fg:x="113" fg:w="6"/><text x="47.1380%" y="751.50">os..</text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(std::sync::mutex::MutexGuard&lt;alloc::collections::vec_deque::VecDeque&lt;core::pin::Pin&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex (1 samples, 0.41%)</title><rect x="48.9627%" y="725" width="0.4149%" height="15" fill="rgb(72,185,185)" fg:x="118" fg:w="1"/><text x="49.2127%" y="735.50"></text></g><g><title>osrs_gph.exe`std::sync::mutex::impl$12::drop(std::sync::mutex::MutexGuard&lt;alloc::collections::vec_deque::VecDeque&lt;core::pin::Pin&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex (1 samples, 0.41%)</title><rect x="48.9627%" y="709" width="0.4149%" height="15" fill="rgb(62,176,176)" fg:x="118" fg:w="1"/><text x="49.2127%" y="719.50"></text></g><g><title>osrs_gph.exe`std::sync::poison::Flag::done (1 samples, 0.41%)</title><rect x="48.9627%" y="693" width="0.4149%" height="15" fill="rgb(56,171,171)" fg:x="118" fg:w="1"/><text x="49.2127%" y="703.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::AfdGroup::release_unused_afd (1 samples, 0.41%)</title><rect x="48.9627%" y="677" width="0.4149%" height="15" fill="rgb(92,204,204)" fg:x="118" fg:w="1"/><text x="49.2127%" y="687.50"></text></g><g><title>osrs_gph.exe`std::sync::mutex::Mutex&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;mio::sys::windows::afd::Afd,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;::lock (1 samples, 0.41%)</title><rect x="48.9627%" y="661" width="0.4149%" height="15" fill="rgb(100,211,211)" fg:x="118" fg:w="1"/><text x="49.2127%" y="671.50"></text></g><g><title>osrs_gph.exe`std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;mio::sys::windows::afd::Afd,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;::new(std::sync::mutex::Mutex&lt;alloc::vec::Vec&lt;alloc::sync::Arc (1 samples, 0.41%)</title><rect x="48.9627%" y="645" width="0.4149%" height="15" fill="rgb(79,191,191)" fg:x="118" fg:w="1"/><text x="49.2127%" y="655.50"></text></g><g><title>osrs_gph.exe`std::sync::poison::Flag::guard (1 samples, 0.41%)</title><rect x="48.9627%" y="629" width="0.4149%" height="15" fill="rgb(108,218,218)" fg:x="118" fg:w="1"/><text x="49.2127%" y="639.50"></text></g><g><title>osrs_gph.exe`std::thread::panicking (1 samples, 0.41%)</title><rect x="48.9627%" y="613" width="0.4149%" height="15" fill="rgb(96,207,207)" fg:x="118" fg:w="1"/><text x="49.2127%" y="623.50"></text></g><g><title>osrs_gph.exe`std::panicking::panicking (1 samples, 0.41%)</title><rect x="48.9627%" y="597" width="0.4149%" height="15" fill="rgb(91,202,202)" fg:x="118" fg:w="1"/><text x="49.2127%" y="607.50"></text></g><g><title>osrs_gph.exe`std::panicking::panic_count::count_is_zero (1 samples, 0.41%)</title><rect x="48.9627%" y="581" width="0.4149%" height="15" fill="rgb(81,194,194)" fg:x="118" fg:w="1"/><text x="49.2127%" y="591.50"></text></g><g><title>osrs_gph.exe`core::sync::atomic::AtomicUsize::load (1 samples, 0.41%)</title><rect x="48.9627%" y="565" width="0.4149%" height="15" fill="rgb(74,187,187)" fg:x="118" fg:w="1"/><text x="49.2127%" y="575.50"></text></g><g><title>osrs_gph.exe`core::sync::atomic::atomic_load (1 samples, 0.41%)</title><rect x="48.9627%" y="549" width="0.4149%" height="15" fill="rgb(82,194,194)" fg:x="118" fg:w="1"/><text x="49.2127%" y="559.50"></text></g><g><title>`0x7FFE593E7826 (1 samples, 0.41%)</title><rect x="48.9627%" y="533" width="0.4149%" height="15" fill="rgb(198,198,58)" fg:x="118" fg:w="1"/><text x="49.2127%" y="543.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::io::scheduled_io::ScheduledIo::wake (1 samples, 0.41%)</title><rect x="49.3776%" y="853" width="0.4149%" height="15" fill="rgb(89,201,201)" fg:x="119" fg:w="1"/><text x="49.6276%" y="863.50"></text></g><g><title>osrs_gph.exe`tokio::util::wake_list::WakeList::wake_all (1 samples, 0.41%)</title><rect x="49.3776%" y="837" width="0.4149%" height="15" fill="rgb(101,211,211)" fg:x="119" fg:w="1"/><text x="49.6276%" y="847.50"></text></g><g><title>osrs_gph.exe`core::task::wake::Waker::wake (1 samples, 0.41%)</title><rect x="49.3776%" y="821" width="0.4149%" height="15" fill="rgb(102,213,213)" fg:x="119" fg:w="1"/><text x="49.6276%" y="831.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::waker::wake_by_val(tuple$ (1 samples, 0.41%)</title><rect x="49.3776%" y="805" width="0.4149%" height="15" fill="rgb(75,188,188)" fg:x="119" fg:w="1"/><text x="49.6276%" y="815.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::raw::RawTask::wake_by_val (1 samples, 0.41%)</title><rect x="49.3776%" y="789" width="0.4149%" height="15" fill="rgb(100,210,210)" fg:x="119" fg:w="1"/><text x="49.6276%" y="799.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::raw::RawTask::schedule (1 samples, 0.41%)</title><rect x="49.3776%" y="773" width="0.4149%" height="15" fill="rgb(79,191,191)" fg:x="119" fg:w="1"/><text x="49.6276%" y="783.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::context::with_scheduler&lt;tuple$&lt;&gt;,tokio::runtime::scheduler::current_thread::impl$6::schedule::closure_env$0&gt; (1 samples, 0.41%)</title><rect x="49.3776%" y="757" width="0.4149%" height="15" fill="rgb(103,213,213)" fg:x="119" fg:w="1"/><text x="49.6276%" y="767.50"></text></g><g><title>osrs_gph.exe`std::thread::local::LocalKey&lt;tokio::runtime::context::Context&gt;::try_with(tokio::runtime::context::with_scheduler::closure_env$0&lt;tuple$ (1 samples, 0.41%)</title><rect x="49.3776%" y="741" width="0.4149%" height="15" fill="rgb(82,194,194)" fg:x="119" fg:w="1"/><text x="49.6276%" y="751.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::context::with_scheduler::closure$0(tokio::runtime::context::with_scheduler::closure_env$0&lt;tuple$ (1 samples, 0.41%)</title><rect x="49.3776%" y="725" width="0.4149%" height="15" fill="rgb(104,214,214)" fg:x="119" fg:w="1"/><text x="49.6276%" y="735.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::context::scoped::Scoped&lt;enum2$&lt;tokio::runtime::scheduler::Context&gt; &gt;::with (1 samples, 0.41%)</title><rect x="49.3776%" y="709" width="0.4149%" height="15" fill="rgb(96,207,207)" fg:x="119" fg:w="1"/><text x="49.6276%" y="719.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::impl$6::schedule::closure$0(tokio::runtime::scheduler::current_thread::impl$6::schedule::closure_env$0, enum2$&lt;core::option::Option&lt;ref$&lt;enum2$ (1 samples, 0.41%)</title><rect x="49.3776%" y="693" width="0.4149%" height="15" fill="rgb(84,196,196)" fg:x="119" fg:w="1"/><text x="49.6276%" y="703.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::Core::push_task(tokio::runtime::scheduler::current_thread::Handle*, tokio::runtime::task::Notified&lt;alloc::sync::Arc (1 samples, 0.41%)</title><rect x="49.3776%" y="677" width="0.4149%" height="15" fill="rgb(85,197,197)" fg:x="119" fg:w="1"/><text x="49.6276%" y="687.50"></text></g><g><title>osrs_gph.exe`alloc::collections::vec_deque::VecDeque&lt;tokio::runtime::task::Notified&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;::push_back(tokio::runtime::task::Notified&lt;alloc::sync::Arc (1 samples, 0.41%)</title><rect x="49.3776%" y="661" width="0.4149%" height="15" fill="rgb(59,173,173)" fg:x="119" fg:w="1"/><text x="49.6276%" y="671.50"></text></g><g><title>osrs_gph.exe`alloc::collections::vec_deque::VecDeque&lt;tokio::runtime::task::Notified&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;::is_full (1 samples, 0.41%)</title><rect x="49.3776%" y="645" width="0.4149%" height="15" fill="rgb(62,176,176)" fg:x="119" fg:w="1"/><text x="49.6276%" y="655.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::event::Events::clear (1 samples, 0.41%)</title><rect x="49.7925%" y="805" width="0.4149%" height="15" fill="rgb(52,167,167)" fg:x="120" fg:w="1"/><text x="50.0425%" y="815.50"></text></g><g><title>osrs_gph.exe`core::slice::iter::impl$189::next(core::slice::iter::IterMut (1 samples, 0.41%)</title><rect x="49.7925%" y="789" width="0.4149%" height="15" fill="rgb(104,214,214)" fg:x="120" fg:w="1"/><text x="50.0425%" y="799.50"></text></g><g><title>osrs_gph.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;mio::sys::windows::iocp::CompletionStatus&gt;*, core::ptr::non_null::NonNull (1 samples, 0.41%)</title><rect x="49.7925%" y="773" width="0.4149%" height="15" fill="rgb(75,188,188)" fg:x="120" fg:w="1"/><text x="50.0425%" y="783.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::Context::park (14 samples, 5.81%)</title><rect x="44.8133%" y="1013" width="5.8091%" height="15" fill="rgb(77,190,190)" fg:x="108" fg:w="14"/><text x="45.0633%" y="1023.50">osrs_gp..</text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::Context::enter (14 samples, 5.81%)</title><rect x="44.8133%" y="997" width="5.8091%" height="15" fill="rgb(75,188,188)" fg:x="108" fg:w="14"/><text x="45.0633%" y="1007.50">osrs_gp..</text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::impl$3::park::closure$1 (14 samples, 5.81%)</title><rect x="44.8133%" y="981" width="5.8091%" height="15" fill="rgb(100,210,210)" fg:x="108" fg:w="14"/><text x="45.0633%" y="991.50">osrs_gp..</text></g><g><title>osrs_gph.exe`tokio::runtime::driver::Driver::park (14 samples, 5.81%)</title><rect x="44.8133%" y="965" width="5.8091%" height="15" fill="rgb(109,219,219)" fg:x="108" fg:w="14"/><text x="45.0633%" y="975.50">osrs_gp..</text></g><g><title>osrs_gph.exe`enum2$&lt;tokio::runtime::driver::TimeDriver&gt;::park (14 samples, 5.81%)</title><rect x="44.8133%" y="949" width="5.8091%" height="15" fill="rgb(75,188,188)" fg:x="108" fg:w="14"/><text x="45.0633%" y="959.50">osrs_gp..</text></g><g><title>osrs_gph.exe`tokio::runtime::time::Driver::park (14 samples, 5.81%)</title><rect x="44.8133%" y="933" width="5.8091%" height="15" fill="rgb(93,204,204)" fg:x="108" fg:w="14"/><text x="45.0633%" y="943.50">osrs_gp..</text></g><g><title>osrs_gph.exe`tokio::runtime::time::Driver::park_internal(tokio::runtime::driver::Handle*, enum2$&lt;core::option::Option (14 samples, 5.81%)</title><rect x="44.8133%" y="917" width="5.8091%" height="15" fill="rgb(94,205,205)" fg:x="108" fg:w="14"/><text x="45.0633%" y="927.50">osrs_gp..</text></g><g><title>osrs_gph.exe`enum2$&lt;tokio::runtime::driver::IoStack&gt;::park (3 samples, 1.24%)</title><rect x="49.3776%" y="901" width="1.2448%" height="15" fill="rgb(81,194,194)" fg:x="119" fg:w="3"/><text x="49.6276%" y="911.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::io::driver::Driver::park (3 samples, 1.24%)</title><rect x="49.3776%" y="885" width="1.2448%" height="15" fill="rgb(60,174,174)" fg:x="119" fg:w="3"/><text x="49.6276%" y="895.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::io::driver::Driver::turn(tokio::runtime::io::driver::Handle*, enum2$&lt;core::option::Option (3 samples, 1.24%)</title><rect x="49.3776%" y="869" width="1.2448%" height="15" fill="rgb(72,185,185)" fg:x="119" fg:w="3"/><text x="49.6276%" y="879.50"></text></g><g><title>osrs_gph.exe`mio::poll::Poll::poll(mio::event::events::Events*, enum2$&lt;core::option::Option (2 samples, 0.83%)</title><rect x="49.7925%" y="853" width="0.8299%" height="15" fill="rgb(82,195,195)" fg:x="120" fg:w="2"/><text x="50.0425%" y="863.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::Selector::select(mio::sys::windows::event::Events*, enum2$&lt;core::option::Option (2 samples, 0.83%)</title><rect x="49.7925%" y="837" width="0.8299%" height="15" fill="rgb(107,218,218)" fg:x="120" fg:w="2"/><text x="50.0425%" y="847.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::SelectorInner::select(mio::sys::windows::event::Events*, enum2$&lt;core::option::Option (2 samples, 0.83%)</title><rect x="49.7925%" y="821" width="0.8299%" height="15" fill="rgb(60,174,174)" fg:x="120" fg:w="2"/><text x="50.0425%" y="831.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (1 samples, 0.41%)</title><rect x="50.2075%" y="805" width="0.4149%" height="15" fill="rgb(72,185,185)" fg:x="121" fg:w="1"/><text x="50.4575%" y="815.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::SelectorInner::select2(ref_mut$&lt;slice2$&lt;mio::sys::windows::iocp::CompletionStatus&gt; &gt;, alloc::vec::Vec&lt;mio::sys::windows::event::Event,alloc::alloc::Global&gt;*, enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="50.2075%" y="789" width="0.4149%" height="15" fill="rgb(64,178,178)" fg:x="121" fg:w="1"/><text x="50.4575%" y="799.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 0.41%)</title><rect x="50.2075%" y="773" width="0.4149%" height="15" fill="rgb(98,209,209)" fg:x="121" fg:w="1"/><text x="50.4575%" y="783.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::SelectorInner::update_sockets_events (1 samples, 0.41%)</title><rect x="50.2075%" y="757" width="0.4149%" height="15" fill="rgb(91,202,202)" fg:x="121" fg:w="1"/><text x="50.4575%" y="767.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::SockState::update(core::pin::Pin&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex (1 samples, 0.41%)</title><rect x="50.2075%" y="741" width="0.4149%" height="15" fill="rgb(91,203,203)" fg:x="121" fg:w="1"/><text x="50.4575%" y="751.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::afd::Afd::poll (1 samples, 0.41%)</title><rect x="50.2075%" y="725" width="0.4149%" height="15" fill="rgb(103,213,213)" fg:x="121" fg:w="1"/><text x="50.4575%" y="735.50"></text></g><g><title>`0x7FFE5944F454 (1 samples, 0.41%)</title><rect x="50.2075%" y="709" width="0.4149%" height="15" fill="rgb(179,179,51)" fg:x="121" fg:w="1"/><text x="50.4575%" y="719.50"></text></g><g><title>osrs_gph.exe`tokio::task::spawn::spawn(enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0 (1 samples, 0.41%)</title><rect x="50.6224%" y="917" width="0.4149%" height="15" fill="rgb(78,191,191)" fg:x="122" fg:w="1"/><text x="50.8724%" y="927.50"></text></g><g><title>osrs_gph.exe`tokio::task::spawn::spawn_inner(enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt;, enum2$&lt;core::option::Option&lt;ref$ (1 samples, 0.41%)</title><rect x="50.6224%" y="901" width="0.4149%" height="15" fill="rgb(91,202,202)" fg:x="122" fg:w="1"/><text x="50.8724%" y="911.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::context::current::with_current&lt;tokio::task::spawn::spawn_inner::closure_env$0&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt; &gt;,tokio::runtime::task::join::JoinHandle&lt;tuple$&lt;&gt; &gt; &gt;(tokio::task::spawn::spawn_inner::closure_env$0&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0 (1 samples, 0.41%)</title><rect x="50.6224%" y="885" width="0.4149%" height="15" fill="rgb(54,168,168)" fg:x="122" fg:w="1"/><text x="50.8724%" y="895.50"></text></g><g><title>osrs_gph.exe`std::thread::local::LocalKey&lt;tokio::runtime::context::Context&gt;::try_with(tokio::runtime::context::current::with_current::closure_env$0&lt;tokio::task::spawn::spawn_inner::closure_env$0&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt; &gt;,tokio::runtime::task::join::JoinHandle&lt;tuple$ (1 samples, 0.41%)</title><rect x="50.6224%" y="869" width="0.4149%" height="15" fill="rgb(66,179,179)" fg:x="122" fg:w="1"/><text x="50.8724%" y="879.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::context::current::with_current::closure$0(tokio::runtime::context::current::with_current::closure_env$0&lt;tokio::task::spawn::spawn_inner::closure_env$0&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt; &gt;,tokio::runtime::task::join::JoinHandle&lt;tuple$ (1 samples, 0.41%)</title><rect x="50.6224%" y="853" width="0.4149%" height="15" fill="rgb(72,185,185)" fg:x="122" fg:w="1"/><text x="50.8724%" y="863.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(core::cell::Ref&lt;enum2$&lt;core::option::Option&lt;enum2$ (1 samples, 0.41%)</title><rect x="50.6224%" y="837" width="0.4149%" height="15" fill="rgb(69,182,182)" fg:x="122" fg:w="1"/><text x="50.8724%" y="847.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="50.6224%" y="821" width="0.4149%" height="15" fill="rgb(95,207,207)" fg:x="122" fg:w="1"/><text x="50.8724%" y="831.50"></text></g><g><title>osrs_gph.exe`core::cell::impl$35::drop (1 samples, 0.41%)</title><rect x="50.6224%" y="805" width="0.4149%" height="15" fill="rgb(83,195,195)" fg:x="122" fg:w="1"/><text x="50.8724%" y="815.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;isize&gt;::set (1 samples, 0.41%)</title><rect x="50.6224%" y="789" width="0.4149%" height="15" fill="rgb(81,193,193)" fg:x="122" fg:w="1"/><text x="50.8724%" y="799.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;isize&gt;::replace (1 samples, 0.41%)</title><rect x="50.6224%" y="773" width="0.4149%" height="15" fill="rgb(78,191,191)" fg:x="122" fg:w="1"/><text x="50.8724%" y="783.50"></text></g><g><title>osrs_gph.exe`core::mem::replace (1 samples, 0.41%)</title><rect x="50.6224%" y="757" width="0.4149%" height="15" fill="rgb(51,166,166)" fg:x="122" fg:w="1"/><text x="50.8724%" y="767.50"></text></g><g><title>osrs_gph.exe`core::ptr::write (1 samples, 0.41%)</title><rect x="50.6224%" y="741" width="0.4149%" height="15" fill="rgb(58,172,172)" fg:x="122" fg:w="1"/><text x="50.8724%" y="751.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::Handle::spawn&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt; &gt;(alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt;*, enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0 (1 samples, 0.41%)</title><rect x="50.6224%" y="725" width="0.4149%" height="15" fill="rgb(87,199,199)" fg:x="122" fg:w="1"/><text x="50.8724%" y="735.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::list::OwnedTasks&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;::bind_inner&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;(tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;, tokio::runtime::task::Notified&lt;alloc::sync::Arc (1 samples, 0.41%)</title><rect x="50.6224%" y="709" width="0.4149%" height="15" fill="rgb(102,213,213)" fg:x="122" fg:w="1"/><text x="50.8724%" y="719.50"></text></g><g><title>osrs_gph.exe`reqwest::proxy::Proxy::system (1 samples, 0.41%)</title><rect x="51.0373%" y="901" width="0.4149%" height="15" fill="rgb(90,201,201)" fg:x="123" fg:w="1"/><text x="51.2873%" y="911.50"></text></g><g><title>osrs_gph.exe`once_cell::imp::OnceCell&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt; &gt;::initialize&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt; (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt; (*) (1 samples, 0.41%)</title><rect x="51.0373%" y="885" width="0.4149%" height="15" fill="rgb(77,190,190)" fg:x="123" fg:w="1"/><text x="51.2873%" y="895.50"></text></g><g><title>osrs_gph.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (1 samples, 0.41%)</title><rect x="51.0373%" y="869" width="0.4149%" height="15" fill="rgb(67,180,180)" fg:x="123" fg:w="1"/><text x="51.2873%" y="879.50"></text></g><g><title>osrs_gph.exe`once_cell::imp::impl$4::initialize::closure$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt; (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt; (*)()&gt; &gt;,enum2$ (1 samples, 0.41%)</title><rect x="51.0373%" y="853" width="0.4149%" height="15" fill="rgb(64,178,178)" fg:x="123" fg:w="1"/><text x="51.2873%" y="863.50"></text></g><g><title>osrs_gph.exe`once_cell::sync::impl$6::get_or_init::closure$0(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt; (*) (1 samples, 0.41%)</title><rect x="51.0373%" y="837" width="0.4149%" height="15" fill="rgb(92,203,203)" fg:x="123" fg:w="1"/><text x="51.2873%" y="847.50"></text></g><g><title>osrs_gph.exe`once_cell::sync::impl$11::force::closure$0(once_cell::sync::impl$11::force::closure_env$0&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;,alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt; (*) (1 samples, 0.41%)</title><rect x="51.0373%" y="821" width="0.4149%" height="15" fill="rgb(105,216,216)" fg:x="123" fg:w="1"/><text x="51.2873%" y="831.50"></text></g><g><title>osrs_gph.exe`core::ops::function::FnOnce::call_once(alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;reqwest::proxy::ProxyScheme&gt;,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt; (*) (1 samples, 0.41%)</title><rect x="51.0373%" y="805" width="0.4149%" height="15" fill="rgb(59,173,173)" fg:x="123" fg:w="1"/><text x="51.2873%" y="815.50"></text></g><g><title>osrs_gph.exe`core::ops::function::FnOnce::call_once&lt;reqwest::proxy::SYS_PROXIES::closure_env$0,tuple$&lt;&gt; &gt; (1 samples, 0.41%)</title><rect x="51.0373%" y="789" width="0.4149%" height="15" fill="rgb(91,202,202)" fg:x="123" fg:w="1"/><text x="51.2873%" y="799.50"></text></g><g><title>osrs_gph.exe`reqwest::proxy::SYS_PROXIES::closure$0 (1 samples, 0.41%)</title><rect x="51.0373%" y="773" width="0.4149%" height="15" fill="rgb(89,201,201)" fg:x="123" fg:w="1"/><text x="51.2873%" y="783.50"></text></g><g><title>osrs_gph.exe`reqwest::proxy::get_from_platform (1 samples, 0.41%)</title><rect x="51.0373%" y="757" width="0.4149%" height="15" fill="rgb(72,185,185)" fg:x="123" fg:w="1"/><text x="51.2873%" y="767.50"></text></g><g><title>osrs_gph.exe`reqwest::proxy::get_from_platform_impl (1 samples, 0.41%)</title><rect x="51.0373%" y="741" width="0.4149%" height="15" fill="rgb(67,181,181)" fg:x="123" fg:w="1"/><text x="51.2873%" y="751.50"></text></g><g><title>osrs_gph.exe`winreg::reg_key::RegKey::open_subkey(ref$ (1 samples, 0.41%)</title><rect x="51.0373%" y="725" width="0.4149%" height="15" fill="rgb(77,190,190)" fg:x="123" fg:w="1"/><text x="51.2873%" y="735.50"></text></g><g><title>osrs_gph.exe`winreg::reg_key::RegKey::open_subkey_with_flags&lt;ref$&lt;str$&gt; &gt;(ref$ (1 samples, 0.41%)</title><rect x="51.0373%" y="709" width="0.4149%" height="15" fill="rgb(61,175,175)" fg:x="123" fg:w="1"/><text x="51.2873%" y="719.50"></text></g><g><title>`0x7FFE56B2A279 (1 samples, 0.41%)</title><rect x="51.0373%" y="693" width="0.4149%" height="15" fill="rgb(176,176,50)" fg:x="123" fg:w="1"/><text x="51.2873%" y="703.50"></text></g><g><title>`0x7FFE56B2A360 (1 samples, 0.41%)</title><rect x="51.0373%" y="677" width="0.4149%" height="15" fill="rgb(180,180,51)" fg:x="123" fg:w="1"/><text x="51.2873%" y="687.50"></text></g><g><title>`0x7FFE56B2A958 (1 samples, 0.41%)</title><rect x="51.0373%" y="661" width="0.4149%" height="15" fill="rgb(228,228,69)" fg:x="123" fg:w="1"/><text x="51.2873%" y="671.50"></text></g><g><title>`0x7FFE56B7F770 (1 samples, 0.41%)</title><rect x="51.0373%" y="645" width="0.4149%" height="15" fill="rgb(189,189,55)" fg:x="123" fg:w="1"/><text x="51.2873%" y="655.50"></text></g><g><title>`0x7FFE593BE47C (1 samples, 0.41%)</title><rect x="51.0373%" y="629" width="0.4149%" height="15" fill="rgb(199,199,59)" fg:x="123" fg:w="1"/><text x="51.2873%" y="639.50"></text></g><g><title>`0x7FFE5944F5B4 (1 samples, 0.41%)</title><rect x="51.0373%" y="613" width="0.4149%" height="15" fill="rgb(177,177,51)" fg:x="123" fg:w="1"/><text x="51.2873%" y="623.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::option::Option&lt;ref$&lt;slice2$&lt;u8&gt; &gt; &gt; &gt;::map(enum2$&lt;core::option::Option&lt;ref$&lt;slice2$&lt;u8&gt; &gt; &gt; &gt;, rustls::anchors::impl$0::from_subject_spki_name_constraints::closure_env$0&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,ref$&lt;slice2$&lt;u8&gt; &gt;,ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="51.4523%" y="821" width="0.4149%" height="15" fill="rgb(63,177,177)" fg:x="124" fg:w="1"/><text x="51.7023%" y="831.50"></text></g><g><title>`0x7FFE37DA148C (1 samples, 0.41%)</title><rect x="51.4523%" y="805" width="0.4149%" height="15" fill="rgb(198,198,58)" fg:x="124" fg:w="1"/><text x="51.7023%" y="815.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::runtime::Runtime::block_on(enum2$ (44 samples, 18.26%)</title><rect x="34.0249%" y="1221" width="18.2573%" height="15" fill="rgb(69,183,183)" fg:x="82" fg:w="44"/><text x="34.2749%" y="1231.50">osrs_gph.exe`tokio::runtime:..</text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::CurrentThread::block_on(enum2$&lt;tokio::runtime::scheduler::Handle&gt;*, enum2$ (44 samples, 18.26%)</title><rect x="34.0249%" y="1205" width="18.2573%" height="15" fill="rgb(80,192,192)" fg:x="82" fg:w="44"/><text x="34.2749%" y="1215.50">osrs_gph.exe`tokio::runtime:..</text></g><g><title>osrs_gph.exe`tokio::runtime::context::runtime::enter_runtime(enum2$&lt;tokio::runtime::scheduler::Handle&gt;*, bool, tokio::runtime::scheduler::current_thread::impl$0::block_on::closure_env$0&lt;enum2$ (44 samples, 18.26%)</title><rect x="34.0249%" y="1189" width="18.2573%" height="15" fill="rgb(90,201,201)" fg:x="82" fg:w="44"/><text x="34.2749%" y="1199.50">osrs_gph.exe`tokio::runtime:..</text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::impl$0::block_on::closure$0(tokio::runtime::scheduler::current_thread::impl$0::block_on::closure_env$0&lt;enum2$ (44 samples, 18.26%)</title><rect x="34.0249%" y="1173" width="18.2573%" height="15" fill="rgb(61,175,175)" fg:x="82" fg:w="44"/><text x="34.2749%" y="1183.50">osrs_gph.exe`tokio::runtime:..</text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::CoreGuard::block_on(tokio::runtime::scheduler::current_thread::CoreGuard, core::pin::Pin&lt;ref_mut$&lt;enum2$ (44 samples, 18.26%)</title><rect x="34.0249%" y="1157" width="18.2573%" height="15" fill="rgb(109,219,219)" fg:x="82" fg:w="44"/><text x="34.2749%" y="1167.50">osrs_gph.exe`tokio::runtime:..</text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::CoreGuard::enter(tokio::runtime::scheduler::current_thread::CoreGuard, tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (44 samples, 18.26%)</title><rect x="34.0249%" y="1141" width="18.2573%" height="15" fill="rgb(70,183,183)" fg:x="82" fg:w="44"/><text x="34.2749%" y="1151.50">osrs_gph.exe`tokio::runtime:..</text></g><g><title>osrs_gph.exe`tokio::runtime::context::set_scheduler(enum2$&lt;tokio::runtime::scheduler::Context&gt;*, tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;reqwest::blocking::client::impl$8::new::closure$0::async_block_env$0&gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;tuple$ (44 samples, 18.26%)</title><rect x="34.0249%" y="1125" width="18.2573%" height="15" fill="rgb(74,187,187)" fg:x="82" fg:w="44"/><text x="34.2749%" y="1135.50">osrs_gph.exe`tokio::runtime:..</text></g><g><title>osrs_gph.exe`std::thread::local::LocalKey&lt;tokio::runtime::context::Context&gt;::with(tokio::runtime::context::set_scheduler::closure_env$0&lt;tuple$&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::current_thread::Core,alloc::alloc::Global&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;&gt; &gt; &gt; &gt;,tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;reqwest::blocking::client::impl$8::new::closure$0::async_block_env$0&gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;tuple$ (44 samples, 18.26%)</title><rect x="34.0249%" y="1109" width="18.2573%" height="15" fill="rgb(107,217,217)" fg:x="82" fg:w="44"/><text x="34.2749%" y="1119.50">osrs_gph.exe`std::thread::lo..</text></g><g><title>osrs_gph.exe`std::thread::local::LocalKey&lt;tokio::runtime::context::Context&gt;::try_with(tokio::runtime::context::set_scheduler::closure_env$0&lt;tuple$&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::current_thread::Core,alloc::alloc::Global&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;&gt; &gt; &gt; &gt;,tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;reqwest::blocking::client::impl$8::new::closure$0::async_block_env$0&gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;tuple$ (44 samples, 18.26%)</title><rect x="34.0249%" y="1093" width="18.2573%" height="15" fill="rgb(59,173,173)" fg:x="82" fg:w="44"/><text x="34.2749%" y="1103.50">osrs_gph.exe`std::thread::lo..</text></g><g><title>osrs_gph.exe`tokio::runtime::context::set_scheduler::closure$0(tokio::runtime::context::set_scheduler::closure_env$0&lt;tuple$&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::current_thread::Core,alloc::alloc::Global&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;&gt; &gt; &gt; &gt;,tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;reqwest::blocking::client::impl$8::new::closure$0::async_block_env$0&gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;tuple$ (44 samples, 18.26%)</title><rect x="34.0249%" y="1077" width="18.2573%" height="15" fill="rgb(77,189,189)" fg:x="82" fg:w="44"/><text x="34.2749%" y="1087.50">osrs_gph.exe`tokio::runtime:..</text></g><g><title>osrs_gph.exe`tokio::runtime::context::scoped::Scoped&lt;enum2$&lt;tokio::runtime::scheduler::Context&gt; &gt;::set(enum2$&lt;tokio::runtime::scheduler::Context&gt;*, tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;reqwest::blocking::client::impl$8::new::closure$0::async_block_env$0&gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;tuple$ (44 samples, 18.26%)</title><rect x="34.0249%" y="1061" width="18.2573%" height="15" fill="rgb(82,195,195)" fg:x="82" fg:w="44"/><text x="34.2749%" y="1071.50">osrs_gph.exe`tokio::runtime:..</text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::impl$8::enter::closure$0(tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;reqwest::blocking::client::impl$8::new::closure$0::async_block_env$0&gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;tuple$ (44 samples, 18.26%)</title><rect x="34.0249%" y="1045" width="18.2573%" height="15" fill="rgb(106,216,216)" fg:x="82" fg:w="44"/><text x="34.2749%" y="1055.50">osrs_gph.exe`tokio::runtime:..</text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0(tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (44 samples, 18.26%)</title><rect x="34.0249%" y="1029" width="18.2573%" height="15" fill="rgb(107,218,218)" fg:x="82" fg:w="44"/><text x="34.2749%" y="1039.50">osrs_gph.exe`tokio::runtime:..</text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::Context::enter(tokio::runtime::scheduler::current_thread::Core*, tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (4 samples, 1.66%)</title><rect x="50.6224%" y="1013" width="1.6598%" height="15" fill="rgb(106,216,216)" fg:x="122" fg:w="4"/><text x="50.8724%" y="1023.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure$0(tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (4 samples, 1.66%)</title><rect x="50.6224%" y="997" width="1.6598%" height="15" fill="rgb(106,217,217)" fg:x="122" fg:w="4"/><text x="50.8724%" y="1007.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::coop::budget(tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure$0::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (4 samples, 1.66%)</title><rect x="50.6224%" y="981" width="1.6598%" height="15" fill="rgb(92,204,204)" fg:x="122" fg:w="4"/><text x="50.8724%" y="991.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::coop::with_budget(tokio::runtime::coop::Budget, tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure$0::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (4 samples, 1.66%)</title><rect x="50.6224%" y="965" width="1.6598%" height="15" fill="rgb(78,191,191)" fg:x="122" fg:w="4"/><text x="50.8724%" y="975.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$&lt;core::result::Result (4 samples, 1.66%)</title><rect x="50.6224%" y="949" width="1.6598%" height="15" fill="rgb(94,205,205)" fg:x="122" fg:w="4"/><text x="50.8724%" y="959.50"></text></g><g><title>osrs_gph.exe`reqwest::blocking::client::impl$8::new::closure$0::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (4 samples, 1.66%)</title><rect x="50.6224%" y="933" width="1.6598%" height="15" fill="rgb(80,192,192)" fg:x="122" fg:w="4"/><text x="50.8724%" y="943.50"></text></g><g><title>osrs_gph.exe`reqwest::async_impl::client::ClientBuilder::build (3 samples, 1.24%)</title><rect x="51.0373%" y="917" width="1.2448%" height="15" fill="rgb(102,212,212)" fg:x="123" fg:w="3"/><text x="51.2873%" y="927.50"></text></g><g><title>osrs_gph.exe`core::iter::adapters::map::impl$2::fold&lt;rustls::anchors::OwnedTrustAnchor,core::slice::iter::Iter&lt;webpki_roots::TrustAnchor&gt;,reqwest::async_impl::client::impl$1::build::closure_env$0,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustls::anchors::OwnedTrustAnchor,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;rustls::anchors::OwnedTrustAnchor,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;webpki_roots::TrustAnchor&gt;,reqwest::async_impl::client::impl$1::build::closure_env$0&gt; &gt; &gt; &gt;(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;webpki_roots::TrustAnchor&gt;,reqwest::async_impl::client::impl$1::build::closure_env$0&gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustls::anchors::OwnedTrustAnchor,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;rustls::anchors::OwnedTrustAnchor,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter (2 samples, 0.83%)</title><rect x="51.4523%" y="901" width="0.8299%" height="15" fill="rgb(102,213,213)" fg:x="124" fg:w="2"/><text x="51.7023%" y="911.50"></text></g><g><title>osrs_gph.exe`core::slice::iter::impl$181::fold(core::slice::iter::Iter&lt;webpki_roots::TrustAnchor&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;webpki_roots::TrustAnchor&gt;,rustls::anchors::OwnedTrustAnchor,tuple$&lt;&gt;,reqwest::async_impl::client::impl$1::build::closure_env$0,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustls::anchors::OwnedTrustAnchor,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;rustls::anchors::OwnedTrustAnchor,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter (2 samples, 0.83%)</title><rect x="51.4523%" y="885" width="0.8299%" height="15" fill="rgb(81,193,193)" fg:x="124" fg:w="2"/><text x="51.7023%" y="895.50"></text></g><g><title>osrs_gph.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;webpki_roots::TrustAnchor&gt;,rustls::anchors::OwnedTrustAnchor,tuple$&lt;&gt;,reqwest::async_impl::client::impl$1::build::closure_env$0,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustls::anchors::OwnedTrustAnchor,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;rustls::anchors::OwnedTrustAnchor,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;webpki_roots::TrustAnchor&gt;,reqwest::async_impl::client::impl$1::build::closure_env$0&gt; &gt; &gt; &gt;*, tuple$ (2 samples, 0.83%)</title><rect x="51.4523%" y="869" width="0.8299%" height="15" fill="rgb(82,195,195)" fg:x="124" fg:w="2"/><text x="51.7023%" y="879.50"></text></g><g><title>osrs_gph.exe`reqwest::async_impl::client::impl$1::build::closure$0 (2 samples, 0.83%)</title><rect x="51.4523%" y="853" width="0.8299%" height="15" fill="rgb(75,188,188)" fg:x="124" fg:w="2"/><text x="51.7023%" y="863.50"></text></g><g><title>osrs_gph.exe`rustls::anchors::OwnedTrustAnchor::from_subject_spki_name_constraints(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$&lt;u8&gt; &gt;, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$ (2 samples, 0.83%)</title><rect x="51.4523%" y="837" width="0.8299%" height="15" fill="rgb(61,175,175)" fg:x="124" fg:w="2"/><text x="51.7023%" y="847.50"></text></g><g><title>osrs_gph.exe`core::num::impl$11::saturating_sub (1 samples, 0.41%)</title><rect x="51.8672%" y="821" width="0.4149%" height="15" fill="rgb(108,218,218)" fg:x="125" fg:w="1"/><text x="52.1172%" y="831.50"></text></g><g><title>osrs_gph.exe`rustls::x509::wrap_in_sequence(alloc::vec::Vec (1 samples, 0.41%)</title><rect x="51.8672%" y="805" width="0.4149%" height="15" fill="rgb(57,171,171)" fg:x="125" fg:w="1"/><text x="52.1172%" y="815.50"></text></g><g><title>osrs_gph.exe`rustls::x509::wrap_in_asn1_len(alloc::vec::Vec (1 samples, 0.41%)</title><rect x="51.8672%" y="789" width="0.4149%" height="15" fill="rgb(107,217,217)" fg:x="125" fg:w="1"/><text x="52.1172%" y="799.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::insert (1 samples, 0.41%)</title><rect x="51.8672%" y="773" width="0.4149%" height="15" fill="rgb(94,206,206)" fg:x="125" fg:w="1"/><text x="52.1172%" y="783.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::reserve (1 samples, 0.41%)</title><rect x="51.8672%" y="757" width="0.4149%" height="15" fill="rgb(102,213,213)" fg:x="125" fg:w="1"/><text x="52.1172%" y="767.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::reserve (1 samples, 0.41%)</title><rect x="51.8672%" y="741" width="0.4149%" height="15" fill="rgb(71,184,184)" fg:x="125" fg:w="1"/><text x="52.1172%" y="751.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle&lt;u8,alloc::alloc::Global&gt;(alloc::raw_vec::RawVec (1 samples, 0.41%)</title><rect x="51.8672%" y="725" width="0.4149%" height="15" fill="rgb(89,201,201)" fg:x="125" fg:w="1"/><text x="52.1172%" y="735.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.41%)</title><rect x="51.8672%" y="709" width="0.4149%" height="15" fill="rgb(78,190,190)" fg:x="125" fg:w="1"/><text x="52.1172%" y="719.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.41%)</title><rect x="51.8672%" y="693" width="0.4149%" height="15" fill="rgb(54,169,169)" fg:x="125" fg:w="1"/><text x="52.1172%" y="703.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.41%)</title><rect x="51.8672%" y="677" width="0.4149%" height="15" fill="rgb(56,171,171)" fg:x="125" fg:w="1"/><text x="52.1172%" y="687.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (1 samples, 0.41%)</title><rect x="51.8672%" y="661" width="0.4149%" height="15" fill="rgb(50,165,165)" fg:x="125" fg:w="1"/><text x="52.1172%" y="671.50"></text></g><g><title>`0x7FFE593F1CAA (1 samples, 0.41%)</title><rect x="51.8672%" y="645" width="0.4149%" height="15" fill="rgb(177,177,50)" fg:x="125" fg:w="1"/><text x="52.1172%" y="655.50"></text></g><g><title>`0x7FFE593F1DE7 (1 samples, 0.41%)</title><rect x="51.8672%" y="629" width="0.4149%" height="15" fill="rgb(213,213,63)" fg:x="125" fg:w="1"/><text x="52.1172%" y="639.50"></text></g><g><title>`0x7FFE593F3025 (1 samples, 0.41%)</title><rect x="51.8672%" y="613" width="0.4149%" height="15" fill="rgb(216,216,65)" fg:x="125" fg:w="1"/><text x="52.1172%" y="623.50"></text></g><g><title>`0x7FFE593ECD59 (1 samples, 0.41%)</title><rect x="51.8672%" y="597" width="0.4149%" height="15" fill="rgb(177,177,50)" fg:x="125" fg:w="1"/><text x="52.1172%" y="607.50"></text></g><g><title>`0x7FFE593EEE2E (1 samples, 0.41%)</title><rect x="51.8672%" y="581" width="0.4149%" height="15" fill="rgb(225,225,68)" fg:x="125" fg:w="1"/><text x="52.1172%" y="591.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::builder::Builder::enable_all (1 samples, 0.41%)</title><rect x="52.2822%" y="1221" width="0.4149%" height="15" fill="rgb(51,165,165)" fg:x="126" fg:w="1"/><text x="52.5322%" y="1231.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::builder::Builder::enable_io (1 samples, 0.41%)</title><rect x="52.2822%" y="1205" width="0.4149%" height="15" fill="rgb(51,166,166)" fg:x="126" fg:w="1"/><text x="52.5322%" y="1215.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::builder::Builder::new_current_thread (1 samples, 0.41%)</title><rect x="52.2822%" y="1189" width="0.4149%" height="15" fill="rgb(84,196,196)" fg:x="126" fg:w="1"/><text x="52.5322%" y="1199.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::builder::Builder::new (1 samples, 0.41%)</title><rect x="52.2822%" y="1173" width="0.4149%" height="15" fill="rgb(102,213,213)" fg:x="126" fg:w="1"/><text x="52.5322%" y="1183.50"></text></g><g><title>osrs_gph.exe`tokio::util::rand::RngSeed::new (1 samples, 0.41%)</title><rect x="52.2822%" y="1157" width="0.4149%" height="15" fill="rgb(102,212,212)" fg:x="126" fg:w="1"/><text x="52.5322%" y="1167.50"></text></g><g><title>osrs_gph.exe`tokio::util::rand::RngSeed::from_u64 (1 samples, 0.41%)</title><rect x="52.2822%" y="1141" width="0.4149%" height="15" fill="rgb(52,167,167)" fg:x="126" fg:w="1"/><text x="52.5322%" y="1151.50"></text></g><g><title>osrs_gph.exe`tokio::loom::std::rand::seed (1 samples, 0.41%)</title><rect x="52.2822%" y="1125" width="0.4149%" height="15" fill="rgb(104,215,215)" fg:x="126" fg:w="1"/><text x="52.5322%" y="1135.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::RandomState::new (1 samples, 0.41%)</title><rect x="52.2822%" y="1109" width="0.4149%" height="15" fill="rgb(107,217,217)" fg:x="126" fg:w="1"/><text x="52.5322%" y="1119.50"></text></g><g><title>osrs_gph.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::with (1 samples, 0.41%)</title><rect x="52.2822%" y="1093" width="0.4149%" height="15" fill="rgb(91,202,202)" fg:x="126" fg:w="1"/><text x="52.5322%" y="1103.50"></text></g><g><title>osrs_gph.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_with (1 samples, 0.41%)</title><rect x="52.2822%" y="1077" width="0.4149%" height="15" fill="rgb(53,168,168)" fg:x="126" fg:w="1"/><text x="52.5322%" y="1087.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::impl$82::new::closure$0(std::collections::hash::map::impl$82::new::closure_env$0, core::cell::Cell&lt;tuple$ (1 samples, 0.41%)</title><rect x="52.2822%" y="1061" width="0.4149%" height="15" fill="rgb(75,188,188)" fg:x="126" fg:w="1"/><text x="52.5322%" y="1071.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt;::get (1 samples, 0.41%)</title><rect x="52.2822%" y="1045" width="0.4149%" height="15" fill="rgb(101,212,212)" fg:x="126" fg:w="1"/><text x="52.5322%" y="1055.50"></text></g><g><title>osrs_gph.exe`std::sys::common::thread_local::fast_local::Key&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_initialize&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt;,std::collections::hash::map::impl$82::new::KEYS::__getit::closure_env$0&gt; (1 samples, 0.41%)</title><rect x="52.2822%" y="1029" width="0.4149%" height="15" fill="rgb(77,189,189)" fg:x="126" fg:w="1"/><text x="52.5322%" y="1039.50"></text></g><g><title>osrs_gph.exe`std::sys::common::thread_local::lazy::LazyKeyInner&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::initialize (1 samples, 0.41%)</title><rect x="52.2822%" y="1013" width="0.4149%" height="15" fill="rgb(59,173,173)" fg:x="126" fg:w="1"/><text x="52.5322%" y="1023.50"></text></g><g><title>osrs_gph.exe`core::mem::replace(enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (1 samples, 0.41%)</title><rect x="52.2822%" y="997" width="0.4149%" height="15" fill="rgb(53,168,168)" fg:x="126" fg:w="1"/><text x="52.5322%" y="1007.50"></text></g><g><title>osrs_gph.exe`core::ptr::write(enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (1 samples, 0.41%)</title><rect x="52.2822%" y="981" width="0.4149%" height="15" fill="rgb(78,190,190)" fg:x="126" fg:w="1"/><text x="52.5322%" y="991.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::rand::hashmap_random_keys (1 samples, 0.41%)</title><rect x="52.2822%" y="965" width="0.4149%" height="15" fill="rgb(94,205,205)" fg:x="126" fg:w="1"/><text x="52.5322%" y="975.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::c::nt_success (1 samples, 0.41%)</title><rect x="52.2822%" y="949" width="0.4149%" height="15" fill="rgb(78,191,191)" fg:x="126" fg:w="1"/><text x="52.5322%" y="959.50"></text></g><g><title>`0x7FFE570D173D (1 samples, 0.41%)</title><rect x="52.2822%" y="933" width="0.4149%" height="15" fill="rgb(191,191,55)" fg:x="126" fg:w="1"/><text x="52.5322%" y="943.50"></text></g><g><title>`0x7FFE570D1686 (1 samples, 0.41%)</title><rect x="52.2822%" y="917" width="0.4149%" height="15" fill="rgb(218,218,65)" fg:x="126" fg:w="1"/><text x="52.5322%" y="927.50"></text></g><g><title>`0x7FFE56EF5C88 (1 samples, 0.41%)</title><rect x="52.2822%" y="901" width="0.4149%" height="15" fill="rgb(229,229,69)" fg:x="126" fg:w="1"/><text x="52.5322%" y="911.50"></text></g><g><title>`0x7FFE56EF5D01 (1 samples, 0.41%)</title><rect x="52.2822%" y="885" width="0.4149%" height="15" fill="rgb(181,181,52)" fg:x="126" fg:w="1"/><text x="52.5322%" y="895.50"></text></g><g><title>`0x7FFE56EF5F2A (1 samples, 0.41%)</title><rect x="52.2822%" y="869" width="0.4149%" height="15" fill="rgb(222,222,67)" fg:x="126" fg:w="1"/><text x="52.5322%" y="879.50"></text></g><g><title>`0x7FFE56EF6471 (1 samples, 0.41%)</title><rect x="52.2822%" y="853" width="0.4149%" height="15" fill="rgb(218,218,65)" fg:x="126" fg:w="1"/><text x="52.5322%" y="863.50"></text></g><g><title>`0x7FFE56EF632D (1 samples, 0.41%)</title><rect x="52.2822%" y="837" width="0.4149%" height="15" fill="rgb(196,196,57)" fg:x="126" fg:w="1"/><text x="52.5322%" y="847.50"></text></g><g><title>`0x7FFE56EECCD4 (1 samples, 0.41%)</title><rect x="52.2822%" y="821" width="0.4149%" height="15" fill="rgb(216,216,64)" fg:x="126" fg:w="1"/><text x="52.5322%" y="831.50"></text></g><g><title>`0x7FFE56EE9BB8 (1 samples, 0.41%)</title><rect x="52.2822%" y="805" width="0.4149%" height="15" fill="rgb(228,228,69)" fg:x="126" fg:w="1"/><text x="52.5322%" y="815.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;tokio::runtime::runtime::Runtime&gt; (1 samples, 0.41%)</title><rect x="52.6971%" y="1173" width="0.4149%" height="15" fill="rgb(50,165,165)" fg:x="127" fg:w="1"/><text x="52.9471%" y="1183.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$ (1 samples, 0.41%)</title><rect x="52.6971%" y="1157" width="0.4149%" height="15" fill="rgb(101,211,211)" fg:x="127" fg:w="1"/><text x="52.9471%" y="1167.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::runtime::impl$1::drop (1 samples, 0.41%)</title><rect x="52.6971%" y="1141" width="0.4149%" height="15" fill="rgb(78,191,191)" fg:x="127" fg:w="1"/><text x="52.9471%" y="1151.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::CurrentThread::shutdown(enum2$ (1 samples, 0.41%)</title><rect x="52.6971%" y="1125" width="0.4149%" height="15" fill="rgb(73,186,186)" fg:x="127" fg:w="1"/><text x="52.9471%" y="1135.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::CoreGuard::enter (1 samples, 0.41%)</title><rect x="52.6971%" y="1109" width="0.4149%" height="15" fill="rgb(57,171,171)" fg:x="127" fg:w="1"/><text x="52.9471%" y="1119.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::context::set_scheduler&lt;tuple$&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::current_thread::Core,alloc::alloc::Global&gt;,tuple$&lt;&gt; &gt;,tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$0::shutdown::closure_env$1,tuple$&lt;&gt; &gt; &gt;(enum2$&lt;tokio::runtime::scheduler::Context&gt;*, tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$0::shutdown::closure_env$1,tuple$ (1 samples, 0.41%)</title><rect x="52.6971%" y="1093" width="0.4149%" height="15" fill="rgb(71,184,184)" fg:x="127" fg:w="1"/><text x="52.9471%" y="1103.50"></text></g><g><title>osrs_gph.exe`std::thread::local::LocalKey&lt;tokio::runtime::context::Context&gt;::with(tokio::runtime::context::set_scheduler::closure_env$0&lt;tuple$&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::current_thread::Core,alloc::alloc::Global&gt;,tuple$&lt;&gt; &gt;,tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$0::shutdown::closure_env$1,tuple$ (1 samples, 0.41%)</title><rect x="52.6971%" y="1077" width="0.4149%" height="15" fill="rgb(86,198,198)" fg:x="127" fg:w="1"/><text x="52.9471%" y="1087.50"></text></g><g><title>osrs_gph.exe`std::thread::local::LocalKey&lt;tokio::runtime::context::Context&gt;::try_with(tokio::runtime::context::set_scheduler::closure_env$0&lt;tuple$&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::current_thread::Core,alloc::alloc::Global&gt;,tuple$&lt;&gt; &gt;,tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$0::shutdown::closure_env$1,tuple$ (1 samples, 0.41%)</title><rect x="52.6971%" y="1061" width="0.4149%" height="15" fill="rgb(77,190,190)" fg:x="127" fg:w="1"/><text x="52.9471%" y="1071.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::context::set_scheduler::closure$0(tokio::runtime::context::set_scheduler::closure_env$0&lt;tuple$&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::current_thread::Core,alloc::alloc::Global&gt;,tuple$&lt;&gt; &gt;,tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$0::shutdown::closure_env$1,tuple$ (1 samples, 0.41%)</title><rect x="52.6971%" y="1045" width="0.4149%" height="15" fill="rgb(56,170,170)" fg:x="127" fg:w="1"/><text x="52.9471%" y="1055.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::context::scoped::Scoped&lt;enum2$&lt;tokio::runtime::scheduler::Context&gt; &gt;::set(enum2$&lt;tokio::runtime::scheduler::Context&gt;*, tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$0::shutdown::closure_env$1,tuple$ (1 samples, 0.41%)</title><rect x="52.6971%" y="1029" width="0.4149%" height="15" fill="rgb(74,187,187)" fg:x="127" fg:w="1"/><text x="52.9471%" y="1039.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tokio::runtime::context::scoped::impl$0::set::Reset&lt;enum2$ (1 samples, 0.41%)</title><rect x="52.6971%" y="1013" width="0.4149%" height="15" fill="rgb(62,176,176)" fg:x="127" fg:w="1"/><text x="52.9471%" y="1023.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::context::scoped::impl$0::set::impl$0::drop(tokio::runtime::context::scoped::impl$0::set::Reset&lt;enum2$ (1 samples, 0.41%)</title><rect x="52.6971%" y="997" width="0.4149%" height="15" fill="rgb(103,214,214)" fg:x="127" fg:w="1"/><text x="52.9471%" y="1007.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;ptr_const$&lt;enum2$&lt;tokio::runtime::scheduler::Context&gt; &gt; &gt;::set(enum2$ (1 samples, 0.41%)</title><rect x="52.6971%" y="981" width="0.4149%" height="15" fill="rgb(64,178,178)" fg:x="127" fg:w="1"/><text x="52.9471%" y="991.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;ptr_const$&lt;enum2$&lt;tokio::runtime::scheduler::Context&gt; &gt; &gt;::replace(enum2$ (1 samples, 0.41%)</title><rect x="52.6971%" y="965" width="0.4149%" height="15" fill="rgb(51,166,166)" fg:x="127" fg:w="1"/><text x="52.9471%" y="975.50"></text></g><g><title>osrs_gph.exe`core::mem::replace(enum2$&lt;tokio::runtime::scheduler::Context&gt;**, enum2$ (1 samples, 0.41%)</title><rect x="52.6971%" y="949" width="0.4149%" height="15" fill="rgb(63,177,177)" fg:x="127" fg:w="1"/><text x="52.9471%" y="959.50"></text></g><g><title>osrs_gph.exe`core::ptr::write(enum2$&lt;tokio::runtime::scheduler::Context&gt;**, enum2$ (1 samples, 0.41%)</title><rect x="52.6971%" y="933" width="0.4149%" height="15" fill="rgb(85,197,197)" fg:x="127" fg:w="1"/><text x="52.9471%" y="943.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::shutdown2 (1 samples, 0.41%)</title><rect x="52.6971%" y="917" width="0.4149%" height="15" fill="rgb(77,190,190)" fg:x="127" fg:w="1"/><text x="52.9471%" y="927.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::list::OwnedTasks&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt;::close_and_shutdown_all&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt; (1 samples, 0.41%)</title><rect x="52.6971%" y="901" width="0.4149%" height="15" fill="rgb(64,178,178)" fg:x="127" fg:w="1"/><text x="52.9471%" y="911.50"></text></g><g><title>osrs_gph.exe`tokio::util::sharded_list::ShardedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt;,tokio::runtime::task::core::Header&gt;::pop_back (1 samples, 0.41%)</title><rect x="52.6971%" y="885" width="0.4149%" height="15" fill="rgb(50,165,165)" fg:x="127" fg:w="1"/><text x="52.9471%" y="895.50"></text></g><g><title>osrs_gph.exe`tokio::util::sharded_list::ShardedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt;,tokio::runtime::task::core::Header&gt;::shard_inner (1 samples, 0.41%)</title><rect x="52.6971%" y="869" width="0.4149%" height="15" fill="rgb(105,215,215)" fg:x="127" fg:w="1"/><text x="52.9471%" y="879.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::Harness&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;::shutdown&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;(tokio::runtime::task::harness::Harness&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc (1 samples, 0.41%)</title><rect x="52.6971%" y="853" width="0.4149%" height="15" fill="rgb(51,166,166)" fg:x="127" fg:w="1"/><text x="52.9471%" y="863.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::cancel_task(tokio::runtime::task::core::Core&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc (1 samples, 0.41%)</title><rect x="52.6971%" y="837" width="0.4149%" height="15" fill="rgb(94,205,205)" fg:x="127" fg:w="1"/><text x="52.9471%" y="847.50"></text></g><g><title>osrs_gph.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::cancel_task::closure_env$0&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc (1 samples, 0.41%)</title><rect x="52.6971%" y="821" width="0.4149%" height="15" fill="rgb(62,176,176)" fg:x="127" fg:w="1"/><text x="52.9471%" y="831.50"></text></g><g><title>osrs_gph.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::cancel_task::closure_env$0&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc (1 samples, 0.41%)</title><rect x="52.6971%" y="805" width="0.4149%" height="15" fill="rgb(76,189,189)" fg:x="127" fg:w="1"/><text x="52.9471%" y="815.50"></text></g><g><title>osrs_gph.exe`std::panicking::try::do_call (1 samples, 0.41%)</title><rect x="52.6971%" y="789" width="0.4149%" height="15" fill="rgb(104,214,214)" fg:x="127" fg:w="1"/><text x="52.9471%" y="799.50"></text></g><g><title>osrs_gph.exe`core::panic::unwind_safe::impl$23::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::cancel_task::closure_env$0&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc (1 samples, 0.41%)</title><rect x="52.6971%" y="773" width="0.4149%" height="15" fill="rgb(75,188,188)" fg:x="127" fg:w="1"/><text x="52.9471%" y="783.50"></text></g><g><title>osrs_gph.exe`core::ops::function::FnOnce::call_once(tokio::runtime::task::harness::cancel_task::closure_env$0&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc (1 samples, 0.41%)</title><rect x="52.6971%" y="757" width="0.4149%" height="15" fill="rgb(58,172,172)" fg:x="127" fg:w="1"/><text x="52.9471%" y="767.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::cancel_task::closure$0(tokio::runtime::task::harness::cancel_task::closure_env$0&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc (1 samples, 0.41%)</title><rect x="52.6971%" y="741" width="0.4149%" height="15" fill="rgb(96,207,207)" fg:x="127" fg:w="1"/><text x="52.9471%" y="751.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::core::Core&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;::drop_future_or_output (1 samples, 0.41%)</title><rect x="52.6971%" y="725" width="0.4149%" height="15" fill="rgb(86,198,198)" fg:x="127" fg:w="1"/><text x="52.9471%" y="735.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::core::Core&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt;::set_stage&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt;(enum2$&lt;tokio::runtime::task::core::Stage&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (1 samples, 0.41%)</title><rect x="52.6971%" y="709" width="0.4149%" height="15" fill="rgb(96,207,207)" fg:x="127" fg:w="1"/><text x="52.9471%" y="719.50"></text></g><g><title>osrs_gph.exe`tokio::loom::std::unsafe_cell::UnsafeCell&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt; &gt; &gt; &gt;::with_mut(tokio::runtime::task::core::impl$6::set_stage::closure_env$0&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc (1 samples, 0.41%)</title><rect x="52.6971%" y="693" width="0.4149%" height="15" fill="rgb(52,167,167)" fg:x="127" fg:w="1"/><text x="52.9471%" y="703.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::core::impl$6::set_stage::closure$0(tokio::runtime::task::core::impl$6::set_stage::closure_env$0&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt;, enum2$&lt;tokio::runtime::task::core::Stage&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (1 samples, 0.41%)</title><rect x="52.6971%" y="677" width="0.4149%" height="15" fill="rgb(85,197,197)" fg:x="127" fg:w="1"/><text x="52.9471%" y="687.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$&lt;tokio::runtime::task::core::Stage&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (1 samples, 0.41%)</title><rect x="52.6971%" y="661" width="0.4149%" height="15" fill="rgb(104,215,215)" fg:x="127" fg:w="1"/><text x="52.9471%" y="671.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt; &gt;(enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (1 samples, 0.41%)</title><rect x="52.6971%" y="645" width="0.4149%" height="15" fill="rgb(61,175,175)" fg:x="127" fg:w="1"/><text x="52.9471%" y="655.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;futures_util::future::select::Select&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;(futures_util::future::select::Select&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (1 samples, 0.41%)</title><rect x="52.6971%" y="629" width="0.4149%" height="15" fill="rgb(52,167,167)" fg:x="127" fg:w="1"/><text x="52.9471%" y="639.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;tuple$&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (1 samples, 0.41%)</title><rect x="52.6971%" y="613" width="0.4149%" height="15" fill="rgb(71,184,184)" fg:x="127" fg:w="1"/><text x="52.9471%" y="623.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tuple$&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (1 samples, 0.41%)</title><rect x="52.6971%" y="597" width="0.4149%" height="15" fill="rgb(80,192,192)" fg:x="127" fg:w="1"/><text x="52.9471%" y="607.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (1 samples, 0.41%)</title><rect x="52.6971%" y="581" width="0.4149%" height="15" fill="rgb(71,184,184)" fg:x="127" fg:w="1"/><text x="52.9471%" y="591.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$&lt;futures_util::future::future::map::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (1 samples, 0.41%)</title><rect x="52.6971%" y="565" width="0.4149%" height="15" fill="rgb(109,219,219)" fg:x="127" fg:w="1"/><text x="52.9471%" y="575.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt;(futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2 (1 samples, 0.41%)</title><rect x="52.6971%" y="549" width="0.4149%" height="15" fill="rgb(86,198,198)" fg:x="127" fg:w="1"/><text x="52.9471%" y="559.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(futures_util::future::future::Map&lt;futures_util::future::try_future::into_future::IntoFuture&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt; &gt;,futures_util::fns::MapErrFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$2 (1 samples, 0.41%)</title><rect x="52.6971%" y="533" width="0.4149%" height="15" fill="rgb(98,209,209)" fg:x="127" fg:w="1"/><text x="52.9471%" y="543.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$&lt;futures_util::future::future::map::Map&lt;futures_util::future::try_future::into_future::IntoFuture&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt; &gt;,futures_util::fns::MapErrFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$2 (1 samples, 0.41%)</title><rect x="52.6971%" y="517" width="0.4149%" height="15" fill="rgb(100,211,211)" fg:x="127" fg:w="1"/><text x="52.9471%" y="527.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(futures_util::future::try_future::into_future::IntoFuture&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.41%)</title><rect x="52.6971%" y="501" width="0.4149%" height="15" fill="rgb(67,180,180)" fg:x="127" fg:w="1"/><text x="52.9471%" y="511.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.41%)</title><rect x="52.6971%" y="485" width="0.4149%" height="15" fill="rgb(106,216,216)" fg:x="127" fg:w="1"/><text x="52.9471%" y="495.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.41%)</title><rect x="52.6971%" y="469" width="0.4149%" height="15" fill="rgb(73,186,186)" fg:x="127" fg:w="1"/><text x="52.9471%" y="479.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(h2::proto::connection::Connection&lt;reqwest::connect::Conn,h2::client::Peer,enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.41%)</title><rect x="52.6971%" y="453" width="0.4149%" height="15" fill="rgb(76,189,189)" fg:x="127" fg:w="1"/><text x="52.9471%" y="463.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;h2::codec::Codec&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;(h2::codec::Codec&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.41%)</title><rect x="52.6971%" y="437" width="0.4149%" height="15" fill="rgb(71,184,184)" fg:x="127" fg:w="1"/><text x="52.9471%" y="447.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(h2::codec::framed_read::FramedRead&lt;h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.41%)</title><rect x="52.6971%" y="421" width="0.4149%" height="15" fill="rgb(93,205,205)" fg:x="127" fg:w="1"/><text x="52.9471%" y="431.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tokio_util::codec::framed_read::FramedRead&lt;h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.41%)</title><rect x="52.6971%" y="405" width="0.4149%" height="15" fill="rgb(77,189,189)" fg:x="127" fg:w="1"/><text x="52.9471%" y="415.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tokio_util::codec::framed_impl::FramedImpl&lt;h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.41%)</title><rect x="52.6971%" y="389" width="0.4149%" height="15" fill="rgb(55,170,170)" fg:x="127" fg:w="1"/><text x="52.9471%" y="399.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.41%)</title><rect x="52.6971%" y="373" width="0.4149%" height="15" fill="rgb(71,184,184)" fg:x="127" fg:w="1"/><text x="52.9471%" y="383.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="52.6971%" y="357" width="0.4149%" height="15" fill="rgb(87,199,199)" fg:x="127" fg:w="1"/><text x="52.9471%" y="367.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::boxed::Box&lt;dyn$ (1 samples, 0.41%)</title><rect x="52.6971%" y="341" width="0.4149%" height="15" fill="rgb(57,171,171)" fg:x="127" fg:w="1"/><text x="52.9471%" y="351.50"></text></g><g><title>osrs_gph.exe`alloc::boxed::impl$8::drop(alloc::boxed::Box&lt;dyn$ (1 samples, 0.41%)</title><rect x="52.6971%" y="325" width="0.4149%" height="15" fill="rgb(63,177,177)" fg:x="127" fg:w="1"/><text x="52.9471%" y="335.50"></text></g><g><title>osrs_gph.exe`core::alloc::layout::Layout::for_value_raw(ptr_const$&lt;dyn$ (1 samples, 0.41%)</title><rect x="52.6971%" y="309" width="0.4149%" height="15" fill="rgb(106,216,216)" fg:x="127" fg:w="1"/><text x="52.9471%" y="319.50"></text></g><g><title>osrs_gph.exe`core::mem::size_of_val_raw(ptr_const$&lt;dyn$ (1 samples, 0.41%)</title><rect x="52.6971%" y="293" width="0.4149%" height="15" fill="rgb(96,207,207)" fg:x="127" fg:w="1"/><text x="52.9471%" y="303.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;reqwest::connect::rustls_tls_conn::RustlsTlsConn&lt;tokio::net::tcp::stream::TcpStream&gt; &gt;(reqwest::connect::rustls_tls_conn::RustlsTlsConn (1 samples, 0.41%)</title><rect x="52.6971%" y="277" width="0.4149%" height="15" fill="rgb(97,208,208)" fg:x="127" fg:w="1"/><text x="52.9471%" y="287.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tokio_rustls::client::TlsStream (1 samples, 0.41%)</title><rect x="52.6971%" y="261" width="0.4149%" height="15" fill="rgb(56,170,170)" fg:x="127" fg:w="1"/><text x="52.9471%" y="271.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="52.6971%" y="245" width="0.4149%" height="15" fill="rgb(76,189,189)" fg:x="127" fg:w="1"/><text x="52.9471%" y="255.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tokio::io::poll_evented::PollEvented (1 samples, 0.41%)</title><rect x="52.6971%" y="229" width="0.4149%" height="15" fill="rgb(87,198,198)" fg:x="127" fg:w="1"/><text x="52.9471%" y="239.50"></text></g><g><title>osrs_gph.exe`tokio::io::poll_evented::impl$5::drop(tokio::io::poll_evented::PollEvented (1 samples, 0.41%)</title><rect x="52.6971%" y="213" width="0.4149%" height="15" fill="rgb(69,182,182)" fg:x="127" fg:w="1"/><text x="52.9471%" y="223.50"></text></g><g><title>`0x7FFE579BB815 (1 samples, 0.41%)</title><rect x="52.6971%" y="197" width="0.4149%" height="15" fill="rgb(202,202,59)" fg:x="127" fg:w="1"/><text x="52.9471%" y="207.50"></text></g><g><title>`0x7FFE55B59AC8 (1 samples, 0.41%)</title><rect x="52.6971%" y="181" width="0.4149%" height="15" fill="rgb(206,206,61)" fg:x="127" fg:w="1"/><text x="52.9471%" y="191.50"></text></g><g><title>`0x7FFE55B5ADCF (1 samples, 0.41%)</title><rect x="52.6971%" y="165" width="0.4149%" height="15" fill="rgb(181,181,52)" fg:x="127" fg:w="1"/><text x="52.9471%" y="175.50"></text></g><g><title>`0x7FFE5944F554 (1 samples, 0.41%)</title><rect x="52.6971%" y="149" width="0.4149%" height="15" fill="rgb(219,219,66)" fg:x="127" fg:w="1"/><text x="52.9471%" y="159.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::thread::impl$0::new::thread_start (102 samples, 42.32%)</title><rect x="11.2033%" y="1429" width="42.3237%" height="15" fill="rgb(91,203,203)" fg:x="27" fg:w="102"/><text x="11.4533%" y="1439.50">osrs_gph.exe`std::sys::windows::thread::impl$0::new::thread_start</text></g><g><title>osrs_gph.exe`alloc::boxed::impl$47::call_once (102 samples, 42.32%)</title><rect x="11.2033%" y="1413" width="42.3237%" height="15" fill="rgb(72,185,185)" fg:x="27" fg:w="102"/><text x="11.4533%" y="1423.50">osrs_gph.exe`alloc::boxed::impl$47::call_once</text></g><g><title>osrs_gph.exe`alloc::boxed::impl$47::call_once (102 samples, 42.32%)</title><rect x="11.2033%" y="1397" width="42.3237%" height="15" fill="rgb(101,212,212)" fg:x="27" fg:w="102"/><text x="11.4533%" y="1407.50">osrs_gph.exe`alloc::boxed::impl$47::call_once</text></g><g><title>osrs_gph.exe`alloc::boxed::impl$8::drop (102 samples, 42.32%)</title><rect x="11.2033%" y="1381" width="42.3237%" height="15" fill="rgb(67,180,180)" fg:x="27" fg:w="102"/><text x="11.4533%" y="1391.50">osrs_gph.exe`alloc::boxed::impl$8::drop</text></g><g><title>osrs_gph.exe`core::alloc::layout::Layout::for_value_raw (102 samples, 42.32%)</title><rect x="11.2033%" y="1365" width="42.3237%" height="15" fill="rgb(88,200,200)" fg:x="27" fg:w="102"/><text x="11.4533%" y="1375.50">osrs_gph.exe`core::alloc::layout::Layout::for_value_raw</text></g><g><title>osrs_gph.exe`core::mem::size_of_val_raw (102 samples, 42.32%)</title><rect x="11.2033%" y="1349" width="42.3237%" height="15" fill="rgb(87,199,199)" fg:x="27" fg:w="102"/><text x="11.4533%" y="1359.50">osrs_gph.exe`core::mem::size_of_val_raw</text></g><g><title>osrs_gph.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;reqwest::blocking::client::impl$8::new::closure_env$0,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;reqwest::blocking::client::impl$8::new::closure_env$0,tuple$ (47 samples, 19.50%)</title><rect x="34.0249%" y="1333" width="19.5021%" height="15" fill="rgb(55,169,169)" fg:x="82" fg:w="47"/><text x="34.2749%" y="1343.50">osrs_gph.exe`core::ops::functio..</text></g><g><title>osrs_gph.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;reqwest::blocking::client::impl$8::new::closure_env$0,tuple$ (47 samples, 19.50%)</title><rect x="34.0249%" y="1317" width="19.5021%" height="15" fill="rgb(107,217,217)" fg:x="82" fg:w="47"/><text x="34.2749%" y="1327.50">osrs_gph.exe`std::thread::impl$..</text></g><g><title>osrs_gph.exe`alloc::sync::impl$29::deref(alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$ (47 samples, 19.50%)</title><rect x="34.0249%" y="1301" width="19.5021%" height="15" fill="rgb(101,211,211)" fg:x="82" fg:w="47"/><text x="34.2749%" y="1311.50">osrs_gph.exe`alloc::sync::impl$..</text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::inner (47 samples, 19.50%)</title><rect x="34.0249%" y="1285" width="19.5021%" height="15" fill="rgb(52,167,167)" fg:x="82" fg:w="47"/><text x="34.2749%" y="1295.50">osrs_gph.exe`alloc::sync::Arc&lt;s..</text></g><g><title>osrs_gph.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt; &gt; &gt;::as_ref (47 samples, 19.50%)</title><rect x="34.0249%" y="1269" width="19.5021%" height="15" fill="rgb(50,165,165)" fg:x="82" fg:w="47"/><text x="34.2749%" y="1279.50">osrs_gph.exe`core::ptr::non_nul..</text></g><g><title>osrs_gph.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;reqwest::blocking::client::impl$8::new::closure_env$0,tuple$&lt;&gt; &gt; (47 samples, 19.50%)</title><rect x="34.0249%" y="1253" width="19.5021%" height="15" fill="rgb(63,176,176)" fg:x="82" fg:w="47"/><text x="34.2749%" y="1263.50">osrs_gph.exe`std::sys_common::b..</text></g><g><title>osrs_gph.exe`reqwest::blocking::client::impl$8::new::closure$0 (47 samples, 19.50%)</title><rect x="34.0249%" y="1237" width="19.5021%" height="15" fill="rgb(76,189,189)" fg:x="82" fg:w="47"/><text x="34.2749%" y="1247.50">osrs_gph.exe`reqwest::blocking:..</text></g><g><title>osrs_gph.exe`log::max_level (2 samples, 0.83%)</title><rect x="52.6971%" y="1221" width="0.8299%" height="15" fill="rgb(97,208,208)" fg:x="127" fg:w="2"/><text x="52.9471%" y="1231.50"></text></g><g><title>osrs_gph.exe`core::sync::atomic::AtomicUsize::load (2 samples, 0.83%)</title><rect x="52.6971%" y="1205" width="0.8299%" height="15" fill="rgb(52,167,167)" fg:x="127" fg:w="2"/><text x="52.9471%" y="1215.50"></text></g><g><title>osrs_gph.exe`core::sync::atomic::atomic_load (2 samples, 0.83%)</title><rect x="52.6971%" y="1189" width="0.8299%" height="15" fill="rgb(81,193,193)" fg:x="127" fg:w="2"/><text x="52.9471%" y="1199.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;tokio::runtime::blocking::pool::BlockingPool&gt; (1 samples, 0.41%)</title><rect x="53.1120%" y="1173" width="0.4149%" height="15" fill="rgb(88,199,199)" fg:x="128" fg:w="1"/><text x="53.3620%" y="1183.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="53.1120%" y="1157" width="0.4149%" height="15" fill="rgb(64,178,178)" fg:x="128" fg:w="1"/><text x="53.3620%" y="1167.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::sync::Arc (1 samples, 0.41%)</title><rect x="53.1120%" y="1141" width="0.4149%" height="15" fill="rgb(79,191,191)" fg:x="128" fg:w="1"/><text x="53.3620%" y="1151.50"></text></g><g><title>osrs_gph.exe`alloc::sync::impl$33::drop(alloc::sync::Arc (1 samples, 0.41%)</title><rect x="53.1120%" y="1125" width="0.4149%" height="15" fill="rgb(100,211,211)" fg:x="128" fg:w="1"/><text x="53.3620%" y="1135.50"></text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;tokio::runtime::blocking::pool::Inner,alloc::alloc::Global&gt;::inner (1 samples, 0.41%)</title><rect x="53.1120%" y="1109" width="0.4149%" height="15" fill="rgb(103,213,213)" fg:x="128" fg:w="1"/><text x="53.3620%" y="1119.50"></text></g><g><title>osrs_gph.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;tokio::runtime::blocking::pool::Inner&gt; &gt;::as_ref (1 samples, 0.41%)</title><rect x="53.1120%" y="1093" width="0.4149%" height="15" fill="rgb(74,187,187)" fg:x="128" fg:w="1"/><text x="53.3620%" y="1103.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::blocking::pool::BlockingPool::shutdown(enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="53.1120%" y="1077" width="0.4149%" height="15" fill="rgb(50,165,165)" fg:x="128" fg:w="1"/><text x="53.3620%" y="1087.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$ (1 samples, 0.41%)</title><rect x="53.1120%" y="1061" width="0.4149%" height="15" fill="rgb(71,184,184)" fg:x="128" fg:w="1"/><text x="53.3620%" y="1071.50"></text></g><g><title>osrs_gph.exe`std::thread::JoinInner&lt;tuple$&lt;&gt; &gt;::join&lt;tuple$&lt;&gt; &gt;(std::thread::JoinInner&lt;tuple$ (1 samples, 0.41%)</title><rect x="53.1120%" y="1045" width="0.4149%" height="15" fill="rgb(94,205,205)" fg:x="128" fg:w="1"/><text x="53.3620%" y="1055.50"></text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::get_mut (1 samples, 0.41%)</title><rect x="53.1120%" y="1029" width="0.4149%" height="15" fill="rgb(98,209,209)" fg:x="128" fg:w="1"/><text x="53.3620%" y="1039.50"></text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::is_unique (1 samples, 0.41%)</title><rect x="53.1120%" y="1013" width="0.4149%" height="15" fill="rgb(107,217,217)" fg:x="128" fg:w="1"/><text x="53.3620%" y="1023.50"></text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::inner (1 samples, 0.41%)</title><rect x="53.1120%" y="997" width="0.4149%" height="15" fill="rgb(101,211,211)" fg:x="128" fg:w="1"/><text x="53.3620%" y="1007.50"></text></g><g><title>osrs_gph.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt; &gt; &gt;::as_ref (1 samples, 0.41%)</title><rect x="53.1120%" y="981" width="0.4149%" height="15" fill="rgb(101,211,211)" fg:x="128" fg:w="1"/><text x="53.3620%" y="991.50"></text></g><g><title>`0x7FFE56B24060 (1 samples, 0.41%)</title><rect x="53.1120%" y="965" width="0.4149%" height="15" fill="rgb(190,190,55)" fg:x="128" fg:w="1"/><text x="53.3620%" y="975.50"></text></g><g><title>osrs_gph.exe`winnow::combinator::core::cut_err::closure$0(winnow::combinator::core::cut_err::closure_env$0&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,tuple$&lt;&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,toml_edit::parser::table::table::closure_env$0&gt;*, winnow::stream::Located&lt;ref$ (1 samples, 0.41%)</title><rect x="53.5270%" y="837" width="0.4149%" height="15" fill="rgb(52,167,167)" fg:x="129" fg:w="1"/><text x="53.7770%" y="847.50"></text></g><g><title>osrs_gph.exe`winnow::parser::impl$0::parse_next(toml_edit::parser::table::table::closure_env$0*, winnow::stream::Located&lt;ref$ (1 samples, 0.41%)</title><rect x="53.5270%" y="821" width="0.4149%" height="15" fill="rgb(77,190,190)" fg:x="129" fg:w="1"/><text x="53.7770%" y="831.50"></text></g><g><title>osrs_gph.exe`toml_edit::parser::table::table::closure$0(toml_edit::parser::table::table::closure_env$0*, winnow::stream::Located&lt;ref$ (1 samples, 0.41%)</title><rect x="53.5270%" y="805" width="0.4149%" height="15" fill="rgb(55,170,170)" fg:x="129" fg:w="1"/><text x="53.7770%" y="815.50"></text></g><g><title>osrs_gph.exe`winnow::combinator::parser::impl$37::parse_next(winnow::combinator::parser::Context&lt;toml_edit::parser::table::table::closure$0::closure_env$0,winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,tuple$&lt;&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,enum2$&lt;winnow::error::StrContext&gt; &gt;*, winnow::stream::Located&lt;ref$ (1 samples, 0.41%)</title><rect x="53.5270%" y="789" width="0.4149%" height="15" fill="rgb(78,191,191)" fg:x="129" fg:w="1"/><text x="53.7770%" y="799.50"></text></g><g><title>osrs_gph.exe`winnow::parser::impl$0::parse_next(winnow::combinator::parser::impl$37::parse_next::closure_env$0&lt;toml_edit::parser::table::table::closure$0::closure_env$0,winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,tuple$&lt;&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,enum2$&lt;winnow::error::StrContext&gt; &gt;*, winnow::stream::Located&lt;ref$ (1 samples, 0.41%)</title><rect x="53.5270%" y="773" width="0.4149%" height="15" fill="rgb(106,216,216)" fg:x="129" fg:w="1"/><text x="53.7770%" y="783.50"></text></g><g><title>osrs_gph.exe`winnow::combinator::parser::impl$37::parse_next::closure$0(winnow::combinator::parser::impl$37::parse_next::closure_env$0&lt;toml_edit::parser::table::table::closure$0::closure_env$0,winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,tuple$&lt;&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,enum2$&lt;winnow::error::StrContext&gt; &gt;*, winnow::stream::Located&lt;ref$ (1 samples, 0.41%)</title><rect x="53.5270%" y="757" width="0.4149%" height="15" fill="rgb(63,177,177)" fg:x="129" fg:w="1"/><text x="53.7770%" y="767.50"></text></g><g><title>osrs_gph.exe`winnow::parser::impl$0::parse_next(toml_edit::parser::table::table::closure$0::closure_env$0*, winnow::stream::Located&lt;ref$ (1 samples, 0.41%)</title><rect x="53.5270%" y="741" width="0.4149%" height="15" fill="rgb(83,195,195)" fg:x="129" fg:w="1"/><text x="53.7770%" y="751.50"></text></g><g><title>osrs_gph.exe`toml_edit::parser::table::table::closure$0::closure$0(toml_edit::parser::table::table::closure$0::closure_env$0*, winnow::stream::Located&lt;ref$ (1 samples, 0.41%)</title><rect x="53.5270%" y="725" width="0.4149%" height="15" fill="rgb(97,208,208)" fg:x="129" fg:w="1"/><text x="53.7770%" y="735.50"></text></g><g><title>osrs_gph.exe`winnow::parser::impl$0::parse_next(toml_edit::parser::table::array_table::closure_env$0*, winnow::stream::Located&lt;ref$ (1 samples, 0.41%)</title><rect x="53.5270%" y="709" width="0.4149%" height="15" fill="rgb(50,165,165)" fg:x="129" fg:w="1"/><text x="53.7770%" y="719.50"></text></g><g><title>osrs_gph.exe`toml_edit::parser::table::std_table::closure$0(toml_edit::parser::table::std_table::closure_env$0*, winnow::stream::Located&lt;ref$ (1 samples, 0.41%)</title><rect x="53.5270%" y="693" width="0.4149%" height="15" fill="rgb(93,204,204)" fg:x="129" fg:w="1"/><text x="53.7770%" y="703.50"></text></g><g><title>osrs_gph.exe`winnow::combinator::parser::impl$5::parse_next(winnow::combinator::parser::TryMap&lt;tuple$&lt;winnow::combinator::parser::WithSpan&lt;winnow::combinator::sequence::delimited::closure_env$0&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,u8,alloc::vec::Vec&lt;toml_edit::key::Key,alloc::alloc::Global&gt;,u8,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,u8,winnow::combinator::core::cut_err::closure_env$0&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,alloc::vec::Vec&lt;toml_edit::key::Key,alloc::alloc::Global&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,enum2$&lt;core::result::Result&lt;alloc::vec::Vec&lt;toml_edit::key::Key,alloc::alloc::Global&gt;,enum2$&lt;winnow::error::ErrMode&lt;winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref_mut$&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt; &gt;)&gt;,winnow::combinator::parser::Context&lt;winnow::combinator::parser::Context&lt;winnow::combinator::core::cut_err::closure_env$0&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,u8,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,u8&gt;,winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,u8,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,enum2$&lt;winnow::error::StrContext&gt; &gt;,winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,u8,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,enum2$&lt;winnow::error::StrContext&gt; &gt; &gt;,winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,alloc::vec::Vec&lt;toml_edit::key::Key,alloc::alloc::Global&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt; &gt;,winnow::combinator::parser::Context&lt;winnow::combinator::parser::Context&lt;winnow::combinator::core::cut_err::closure_env$0&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,core::ops::range::Range&lt;usize&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,enum2$&lt;core::result::Result&lt;core::ops::range::Range&lt;usize&gt;,enum2$&lt;winnow::error::ErrMode&lt;winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref_mut$&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt; &gt;)&gt;,winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,core::ops::range::Range&lt;usize&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,enum2$&lt;winnow::error::StrContext&gt; &gt;,winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,core::ops::range::Range&lt;usize&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,enum2$&lt;winnow::error::StrContext&gt; &gt; &gt;,toml_edit::parser::table::std_table::closure$0::closure_env$0,winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,tuple$&lt;tuple$&lt;alloc::vec::Vec&lt;toml_edit::key::Key,alloc::alloc::Global&gt;,core::ops::range::Range&lt;usize&gt; &gt;,core::ops::range::Range&lt;usize&gt; &gt;,tuple$&lt;&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,enum2$&lt;toml_edit::parser::error::CustomError&gt; &gt;*, winnow::stream::Located&lt;ref$ (1 samples, 0.41%)</title><rect x="53.5270%" y="677" width="0.4149%" height="15" fill="rgb(92,204,204)" fg:x="129" fg:w="1"/><text x="53.7770%" y="687.50"></text></g><g><title>osrs_gph.exe`toml_edit::parser::table::std_table::closure$0::closure$0(toml_edit::parser::table::std_table::closure$0::closure_env$0*, tuple$&lt;tuple$&lt;alloc::vec::Vec&lt;toml_edit::key::Key,alloc::alloc::Global&gt;,core::ops::range::Range&lt;usize&gt; &gt;,core::ops::range::Range (1 samples, 0.41%)</title><rect x="53.5270%" y="661" width="0.4149%" height="15" fill="rgb(81,194,194)" fg:x="129" fg:w="1"/><text x="53.7770%" y="671.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(core::cell::RefMut (1 samples, 0.41%)</title><rect x="53.5270%" y="645" width="0.4149%" height="15" fill="rgb(77,189,189)" fg:x="129" fg:w="1"/><text x="53.7770%" y="655.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="53.5270%" y="629" width="0.4149%" height="15" fill="rgb(105,215,215)" fg:x="129" fg:w="1"/><text x="53.7770%" y="639.50"></text></g><g><title>osrs_gph.exe`core::cell::impl$42::drop (1 samples, 0.41%)</title><rect x="53.5270%" y="613" width="0.4149%" height="15" fill="rgb(53,168,168)" fg:x="129" fg:w="1"/><text x="53.7770%" y="623.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;isize&gt;::set (1 samples, 0.41%)</title><rect x="53.5270%" y="597" width="0.4149%" height="15" fill="rgb(106,216,216)" fg:x="129" fg:w="1"/><text x="53.7770%" y="607.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;isize&gt;::replace (1 samples, 0.41%)</title><rect x="53.5270%" y="581" width="0.4149%" height="15" fill="rgb(65,178,178)" fg:x="129" fg:w="1"/><text x="53.7770%" y="591.50"></text></g><g><title>osrs_gph.exe`core::mem::replace (1 samples, 0.41%)</title><rect x="53.5270%" y="565" width="0.4149%" height="15" fill="rgb(79,191,191)" fg:x="129" fg:w="1"/><text x="53.7770%" y="575.50"></text></g><g><title>osrs_gph.exe`core::ptr::write (1 samples, 0.41%)</title><rect x="53.5270%" y="549" width="0.4149%" height="15" fill="rgb(59,174,174)" fg:x="129" fg:w="1"/><text x="53.7770%" y="559.50"></text></g><g><title>osrs_gph.exe`toml_edit::parser::state::ParseState::on_std_header(alloc::vec::Vec&lt;toml_edit::key::Key,alloc::alloc::Global&gt;, core::ops::range::Range&lt;usize&gt;, core::ops::range::Range (1 samples, 0.41%)</title><rect x="53.5270%" y="533" width="0.4149%" height="15" fill="rgb(100,211,211)" fg:x="129" fg:w="1"/><text x="53.7770%" y="543.50"></text></g><g><title>osrs_gph.exe`toml_edit::parser::state::ParseState::start_table(alloc::vec::Vec&lt;toml_edit::key::Key,alloc::alloc::Global&gt;, toml_edit::repr::Decor, core::ops::range::Range (1 samples, 0.41%)</title><rect x="53.5270%" y="517" width="0.4149%" height="15" fill="rgb(64,178,178)" fg:x="129" fg:w="1"/><text x="53.7770%" y="527.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;toml_edit::key::Key,alloc::alloc::Global&gt;::len (1 samples, 0.41%)</title><rect x="53.5270%" y="501" width="0.4149%" height="15" fill="rgb(70,184,184)" fg:x="129" fg:w="1"/><text x="53.7770%" y="511.50"></text></g><g><title>osrs_gph.exe`toml_edit::parser::state::ParseState::descend_path(toml_edit::table::Table*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="53.5270%" y="485" width="0.4149%" height="15" fill="rgb(63,177,177)" fg:x="129" fg:w="1"/><text x="53.7770%" y="495.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;toml_edit::table::Entry&gt;::or_insert_with&lt;toml_edit::parser::state::impl$0::descend_path::closure_env$0&gt;(enum2$ (1 samples, 0.41%)</title><rect x="53.5270%" y="469" width="0.4149%" height="15" fill="rgb(101,212,212)" fg:x="129" fg:w="1"/><text x="53.7770%" y="479.50"></text></g><g><title>osrs_gph.exe`toml_edit::table::VacantEntry::insert(toml_edit::table::VacantEntry, enum2$ (1 samples, 0.41%)</title><rect x="53.5270%" y="453" width="0.4149%" height="15" fill="rgb(94,205,205)" fg:x="129" fg:w="1"/><text x="53.7770%" y="463.50"></text></g><g><title>osrs_gph.exe`indexmap::map::core::entry::VacantEntry&lt;toml_edit::internal_string::InternalString,toml_edit::table::TableKeyValue&gt;::insert&lt;toml_edit::internal_string::InternalString,toml_edit::table::TableKeyValue&gt;(indexmap::map::core::entry::VacantEntry (1 samples, 0.41%)</title><rect x="53.5270%" y="437" width="0.4149%" height="15" fill="rgb(57,172,172)" fg:x="129" fg:w="1"/><text x="53.7770%" y="447.50"></text></g><g><title>`0x7FFE37DA1490 (1 samples, 0.41%)</title><rect x="53.5270%" y="421" width="0.4149%" height="15" fill="rgb(215,215,64)" fg:x="129" fg:w="1"/><text x="53.7770%" y="431.50"></text></g><g><title>osrs_gph.exe`winnow::parser::impl$14::parse_next(tuple$&lt;winnow::combinator::core::opt::closure_env$0&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,ref$&lt;slice2$&lt;u8&gt; &gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,ref$&lt;array$&lt;u8,3&gt; &gt; &gt;,toml_edit::parser::document::parse_ws::closure_env$0,winnow::combinator::parser::Map&lt;winnow::combinator::multi::repeat::closure_env$0&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,tuple$&lt;toml_edit::parser::document::document::closure_env$2,toml_edit::parser::document::parse_ws::closure_env$0&gt;,core::ops::range::RangeFrom&lt;usize&gt; &gt;,toml_edit::parser::document::document::closure_env$0,winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,enum2$&lt;winnow::error::ErrMode&lt;winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref_mut$&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt; &gt;)&gt;*, winnow::stream::Located&lt;ref$ (2 samples, 0.83%)</title><rect x="53.5270%" y="949" width="0.8299%" height="15" fill="rgb(68,181,181)" fg:x="129" fg:w="2"/><text x="53.7770%" y="959.50"></text></g><g><title>osrs_gph.exe`winnow::combinator::parser::impl$3::parse_next(winnow::combinator::parser::Map&lt;winnow::combinator::multi::repeat::closure_env$0&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,tuple$&lt;toml_edit::parser::document::document::closure_env$2,toml_edit::parser::document::parse_ws::closure_env$0&gt;,core::ops::range::RangeFrom&lt;usize&gt; &gt;,toml_edit::parser::document::document::closure_env$0,winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt; &gt;*, winnow::stream::Located&lt;ref$ (2 samples, 0.83%)</title><rect x="53.5270%" y="933" width="0.8299%" height="15" fill="rgb(96,207,207)" fg:x="129" fg:w="2"/><text x="53.7770%" y="943.50"></text></g><g><title>osrs_gph.exe`winnow::combinator::multi::repeat0_&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,tuple$&lt;toml_edit::parser::document::document::closure_env$2,toml_edit::parser::document::parse_ws::closure_env$0&gt; &gt;(tuple$&lt;toml_edit::parser::document::document::closure_env$2,toml_edit::parser::document::parse_ws::closure_env$0&gt;*, winnow::stream::Located&lt;ref$ (2 samples, 0.83%)</title><rect x="53.5270%" y="917" width="0.8299%" height="15" fill="rgb(70,183,183)" fg:x="129" fg:w="2"/><text x="53.7770%" y="927.50"></text></g><g><title>osrs_gph.exe`winnow::parser::impl$12::parse_next(tuple$&lt;toml_edit::parser::document::document::closure_env$2,toml_edit::parser::document::parse_ws::closure_env$0&gt;*, winnow::stream::Located&lt;ref$ (2 samples, 0.83%)</title><rect x="53.5270%" y="901" width="0.8299%" height="15" fill="rgb(59,173,173)" fg:x="129" fg:w="2"/><text x="53.7770%" y="911.50"></text></g><g><title>osrs_gph.exe`winnow::parser::impl$0::parse_next(toml_edit::parser::document::document::closure_env$2*, winnow::stream::Located&lt;ref$ (2 samples, 0.83%)</title><rect x="53.5270%" y="885" width="0.8299%" height="15" fill="rgb(74,187,187)" fg:x="129" fg:w="2"/><text x="53.7770%" y="895.50"></text></g><g><title>osrs_gph.exe`toml_edit::parser::document::document::closure$2(toml_edit::parser::document::document::closure_env$2*, winnow::stream::Located&lt;ref$ (2 samples, 0.83%)</title><rect x="53.5270%" y="869" width="0.8299%" height="15" fill="rgb(65,179,179)" fg:x="129" fg:w="2"/><text x="53.7770%" y="879.50"></text></g><g><title>osrs_gph.exe`winnow::parser::impl$0::parse_next(toml_edit::parser::document::parse_newline::closure_env$0*, winnow::stream::Located&lt;ref$ (2 samples, 0.83%)</title><rect x="53.5270%" y="853" width="0.8299%" height="15" fill="rgb(71,184,184)" fg:x="129" fg:w="2"/><text x="53.7770%" y="863.50"></text></g><g><title>osrs_gph.exe`winnow::combinator::core::cut_err::closure$0(winnow::combinator::core::cut_err::closure_env$0&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,tuple$&lt;&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,toml_edit::parser::document::keyval::closure_env$0&gt;*, winnow::stream::Located&lt;ref$ (1 samples, 0.41%)</title><rect x="53.9419%" y="837" width="0.4149%" height="15" fill="rgb(74,187,187)" fg:x="130" fg:w="1"/><text x="54.1919%" y="847.50"></text></g><g><title>osrs_gph.exe`winnow::parser::impl$0::parse_next(toml_edit::parser::document::keyval::closure_env$0*, winnow::stream::Located&lt;ref$ (1 samples, 0.41%)</title><rect x="53.9419%" y="821" width="0.4149%" height="15" fill="rgb(56,170,170)" fg:x="130" fg:w="1"/><text x="54.1919%" y="831.50"></text></g><g><title>osrs_gph.exe`toml_edit::parser::document::keyval::closure$0(toml_edit::parser::document::keyval::closure_env$0*, winnow::stream::Located&lt;ref$ (1 samples, 0.41%)</title><rect x="53.9419%" y="805" width="0.4149%" height="15" fill="rgb(69,182,182)" fg:x="130" fg:w="1"/><text x="54.1919%" y="815.50"></text></g><g><title>osrs_gph.exe`winnow::combinator::parser::impl$5::parse_next(winnow::combinator::parser::TryMap&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;alloc::vec::Vec&lt;toml_edit::key::Key,alloc::alloc::Global&gt;,toml_edit::table::TableKeyValue&gt;,enum2$&lt;winnow::error::ErrMode&lt;winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref_mut$&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt; &gt;),toml_edit::parser::document::keyval::closure$0::closure_env$0,winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,tuple$&lt;alloc::vec::Vec&lt;toml_edit::key::Key,alloc::alloc::Global&gt;,toml_edit::table::TableKeyValue&gt;,tuple$&lt;&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,enum2$&lt;toml_edit::parser::error::CustomError&gt; &gt;*, winnow::stream::Located&lt;ref$ (1 samples, 0.41%)</title><rect x="53.9419%" y="789" width="0.4149%" height="15" fill="rgb(60,174,174)" fg:x="130" fg:w="1"/><text x="54.1919%" y="799.50"></text></g><g><title>osrs_gph.exe`toml_edit::parser::document::keyval::closure$0::closure$0(toml_edit::parser::document::keyval::closure$0::closure_env$0*, tuple$&lt;alloc::vec::Vec (1 samples, 0.41%)</title><rect x="53.9419%" y="773" width="0.4149%" height="15" fill="rgb(70,183,183)" fg:x="130" fg:w="1"/><text x="54.1919%" y="783.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(core::cell::RefMut (1 samples, 0.41%)</title><rect x="53.9419%" y="757" width="0.4149%" height="15" fill="rgb(65,179,179)" fg:x="130" fg:w="1"/><text x="54.1919%" y="767.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="53.9419%" y="741" width="0.4149%" height="15" fill="rgb(66,180,180)" fg:x="130" fg:w="1"/><text x="54.1919%" y="751.50"></text></g><g><title>osrs_gph.exe`core::cell::impl$42::drop (1 samples, 0.41%)</title><rect x="53.9419%" y="725" width="0.4149%" height="15" fill="rgb(79,192,192)" fg:x="130" fg:w="1"/><text x="54.1919%" y="735.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;isize&gt;::set (1 samples, 0.41%)</title><rect x="53.9419%" y="709" width="0.4149%" height="15" fill="rgb(89,201,201)" fg:x="130" fg:w="1"/><text x="54.1919%" y="719.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;isize&gt;::replace (1 samples, 0.41%)</title><rect x="53.9419%" y="693" width="0.4149%" height="15" fill="rgb(64,177,177)" fg:x="130" fg:w="1"/><text x="54.1919%" y="703.50"></text></g><g><title>osrs_gph.exe`core::mem::replace (1 samples, 0.41%)</title><rect x="53.9419%" y="677" width="0.4149%" height="15" fill="rgb(56,171,171)" fg:x="130" fg:w="1"/><text x="54.1919%" y="687.50"></text></g><g><title>osrs_gph.exe`core::ptr::write (1 samples, 0.41%)</title><rect x="53.9419%" y="661" width="0.4149%" height="15" fill="rgb(85,197,197)" fg:x="130" fg:w="1"/><text x="54.1919%" y="671.50"></text></g><g><title>osrs_gph.exe`toml_edit::parser::state::ParseState::on_keyval(alloc::vec::Vec (1 samples, 0.41%)</title><rect x="53.9419%" y="645" width="0.4149%" height="15" fill="rgb(93,204,204)" fg:x="130" fg:w="1"/><text x="54.1919%" y="655.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;ref_mut$&lt;toml_edit::table::Table&gt;,enum2$ (1 samples, 0.41%)</title><rect x="53.9419%" y="629" width="0.4149%" height="15" fill="rgb(87,199,199)" fg:x="130" fg:w="1"/><text x="54.1919%" y="639.50"></text></g><g><title>osrs_gph.exe`toml_edit::parser::state::ParseState::descend_path(toml_edit::table::Table*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="53.9419%" y="613" width="0.4149%" height="15" fill="rgb(97,208,208)" fg:x="130" fg:w="1"/><text x="54.1919%" y="623.50"></text></g><g><title>`0x7FFE593D8940 (1 samples, 0.41%)</title><rect x="54.3568%" y="613" width="0.4149%" height="15" fill="rgb(202,202,59)" fg:x="131" fg:w="1"/><text x="54.6068%" y="623.50"></text></g><g><title>`0x7FFE593DD62D (1 samples, 0.41%)</title><rect x="54.3568%" y="597" width="0.4149%" height="15" fill="rgb(229,229,69)" fg:x="131" fg:w="1"/><text x="54.6068%" y="607.50"></text></g><g><title>`0x7FFE5941CDFE (1 samples, 0.41%)</title><rect x="54.3568%" y="581" width="0.4149%" height="15" fill="rgb(219,219,66)" fg:x="131" fg:w="1"/><text x="54.6068%" y="591.50"></text></g><g><title>`0x7FFE5941D04D (1 samples, 0.41%)</title><rect x="54.3568%" y="565" width="0.4149%" height="15" fill="rgb(189,189,55)" fg:x="131" fg:w="1"/><text x="54.6068%" y="575.50"></text></g><g><title>`0x7FFE593D869F (1 samples, 0.41%)</title><rect x="54.3568%" y="549" width="0.4149%" height="15" fill="rgb(196,196,57)" fg:x="131" fg:w="1"/><text x="54.6068%" y="559.50"></text></g><g><title>`0x7FFE56F10CFA (1 samples, 0.41%)</title><rect x="54.3568%" y="533" width="0.4149%" height="15" fill="rgb(192,192,56)" fg:x="131" fg:w="1"/><text x="54.6068%" y="543.50"></text></g><g><title>`0x7FFE56EF6FB9 (1 samples, 0.41%)</title><rect x="54.3568%" y="517" width="0.4149%" height="15" fill="rgb(206,206,61)" fg:x="131" fg:w="1"/><text x="54.6068%" y="527.50"></text></g><g><title>`0x7FFE56EF6CA9 (1 samples, 0.41%)</title><rect x="54.3568%" y="501" width="0.4149%" height="15" fill="rgb(199,199,58)" fg:x="131" fg:w="1"/><text x="54.6068%" y="511.50"></text></g><g><title>`0x7FFE56EF6752 (1 samples, 0.41%)</title><rect x="54.3568%" y="485" width="0.4149%" height="15" fill="rgb(208,208,62)" fg:x="131" fg:w="1"/><text x="54.6068%" y="495.50"></text></g><g><title>`0x7FFE5944F654 (1 samples, 0.41%)</title><rect x="54.3568%" y="469" width="0.4149%" height="15" fill="rgb(229,229,69)" fg:x="131" fg:w="1"/><text x="54.6068%" y="479.50"></text></g><g><title>osrs_gph.exe`core::cell::RefCell&lt;toml_edit::parser::state::ParseState&gt;::new (2 samples, 0.83%)</title><rect x="54.3568%" y="949" width="0.8299%" height="15" fill="rgb(68,181,181)" fg:x="131" fg:w="2"/><text x="54.6068%" y="959.50"></text></g><g><title>osrs_gph.exe`toml_edit::parser::state::impl$1::default (2 samples, 0.83%)</title><rect x="54.3568%" y="933" width="0.8299%" height="15" fill="rgb(91,203,203)" fg:x="131" fg:w="2"/><text x="54.6068%" y="943.50"></text></g><g><title>osrs_gph.exe`toml_edit::table::Table::new (2 samples, 0.83%)</title><rect x="54.3568%" y="917" width="0.8299%" height="15" fill="rgb(67,181,181)" fg:x="131" fg:w="2"/><text x="54.6068%" y="927.50"></text></g><g><title>osrs_gph.exe`toml_edit::table::impl$15::default (2 samples, 0.83%)</title><rect x="54.3568%" y="901" width="0.8299%" height="15" fill="rgb(79,191,191)" fg:x="131" fg:w="2"/><text x="54.6068%" y="911.50"></text></g><g><title>osrs_gph.exe`indexmap::map::impl$16::default (2 samples, 0.83%)</title><rect x="54.3568%" y="885" width="0.8299%" height="15" fill="rgb(58,173,173)" fg:x="131" fg:w="2"/><text x="54.6068%" y="895.50"></text></g><g><title>osrs_gph.exe`indexmap::map::IndexMap&lt;toml_edit::internal_string::InternalString,toml_edit::table::TableKeyValue,std::collections::hash::map::RandomState&gt;::with_capacity_and_hasher (2 samples, 0.83%)</title><rect x="54.3568%" y="869" width="0.8299%" height="15" fill="rgb(80,193,193)" fg:x="131" fg:w="2"/><text x="54.6068%" y="879.50"></text></g><g><title>osrs_gph.exe`indexmap::map::IndexMap&lt;toml_edit::internal_string::InternalString,toml_edit::table::TableKeyValue,std::collections::hash::map::RandomState&gt;::with_hasher (2 samples, 0.83%)</title><rect x="54.3568%" y="853" width="0.8299%" height="15" fill="rgb(83,195,195)" fg:x="131" fg:w="2"/><text x="54.6068%" y="863.50"></text></g><g><title>osrs_gph.exe`std::sys::common::thread_local::fast_local::Key&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_initialize&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt;,std::collections::hash::map::impl$82::new::KEYS::__getit::closure_env$0&gt; (2 samples, 0.83%)</title><rect x="54.3568%" y="837" width="0.8299%" height="15" fill="rgb(55,170,170)" fg:x="131" fg:w="2"/><text x="54.6068%" y="847.50"></text></g><g><title>osrs_gph.exe`std::sys::common::thread_local::lazy::LazyKeyInner&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::initialize (2 samples, 0.83%)</title><rect x="54.3568%" y="821" width="0.8299%" height="15" fill="rgb(95,206,206)" fg:x="131" fg:w="2"/><text x="54.6068%" y="831.50"></text></g><g><title>osrs_gph.exe`core::mem::replace(enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (2 samples, 0.83%)</title><rect x="54.3568%" y="805" width="0.8299%" height="15" fill="rgb(89,201,201)" fg:x="131" fg:w="2"/><text x="54.6068%" y="815.50"></text></g><g><title>osrs_gph.exe`core::ptr::write(enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (2 samples, 0.83%)</title><rect x="54.3568%" y="789" width="0.8299%" height="15" fill="rgb(75,188,188)" fg:x="131" fg:w="2"/><text x="54.6068%" y="799.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::rand::hashmap_random_keys (2 samples, 0.83%)</title><rect x="54.3568%" y="773" width="0.8299%" height="15" fill="rgb(95,206,206)" fg:x="131" fg:w="2"/><text x="54.6068%" y="783.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::c::nt_success (2 samples, 0.83%)</title><rect x="54.3568%" y="757" width="0.8299%" height="15" fill="rgb(80,192,192)" fg:x="131" fg:w="2"/><text x="54.6068%" y="767.50"></text></g><g><title>`0x7FFE570D177C (2 samples, 0.83%)</title><rect x="54.3568%" y="741" width="0.8299%" height="15" fill="rgb(192,192,56)" fg:x="131" fg:w="2"/><text x="54.6068%" y="751.50"></text></g><g><title>`0x7FFE570D18D6 (2 samples, 0.83%)</title><rect x="54.3568%" y="725" width="0.8299%" height="15" fill="rgb(205,205,60)" fg:x="131" fg:w="2"/><text x="54.6068%" y="735.50"></text></g><g><title>`0x7FFE570D55D3 (2 samples, 0.83%)</title><rect x="54.3568%" y="709" width="0.8299%" height="15" fill="rgb(220,220,66)" fg:x="131" fg:w="2"/><text x="54.6068%" y="719.50"></text></g><g><title>`0x7FFE570D7969 (2 samples, 0.83%)</title><rect x="54.3568%" y="693" width="0.8299%" height="15" fill="rgb(218,218,65)" fg:x="131" fg:w="2"/><text x="54.6068%" y="703.50"></text></g><g><title>`0x7FFE570D7E85 (2 samples, 0.83%)</title><rect x="54.3568%" y="677" width="0.8299%" height="15" fill="rgb(222,222,67)" fg:x="131" fg:w="2"/><text x="54.6068%" y="687.50"></text></g><g><title>`0x7FFE56B26452 (2 samples, 0.83%)</title><rect x="54.3568%" y="661" width="0.8299%" height="15" fill="rgb(221,221,66)" fg:x="131" fg:w="2"/><text x="54.6068%" y="671.50"></text></g><g><title>`0x7FFE593DA25A (2 samples, 0.83%)</title><rect x="54.3568%" y="645" width="0.8299%" height="15" fill="rgb(183,183,53)" fg:x="131" fg:w="2"/><text x="54.6068%" y="655.50"></text></g><g><title>`0x7FFE593C8CAC (2 samples, 0.83%)</title><rect x="54.3568%" y="629" width="0.8299%" height="15" fill="rgb(206,206,61)" fg:x="131" fg:w="2"/><text x="54.6068%" y="639.50"></text></g><g><title>`0x7FFE593D88B6 (1 samples, 0.41%)</title><rect x="54.7718%" y="613" width="0.4149%" height="15" fill="rgb(207,207,61)" fg:x="132" fg:w="1"/><text x="55.0218%" y="623.50"></text></g><g><title>`0x7FFE593DDDA9 (1 samples, 0.41%)</title><rect x="54.7718%" y="597" width="0.4149%" height="15" fill="rgb(229,229,69)" fg:x="132" fg:w="1"/><text x="55.0218%" y="607.50"></text></g><g><title>`0x7FFE593DCE29 (1 samples, 0.41%)</title><rect x="54.7718%" y="581" width="0.4149%" height="15" fill="rgb(176,176,50)" fg:x="132" fg:w="1"/><text x="55.0218%" y="591.50"></text></g><g><title>`0x7FFE593DC254 (1 samples, 0.41%)</title><rect x="54.7718%" y="565" width="0.4149%" height="15" fill="rgb(192,192,56)" fg:x="132" fg:w="1"/><text x="55.0218%" y="575.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.41%)</title><rect x="54.7718%" y="549" width="0.4149%" height="15" fill="rgb(179,179,51)" fg:x="132" fg:w="1"/><text x="55.0218%" y="559.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.41%)</title><rect x="54.7718%" y="533" width="0.4149%" height="15" fill="rgb(181,181,52)" fg:x="132" fg:w="1"/><text x="55.0218%" y="543.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.41%)</title><rect x="54.7718%" y="517" width="0.4149%" height="15" fill="rgb(184,184,53)" fg:x="132" fg:w="1"/><text x="55.0218%" y="527.50"></text></g><g><title>osrs_gph.exe`toml::table::impl$2::from_str(ref$ (5 samples, 2.07%)</title><rect x="53.5270%" y="1157" width="2.0747%" height="15" fill="rgb(100,211,211)" fg:x="129" fg:w="5"/><text x="53.7770%" y="1167.50">o..</text></g><g><title>osrs_gph.exe`toml::de::from_str(ref$ (5 samples, 2.07%)</title><rect x="53.5270%" y="1141" width="2.0747%" height="15" fill="rgb(64,178,178)" fg:x="129" fg:w="5"/><text x="53.7770%" y="1151.50">o..</text></g><g><title>osrs_gph.exe`toml::map::impl$8::deserialize (5 samples, 2.07%)</title><rect x="53.5270%" y="1125" width="2.0747%" height="15" fill="rgb(88,200,200)" fg:x="129" fg:w="5"/><text x="53.7770%" y="1135.50">o..</text></g><g><title>osrs_gph.exe`toml::de::impl$5::deserialize_map (5 samples, 2.07%)</title><rect x="53.5270%" y="1109" width="2.0747%" height="15" fill="rgb(85,197,197)" fg:x="129" fg:w="5"/><text x="53.7770%" y="1119.50">o..</text></g><g><title>osrs_gph.exe`toml::de::impl$5::deserialize_any (5 samples, 2.07%)</title><rect x="53.5270%" y="1093" width="2.0747%" height="15" fill="rgb(56,170,170)" fg:x="129" fg:w="5"/><text x="53.7770%" y="1103.50">o..</text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;toml_edit::de::Deserializer,toml_edit::de::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;toml_edit::de::Deserializer,toml_edit::de::Error&gt; &gt;, toml::de::Error (*) (5 samples, 2.07%)</title><rect x="53.5270%" y="1077" width="2.0747%" height="15" fill="rgb(102,212,212)" fg:x="129" fg:w="5"/><text x="53.7770%" y="1087.50">o..</text></g><g><title>osrs_gph.exe`toml_edit::de::impl$7::from_str(ref$ (5 samples, 2.07%)</title><rect x="53.5270%" y="1061" width="2.0747%" height="15" fill="rgb(93,204,204)" fg:x="129" fg:w="5"/><text x="53.7770%" y="1071.50">o..</text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;toml_edit::document::Document,toml_edit::error::TomlError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;toml_edit::document::Document,toml_edit::error::TomlError&gt; &gt;, toml_edit::de::Error (*) (5 samples, 2.07%)</title><rect x="53.5270%" y="1045" width="2.0747%" height="15" fill="rgb(50,165,165)" fg:x="129" fg:w="5"/><text x="53.7770%" y="1055.50">o..</text></g><g><title>osrs_gph.exe`toml_edit::parser::parse_document(ref$ (5 samples, 2.07%)</title><rect x="53.5270%" y="1029" width="2.0747%" height="15" fill="rgb(70,184,184)" fg:x="129" fg:w="5"/><text x="53.7770%" y="1039.50">o..</text></g><g><title>osrs_gph.exe`winnow::parser::Parser::parse(enum2$&lt;core::result::Result&lt;toml_edit::document::Document,enum2$&lt;winnow::error::ErrMode&lt;winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt; &gt; &gt; &gt; &gt; (**)(winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;*), winnow::stream::Located&lt;ref$ (5 samples, 2.07%)</title><rect x="53.5270%" y="1013" width="2.0747%" height="15" fill="rgb(84,196,196)" fg:x="129" fg:w="5"/><text x="53.7770%" y="1023.50">o..</text></g><g><title>osrs_gph.exe`winnow::parser::impl$12::parse_next(tuple$&lt;winnow::combinator::parser::ByRef&lt;enum2$&lt;core::result::Result&lt;toml_edit::document::Document,enum2$&lt;winnow::error::ErrMode&lt;winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref_mut$&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt; &gt;)&gt;,enum2$&lt;core::result::Result&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,enum2$&lt;winnow::error::ErrMode&lt;winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref_mut$&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt; &gt;)&gt;*, winnow::stream::Located&lt;ref$ (5 samples, 2.07%)</title><rect x="53.5270%" y="997" width="2.0747%" height="15" fill="rgb(57,171,171)" fg:x="129" fg:w="5"/><text x="53.7770%" y="1007.50">o..</text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;toml_edit::document::Document,enum2$&lt;winnow::error::ErrMode&lt;winnow::error::ContextError&lt;enum2$ (5 samples, 2.07%)</title><rect x="53.5270%" y="981" width="2.0747%" height="15" fill="rgb(76,189,189)" fg:x="129" fg:w="5"/><text x="53.7770%" y="991.50">o..</text></g><g><title>osrs_gph.exe`toml_edit::parser::document::document(winnow::stream::Located&lt;ref$ (5 samples, 2.07%)</title><rect x="53.5270%" y="965" width="2.0747%" height="15" fill="rgb(54,169,169)" fg:x="129" fg:w="5"/><text x="53.7770%" y="975.50">o..</text></g><g><title>osrs_gph.exe`toml::map::impl$4::index(toml::map::Map&lt;alloc::string::String,enum2$&lt;toml::value::Value&gt; &gt;*, ref$ (6 samples, 2.49%)</title><rect x="53.5270%" y="1237" width="2.4896%" height="15" fill="rgb(72,185,185)" fg:x="129" fg:w="6"/><text x="53.7770%" y="1247.50">os..</text></g><g><title>osrs_gph.exe`alloc::collections::btree::map::impl$88::index(alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,enum2$&lt;toml::value::Value&gt;,alloc::alloc::Global&gt;*, ref$ (6 samples, 2.49%)</title><rect x="53.5270%" y="1221" width="2.4896%" height="15" fill="rgb(73,186,186)" fg:x="129" fg:w="6"/><text x="53.7770%" y="1231.50">os..</text></g><g><title>osrs_gph.exe`alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,enum2$&lt;toml::value::Value&gt;,alloc::alloc::Global&gt;::get(ref$ (6 samples, 2.49%)</title><rect x="53.5270%" y="1205" width="2.4896%" height="15" fill="rgb(65,178,178)" fg:x="129" fg:w="6"/><text x="53.7770%" y="1215.50">os..</text></g><g><title>osrs_gph.exe`enum2$&lt;core::option::Option&lt;alloc::collections::btree::node::NodeRef&lt;enum2$&lt;alloc::collections::btree::node::marker::Owned&gt;,alloc::string::String,enum2$&lt;toml::value::Value&gt;,enum2$&lt;alloc::collections::btree::node::marker::LeafOrInternal&gt; &gt; &gt; &gt;::as_ref (6 samples, 2.49%)</title><rect x="53.5270%" y="1189" width="2.4896%" height="15" fill="rgb(53,167,167)" fg:x="129" fg:w="6"/><text x="53.7770%" y="1199.50">os..</text></g><g><title>osrs_gph.exe`osrs_gph::convenience::load_config&lt;ref$&lt;str$&gt; &gt;(ref$ (6 samples, 2.49%)</title><rect x="53.5270%" y="1173" width="2.4896%" height="15" fill="rgb(83,195,195)" fg:x="129" fg:w="6"/><text x="53.7770%" y="1183.50">os..</text></g><g><title>osrs_gph.exe`std::fs::read_to_string::inner (1 samples, 0.41%)</title><rect x="55.6017%" y="1157" width="0.4149%" height="15" fill="rgb(58,173,173)" fg:x="134" fg:w="1"/><text x="55.8517%" y="1167.50"></text></g><g><title>osrs_gph.exe`std::fs::File::open (1 samples, 0.41%)</title><rect x="55.6017%" y="1141" width="0.4149%" height="15" fill="rgb(106,216,216)" fg:x="134" fg:w="1"/><text x="55.8517%" y="1151.50"></text></g><g><title>osrs_gph.exe`std::fs::OpenOptions::open (1 samples, 0.41%)</title><rect x="55.6017%" y="1125" width="0.4149%" height="15" fill="rgb(99,210,210)" fg:x="134" fg:w="1"/><text x="55.8517%" y="1135.50"></text></g><g><title>osrs_gph.exe`std::fs::OpenOptions::_open (1 samples, 0.41%)</title><rect x="55.6017%" y="1109" width="0.4149%" height="15" fill="rgb(53,168,168)" fg:x="134" fg:w="1"/><text x="55.8517%" y="1119.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::fs::File::open (1 samples, 0.41%)</title><rect x="55.6017%" y="1093" width="0.4149%" height="15" fill="rgb(75,188,188)" fg:x="134" fg:w="1"/><text x="55.8517%" y="1103.50"></text></g><g><title>osrs_gph.exe`core::convert::impl$6::try_into (1 samples, 0.41%)</title><rect x="55.6017%" y="1077" width="0.4149%" height="15" fill="rgb(107,217,217)" fg:x="134" fg:w="1"/><text x="55.8517%" y="1087.50"></text></g><g><title>osrs_gph.exe`std::os::windows::io::handle::impl$12::try_from (1 samples, 0.41%)</title><rect x="55.6017%" y="1061" width="0.4149%" height="15" fill="rgb(65,179,179)" fg:x="134" fg:w="1"/><text x="55.8517%" y="1071.50"></text></g><g><title>`0x7FFE56B24CDC (1 samples, 0.41%)</title><rect x="55.6017%" y="1045" width="0.4149%" height="15" fill="rgb(178,178,51)" fg:x="134" fg:w="1"/><text x="55.8517%" y="1055.50"></text></g><g><title>`0x7FFE56B25370 (1 samples, 0.41%)</title><rect x="55.6017%" y="1029" width="0.4149%" height="15" fill="rgb(206,206,61)" fg:x="134" fg:w="1"/><text x="55.8517%" y="1039.50"></text></g><g><title>`0x7FFE5944FE14 (1 samples, 0.41%)</title><rect x="55.6017%" y="1013" width="0.4149%" height="15" fill="rgb(218,218,65)" fg:x="134" fg:w="1"/><text x="55.8517%" y="1023.50"></text></g><g><title>osrs_gph.exe`slog::Logger&lt;alloc::sync::Arc&lt;dyn$&lt;slog::SendSyncRefUnwindSafeDrain&lt;assoc$&lt;Err,slog::private::NeverStruct&gt;,assoc$&lt;Ok,tuple$&lt;&gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;::log (1 samples, 0.41%)</title><rect x="56.0166%" y="1237" width="0.4149%" height="15" fill="rgb(56,170,170)" fg:x="135" fg:w="1"/><text x="56.2666%" y="1247.50"></text></g><g><title>osrs_gph.exe`slog::impl$12::log(alloc::sync::Arc&lt;dyn$&lt;slog::SendSyncRefUnwindSafeDrain&lt;assoc$&lt;Err,slog::private::NeverStruct&gt;,assoc$&lt;Ok,tuple$ (1 samples, 0.41%)</title><rect x="56.0166%" y="1221" width="0.4149%" height="15" fill="rgb(98,209,209)" fg:x="135" fg:w="1"/><text x="56.2666%" y="1231.50"></text></g><g><title>osrs_gph.exe`slog::impl$23::log&lt;slog::LevelFilter&lt;slog::Fuse&lt;slog::Fuse&lt;slog_async::Async&gt; &gt; &gt; &gt;(slog::Fuse&lt;slog::LevelFilter&lt;slog::Fuse&lt;slog::Fuse (1 samples, 0.41%)</title><rect x="56.0166%" y="1205" width="0.4149%" height="15" fill="rgb(95,206,206)" fg:x="135" fg:w="1"/><text x="56.2666%" y="1215.50"></text></g><g><title>osrs_gph.exe`slog::impl$23::log&lt;slog_async::Async&gt;(slog::Fuse (1 samples, 0.41%)</title><rect x="56.0166%" y="1189" width="0.4149%" height="15" fill="rgb(103,214,214)" fg:x="135" fg:w="1"/><text x="56.2666%" y="1199.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;slog_async::AsyncError&gt; &gt; &gt;::unwrap_or_else(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;slog_async::AsyncError&gt; &gt; &gt;, slog::impl$23::log::closure_env$0 (1 samples, 0.41%)</title><rect x="56.0166%" y="1173" width="0.4149%" height="15" fill="rgb(105,215,215)" fg:x="135" fg:w="1"/><text x="56.2666%" y="1183.50"></text></g><g><title>osrs_gph.exe`slog_async::impl$13::log (1 samples, 0.41%)</title><rect x="56.0166%" y="1157" width="0.4149%" height="15" fill="rgb(96,207,207)" fg:x="135" fg:w="1"/><text x="56.2666%" y="1167.50"></text></g><g><title>osrs_gph.exe`slog_async::impl$8::log (1 samples, 0.41%)</title><rect x="56.0166%" y="1141" width="0.4149%" height="15" fill="rgb(106,216,216)" fg:x="135" fg:w="1"/><text x="56.2666%" y="1151.50"></text></g><g><title>osrs_gph.exe`slog_async::AsyncCore::send (1 samples, 0.41%)</title><rect x="56.0166%" y="1125" width="0.4149%" height="15" fill="rgb(59,173,173)" fg:x="135" fg:w="1"/><text x="56.2666%" y="1135.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;ref$&lt;crossbeam_channel::channel::Sender&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt; &gt;,std::sync::poison::PoisonError&lt;std::sync::mutex::MutexGuard&lt;crossbeam_channel::channel::Sender&lt;enum2$ (1 samples, 0.41%)</title><rect x="56.0166%" y="1109" width="0.4149%" height="15" fill="rgb(99,210,210)" fg:x="135" fg:w="1"/><text x="56.2666%" y="1119.50"></text></g><g><title>osrs_gph.exe`thread_local::ThreadLocal&lt;crossbeam_channel::channel::Sender&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt; &gt;::get_or_try&lt;crossbeam_channel::channel::Sender&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;,slog_async::impl$7::get_sender::closure_env$0,std::sync::poison::PoisonError&lt;std::sync::mutex::MutexGuard&lt;crossbeam_channel::channel::Sender&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt; &gt; &gt; &gt; (1 samples, 0.41%)</title><rect x="56.0166%" y="1093" width="0.4149%" height="15" fill="rgb(103,213,213)" fg:x="135" fg:w="1"/><text x="56.2666%" y="1103.50"></text></g><g><title>osrs_gph.exe`thread_local::thread_id::get (1 samples, 0.41%)</title><rect x="56.0166%" y="1077" width="0.4149%" height="15" fill="rgb(68,182,182)" fg:x="135" fg:w="1"/><text x="56.2666%" y="1087.50"></text></g><g><title>osrs_gph.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;enum2$&lt;core::option::Option&lt;thread_local::thread_id::Thread&gt; &gt; &gt; &gt;::with (1 samples, 0.41%)</title><rect x="56.0166%" y="1061" width="0.4149%" height="15" fill="rgb(63,177,177)" fg:x="135" fg:w="1"/><text x="56.2666%" y="1071.50"></text></g><g><title>osrs_gph.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;enum2$&lt;core::option::Option&lt;thread_local::thread_id::Thread&gt; &gt; &gt; &gt;::try_with (1 samples, 0.41%)</title><rect x="56.0166%" y="1045" width="0.4149%" height="15" fill="rgb(93,205,205)" fg:x="135" fg:w="1"/><text x="56.2666%" y="1055.50"></text></g><g><title>osrs_gph.exe`thread_local::thread_id::get::closure$0(thread_local::thread_id::get::closure_env$0, core::cell::Cell&lt;enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="56.0166%" y="1029" width="0.4149%" height="15" fill="rgb(75,188,188)" fg:x="135" fg:w="1"/><text x="56.2666%" y="1039.50"></text></g><g><title>osrs_gph.exe`thread_local::thread_id::get_slow(core::cell::Cell&lt;enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="56.0166%" y="1013" width="0.4149%" height="15" fill="rgb(82,194,194)" fg:x="135" fg:w="1"/><text x="56.2666%" y="1023.50"></text></g><g><title>osrs_gph.exe`once_cell::sync::impl$12::deref(once_cell::sync::Lazy&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;,std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt; (*) (1 samples, 0.41%)</title><rect x="56.0166%" y="997" width="0.4149%" height="15" fill="rgb(71,184,184)" fg:x="135" fg:w="1"/><text x="56.2666%" y="1007.50"></text></g><g><title>osrs_gph.exe`once_cell::sync::Lazy&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;,std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt; (*)()&gt;::force (1 samples, 0.41%)</title><rect x="56.0166%" y="981" width="0.4149%" height="15" fill="rgb(81,193,193)" fg:x="135" fg:w="1"/><text x="56.2666%" y="991.50"></text></g><g><title>osrs_gph.exe`once_cell::sync::OnceCell&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt; &gt;::get_or_init(once_cell::sync::impl$11::force::closure_env$0&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;,std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt; (*) (1 samples, 0.41%)</title><rect x="56.0166%" y="965" width="0.4149%" height="15" fill="rgb(96,207,207)" fg:x="135" fg:w="1"/><text x="56.2666%" y="975.50"></text></g><g><title>osrs_gph.exe`once_cell::sync::OnceCell&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt; &gt;::get_or_try_init(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;,std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt; (*) (1 samples, 0.41%)</title><rect x="56.0166%" y="949" width="0.4149%" height="15" fill="rgb(86,198,198)" fg:x="135" fg:w="1"/><text x="56.2666%" y="959.50"></text></g><g><title>osrs_gph.exe`once_cell::imp::OnceCell&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt; &gt;::initialize&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;,std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt; (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;,std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt; (*) (1 samples, 0.41%)</title><rect x="56.0166%" y="933" width="0.4149%" height="15" fill="rgb(55,170,170)" fg:x="135" fg:w="1"/><text x="56.2666%" y="943.50"></text></g><g><title>osrs_gph.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (1 samples, 0.41%)</title><rect x="56.0166%" y="917" width="0.4149%" height="15" fill="rgb(85,197,197)" fg:x="135" fg:w="1"/><text x="56.2666%" y="927.50"></text></g><g><title>osrs_gph.exe`core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;::compare_exchange (1 samples, 0.41%)</title><rect x="56.0166%" y="901" width="0.4149%" height="15" fill="rgb(52,167,167)" fg:x="135" fg:w="1"/><text x="56.2666%" y="911.50"></text></g><g><title>osrs_gph.exe`core::sync::atomic::atomic_compare_exchange (1 samples, 0.41%)</title><rect x="56.0166%" y="885" width="0.4149%" height="15" fill="rgb(54,169,169)" fg:x="135" fg:w="1"/><text x="56.2666%" y="895.50"></text></g><g><title>osrs_gph.exe`osrs_gph::logging::Logging&lt;osrs_gph::file_io::FileIO&lt;ref$&lt;str$&gt; &gt; &gt;::file&lt;ref$&lt;str$&gt; &gt; (2 samples, 0.83%)</title><rect x="56.4315%" y="1205" width="0.8299%" height="15" fill="rgb(104,215,215)" fg:x="136" fg:w="2"/><text x="56.6815%" y="1215.50"></text></g><g><title>osrs_gph.exe`std::fs::OpenOptions::open(ref$ (2 samples, 0.83%)</title><rect x="56.4315%" y="1189" width="0.8299%" height="15" fill="rgb(109,219,219)" fg:x="136" fg:w="2"/><text x="56.6815%" y="1199.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::fs::File::open (2 samples, 0.83%)</title><rect x="56.4315%" y="1173" width="0.8299%" height="15" fill="rgb(72,185,185)" fg:x="136" fg:w="2"/><text x="56.6815%" y="1183.50"></text></g><g><title>osrs_gph.exe`core::convert::impl$6::try_into (2 samples, 0.83%)</title><rect x="56.4315%" y="1157" width="0.8299%" height="15" fill="rgb(103,213,213)" fg:x="136" fg:w="2"/><text x="56.6815%" y="1167.50"></text></g><g><title>osrs_gph.exe`std::os::windows::io::handle::impl$12::try_from (2 samples, 0.83%)</title><rect x="56.4315%" y="1141" width="0.8299%" height="15" fill="rgb(78,191,191)" fg:x="136" fg:w="2"/><text x="56.6815%" y="1151.50"></text></g><g><title>`0x7FFE56B24CDC (2 samples, 0.83%)</title><rect x="56.4315%" y="1125" width="0.8299%" height="15" fill="rgb(224,224,67)" fg:x="136" fg:w="2"/><text x="56.6815%" y="1135.50"></text></g><g><title>`0x7FFE56B25370 (2 samples, 0.83%)</title><rect x="56.4315%" y="1109" width="0.8299%" height="15" fill="rgb(215,215,64)" fg:x="136" fg:w="2"/><text x="56.6815%" y="1119.50"></text></g><g><title>`0x7FFE5944FE14 (2 samples, 0.83%)</title><rect x="56.4315%" y="1093" width="0.8299%" height="15" fill="rgb(200,200,59)" fg:x="136" fg:w="2"/><text x="56.6815%" y="1103.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::impl$16::begin_object_value(serde_json::ser::PrettyFormatter*, std::io::buffered::bufwriter::BufWriter (1 samples, 0.41%)</title><rect x="57.2614%" y="1013" width="0.4149%" height="15" fill="rgb(109,219,219)" fg:x="138" fg:w="1"/><text x="57.5114%" y="1023.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufwriter::impl$6::write_all(std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="57.2614%" y="997" width="0.4149%" height="15" fill="rgb(84,196,196)" fg:x="138" fg:w="1"/><text x="57.5114%" y="1007.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;::write_to_buffer_unchecked(ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="57.2614%" y="981" width="0.4149%" height="15" fill="rgb(88,199,199)" fg:x="138" fg:w="1"/><text x="57.5114%" y="991.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::impl$8::serialize_value(enum2$&lt;serde_json::ser::Compound&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt;*, enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="57.6763%" y="965" width="0.4149%" height="15" fill="rgb(66,179,179)" fg:x="139" fg:w="1"/><text x="57.9263%" y="975.50"></text></g><g><title>osrs_gph.exe`serde::ser::impls::impl$5::serialize(enum2$&lt;core::option::Option&lt;i32&gt; &gt;*, serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter (1 samples, 0.41%)</title><rect x="57.6763%" y="949" width="0.4149%" height="15" fill="rgb(82,195,195)" fg:x="139" fg:w="1"/><text x="57.9263%" y="959.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::impl$3::serialize_some(serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter (1 samples, 0.41%)</title><rect x="57.6763%" y="933" width="0.4149%" height="15" fill="rgb(101,211,211)" fg:x="139" fg:w="1"/><text x="57.9263%" y="943.50"></text></g><g><title>osrs_gph.exe`serde::ser::impls::impl$38::serialize(int*, serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter (1 samples, 0.41%)</title><rect x="57.6763%" y="917" width="0.4149%" height="15" fill="rgb(62,176,176)" fg:x="139" fg:w="1"/><text x="57.9263%" y="927.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::impl$3::serialize_i32(serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter (1 samples, 0.41%)</title><rect x="57.6763%" y="901" width="0.4149%" height="15" fill="rgb(77,189,189)" fg:x="139" fg:w="1"/><text x="57.9263%" y="911.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt;, serde_json::error::Error (*) (1 samples, 0.41%)</title><rect x="57.6763%" y="885" width="0.4149%" height="15" fill="rgb(89,201,201)" fg:x="139" fg:w="1"/><text x="57.9263%" y="895.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;::write_all_cold&lt;std::fs::File&gt;(ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="57.6763%" y="869" width="0.4149%" height="15" fill="rgb(65,179,179)" fg:x="139" fg:w="1"/><text x="57.9263%" y="879.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 0.41%)</title><rect x="57.6763%" y="853" width="0.4149%" height="15" fill="rgb(102,213,213)" fg:x="139" fg:w="1"/><text x="57.9263%" y="863.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;::flush_buf&lt;std::fs::File&gt; (1 samples, 0.41%)</title><rect x="57.6763%" y="837" width="0.4149%" height="15" fill="rgb(71,184,184)" fg:x="139" fg:w="1"/><text x="57.9263%" y="847.50"></text></g><g><title>osrs_gph.exe`std::fs::impl$9::write (1 samples, 0.41%)</title><rect x="57.6763%" y="821" width="0.4149%" height="15" fill="rgb(61,175,175)" fg:x="139" fg:w="1"/><text x="57.9263%" y="831.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::handle::Handle::synchronous_write (1 samples, 0.41%)</title><rect x="57.6763%" y="805" width="0.4149%" height="15" fill="rgb(57,171,171)" fg:x="139" fg:w="1"/><text x="57.9263%" y="815.50"></text></g><g><title>`0x7FFE5944F474 (1 samples, 0.41%)</title><rect x="57.6763%" y="789" width="0.4149%" height="15" fill="rgb(189,189,55)" fg:x="139" fg:w="1"/><text x="57.9263%" y="799.50"></text></g><g><title>osrs_gph.exe`serde::ser::impls::impl$0::serialize(ref$&lt;str$&gt;, serde_json::ser::MapKeySerializer&lt;std::io::buffered::bufwriter::BufWriter (1 samples, 0.41%)</title><rect x="58.0913%" y="949" width="0.4149%" height="15" fill="rgb(95,206,206)" fg:x="140" fg:w="1"/><text x="58.3413%" y="959.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::impl$8::serialize_key&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter,str$&gt;(enum2$&lt;serde_json::ser::Compound&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt;*, ref$ (2 samples, 0.83%)</title><rect x="58.0913%" y="965" width="0.8299%" height="15" fill="rgb(63,177,177)" fg:x="140" fg:w="2"/><text x="58.3413%" y="975.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::impl$8::serialize_value(enum2$&lt;serde_json::ser::Compound&lt;std::io::buffered::bufwriter::BufWriter (5 samples, 2.07%)</title><rect x="57.2614%" y="1029" width="2.0747%" height="15" fill="rgb(73,186,186)" fg:x="138" fg:w="5"/><text x="57.5114%" y="1039.50">o..</text></g><g><title>osrs_gph.exe`osrs_gph::data_types::impl$2::serialize&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt; &gt;(osrs_gph::data_types::PriceDatum*, serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter (4 samples, 1.66%)</title><rect x="57.6763%" y="1013" width="1.6598%" height="15" fill="rgb(64,178,178)" fg:x="139" fg:w="4"/><text x="57.9263%" y="1023.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (4 samples, 1.66%)</title><rect x="57.6763%" y="997" width="1.6598%" height="15" fill="rgb(83,195,195)" fg:x="139" fg:w="4"/><text x="57.9263%" y="1007.50"></text></g><g><title>osrs_gph.exe`serde::ser::SerializeMap::serialize_entry&lt;enum2$&lt;serde_json::ser::Compound&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt;,str$,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;(enum2$&lt;serde_json::ser::Compound&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt;*, ref$&lt;str$&gt;, enum2$&lt;core::option::Option (4 samples, 1.66%)</title><rect x="57.6763%" y="981" width="1.6598%" height="15" fill="rgb(75,188,188)" fg:x="139" fg:w="4"/><text x="57.9263%" y="991.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::impl$11::serialize_str&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt;(serde_json::ser::MapKeySerializer&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt;, ref$ (1 samples, 0.41%)</title><rect x="58.9212%" y="965" width="0.4149%" height="15" fill="rgb(94,205,205)" fg:x="142" fg:w="1"/><text x="59.1712%" y="975.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::impl$3::serialize_str(serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt;*, ref$ (1 samples, 0.41%)</title><rect x="58.9212%" y="949" width="0.4149%" height="15" fill="rgb(98,209,209)" fg:x="142" fg:w="1"/><text x="59.1712%" y="959.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::format_escaped_str(std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;*, serde_json::ser::PrettyFormatter*, ref$ (1 samples, 0.41%)</title><rect x="58.9212%" y="933" width="0.4149%" height="15" fill="rgb(61,175,175)" fg:x="142" fg:w="1"/><text x="59.1712%" y="943.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::format_escaped_str_contents(std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;*, serde_json::ser::PrettyFormatter*, ref$ (1 samples, 0.41%)</title><rect x="58.9212%" y="917" width="0.4149%" height="15" fill="rgb(50,165,165)" fg:x="142" fg:w="1"/><text x="59.1712%" y="927.50"></text></g><g><title>osrs_gph.exe`core::str::traits::impl$4::index(ref$&lt;str$&gt;, core::ops::range::RangeFrom (1 samples, 0.41%)</title><rect x="58.9212%" y="901" width="0.4149%" height="15" fill="rgb(54,169,169)" fg:x="142" fg:w="1"/><text x="59.1712%" y="911.50"></text></g><g><title>osrs_gph.exe`core::str::traits::impl$10::index(core::ops::range::RangeFrom&lt;usize&gt;, ref$ (1 samples, 0.41%)</title><rect x="58.9212%" y="885" width="0.4149%" height="15" fill="rgb(97,208,208)" fg:x="142" fg:w="1"/><text x="59.1712%" y="895.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;::write_all_cold&lt;std::fs::File&gt;(ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="59.3361%" y="981" width="0.4149%" height="15" fill="rgb(80,193,193)" fg:x="143" fg:w="1"/><text x="59.5861%" y="991.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 0.41%)</title><rect x="59.3361%" y="965" width="0.4149%" height="15" fill="rgb(108,218,218)" fg:x="143" fg:w="1"/><text x="59.5861%" y="975.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;::flush_buf&lt;std::fs::File&gt; (1 samples, 0.41%)</title><rect x="59.3361%" y="949" width="0.4149%" height="15" fill="rgb(57,172,172)" fg:x="143" fg:w="1"/><text x="59.5861%" y="959.50"></text></g><g><title>osrs_gph.exe`std::fs::impl$9::write (1 samples, 0.41%)</title><rect x="59.3361%" y="933" width="0.4149%" height="15" fill="rgb(69,183,183)" fg:x="143" fg:w="1"/><text x="59.5861%" y="943.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::handle::Handle::synchronous_write (1 samples, 0.41%)</title><rect x="59.3361%" y="917" width="0.4149%" height="15" fill="rgb(68,182,182)" fg:x="143" fg:w="1"/><text x="59.5861%" y="927.50"></text></g><g><title>`0x7FFE5944F474 (1 samples, 0.41%)</title><rect x="59.3361%" y="901" width="0.4149%" height="15" fill="rgb(199,199,58)" fg:x="143" fg:w="1"/><text x="59.5861%" y="911.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::Formatter::write_string_fragment(serde_json::ser::PrettyFormatter*, std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;*, ref$ (1 samples, 0.41%)</title><rect x="59.7510%" y="965" width="0.4149%" height="15" fill="rgb(51,166,166)" fg:x="144" fg:w="1"/><text x="60.0010%" y="975.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufwriter::impl$6::write_all(std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="59.7510%" y="949" width="0.4149%" height="15" fill="rgb(97,208,208)" fg:x="144" fg:w="1"/><text x="60.0010%" y="959.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;::write_to_buffer_unchecked(ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="59.7510%" y="933" width="0.4149%" height="15" fill="rgb(108,218,218)" fg:x="144" fg:w="1"/><text x="60.0010%" y="943.50"></text></g><g><title>osrs_gph.exe`core::intrinsics::copy_nonoverlapping (1 samples, 0.41%)</title><rect x="59.7510%" y="917" width="0.4149%" height="15" fill="rgb(101,212,212)" fg:x="144" fg:w="1"/><text x="60.0010%" y="927.50"></text></g><g><title>osrs_gph.exe`osrs_gph::data_types::impl$3::serialize&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt; &gt;(osrs_gph::data_types::PriceDataType*, serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter (8 samples, 3.32%)</title><rect x="57.2614%" y="1205" width="3.3195%" height="15" fill="rgb(62,176,176)" fg:x="138" fg:w="8"/><text x="57.5114%" y="1215.50">osr..</text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (8 samples, 3.32%)</title><rect x="57.2614%" y="1189" width="3.3195%" height="15" fill="rgb(67,180,180)" fg:x="138" fg:w="8"/><text x="57.5114%" y="1199.50">osr..</text></g><g><title>osrs_gph.exe`serde::ser::SerializeMap::serialize_entry&lt;enum2$&lt;serde_json::ser::Compound&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt;,str$,std::collections::hash::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt; &gt;(enum2$&lt;serde_json::ser::Compound&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt;*, ref$&lt;str$&gt;, std::collections::hash::map::HashMap (8 samples, 3.32%)</title><rect x="57.2614%" y="1173" width="3.3195%" height="15" fill="rgb(81,194,194)" fg:x="138" fg:w="8"/><text x="57.5114%" y="1183.50">osr..</text></g><g><title>osrs_gph.exe`serde_json::ser::impl$8::serialize_value(enum2$&lt;serde_json::ser::Compound&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt;*, std::collections::hash::map::HashMap (8 samples, 3.32%)</title><rect x="57.2614%" y="1157" width="3.3195%" height="15" fill="rgb(68,181,181)" fg:x="138" fg:w="8"/><text x="57.5114%" y="1167.50">osr..</text></g><g><title>osrs_gph.exe`serde::ser::impls::impl$105::serialize(std::collections::hash::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt;*, serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter (8 samples, 3.32%)</title><rect x="57.2614%" y="1141" width="3.3195%" height="15" fill="rgb(72,185,185)" fg:x="138" fg:w="8"/><text x="57.5114%" y="1151.50">osr..</text></g><g><title>osrs_gph.exe`serde::ser::Serializer::collect_map(serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt;*, std::collections::hash::map::HashMap (8 samples, 3.32%)</title><rect x="57.2614%" y="1125" width="3.3195%" height="15" fill="rgb(63,177,177)" fg:x="138" fg:w="8"/><text x="57.5114%" y="1135.50">osr..</text></g><g><title>osrs_gph.exe`core::iter::traits::iterator::Iterator::try_for_each(std::collections::hash::map::Iter&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;*, serde::ser::Serializer::collect_map::closure_env$0&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt;,ref$&lt;alloc::string::String&gt;,ref$&lt;osrs_gph::data_types::PriceDatum&gt;,ref$&lt;std::collections::hash::map::HashMap (8 samples, 3.32%)</title><rect x="57.2614%" y="1109" width="3.3195%" height="15" fill="rgb(54,169,169)" fg:x="138" fg:w="8"/><text x="57.5114%" y="1119.50">osr..</text></g><g><title>osrs_gph.exe`core::iter::traits::iterator::Iterator::try_fold(std::collections::hash::map::Iter&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;tuple$&lt;ref$&lt;alloc::string::String&gt;,ref$&lt;osrs_gph::data_types::PriceDatum&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,serde_json::error::Error&gt; &gt;,serde::ser::Serializer::collect_map::closure_env$0&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt;,ref$&lt;alloc::string::String&gt;,ref$&lt;osrs_gph::data_types::PriceDatum&gt;,ref$&lt;std::collections::hash::map::HashMap (8 samples, 3.32%)</title><rect x="57.2614%" y="1093" width="3.3195%" height="15" fill="rgb(78,190,190)" fg:x="138" fg:w="8"/><text x="57.5114%" y="1103.50">osr..</text></g><g><title>osrs_gph.exe`core::iter::traits::iterator::Iterator::try_for_each::call::closure$0(core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;tuple$&lt;ref$&lt;alloc::string::String&gt;,ref$&lt;osrs_gph::data_types::PriceDatum&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,serde_json::error::Error&gt; &gt;,serde::ser::Serializer::collect_map::closure_env$0&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt;,ref$&lt;alloc::string::String&gt;,ref$&lt;osrs_gph::data_types::PriceDatum&gt;,ref$&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, tuple$&lt;ref$&lt;alloc::string::String&gt;,ref$ (8 samples, 3.32%)</title><rect x="57.2614%" y="1077" width="3.3195%" height="15" fill="rgb(96,207,207)" fg:x="138" fg:w="8"/><text x="57.5114%" y="1087.50">osr..</text></g><g><title>osrs_gph.exe`serde::ser::Serializer::collect_map::closure$0(serde::ser::Serializer::collect_map::closure_env$0&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt;,ref$&lt;alloc::string::String&gt;,ref$&lt;osrs_gph::data_types::PriceDatum&gt;,ref$&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt; &gt; &gt;*, tuple$&lt;ref$&lt;alloc::string::String&gt;,ref$ (8 samples, 3.32%)</title><rect x="57.2614%" y="1061" width="3.3195%" height="15" fill="rgb(100,211,211)" fg:x="138" fg:w="8"/><text x="57.5114%" y="1071.50">osr..</text></g><g><title>osrs_gph.exe`serde::ser::SerializeMap::serialize_entry(enum2$&lt;serde_json::ser::Compound&lt;std::io::buffered::bufwriter::BufWriter (8 samples, 3.32%)</title><rect x="57.2614%" y="1045" width="3.3195%" height="15" fill="rgb(92,204,204)" fg:x="138" fg:w="8"/><text x="57.5114%" y="1055.50">osr..</text></g><g><title>osrs_gph.exe`serde_json::ser::impl$11::serialize_str&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt;(serde_json::ser::MapKeySerializer&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt;, ref$ (3 samples, 1.24%)</title><rect x="59.3361%" y="1029" width="1.2448%" height="15" fill="rgb(56,171,171)" fg:x="143" fg:w="3"/><text x="59.5861%" y="1039.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::impl$3::serialize_str(serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt;*, ref$ (3 samples, 1.24%)</title><rect x="59.3361%" y="1013" width="1.2448%" height="15" fill="rgb(89,201,201)" fg:x="143" fg:w="3"/><text x="59.5861%" y="1023.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::format_escaped_str(std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;*, serde_json::ser::PrettyFormatter*, ref$ (3 samples, 1.24%)</title><rect x="59.3361%" y="997" width="1.2448%" height="15" fill="rgb(103,213,213)" fg:x="143" fg:w="3"/><text x="59.5861%" y="1007.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::format_escaped_str_contents(std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;*, serde_json::ser::PrettyFormatter*, ref$ (2 samples, 0.83%)</title><rect x="59.7510%" y="981" width="0.8299%" height="15" fill="rgb(92,204,204)" fg:x="144" fg:w="2"/><text x="60.0010%" y="991.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt; &gt;(std::io::buffered::bufwriter::BufWriter (1 samples, 0.41%)</title><rect x="60.5809%" y="1205" width="0.4149%" height="15" fill="rgb(103,213,213)" fg:x="146" fg:w="1"/><text x="60.8309%" y="1215.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufwriter::impl$9::drop(std::io::buffered::bufwriter::BufWriter (1 samples, 0.41%)</title><rect x="60.5809%" y="1189" width="0.4149%" height="15" fill="rgb(91,203,203)" fg:x="146" fg:w="1"/><text x="60.8309%" y="1199.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 0.41%)</title><rect x="60.5809%" y="1173" width="0.4149%" height="15" fill="rgb(97,208,208)" fg:x="146" fg:w="1"/><text x="60.8309%" y="1183.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;::flush_buf&lt;std::fs::File&gt; (1 samples, 0.41%)</title><rect x="60.5809%" y="1157" width="0.4149%" height="15" fill="rgb(100,211,211)" fg:x="146" fg:w="1"/><text x="60.8309%" y="1167.50"></text></g><g><title>osrs_gph.exe`std::fs::impl$9::write (1 samples, 0.41%)</title><rect x="60.5809%" y="1141" width="0.4149%" height="15" fill="rgb(84,196,196)" fg:x="146" fg:w="1"/><text x="60.8309%" y="1151.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::handle::Handle::synchronous_write (1 samples, 0.41%)</title><rect x="60.5809%" y="1125" width="0.4149%" height="15" fill="rgb(66,180,180)" fg:x="146" fg:w="1"/><text x="60.8309%" y="1135.50"></text></g><g><title>`0x7FFE5944F474 (1 samples, 0.41%)</title><rect x="60.5809%" y="1109" width="0.4149%" height="15" fill="rgb(218,218,65)" fg:x="146" fg:w="1"/><text x="60.8309%" y="1119.50"></text></g><g><title>osrs_gph.exe`osrs_gph::write_api_data(osrs_gph::logging::Logging&lt;osrs_gph::file_io::FileIO&lt;ref$ (12 samples, 4.98%)</title><rect x="56.4315%" y="1237" width="4.9793%" height="15" fill="rgb(62,176,176)" fg:x="136" fg:w="12"/><text x="56.6815%" y="1247.50">osrs_g..</text></g><g><title>osrs_gph.exe`osrs_gph::logging::Logging&lt;osrs_gph::file_io::FileIO&lt;ref$&lt;str$&gt; &gt; &gt;::write&lt;ref$&lt;str$&gt;,ref$&lt;osrs_gph::data_types::PriceDataType&gt;,serde_json::ser::PrettyFormatter&gt; (12 samples, 4.98%)</title><rect x="56.4315%" y="1221" width="4.9793%" height="15" fill="rgb(62,176,176)" fg:x="136" fg:w="12"/><text x="56.6815%" y="1231.50">osrs_g..</text></g><g><title>`0x7FFE56B240AF (1 samples, 0.41%)</title><rect x="60.9959%" y="1205" width="0.4149%" height="15" fill="rgb(214,214,64)" fg:x="147" fg:w="1"/><text x="61.2459%" y="1215.50"></text></g><g><title>`0x7FFE5944F554 (1 samples, 0.41%)</title><rect x="60.9959%" y="1189" width="0.4149%" height="15" fill="rgb(196,196,57)" fg:x="147" fg:w="1"/><text x="61.2459%" y="1199.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$28::next(hashbrown::raw::RawIter&lt;tuple$ (1 samples, 0.41%)</title><rect x="61.4108%" y="1077" width="0.4149%" height="15" fill="rgb(80,193,193)" fg:x="148" fg:w="1"/><text x="61.6608%" y="1087.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt; &gt;::next_impl (1 samples, 0.41%)</title><rect x="61.4108%" y="1061" width="0.4149%" height="15" fill="rgb(87,199,199)" fg:x="148" fg:w="1"/><text x="61.6608%" y="1071.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::bitmask::impl$3::next (1 samples, 0.41%)</title><rect x="61.4108%" y="1045" width="0.4149%" height="15" fill="rgb(56,170,170)" fg:x="148" fg:w="1"/><text x="61.6608%" y="1055.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.41%)</title><rect x="61.4108%" y="1029" width="0.4149%" height="15" fill="rgb(69,183,183)" fg:x="148" fg:w="1"/><text x="61.6608%" y="1039.50"></text></g><g><title>osrs_gph.exe`alloc::string::impl$6::clone (1 samples, 0.41%)</title><rect x="61.4108%" y="1013" width="0.4149%" height="15" fill="rgb(91,203,203)" fg:x="148" fg:w="1"/><text x="61.6608%" y="1023.50"></text></g><g><title>osrs_gph.exe`alloc::vec::impl$10::clone (1 samples, 0.41%)</title><rect x="61.4108%" y="997" width="0.4149%" height="15" fill="rgb(81,193,193)" fg:x="148" fg:w="1"/><text x="61.6608%" y="1007.50"></text></g><g><title>osrs_gph.exe`alloc::slice::impl$0::to_vec_in (1 samples, 0.41%)</title><rect x="61.4108%" y="981" width="0.4149%" height="15" fill="rgb(97,208,208)" fg:x="148" fg:w="1"/><text x="61.6608%" y="991.50"></text></g><g><title>osrs_gph.exe`alloc::slice::hack::to_vec (1 samples, 0.41%)</title><rect x="61.4108%" y="965" width="0.4149%" height="15" fill="rgb(57,171,171)" fg:x="148" fg:w="1"/><text x="61.6608%" y="975.50"></text></g><g><title>osrs_gph.exe`alloc::slice::hack::impl$1::to_vec (1 samples, 0.41%)</title><rect x="61.4108%" y="949" width="0.4149%" height="15" fill="rgb(58,172,172)" fg:x="148" fg:w="1"/><text x="61.6608%" y="959.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.41%)</title><rect x="61.4108%" y="933" width="0.4149%" height="15" fill="rgb(65,179,179)" fg:x="148" fg:w="1"/><text x="61.6608%" y="943.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.41%)</title><rect x="61.4108%" y="917" width="0.4149%" height="15" fill="rgb(102,213,213)" fg:x="148" fg:w="1"/><text x="61.6608%" y="927.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec::allocate_in (1 samples, 0.41%)</title><rect x="61.4108%" y="901" width="0.4149%" height="15" fill="rgb(103,214,214)" fg:x="148" fg:w="1"/><text x="61.6608%" y="911.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::impl$1::allocate (1 samples, 0.41%)</title><rect x="61.4108%" y="885" width="0.4149%" height="15" fill="rgb(67,181,181)" fg:x="148" fg:w="1"/><text x="61.6608%" y="895.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.41%)</title><rect x="61.4108%" y="869" width="0.4149%" height="15" fill="rgb(75,188,188)" fg:x="148" fg:w="1"/><text x="61.6608%" y="879.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::alloc (1 samples, 0.41%)</title><rect x="61.4108%" y="853" width="0.4149%" height="15" fill="rgb(79,192,192)" fg:x="148" fg:w="1"/><text x="61.6608%" y="863.50"></text></g><g><title>`0x7FFE593EC7BA (1 samples, 0.41%)</title><rect x="61.4108%" y="837" width="0.4149%" height="15" fill="rgb(188,188,55)" fg:x="148" fg:w="1"/><text x="61.6608%" y="847.50"></text></g><g><title>`0x7FFE593ED1AA (1 samples, 0.41%)</title><rect x="61.4108%" y="821" width="0.4149%" height="15" fill="rgb(191,191,56)" fg:x="148" fg:w="1"/><text x="61.6608%" y="831.50"></text></g><g><title>`0x7FFE5944ED08 (1 samples, 0.41%)</title><rect x="61.4108%" y="805" width="0.4149%" height="15" fill="rgb(195,195,57)" fg:x="148" fg:w="1"/><text x="61.6608%" y="815.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::impl$9::index(std::collections::hash::map::HashMap&lt;alloc::string::String,std::collections::hash::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt;,std::collections::hash::map::RandomState&gt;*, ref$ (2 samples, 0.83%)</title><rect x="61.4108%" y="1157" width="0.8299%" height="15" fill="rgb(60,174,174)" fg:x="148" fg:w="2"/><text x="61.6608%" y="1167.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::impl$0::clone(hashbrown::map::HashMap (2 samples, 0.83%)</title><rect x="61.4108%" y="1141" width="0.8299%" height="15" fill="rgb(102,212,212)" fg:x="148" fg:w="2"/><text x="61.6608%" y="1151.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$13::clone&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (2 samples, 0.83%)</title><rect x="61.4108%" y="1125" width="0.8299%" height="15" fill="rgb(94,205,205)" fg:x="148" fg:w="2"/><text x="61.6608%" y="1135.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$14::clone_from_spec(hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;*, hashbrown::raw::RawTable&lt;tuple$ (2 samples, 0.83%)</title><rect x="61.4108%" y="1109" width="0.8299%" height="15" fill="rgb(102,212,212)" fg:x="148" fg:w="2"/><text x="61.6608%" y="1119.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;::clone_from_impl(hashbrown::raw::RawTable&lt;tuple$ (2 samples, 0.83%)</title><rect x="61.4108%" y="1093" width="0.8299%" height="15" fill="rgb(61,175,175)" fg:x="148" fg:w="2"/><text x="61.6608%" y="1103.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt; &gt;::as_ref (1 samples, 0.41%)</title><rect x="61.8257%" y="1077" width="0.4149%" height="15" fill="rgb(97,208,208)" fg:x="149" fg:w="1"/><text x="62.0757%" y="1087.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt; &gt;::as_ptr (1 samples, 0.41%)</title><rect x="61.8257%" y="1061" width="0.4149%" height="15" fill="rgb(95,206,206)" fg:x="149" fg:w="1"/><text x="62.0757%" y="1071.50"></text></g><g><title>osrs_gph.exe`core::ptr::write(tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;*, tuple$ (1 samples, 0.41%)</title><rect x="61.8257%" y="1045" width="0.4149%" height="15" fill="rgb(60,174,174)" fg:x="149" fg:w="1"/><text x="62.0757%" y="1055.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;::insert_in_slot(unsigned long long, hashbrown::raw::InsertSlot, tuple$ (1 samples, 0.41%)</title><rect x="62.2407%" y="1109" width="0.4149%" height="15" fill="rgb(60,174,174)" fg:x="150" fg:w="1"/><text x="62.4907%" y="1119.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt; &gt;::write(tuple$ (1 samples, 0.41%)</title><rect x="62.2407%" y="1093" width="0.4149%" height="15" fill="rgb(76,189,189)" fg:x="150" fg:w="1"/><text x="62.4907%" y="1103.50"></text></g><g><title>osrs_gph.exe`core::ptr::mut_ptr::impl$0::write(tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;*, tuple$ (1 samples, 0.41%)</title><rect x="62.2407%" y="1077" width="0.4149%" height="15" fill="rgb(86,198,198)" fg:x="150" fg:w="1"/><text x="62.4907%" y="1087.50"></text></g><g><title>osrs_gph.exe`core::ptr::write(tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;*, tuple$ (1 samples, 0.41%)</title><rect x="62.2407%" y="1061" width="0.4149%" height="15" fill="rgb(102,213,213)" fg:x="150" fg:w="1"/><text x="62.4907%" y="1071.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::impl$46::next(std::collections::hash::map::IntoIter (2 samples, 0.83%)</title><rect x="62.2407%" y="1157" width="0.8299%" height="15" fill="rgb(81,194,194)" fg:x="150" fg:w="2"/><text x="62.4907%" y="1167.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::impl$67::next(hashbrown::map::IntoIter (2 samples, 0.83%)</title><rect x="62.2407%" y="1141" width="0.8299%" height="15" fill="rgb(107,217,217)" fg:x="150" fg:w="2"/><text x="62.4907%" y="1151.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState,alloc::alloc::Global&gt; (2 samples, 0.83%)</title><rect x="62.2407%" y="1125" width="0.8299%" height="15" fill="rgb(85,197,197)" fg:x="150" fg:w="2"/><text x="62.4907%" y="1135.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;alloc::string::String,alloc::string::String,osrs_gph::data_types::PriceDatum&gt;, hashbrown::map::make_hasher::closure_env$0 (1 samples, 0.41%)</title><rect x="62.6556%" y="1109" width="0.4149%" height="15" fill="rgb(59,173,173)" fg:x="151" fg:w="1"/><text x="62.9056%" y="1119.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;::reserve(unsigned long long, hashbrown::map::make_hasher::closure_env$0 (1 samples, 0.41%)</title><rect x="62.6556%" y="1093" width="0.4149%" height="15" fill="rgb(64,178,178)" fg:x="151" fg:w="1"/><text x="62.9056%" y="1103.50"></text></g><g><title>osrs_gph.exe`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;alloc::string::String&gt; &gt; (1 samples, 0.41%)</title><rect x="62.6556%" y="1077" width="0.4149%" height="15" fill="rgb(59,173,173)" fg:x="151" fg:w="1"/><text x="62.9056%" y="1087.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::impl$86::finish (1 samples, 0.41%)</title><rect x="62.6556%" y="1061" width="0.4149%" height="15" fill="rgb(61,175,175)" fg:x="151" fg:w="1"/><text x="62.9056%" y="1071.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$4::finish (1 samples, 0.41%)</title><rect x="62.6556%" y="1045" width="0.4149%" height="15" fill="rgb(61,175,175)" fg:x="151" fg:w="1"/><text x="62.9056%" y="1055.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (1 samples, 0.41%)</title><rect x="62.6556%" y="1029" width="0.4149%" height="15" fill="rgb(103,214,214)" fg:x="151" fg:w="1"/><text x="62.9056%" y="1039.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$8::d_rounds (1 samples, 0.41%)</title><rect x="62.6556%" y="1013" width="0.4149%" height="15" fill="rgb(93,205,205)" fg:x="151" fg:w="1"/><text x="62.9056%" y="1023.50"></text></g><g><title>osrs_gph.exe`core::num::impl$9::rotate_left (1 samples, 0.41%)</title><rect x="62.6556%" y="997" width="0.4149%" height="15" fill="rgb(67,180,180)" fg:x="151" fg:w="1"/><text x="62.9056%" y="1007.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner,hashbrown::raw::impl$12::prepare_resize::closure_env$0 (1 samples, 0.41%)</title><rect x="63.0705%" y="997" width="0.4149%" height="15" fill="rgb(82,194,194)" fg:x="152" fg:w="1"/><text x="63.3205%" y="1007.50"></text></g><g><title>osrs_gph.exe`hashbrown::scopeguard::impl$3::drop(hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner,hashbrown::raw::impl$12::prepare_resize::closure_env$0 (1 samples, 0.41%)</title><rect x="63.0705%" y="981" width="0.4149%" height="15" fill="rgb(66,180,180)" fg:x="152" fg:w="1"/><text x="63.3205%" y="991.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$12::prepare_resize::closure$0(hashbrown::raw::impl$12::prepare_resize::closure_env$0 (1 samples, 0.41%)</title><rect x="63.0705%" y="965" width="0.4149%" height="15" fill="rgb(51,166,166)" fg:x="152" fg:w="1"/><text x="63.3205%" y="975.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::free_buckets (1 samples, 0.41%)</title><rect x="63.0705%" y="949" width="0.4149%" height="15" fill="rgb(73,186,186)" fg:x="152" fg:w="1"/><text x="63.3205%" y="959.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.41%)</title><rect x="63.0705%" y="933" width="0.4149%" height="15" fill="rgb(90,202,202)" fg:x="152" fg:w="1"/><text x="63.3205%" y="943.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::dealloc (1 samples, 0.41%)</title><rect x="63.0705%" y="917" width="0.4149%" height="15" fill="rgb(64,178,178)" fg:x="152" fg:w="1"/><text x="63.3205%" y="927.50"></text></g><g><title>`0x7FFE593EAB11 (1 samples, 0.41%)</title><rect x="63.0705%" y="901" width="0.4149%" height="15" fill="rgb(214,214,64)" fg:x="152" fg:w="1"/><text x="63.3205%" y="911.50"></text></g><g><title>`0x7FFE593EBE44 (1 samples, 0.41%)</title><rect x="63.0705%" y="885" width="0.4149%" height="15" fill="rgb(218,218,65)" fg:x="152" fg:w="1"/><text x="63.3205%" y="895.50"></text></g><g><title>`0x7FFE593E9728 (1 samples, 0.41%)</title><rect x="63.0705%" y="869" width="0.4149%" height="15" fill="rgb(176,176,50)" fg:x="152" fg:w="1"/><text x="63.3205%" y="879.50"></text></g><g><title>`0x7FFE593F4B1B (1 samples, 0.41%)</title><rect x="63.0705%" y="853" width="0.4149%" height="15" fill="rgb(177,177,50)" fg:x="152" fg:w="1"/><text x="63.3205%" y="863.50"></text></g><g><title>`0x7FFE593F63FA (1 samples, 0.41%)</title><rect x="63.0705%" y="837" width="0.4149%" height="15" fill="rgb(179,179,51)" fg:x="152" fg:w="1"/><text x="63.3205%" y="847.50"></text></g><g><title>`0x7FFE593F64A8 (1 samples, 0.41%)</title><rect x="63.0705%" y="821" width="0.4149%" height="15" fill="rgb(176,176,50)" fg:x="152" fg:w="1"/><text x="63.3205%" y="831.50"></text></g><g><title>`0x7FFE593F65E6 (1 samples, 0.41%)</title><rect x="63.0705%" y="805" width="0.4149%" height="15" fill="rgb(179,179,51)" fg:x="152" fg:w="1"/><text x="63.3205%" y="815.50"></text></g><g><title>`0x7FFE5944F734 (1 samples, 0.41%)</title><rect x="63.0705%" y="789" width="0.4149%" height="15" fill="rgb(215,215,64)" fg:x="152" fg:w="1"/><text x="63.3205%" y="799.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt;::insert (2 samples, 0.83%)</title><rect x="63.0705%" y="1093" width="0.8299%" height="15" fill="rgb(76,188,188)" fg:x="152" fg:w="2"/><text x="63.3205%" y="1103.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState,alloc::alloc::Global&gt; (2 samples, 0.83%)</title><rect x="63.0705%" y="1077" width="0.8299%" height="15" fill="rgb(70,183,183)" fg:x="152" fg:w="2"/><text x="63.3205%" y="1087.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;alloc::string::String,alloc::string::String,osrs_gph::data_types::PriceDatum&gt;, hashbrown::map::make_hasher::closure_env$0 (2 samples, 0.83%)</title><rect x="63.0705%" y="1061" width="0.8299%" height="15" fill="rgb(54,169,169)" fg:x="152" fg:w="2"/><text x="63.3205%" y="1071.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt; &gt;(unsigned long long, hashbrown::map::make_hasher::closure_env$0 (2 samples, 0.83%)</title><rect x="63.0705%" y="1045" width="0.8299%" height="15" fill="rgb(65,179,179)" fg:x="152" fg:w="2"/><text x="63.3205%" y="1055.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::reserve_rehash_inner(alloc::alloc::Global*, unsigned long long, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;ref_mut$&lt;hashbrown::raw::RawTableInner&gt;,usize&gt;,assoc$&lt;Output,u64&gt; &gt; &gt; &gt;, hashbrown::raw::Fallibility, hashbrown::raw::TableLayout, enum2$&lt;core::option::Option&lt;void (*)(ptr_mut$ (2 samples, 0.83%)</title><rect x="63.0705%" y="1029" width="0.8299%" height="15" fill="rgb(74,187,187)" fg:x="152" fg:w="2"/><text x="63.3205%" y="1039.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::resize_inner(alloc::alloc::Global*, unsigned long long, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;ref_mut$&lt;hashbrown::raw::RawTableInner&gt;,usize&gt;,assoc$ (2 samples, 0.83%)</title><rect x="63.0705%" y="1013" width="0.8299%" height="15" fill="rgb(95,206,206)" fg:x="152" fg:w="2"/><text x="63.3205%" y="1023.50"></text></g><g><title>osrs_gph.exe`core::intrinsics::copy_nonoverlapping (1 samples, 0.41%)</title><rect x="63.4855%" y="997" width="0.4149%" height="15" fill="rgb(69,182,182)" fg:x="153" fg:w="1"/><text x="63.7355%" y="1007.50"></text></g><g><title>osrs_gph.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_object_colon (1 samples, 0.41%)</title><rect x="63.9004%" y="1045" width="0.4149%" height="15" fill="rgb(82,194,194)" fg:x="154" fg:w="1"/><text x="64.1504%" y="1055.50"></text></g><g><title>osrs_gph.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_whitespace (1 samples, 0.41%)</title><rect x="63.9004%" y="1029" width="0.4149%" height="15" fill="rgb(94,205,205)" fg:x="154" fg:w="1"/><text x="64.1504%" y="1039.50"></text></g><g><title>osrs_gph.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek (1 samples, 0.41%)</title><rect x="63.9004%" y="1013" width="0.4149%" height="15" fill="rgb(79,192,192)" fg:x="154" fg:w="1"/><text x="64.1504%" y="1023.50"></text></g><g><title>osrs_gph.exe`serde_json::read::impl$10::peek (1 samples, 0.41%)</title><rect x="63.9004%" y="997" width="0.4149%" height="15" fill="rgb(61,175,175)" fg:x="154" fg:w="1"/><text x="64.1504%" y="1007.50"></text></g><g><title>osrs_gph.exe`serde_json::read::impl$7::peek (1 samples, 0.41%)</title><rect x="63.9004%" y="981" width="0.4149%" height="15" fill="rgb(57,172,172)" fg:x="154" fg:w="1"/><text x="64.1504%" y="991.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;,alloc::alloc::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::string::String,enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="64.3154%" y="917" width="0.4149%" height="15" fill="rgb(69,182,182)" fg:x="155" fg:w="1"/><text x="64.5654%" y="927.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::string::String,enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="64.3154%" y="901" width="0.4149%" height="15" fill="rgb(109,219,219)" fg:x="155" fg:w="1"/><text x="64.5654%" y="911.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (1 samples, 0.41%)</title><rect x="64.3154%" y="885" width="0.4149%" height="15" fill="rgb(102,213,213)" fg:x="155" fg:w="1"/><text x="64.5654%" y="895.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::string::String,enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="64.3154%" y="869" width="0.4149%" height="15" fill="rgb(108,218,218)" fg:x="155" fg:w="1"/><text x="64.5654%" y="879.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;*, tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="64.3154%" y="853" width="0.4149%" height="15" fill="rgb(53,168,168)" fg:x="155" fg:w="1"/><text x="64.5654%" y="863.50"></text></g><g><title>osrs_gph.exe`hashbrown::impl$0::equivalent(ref$ (1 samples, 0.41%)</title><rect x="64.3154%" y="837" width="0.4149%" height="15" fill="rgb(76,189,189)" fg:x="155" fg:w="1"/><text x="64.5654%" y="847.50"></text></g><g><title>osrs_gph.exe`core::cmp::impls::impl$9::eq(ref$&lt;str$&gt;*, ref$ (1 samples, 0.41%)</title><rect x="64.3154%" y="821" width="0.4149%" height="15" fill="rgb(77,189,189)" fg:x="155" fg:w="1"/><text x="64.5654%" y="831.50"></text></g><g><title>osrs_gph.exe`core::str::traits::impl$1::eq(ref$&lt;str$&gt;, ref$ (1 samples, 0.41%)</title><rect x="64.3154%" y="805" width="0.4149%" height="15" fill="rgb(107,217,217)" fg:x="155" fg:w="1"/><text x="64.5654%" y="815.50"></text></g><g><title>osrs_gph.exe`core::cmp::impls::impl$9::eq(ref$&lt;slice2$&lt;u8&gt; &gt;*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="64.3154%" y="789" width="0.4149%" height="15" fill="rgb(91,202,202)" fg:x="155" fg:w="1"/><text x="64.5654%" y="799.50"></text></g><g><title>osrs_gph.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="64.3154%" y="773" width="0.4149%" height="15" fill="rgb(52,167,167)" fg:x="155" fg:w="1"/><text x="64.5654%" y="783.50"></text></g><g><title>osrs_gph.exe`core::slice::cmp::impl$5::equal(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="64.3154%" y="757" width="0.4149%" height="15" fill="rgb(69,182,182)" fg:x="155" fg:w="1"/><text x="64.5654%" y="767.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="64.7303%" y="789" width="0.4149%" height="15" fill="rgb(70,184,184)" fg:x="156" fg:w="1"/><text x="64.9803%" y="799.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::impl$9::index(std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState&gt;*, ref$ (3 samples, 1.24%)</title><rect x="64.3154%" y="981" width="1.2448%" height="15" fill="rgb(52,167,167)" fg:x="155" fg:w="3"/><text x="64.5654%" y="991.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState&gt;::get(ref$ (3 samples, 1.24%)</title><rect x="64.3154%" y="965" width="1.2448%" height="15" fill="rgb(85,197,197)" fg:x="155" fg:w="3"/><text x="64.5654%" y="975.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::get(ref$ (3 samples, 1.24%)</title><rect x="64.3154%" y="949" width="1.2448%" height="15" fill="rgb(83,195,195)" fg:x="155" fg:w="3"/><text x="64.5654%" y="959.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::get_inner(ref$ (3 samples, 1.24%)</title><rect x="64.3154%" y="933" width="1.2448%" height="15" fill="rgb(61,175,175)" fg:x="155" fg:w="3"/><text x="64.5654%" y="943.50"></text></g><g><title>osrs_gph.exe`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;str$&gt; &gt;(std::collections::hash::map::RandomState*, ref$ (2 samples, 0.83%)</title><rect x="64.7303%" y="917" width="0.8299%" height="15" fill="rgb(64,178,178)" fg:x="156" fg:w="2"/><text x="64.9803%" y="927.50"></text></g><g><title>osrs_gph.exe`core::hash::impls::impl$5::hash(ref$ (2 samples, 0.83%)</title><rect x="64.7303%" y="901" width="0.8299%" height="15" fill="rgb(60,174,174)" fg:x="156" fg:w="2"/><text x="64.9803%" y="911.50"></text></g><g><title>osrs_gph.exe`core::hash::impls::impl$2::hash(ref$ (2 samples, 0.83%)</title><rect x="64.7303%" y="885" width="0.8299%" height="15" fill="rgb(70,183,183)" fg:x="156" fg:w="2"/><text x="64.9803%" y="895.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::impl$86::write_str(std::collections::hash::map::DefaultHasher*, ref$ (2 samples, 0.83%)</title><rect x="64.7303%" y="869" width="0.8299%" height="15" fill="rgb(77,190,190)" fg:x="156" fg:w="2"/><text x="64.9803%" y="879.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$4::write_str(core::hash::sip::SipHasher13*, ref$ (2 samples, 0.83%)</title><rect x="64.7303%" y="853" width="0.8299%" height="15" fill="rgb(84,196,196)" fg:x="156" fg:w="2"/><text x="64.9803%" y="863.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$5::write_str(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$ (2 samples, 0.83%)</title><rect x="64.7303%" y="837" width="0.8299%" height="15" fill="rgb(70,183,183)" fg:x="156" fg:w="2"/><text x="64.9803%" y="847.50"></text></g><g><title>osrs_gph.exe`core::hash::Hasher::write_u8(core::hash::sip::Hasher (2 samples, 0.83%)</title><rect x="64.7303%" y="821" width="0.8299%" height="15" fill="rgb(85,197,197)" fg:x="156" fg:w="2"/><text x="64.9803%" y="831.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (2 samples, 0.83%)</title><rect x="64.7303%" y="805" width="0.8299%" height="15" fill="rgb(78,191,191)" fg:x="156" fg:w="2"/><text x="64.9803%" y="815.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (1 samples, 0.41%)</title><rect x="65.5602%" y="933" width="0.4149%" height="15" fill="rgb(88,200,200)" fg:x="158" fg:w="1"/><text x="65.8102%" y="943.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::sse2::Group::match_empty (1 samples, 0.41%)</title><rect x="65.5602%" y="917" width="0.4149%" height="15" fill="rgb(64,178,178)" fg:x="158" fg:w="1"/><text x="65.8102%" y="927.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::sse2::Group::match_byte (1 samples, 0.41%)</title><rect x="65.5602%" y="901" width="0.4149%" height="15" fill="rgb(102,213,213)" fg:x="158" fg:w="1"/><text x="65.8102%" y="911.50"></text></g><g><title>osrs_gph.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.41%)</title><rect x="65.5602%" y="885" width="0.4149%" height="15" fill="rgb(92,203,203)" fg:x="158" fg:w="1"/><text x="65.8102%" y="895.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;(alloc::string::String, enum2$&lt;core::option::Option (2 samples, 0.83%)</title><rect x="65.5602%" y="965" width="0.8299%" height="15" fill="rgb(88,199,199)" fg:x="158" fg:w="2"/><text x="65.8102%" y="975.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;alloc::string::String,alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;, hashbrown::map::make_hasher::closure_env$0&lt;alloc::string::String,enum2$&lt;core::option::Option (2 samples, 0.83%)</title><rect x="65.5602%" y="949" width="0.8299%" height="15" fill="rgb(62,176,176)" fg:x="158" fg:w="2"/><text x="65.8102%" y="959.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;,alloc::alloc::Global&gt;::reserve(unsigned long long, hashbrown::map::make_hasher::closure_env$0&lt;alloc::string::String,enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="65.9751%" y="933" width="0.4149%" height="15" fill="rgb(85,197,197)" fg:x="159" fg:w="1"/><text x="66.2251%" y="943.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState&gt;::insert(alloc::string::String, enum2$&lt;core::option::Option (3 samples, 1.24%)</title><rect x="65.5602%" y="981" width="1.2448%" height="15" fill="rgb(109,219,219)" fg:x="158" fg:w="3"/><text x="65.8102%" y="991.50"></text></g><g><title>osrs_gph.exe`serde::de::impls::impl$6::visit_str(serde::de::impls::StringVisitor, ref$ (1 samples, 0.41%)</title><rect x="66.8050%" y="869" width="0.4149%" height="15" fill="rgb(89,201,201)" fg:x="161" fg:w="1"/><text x="67.0550%" y="879.50"></text></g><g><title>osrs_gph.exe`alloc::str::impl$4::to_owned(ref$ (1 samples, 0.41%)</title><rect x="66.8050%" y="853" width="0.4149%" height="15" fill="rgb(68,181,181)" fg:x="161" fg:w="1"/><text x="67.0550%" y="863.50"></text></g><g><title>osrs_gph.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="66.8050%" y="837" width="0.4149%" height="15" fill="rgb(86,198,198)" fg:x="161" fg:w="1"/><text x="67.0550%" y="847.50"></text></g><g><title>osrs_gph.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="66.8050%" y="821" width="0.4149%" height="15" fill="rgb(64,178,178)" fg:x="161" fg:w="1"/><text x="67.0550%" y="831.50"></text></g><g><title>osrs_gph.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="66.8050%" y="805" width="0.4149%" height="15" fill="rgb(84,196,196)" fg:x="161" fg:w="1"/><text x="67.0550%" y="815.50"></text></g><g><title>osrs_gph.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="66.8050%" y="789" width="0.4149%" height="15" fill="rgb(78,190,190)" fg:x="161" fg:w="1"/><text x="67.0550%" y="799.50"></text></g><g><title>osrs_gph.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="66.8050%" y="773" width="0.4149%" height="15" fill="rgb(56,170,170)" fg:x="161" fg:w="1"/><text x="67.0550%" y="783.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.41%)</title><rect x="66.8050%" y="757" width="0.4149%" height="15" fill="rgb(86,198,198)" fg:x="161" fg:w="1"/><text x="67.0550%" y="767.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.41%)</title><rect x="66.8050%" y="741" width="0.4149%" height="15" fill="rgb(71,184,184)" fg:x="161" fg:w="1"/><text x="67.0550%" y="751.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::allocate_in (1 samples, 0.41%)</title><rect x="66.8050%" y="725" width="0.4149%" height="15" fill="rgb(77,189,189)" fg:x="161" fg:w="1"/><text x="67.0550%" y="735.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::impl$1::allocate (1 samples, 0.41%)</title><rect x="66.8050%" y="709" width="0.4149%" height="15" fill="rgb(99,210,210)" fg:x="161" fg:w="1"/><text x="67.0550%" y="719.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.41%)</title><rect x="66.8050%" y="693" width="0.4149%" height="15" fill="rgb(86,198,198)" fg:x="161" fg:w="1"/><text x="67.0550%" y="703.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::alloc (1 samples, 0.41%)</title><rect x="66.8050%" y="677" width="0.4149%" height="15" fill="rgb(91,202,202)" fg:x="161" fg:w="1"/><text x="67.0550%" y="687.50"></text></g><g><title>`0x7FFE593EC7BA (1 samples, 0.41%)</title><rect x="66.8050%" y="661" width="0.4149%" height="15" fill="rgb(228,228,69)" fg:x="161" fg:w="1"/><text x="67.0550%" y="671.50"></text></g><g><title>`0x7FFE593ED1AA (1 samples, 0.41%)</title><rect x="66.8050%" y="645" width="0.4149%" height="15" fill="rgb(188,188,54)" fg:x="161" fg:w="1"/><text x="67.0550%" y="655.50"></text></g><g><title>`0x7FFE5944ECEE (1 samples, 0.41%)</title><rect x="66.8050%" y="629" width="0.4149%" height="15" fill="rgb(186,186,54)" fg:x="161" fg:w="1"/><text x="67.0550%" y="639.50"></text></g><g><title>osrs_gph.exe`serde_json::de::impl$11::next_key_seed&lt;serde_json::read::StrRead,core::marker::PhantomData&lt;alloc::string::String&gt; &gt;(serde_json::de::MapAccess&lt;serde_json::read::StrRead&gt;*, core::marker::PhantomData (2 samples, 0.83%)</title><rect x="66.8050%" y="949" width="0.8299%" height="15" fill="rgb(78,191,191)" fg:x="161" fg:w="2"/><text x="67.0550%" y="959.50"></text></g><g><title>osrs_gph.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;alloc::string::String&gt;, serde_json::de::MapKey (2 samples, 0.83%)</title><rect x="66.8050%" y="933" width="0.8299%" height="15" fill="rgb(90,202,202)" fg:x="161" fg:w="2"/><text x="67.0550%" y="943.50"></text></g><g><title>osrs_gph.exe`serde::de::impls::impl$8::deserialize(serde_json::de::MapKey (2 samples, 0.83%)</title><rect x="66.8050%" y="917" width="0.8299%" height="15" fill="rgb(68,181,181)" fg:x="161" fg:w="2"/><text x="67.0550%" y="927.50"></text></g><g><title>osrs_gph.exe`serde_json::de::impl$19::deserialize_string(serde_json::de::MapKey (2 samples, 0.83%)</title><rect x="66.8050%" y="901" width="0.8299%" height="15" fill="rgb(78,190,190)" fg:x="161" fg:w="2"/><text x="67.0550%" y="911.50"></text></g><g><title>osrs_gph.exe`serde_json::de::impl$19::deserialize_any(serde_json::de::MapKey (2 samples, 0.83%)</title><rect x="66.8050%" y="885" width="0.8299%" height="15" fill="rgb(84,196,196)" fg:x="161" fg:w="2"/><text x="67.0550%" y="895.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::clear (1 samples, 0.41%)</title><rect x="67.2199%" y="869" width="0.4149%" height="15" fill="rgb(69,182,182)" fg:x="162" fg:w="1"/><text x="67.4699%" y="879.50"></text></g><g><title>osrs_gph.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_whitespace (1 samples, 0.41%)</title><rect x="67.6349%" y="917" width="0.4149%" height="15" fill="rgb(65,178,178)" fg:x="163" fg:w="1"/><text x="67.8849%" y="927.50"></text></g><g><title>osrs_gph.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek_or_null (1 samples, 0.41%)</title><rect x="68.0498%" y="837" width="0.4149%" height="15" fill="rgb(108,218,218)" fg:x="164" fg:w="1"/><text x="68.2998%" y="847.50"></text></g><g><title>osrs_gph.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek (1 samples, 0.41%)</title><rect x="68.0498%" y="821" width="0.4149%" height="15" fill="rgb(60,174,174)" fg:x="164" fg:w="1"/><text x="68.2998%" y="831.50"></text></g><g><title>osrs_gph.exe`serde_json::read::impl$10::peek (1 samples, 0.41%)</title><rect x="68.0498%" y="805" width="0.4149%" height="15" fill="rgb(68,182,182)" fg:x="164" fg:w="1"/><text x="68.2998%" y="815.50"></text></g><g><title>osrs_gph.exe`serde_json::read::impl$7::peek (1 samples, 0.41%)</title><rect x="68.0498%" y="789" width="0.4149%" height="15" fill="rgb(100,211,211)" fg:x="164" fg:w="1"/><text x="68.2998%" y="799.50"></text></g><g><title>osrs_gph.exe`serde::de::impls::impl$16::deserialize&lt;i32,ref_mut$&lt;serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt; &gt; &gt;(serde_json::de::Deserializer (4 samples, 1.66%)</title><rect x="67.6349%" y="949" width="1.6598%" height="15" fill="rgb(60,174,174)" fg:x="163" fg:w="4"/><text x="67.8849%" y="959.50"></text></g><g><title>osrs_gph.exe`serde_json::de::impl$7::deserialize_option(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, serde::de::impls::OptionVisitor (4 samples, 1.66%)</title><rect x="67.6349%" y="933" width="1.6598%" height="15" fill="rgb(72,185,185)" fg:x="163" fg:w="4"/><text x="67.8849%" y="943.50"></text></g><g><title>osrs_gph.exe`serde::de::impls::impl$15::visit_some(serde::de::impls::OptionVisitor&lt;i32&gt;, serde_json::de::Deserializer (3 samples, 1.24%)</title><rect x="68.0498%" y="917" width="1.2448%" height="15" fill="rgb(68,181,181)" fg:x="164" fg:w="3"/><text x="68.2998%" y="927.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;i32,serde_json::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;i32,serde_json::error::Error&gt; &gt;, enum2$&lt;core::option::Option&lt;i32&gt; &gt; (*) (3 samples, 1.24%)</title><rect x="68.0498%" y="901" width="1.2448%" height="15" fill="rgb(101,211,211)" fg:x="164" fg:w="3"/><text x="68.2998%" y="911.50"></text></g><g><title>osrs_gph.exe`serde_json::de::impl$7::deserialize_i32&lt;serde_json::read::StrRead,serde::de::impls::impl$49::deserialize::PrimitiveVisitor&gt;(serde_json::de::Deserializer (3 samples, 1.24%)</title><rect x="68.0498%" y="885" width="1.2448%" height="15" fill="rgb(61,175,175)" fg:x="164" fg:w="3"/><text x="68.2998%" y="895.50"></text></g><g><title>osrs_gph.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::deserialize_number (3 samples, 1.24%)</title><rect x="68.0498%" y="869" width="1.2448%" height="15" fill="rgb(67,180,180)" fg:x="164" fg:w="3"/><text x="68.2998%" y="879.50"></text></g><g><title>osrs_gph.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_integer&lt;serde_json::read::StrRead&gt; (3 samples, 1.24%)</title><rect x="68.0498%" y="853" width="1.2448%" height="15" fill="rgb(84,196,196)" fg:x="164" fg:w="3"/><text x="68.2998%" y="863.50"></text></g><g><title>osrs_gph.exe`serde::de::MapAccess::next_entry(serde_json::de::MapAccess (7 samples, 2.90%)</title><rect x="66.8050%" y="981" width="2.9046%" height="15" fill="rgb(102,213,213)" fg:x="161" fg:w="7"/><text x="67.0550%" y="991.50">os..</text></g><g><title>osrs_gph.exe`serde::de::MapAccess::next_entry_seed(serde_json::de::MapAccess&lt;serde_json::read::StrRead&gt;*, core::marker::PhantomData&lt;alloc::string::String&gt;, core::marker::PhantomData&lt;enum2$&lt;core::option::Option (7 samples, 2.90%)</title><rect x="66.8050%" y="965" width="2.9046%" height="15" fill="rgb(75,188,188)" fg:x="161" fg:w="7"/><text x="67.0550%" y="975.50">os..</text></g><g><title>`0x7FFE5945C0A3 (1 samples, 0.41%)</title><rect x="69.7095%" y="725" width="0.4149%" height="15" fill="rgb(211,211,63)" fg:x="168" fg:w="1"/><text x="69.9595%" y="735.50"></text></g><g><title>`0x7FFE5945BFB3 (1 samples, 0.41%)</title><rect x="70.1245%" y="725" width="0.4149%" height="15" fill="rgb(198,198,58)" fg:x="169" fg:w="1"/><text x="70.3745%" y="735.50"></text></g><g><title>osrs_gph.exe`serde_json::de::impl$11::next_value_seed(serde_json::de::MapAccess&lt;serde_json::read::StrRead&gt;*, core::marker::PhantomData (17 samples, 7.05%)</title><rect x="63.9004%" y="1061" width="7.0539%" height="15" fill="rgb(64,178,178)" fg:x="154" fg:w="17"/><text x="64.1504%" y="1071.50">osrs_gph...</text></g><g><title>osrs_gph.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;osrs_gph::data_types::PriceDatum&gt;, serde_json::de::Deserializer (16 samples, 6.64%)</title><rect x="64.3154%" y="1045" width="6.6390%" height="15" fill="rgb(65,179,179)" fg:x="155" fg:w="16"/><text x="64.5654%" y="1055.50">osrs_gph...</text></g><g><title>osrs_gph.exe`osrs_gph::data_types::impl$0::deserialize(serde_json::de::Deserializer (16 samples, 6.64%)</title><rect x="64.3154%" y="1029" width="6.6390%" height="15" fill="rgb(63,177,177)" fg:x="155" fg:w="16"/><text x="64.5654%" y="1039.50">osrs_gph...</text></g><g><title>osrs_gph.exe`serde_json::de::impl$7::deserialize_any(serde_json::de::Deserializer (16 samples, 6.64%)</title><rect x="64.3154%" y="1013" width="6.6390%" height="15" fill="rgb(93,204,204)" fg:x="155" fg:w="16"/><text x="64.5654%" y="1023.50">osrs_gph...</text></g><g><title>osrs_gph.exe`osrs_gph::data_types::impl$0::deserialize::impl$0::visit_map&lt;serde_json::de::MapAccess&lt;serde_json::read::StrRead&gt; &gt;(osrs_gph::data_types::impl$0::deserialize::PriceDatumVisitor, serde_json::de::MapAccess (16 samples, 6.64%)</title><rect x="64.3154%" y="997" width="6.6390%" height="15" fill="rgb(83,195,195)" fg:x="155" fg:w="16"/><text x="64.5654%" y="1007.50">osrs_gph...</text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option (3 samples, 1.24%)</title><rect x="69.7095%" y="981" width="1.2448%" height="15" fill="rgb(77,189,189)" fg:x="168" fg:w="3"/><text x="69.9595%" y="991.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(hashbrown::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option (3 samples, 1.24%)</title><rect x="69.7095%" y="965" width="1.2448%" height="15" fill="rgb(104,215,215)" fg:x="168" fg:w="3"/><text x="69.9595%" y="975.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option (3 samples, 1.24%)</title><rect x="69.7095%" y="949" width="1.2448%" height="15" fill="rgb(64,178,178)" fg:x="168" fg:w="3"/><text x="69.9595%" y="959.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$18::drop(hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option (3 samples, 1.24%)</title><rect x="69.7095%" y="933" width="1.2448%" height="15" fill="rgb(89,201,201)" fg:x="168" fg:w="3"/><text x="69.9595%" y="943.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::drop_inner_table (3 samples, 1.24%)</title><rect x="69.7095%" y="917" width="1.2448%" height="15" fill="rgb(62,176,176)" fg:x="168" fg:w="3"/><text x="69.9595%" y="927.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::drop_elements (3 samples, 1.24%)</title><rect x="69.7095%" y="901" width="1.2448%" height="15" fill="rgb(54,169,169)" fg:x="168" fg:w="3"/><text x="69.9595%" y="911.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt; &gt;::drop (3 samples, 1.24%)</title><rect x="69.7095%" y="885" width="1.2448%" height="15" fill="rgb(96,207,207)" fg:x="168" fg:w="3"/><text x="69.9595%" y="895.50"></text></g><g><title>osrs_gph.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option (3 samples, 1.24%)</title><rect x="69.7095%" y="869" width="1.2448%" height="15" fill="rgb(70,183,183)" fg:x="168" fg:w="3"/><text x="69.9595%" y="879.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option (3 samples, 1.24%)</title><rect x="69.7095%" y="853" width="1.2448%" height="15" fill="rgb(74,187,187)" fg:x="168" fg:w="3"/><text x="69.9595%" y="863.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (3 samples, 1.24%)</title><rect x="69.7095%" y="837" width="1.2448%" height="15" fill="rgb(90,201,201)" fg:x="168" fg:w="3"/><text x="69.9595%" y="847.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::vec::Vec (3 samples, 1.24%)</title><rect x="69.7095%" y="821" width="1.2448%" height="15" fill="rgb(53,167,167)" fg:x="168" fg:w="3"/><text x="69.9595%" y="831.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (3 samples, 1.24%)</title><rect x="69.7095%" y="805" width="1.2448%" height="15" fill="rgb(93,204,204)" fg:x="168" fg:w="3"/><text x="69.9595%" y="815.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (3 samples, 1.24%)</title><rect x="69.7095%" y="789" width="1.2448%" height="15" fill="rgb(101,212,212)" fg:x="168" fg:w="3"/><text x="69.9595%" y="799.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (3 samples, 1.24%)</title><rect x="69.7095%" y="773" width="1.2448%" height="15" fill="rgb(68,181,181)" fg:x="168" fg:w="3"/><text x="69.9595%" y="783.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::dealloc (3 samples, 1.24%)</title><rect x="69.7095%" y="757" width="1.2448%" height="15" fill="rgb(57,172,172)" fg:x="168" fg:w="3"/><text x="69.9595%" y="767.50"></text></g><g><title>`0x7FFE593EAB11 (3 samples, 1.24%)</title><rect x="69.7095%" y="741" width="1.2448%" height="15" fill="rgb(227,227,69)" fg:x="168" fg:w="3"/><text x="69.9595%" y="751.50"></text></g><g><title>`0x7FFE593EBE5F (1 samples, 0.41%)</title><rect x="70.5394%" y="725" width="0.4149%" height="15" fill="rgb(190,190,55)" fg:x="170" fg:w="1"/><text x="70.7894%" y="735.50"></text></g><g><title>`0x7FFE593EC75A (1 samples, 0.41%)</title><rect x="70.9544%" y="773" width="0.4149%" height="15" fill="rgb(204,204,60)" fg:x="171" fg:w="1"/><text x="71.2044%" y="783.50"></text></g><g><title>`0x7FFE593EC74F (1 samples, 0.41%)</title><rect x="71.3693%" y="773" width="0.4149%" height="15" fill="rgb(212,212,63)" fg:x="172" fg:w="1"/><text x="71.6193%" y="783.50"></text></g><g><title>osrs_gph.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;alloc::string::String&gt;, serde_json::de::MapKey (3 samples, 1.24%)</title><rect x="70.9544%" y="1045" width="1.2448%" height="15" fill="rgb(57,171,171)" fg:x="171" fg:w="3"/><text x="71.2044%" y="1055.50"></text></g><g><title>osrs_gph.exe`serde::de::impls::impl$8::deserialize(serde_json::de::MapKey (3 samples, 1.24%)</title><rect x="70.9544%" y="1029" width="1.2448%" height="15" fill="rgb(60,174,174)" fg:x="171" fg:w="3"/><text x="71.2044%" y="1039.50"></text></g><g><title>osrs_gph.exe`serde_json::de::impl$19::deserialize_string(serde_json::de::MapKey (3 samples, 1.24%)</title><rect x="70.9544%" y="1013" width="1.2448%" height="15" fill="rgb(74,187,187)" fg:x="171" fg:w="3"/><text x="71.2044%" y="1023.50"></text></g><g><title>osrs_gph.exe`serde_json::de::impl$19::deserialize_any(serde_json::de::MapKey (3 samples, 1.24%)</title><rect x="70.9544%" y="997" width="1.2448%" height="15" fill="rgb(91,203,203)" fg:x="171" fg:w="3"/><text x="71.2044%" y="1007.50"></text></g><g><title>osrs_gph.exe`serde::de::impls::impl$6::visit_str(serde::de::impls::StringVisitor, ref$ (3 samples, 1.24%)</title><rect x="70.9544%" y="981" width="1.2448%" height="15" fill="rgb(92,204,204)" fg:x="171" fg:w="3"/><text x="71.2044%" y="991.50"></text></g><g><title>osrs_gph.exe`alloc::str::impl$4::to_owned(ref$ (3 samples, 1.24%)</title><rect x="70.9544%" y="965" width="1.2448%" height="15" fill="rgb(73,186,186)" fg:x="171" fg:w="3"/><text x="71.2044%" y="975.50"></text></g><g><title>osrs_gph.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (3 samples, 1.24%)</title><rect x="70.9544%" y="949" width="1.2448%" height="15" fill="rgb(93,205,205)" fg:x="171" fg:w="3"/><text x="71.2044%" y="959.50"></text></g><g><title>osrs_gph.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (3 samples, 1.24%)</title><rect x="70.9544%" y="933" width="1.2448%" height="15" fill="rgb(71,184,184)" fg:x="171" fg:w="3"/><text x="71.2044%" y="943.50"></text></g><g><title>osrs_gph.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (3 samples, 1.24%)</title><rect x="70.9544%" y="917" width="1.2448%" height="15" fill="rgb(79,192,192)" fg:x="171" fg:w="3"/><text x="71.2044%" y="927.50"></text></g><g><title>osrs_gph.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (3 samples, 1.24%)</title><rect x="70.9544%" y="901" width="1.2448%" height="15" fill="rgb(63,177,177)" fg:x="171" fg:w="3"/><text x="71.2044%" y="911.50"></text></g><g><title>osrs_gph.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (3 samples, 1.24%)</title><rect x="70.9544%" y="885" width="1.2448%" height="15" fill="rgb(67,181,181)" fg:x="171" fg:w="3"/><text x="71.2044%" y="895.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 1.24%)</title><rect x="70.9544%" y="869" width="1.2448%" height="15" fill="rgb(97,208,208)" fg:x="171" fg:w="3"/><text x="71.2044%" y="879.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 1.24%)</title><rect x="70.9544%" y="853" width="1.2448%" height="15" fill="rgb(84,196,196)" fg:x="171" fg:w="3"/><text x="71.2044%" y="863.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::allocate_in (3 samples, 1.24%)</title><rect x="70.9544%" y="837" width="1.2448%" height="15" fill="rgb(78,191,191)" fg:x="171" fg:w="3"/><text x="71.2044%" y="847.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::impl$1::allocate (3 samples, 1.24%)</title><rect x="70.9544%" y="821" width="1.2448%" height="15" fill="rgb(63,177,177)" fg:x="171" fg:w="3"/><text x="71.2044%" y="831.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::Global::alloc_impl (3 samples, 1.24%)</title><rect x="70.9544%" y="805" width="1.2448%" height="15" fill="rgb(64,178,178)" fg:x="171" fg:w="3"/><text x="71.2044%" y="815.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::alloc (3 samples, 1.24%)</title><rect x="70.9544%" y="789" width="1.2448%" height="15" fill="rgb(101,211,211)" fg:x="171" fg:w="3"/><text x="71.2044%" y="799.50"></text></g><g><title>`0x7FFE593EC6D2 (1 samples, 0.41%)</title><rect x="71.7842%" y="773" width="0.4149%" height="15" fill="rgb(208,208,62)" fg:x="173" fg:w="1"/><text x="72.0342%" y="783.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,serde_json::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;alloc::string::String,serde_json::error::Error&gt; &gt;, enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt; (*) (1 samples, 0.41%)</title><rect x="72.1992%" y="1045" width="0.4149%" height="15" fill="rgb(79,191,191)" fg:x="174" fg:w="1"/><text x="72.4492%" y="1055.50"></text></g><g><title>`0x7FFE37DA1330 (1 samples, 0.41%)</title><rect x="72.1992%" y="1029" width="0.4149%" height="15" fill="rgb(221,221,66)" fg:x="174" fg:w="1"/><text x="72.4492%" y="1039.50"></text></g><g><title>osrs_gph.exe`serde::de::MapAccess::next_entry(serde_json::de::MapAccess (24 samples, 9.96%)</title><rect x="63.0705%" y="1157" width="9.9585%" height="15" fill="rgb(68,181,181)" fg:x="152" fg:w="24"/><text x="63.3205%" y="1167.50">osrs_gph.exe`s..</text></g><g><title>osrs_gph.exe`serde::de::MapAccess::next_entry_seed(serde_json::de::MapAccess&lt;serde_json::read::StrRead&gt;*, core::marker::PhantomData&lt;alloc::string::String&gt;, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (24 samples, 9.96%)</title><rect x="63.0705%" y="1141" width="9.9585%" height="15" fill="rgb(83,195,195)" fg:x="152" fg:w="24"/><text x="63.3205%" y="1151.50">osrs_gph.exe`s..</text></g><g><title>osrs_gph.exe`serde_json::de::impl$7::deserialize_map&lt;serde_json::read::StrRead,serde::de::impls::impl$190::deserialize::MapVisitor&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt; &gt;(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, serde::de::impls::impl$190::deserialize::MapVisitor (24 samples, 9.96%)</title><rect x="63.0705%" y="1125" width="9.9585%" height="15" fill="rgb(96,208,208)" fg:x="152" fg:w="24"/><text x="63.3205%" y="1135.50">osrs_gph.exe`s..</text></g><g><title>osrs_gph.exe`serde::de::impls::impl$190::deserialize::impl$0::visit_map(serde::de::impls::impl$190::deserialize::MapVisitor&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt;, serde_json::de::MapAccess (24 samples, 9.96%)</title><rect x="63.0705%" y="1109" width="9.9585%" height="15" fill="rgb(68,182,182)" fg:x="152" fg:w="24"/><text x="63.3205%" y="1119.50">osrs_gph.exe`s..</text></g><g><title>osrs_gph.exe`serde::de::MapAccess::next_entry(serde_json::de::MapAccess (22 samples, 9.13%)</title><rect x="63.9004%" y="1093" width="9.1286%" height="15" fill="rgb(105,215,215)" fg:x="154" fg:w="22"/><text x="64.1504%" y="1103.50">osrs_gph.exe`..</text></g><g><title>osrs_gph.exe`serde::de::MapAccess::next_entry_seed(serde_json::de::MapAccess&lt;serde_json::read::StrRead&gt;*, core::marker::PhantomData&lt;alloc::string::String&gt;, core::marker::PhantomData (22 samples, 9.13%)</title><rect x="63.9004%" y="1077" width="9.1286%" height="15" fill="rgb(88,200,200)" fg:x="154" fg:w="22"/><text x="64.1504%" y="1087.50">osrs_gph.exe`..</text></g><g><title>osrs_gph.exe`serde_json::de::impl$11::next_key_seed&lt;serde_json::read::StrRead,core::marker::PhantomData&lt;alloc::string::String&gt; &gt;(serde_json::de::MapAccess&lt;serde_json::read::StrRead&gt;*, core::marker::PhantomData (5 samples, 2.07%)</title><rect x="70.9544%" y="1061" width="2.0747%" height="15" fill="rgb(83,195,195)" fg:x="171" fg:w="5"/><text x="71.2044%" y="1071.50">o..</text></g><g><title>osrs_gph.exe`serde_json::de::from_trait&lt;serde_json::read::StrRead,osrs_gph::data_types::PriceDataType&gt; (29 samples, 12.03%)</title><rect x="61.4108%" y="1221" width="12.0332%" height="15" fill="rgb(77,190,190)" fg:x="148" fg:w="29"/><text x="61.6608%" y="1231.50">osrs_gph.exe`serde..</text></g><g><title>osrs_gph.exe`osrs_gph::data_types::impl$1::deserialize(serde_json::de::Deserializer (29 samples, 12.03%)</title><rect x="61.4108%" y="1205" width="12.0332%" height="15" fill="rgb(58,172,172)" fg:x="148" fg:w="29"/><text x="61.6608%" y="1215.50">osrs_gph.exe`osrs_..</text></g><g><title>osrs_gph.exe`serde_json::de::impl$7::deserialize_any(serde_json::de::Deserializer (29 samples, 12.03%)</title><rect x="61.4108%" y="1189" width="12.0332%" height="15" fill="rgb(50,165,165)" fg:x="148" fg:w="29"/><text x="61.6608%" y="1199.50">osrs_gph.exe`serde..</text></g><g><title>osrs_gph.exe`osrs_gph::data_types::impl$1::deserialize::impl$0::visit_map(osrs_gph::data_types::impl$1::deserialize::PriceDataTypeVisitor, serde_json::de::MapAccess (29 samples, 12.03%)</title><rect x="61.4108%" y="1173" width="12.0332%" height="15" fill="rgb(87,199,199)" fg:x="148" fg:w="29"/><text x="61.6608%" y="1183.50">osrs_gph.exe`osrs_..</text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap&lt;alloc::string::String,std::collections::hash::map::HashMap (1 samples, 0.41%)</title><rect x="73.0290%" y="1157" width="0.4149%" height="15" fill="rgb(92,204,204)" fg:x="176" fg:w="1"/><text x="73.2790%" y="1167.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(hashbrown::map::HashMap&lt;alloc::string::String,std::collections::hash::map::HashMap (1 samples, 0.41%)</title><rect x="73.0290%" y="1141" width="0.4149%" height="15" fill="rgb(53,168,168)" fg:x="176" fg:w="1"/><text x="73.2790%" y="1151.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,std::collections::hash::map::HashMap (1 samples, 0.41%)</title><rect x="73.0290%" y="1125" width="0.4149%" height="15" fill="rgb(67,180,180)" fg:x="176" fg:w="1"/><text x="73.2790%" y="1135.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;alloc::string::String,std::collections::hash::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt; &gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,std::collections::hash::map::HashMap (1 samples, 0.41%)</title><rect x="73.0290%" y="1109" width="0.4149%" height="15" fill="rgb(79,191,191)" fg:x="176" fg:w="1"/><text x="73.2790%" y="1119.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.41%)</title><rect x="73.0290%" y="1093" width="0.4149%" height="15" fill="rgb(73,186,186)" fg:x="176" fg:w="1"/><text x="73.2790%" y="1103.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::drop_elements (1 samples, 0.41%)</title><rect x="73.0290%" y="1077" width="0.4149%" height="15" fill="rgb(65,179,179)" fg:x="176" fg:w="1"/><text x="73.2790%" y="1087.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,std::collections::hash::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt; &gt; &gt;::drop (1 samples, 0.41%)</title><rect x="73.0290%" y="1061" width="0.4149%" height="15" fill="rgb(65,178,178)" fg:x="176" fg:w="1"/><text x="73.2790%" y="1071.50"></text></g><g><title>osrs_gph.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$&lt;alloc::string::String,std::collections::hash::map::HashMap (1 samples, 0.41%)</title><rect x="73.0290%" y="1045" width="0.4149%" height="15" fill="rgb(94,205,205)" fg:x="176" fg:w="1"/><text x="73.2790%" y="1055.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tuple$&lt;alloc::string::String,std::collections::hash::map::HashMap (1 samples, 0.41%)</title><rect x="73.0290%" y="1029" width="0.4149%" height="15" fill="rgb(106,217,217)" fg:x="176" fg:w="1"/><text x="73.2790%" y="1039.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (1 samples, 0.41%)</title><rect x="73.0290%" y="1013" width="0.4149%" height="15" fill="rgb(88,200,200)" fg:x="176" fg:w="1"/><text x="73.2790%" y="1023.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (1 samples, 0.41%)</title><rect x="73.0290%" y="997" width="0.4149%" height="15" fill="rgb(95,206,206)" fg:x="176" fg:w="1"/><text x="73.2790%" y="1007.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (1 samples, 0.41%)</title><rect x="73.0290%" y="981" width="0.4149%" height="15" fill="rgb(75,188,188)" fg:x="176" fg:w="1"/><text x="73.2790%" y="991.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (1 samples, 0.41%)</title><rect x="73.0290%" y="965" width="0.4149%" height="15" fill="rgb(52,167,167)" fg:x="176" fg:w="1"/><text x="73.2790%" y="975.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.41%)</title><rect x="73.0290%" y="949" width="0.4149%" height="15" fill="rgb(52,166,166)" fg:x="176" fg:w="1"/><text x="73.2790%" y="959.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::drop_elements (1 samples, 0.41%)</title><rect x="73.0290%" y="933" width="0.4149%" height="15" fill="rgb(71,184,184)" fg:x="176" fg:w="1"/><text x="73.2790%" y="943.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt; &gt;::drop (1 samples, 0.41%)</title><rect x="73.0290%" y="917" width="0.4149%" height="15" fill="rgb(63,177,177)" fg:x="176" fg:w="1"/><text x="73.2790%" y="927.50"></text></g><g><title>osrs_gph.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (1 samples, 0.41%)</title><rect x="73.0290%" y="901" width="0.4149%" height="15" fill="rgb(76,189,189)" fg:x="176" fg:w="1"/><text x="73.2790%" y="911.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tuple$ (1 samples, 0.41%)</title><rect x="73.0290%" y="885" width="0.4149%" height="15" fill="rgb(88,200,200)" fg:x="176" fg:w="1"/><text x="73.2790%" y="895.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="73.0290%" y="869" width="0.4149%" height="15" fill="rgb(87,199,199)" fg:x="176" fg:w="1"/><text x="73.2790%" y="879.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.41%)</title><rect x="73.0290%" y="853" width="0.4149%" height="15" fill="rgb(56,171,171)" fg:x="176" fg:w="1"/><text x="73.2790%" y="863.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.41%)</title><rect x="73.0290%" y="837" width="0.4149%" height="15" fill="rgb(93,204,204)" fg:x="176" fg:w="1"/><text x="73.2790%" y="847.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1 samples, 0.41%)</title><rect x="73.0290%" y="821" width="0.4149%" height="15" fill="rgb(78,191,191)" fg:x="176" fg:w="1"/><text x="73.2790%" y="831.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.41%)</title><rect x="73.0290%" y="805" width="0.4149%" height="15" fill="rgb(101,212,212)" fg:x="176" fg:w="1"/><text x="73.2790%" y="815.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::dealloc (1 samples, 0.41%)</title><rect x="73.0290%" y="789" width="0.4149%" height="15" fill="rgb(72,185,185)" fg:x="176" fg:w="1"/><text x="73.2790%" y="799.50"></text></g><g><title>`0x7FFE593EAB11 (1 samples, 0.41%)</title><rect x="73.0290%" y="773" width="0.4149%" height="15" fill="rgb(179,179,51)" fg:x="176" fg:w="1"/><text x="73.2790%" y="783.50"></text></g><g><title>`0x7FFE5945C06F (1 samples, 0.41%)</title><rect x="73.0290%" y="757" width="0.4149%" height="15" fill="rgb(195,195,57)" fg:x="176" fg:w="1"/><text x="73.2790%" y="767.50"></text></g><g><title>osrs_gph.exe`osrs_gph::logging::Logging&lt;osrs_gph::file_io::FileIO&lt;ref$&lt;str$&gt; &gt; &gt;::file&lt;ref$&lt;str$&gt; &gt; (2 samples, 0.83%)</title><rect x="73.4440%" y="1221" width="0.8299%" height="15" fill="rgb(98,209,209)" fg:x="177" fg:w="2"/><text x="73.6940%" y="1231.50"></text></g><g><title>osrs_gph.exe`std::fs::OpenOptions::open(ref$ (2 samples, 0.83%)</title><rect x="73.4440%" y="1205" width="0.8299%" height="15" fill="rgb(80,192,192)" fg:x="177" fg:w="2"/><text x="73.6940%" y="1215.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::fs::File::open (2 samples, 0.83%)</title><rect x="73.4440%" y="1189" width="0.8299%" height="15" fill="rgb(95,206,206)" fg:x="177" fg:w="2"/><text x="73.6940%" y="1199.50"></text></g><g><title>osrs_gph.exe`core::convert::impl$6::try_into (2 samples, 0.83%)</title><rect x="73.4440%" y="1173" width="0.8299%" height="15" fill="rgb(56,170,170)" fg:x="177" fg:w="2"/><text x="73.6940%" y="1183.50"></text></g><g><title>osrs_gph.exe`std::os::windows::io::handle::impl$12::try_from (2 samples, 0.83%)</title><rect x="73.4440%" y="1157" width="0.8299%" height="15" fill="rgb(105,215,215)" fg:x="177" fg:w="2"/><text x="73.6940%" y="1167.50"></text></g><g><title>`0x7FFE56B24CDC (2 samples, 0.83%)</title><rect x="73.4440%" y="1141" width="0.8299%" height="15" fill="rgb(186,186,54)" fg:x="177" fg:w="2"/><text x="73.6940%" y="1151.50"></text></g><g><title>`0x7FFE56B25370 (2 samples, 0.83%)</title><rect x="73.4440%" y="1125" width="0.8299%" height="15" fill="rgb(198,198,58)" fg:x="177" fg:w="2"/><text x="73.6940%" y="1135.50"></text></g><g><title>`0x7FFE5944FE14 (2 samples, 0.83%)</title><rect x="73.4440%" y="1109" width="0.8299%" height="15" fill="rgb(187,187,54)" fg:x="177" fg:w="2"/><text x="73.6940%" y="1119.50"></text></g><g><title>osrs_gph.exe`osrs_gph::logging::Logging&lt;osrs_gph::file_io::FileIO&lt;ref$&lt;str$&gt; &gt; &gt;::read&lt;ref$&lt;str$&gt;,osrs_gph::data_types::PriceDataType&gt; (32 samples, 13.28%)</title><rect x="61.4108%" y="1237" width="13.2780%" height="15" fill="rgb(83,195,195)" fg:x="148" fg:w="32"/><text x="61.6608%" y="1247.50">osrs_gph.exe`osrs_gp..</text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (1 samples, 0.41%)</title><rect x="74.2739%" y="1221" width="0.4149%" height="15" fill="rgb(85,197,197)" fg:x="179" fg:w="1"/><text x="74.5239%" y="1231.50"></text></g><g><title>osrs_gph.exe`std::fs::impl$8::read_to_string (1 samples, 0.41%)</title><rect x="74.2739%" y="1205" width="0.4149%" height="15" fill="rgb(54,168,168)" fg:x="179" fg:w="1"/><text x="74.5239%" y="1215.50"></text></g><g><title>osrs_gph.exe`std::fs::impl$5::read_to_string (1 samples, 0.41%)</title><rect x="74.2739%" y="1189" width="0.4149%" height="15" fill="rgb(98,209,209)" fg:x="179" fg:w="1"/><text x="74.5239%" y="1199.50"></text></g><g><title>osrs_gph.exe`std::io::default_read_to_string (1 samples, 0.41%)</title><rect x="74.2739%" y="1173" width="0.4149%" height="15" fill="rgb(50,165,165)" fg:x="179" fg:w="1"/><text x="74.5239%" y="1183.50"></text></g><g><title>osrs_gph.exe`std::io::append_to_string (1 samples, 0.41%)</title><rect x="74.2739%" y="1157" width="0.4149%" height="15" fill="rgb(68,181,181)" fg:x="179" fg:w="1"/><text x="74.5239%" y="1167.50"></text></g><g><title>osrs_gph.exe`std::io::default_read_to_end&lt;ref$&lt;std::fs::File&gt; &gt; (1 samples, 0.41%)</title><rect x="74.2739%" y="1141" width="0.4149%" height="15" fill="rgb(52,167,167)" fg:x="179" fg:w="1"/><text x="74.5239%" y="1151.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::handle::Handle::read_buf (1 samples, 0.41%)</title><rect x="74.2739%" y="1125" width="0.4149%" height="15" fill="rgb(89,201,201)" fg:x="179" fg:w="1"/><text x="74.5239%" y="1135.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::handle::Handle::synchronous_read (1 samples, 0.41%)</title><rect x="74.2739%" y="1109" width="0.4149%" height="15" fill="rgb(92,203,203)" fg:x="179" fg:w="1"/><text x="74.5239%" y="1119.50"></text></g><g><title>`0x7FFE5944F434 (1 samples, 0.41%)</title><rect x="74.2739%" y="1093" width="0.4149%" height="15" fill="rgb(178,178,51)" fg:x="179" fg:w="1"/><text x="74.5239%" y="1103.50"></text></g><g><title>osrs_gph.exe`osrs_gph::logging::LogConfig&lt;ref$&lt;str$&gt; &gt;::create_logger&lt;ref$&lt;str$&gt; &gt; (1 samples, 0.41%)</title><rect x="74.6888%" y="1237" width="0.4149%" height="15" fill="rgb(101,212,212)" fg:x="180" fg:w="1"/><text x="74.9388%" y="1247.50"></text></g><g><title>osrs_gph.exe`sloggers::file::impl$1::build (1 samples, 0.41%)</title><rect x="74.6888%" y="1221" width="0.4149%" height="15" fill="rgb(106,217,217)" fg:x="180" fg:w="1"/><text x="74.9388%" y="1231.50"></text></g><g><title>osrs_gph.exe`sloggers::build::BuilderCommon::build_with_drain&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt;(slog_term::CompactFormat&lt;slog_term::PlainDecorator (1 samples, 0.41%)</title><rect x="74.6888%" y="1205" width="0.4149%" height="15" fill="rgb(88,200,200)" fg:x="180" fg:w="1"/><text x="74.9388%" y="1215.50"></text></g><g><title>osrs_gph.exe`slog_async::AsyncBuilder&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt;::build(slog_async::AsyncBuilder&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (1 samples, 0.41%)</title><rect x="74.6888%" y="1189" width="0.4149%" height="15" fill="rgb(57,171,171)" fg:x="180" fg:w="1"/><text x="74.9388%" y="1199.50"></text></g><g><title>osrs_gph.exe`slog_async::AsyncCoreBuilder&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt;::build_no_guard&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt;(slog_async::AsyncCoreBuilder&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (1 samples, 0.41%)</title><rect x="74.6888%" y="1173" width="0.4149%" height="15" fill="rgb(106,217,217)" fg:x="180" fg:w="1"/><text x="74.9388%" y="1183.50"></text></g><g><title>osrs_gph.exe`slog_async::AsyncCoreBuilder&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt;::spawn_thread(slog_async::AsyncCoreBuilder&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (1 samples, 0.41%)</title><rect x="74.6888%" y="1157" width="0.4149%" height="15" fill="rgb(51,166,166)" fg:x="180" fg:w="1"/><text x="74.9388%" y="1167.50"></text></g><g><title>osrs_gph.exe`crossbeam_channel::channel::bounded&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt; (1 samples, 0.41%)</title><rect x="74.6888%" y="1141" width="0.4149%" height="15" fill="rgb(81,193,193)" fg:x="180" fg:w="1"/><text x="74.9388%" y="1151.50"></text></g><g><title>osrs_gph.exe`crossbeam_channel::flavors::array::Channel&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;::with_capacity (1 samples, 0.41%)</title><rect x="74.6888%" y="1125" width="0.4149%" height="15" fill="rgb(56,170,170)" fg:x="180" fg:w="1"/><text x="74.9388%" y="1135.50"></text></g><g><title>osrs_gph.exe`alloc::boxed::impl$52::from_iter&lt;crossbeam_channel::flavors::array::Slot&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;,core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,crossbeam_channel::flavors::array::impl$1::with_capacity::closure_env$0&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt; &gt; &gt;(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,crossbeam_channel::flavors::array::impl$1::with_capacity::closure_env$0&lt;enum2$ (1 samples, 0.41%)</title><rect x="74.6888%" y="1109" width="0.4149%" height="15" fill="rgb(52,167,167)" fg:x="180" fg:w="1"/><text x="74.9388%" y="1119.50"></text></g><g><title>osrs_gph.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,crossbeam_channel::flavors::array::impl$1::with_capacity::closure_env$0&lt;enum2$ (1 samples, 0.41%)</title><rect x="74.6888%" y="1093" width="0.4149%" height="15" fill="rgb(76,188,188)" fg:x="180" fg:w="1"/><text x="74.9388%" y="1103.50"></text></g><g><title>osrs_gph.exe`alloc::vec::impl$14::from_iter(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,crossbeam_channel::flavors::array::impl$1::with_capacity::closure_env$0&lt;enum2$ (1 samples, 0.41%)</title><rect x="74.6888%" y="1077" width="0.4149%" height="15" fill="rgb(84,196,196)" fg:x="180" fg:w="1"/><text x="74.9388%" y="1087.50"></text></g><g><title>osrs_gph.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,crossbeam_channel::flavors::array::impl$1::with_capacity::closure_env$0&lt;enum2$ (1 samples, 0.41%)</title><rect x="74.6888%" y="1061" width="0.4149%" height="15" fill="rgb(83,195,195)" fg:x="180" fg:w="1"/><text x="74.9388%" y="1071.50"></text></g><g><title>osrs_gph.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,crossbeam_channel::flavors::array::impl$1::with_capacity::closure_env$0&lt;enum2$ (1 samples, 0.41%)</title><rect x="74.6888%" y="1045" width="0.4149%" height="15" fill="rgb(67,180,180)" fg:x="180" fg:w="1"/><text x="74.9388%" y="1055.50"></text></g><g><title>osrs_gph.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;crossbeam_channel::flavors::array::Slot&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,crossbeam_channel::flavors::array::impl$1::with_capacity::closure_env$0&lt;enum2$ (1 samples, 0.41%)</title><rect x="74.6888%" y="1029" width="0.4149%" height="15" fill="rgb(99,210,210)" fg:x="180" fg:w="1"/><text x="74.9388%" y="1039.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;crossbeam_channel::flavors::array::Slot&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,crossbeam_channel::flavors::array::impl$1::with_capacity::closure_env$0&lt;enum2$ (1 samples, 0.41%)</title><rect x="74.6888%" y="1013" width="0.4149%" height="15" fill="rgb(77,190,190)" fg:x="180" fg:w="1"/><text x="74.9388%" y="1023.50"></text></g><g><title>osrs_gph.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,crossbeam_channel::flavors::array::impl$1::with_capacity::closure_env$0&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt; &gt;, alloc::vec::impl$19::extend_trusted::closure_env$0&lt;crossbeam_channel::flavors::array::Slot&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,crossbeam_channel::flavors::array::impl$1::with_capacity::closure_env$0&lt;enum2$ (1 samples, 0.41%)</title><rect x="74.6888%" y="997" width="0.4149%" height="15" fill="rgb(73,186,186)" fg:x="180" fg:w="1"/><text x="74.9388%" y="1007.50"></text></g><g><title>osrs_gph.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,crossbeam_channel::flavors::array::impl$1::with_capacity::closure_env$0&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;crossbeam_channel::flavors::array::Slot&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;crossbeam_channel::flavors::array::Slot&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,crossbeam_channel::flavors::array::impl$1::with_capacity::closure_env$0&lt;enum2$ (1 samples, 0.41%)</title><rect x="74.6888%" y="981" width="0.4149%" height="15" fill="rgb(88,200,200)" fg:x="180" fg:w="1"/><text x="74.9388%" y="991.50"></text></g><g><title>osrs_gph.exe`core::iter::traits::iterator::Iterator::fold(core::ops::range::Range&lt;usize&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;usize,crossbeam_channel::flavors::array::Slot&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;,tuple$&lt;&gt;,crossbeam_channel::flavors::array::impl$1::with_capacity::closure_env$0&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;crossbeam_channel::flavors::array::Slot&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;crossbeam_channel::flavors::array::Slot&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,crossbeam_channel::flavors::array::impl$1::with_capacity::closure_env$0&lt;enum2$ (1 samples, 0.41%)</title><rect x="74.6888%" y="965" width="0.4149%" height="15" fill="rgb(92,203,203)" fg:x="180" fg:w="1"/><text x="74.9388%" y="975.50"></text></g><g><title>osrs_gph.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;usize,crossbeam_channel::flavors::array::Slot&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;,tuple$&lt;&gt;,crossbeam_channel::flavors::array::impl$1::with_capacity::closure_env$0&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;crossbeam_channel::flavors::array::Slot&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;crossbeam_channel::flavors::array::Slot&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,crossbeam_channel::flavors::array::impl$1::with_capacity::closure_env$0&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt; &gt; &gt; &gt; &gt;*, tuple$ (1 samples, 0.41%)</title><rect x="74.6888%" y="949" width="0.4149%" height="15" fill="rgb(89,201,201)" fg:x="180" fg:w="1"/><text x="74.9388%" y="959.50"></text></g><g><title>osrs_gph.exe`core::iter::traits::iterator::Iterator::for_each::call::closure$0(core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;crossbeam_channel::flavors::array::Slot&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;crossbeam_channel::flavors::array::Slot&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,crossbeam_channel::flavors::array::impl$1::with_capacity::closure_env$0&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, crossbeam_channel::flavors::array::Slot&lt;enum2$ (1 samples, 0.41%)</title><rect x="74.6888%" y="933" width="0.4149%" height="15" fill="rgb(100,210,210)" fg:x="180" fg:w="1"/><text x="74.9388%" y="943.50"></text></g><g><title>osrs_gph.exe`alloc::vec::impl$19::extend_trusted::closure$0(alloc::vec::impl$19::extend_trusted::closure_env$0&lt;crossbeam_channel::flavors::array::Slot&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,crossbeam_channel::flavors::array::impl$1::with_capacity::closure_env$0&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt; &gt; &gt;*, crossbeam_channel::flavors::array::Slot&lt;enum2$ (1 samples, 0.41%)</title><rect x="74.6888%" y="917" width="0.4149%" height="15" fill="rgb(94,205,205)" fg:x="180" fg:w="1"/><text x="74.9388%" y="927.50"></text></g><g><title>osrs_gph.exe`core::ptr::write(crossbeam_channel::flavors::array::Slot&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;*, crossbeam_channel::flavors::array::Slot&lt;enum2$ (1 samples, 0.41%)</title><rect x="74.6888%" y="901" width="0.4149%" height="15" fill="rgb(77,189,189)" fg:x="180" fg:w="1"/><text x="74.9388%" y="911.50"></text></g><g><title>osrs_gph.exe`reqwest::blocking::request::RequestBuilder::headers(reqwest::blocking::request::RequestBuilder, http::header::map::HeaderMap (1 samples, 0.41%)</title><rect x="75.1037%" y="1205" width="0.4149%" height="15" fill="rgb(55,170,170)" fg:x="181" fg:w="1"/><text x="75.3537%" y="1215.50"></text></g><g><title>osrs_gph.exe`reqwest::util::replace_headers(http::header::map::HeaderMap&lt;http::header::value::HeaderValue&gt;*, http::header::map::HeaderMap (1 samples, 0.41%)</title><rect x="75.1037%" y="1189" width="0.4149%" height="15" fill="rgb(84,196,196)" fg:x="181" fg:w="1"/><text x="75.3537%" y="1199.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="75.5187%" y="1205" width="0.4149%" height="15" fill="rgb(74,187,187)" fg:x="182" fg:w="1"/><text x="75.7687%" y="1215.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.41%)</title><rect x="75.5187%" y="1189" width="0.4149%" height="15" fill="rgb(107,218,218)" fg:x="182" fg:w="1"/><text x="75.7687%" y="1199.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.41%)</title><rect x="75.5187%" y="1173" width="0.4149%" height="15" fill="rgb(74,187,187)" fg:x="182" fg:w="1"/><text x="75.7687%" y="1183.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1 samples, 0.41%)</title><rect x="75.5187%" y="1157" width="0.4149%" height="15" fill="rgb(108,218,218)" fg:x="182" fg:w="1"/><text x="75.7687%" y="1167.50"></text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;reqwest::blocking::client::InnerClientHandle,alloc::alloc::Global&gt;::drop_slow&lt;reqwest::blocking::client::InnerClientHandle,alloc::alloc::Global&gt; (1 samples, 0.41%)</title><rect x="75.5187%" y="1141" width="0.4149%" height="15" fill="rgb(95,207,207)" fg:x="182" fg:w="1"/><text x="75.7687%" y="1151.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="75.5187%" y="1125" width="0.4149%" height="15" fill="rgb(89,201,201)" fg:x="182" fg:w="1"/><text x="75.7687%" y="1135.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;tokio::sync::mpsc::unbounded::UnboundedSender&lt;tuple$&lt;reqwest::async_impl::request::Request,tokio::sync::oneshot::Sender&lt;enum2$&lt;core::result::Result (1 samples, 0.41%)</title><rect x="75.5187%" y="1109" width="0.4149%" height="15" fill="rgb(104,215,215)" fg:x="182" fg:w="1"/><text x="75.7687%" y="1119.50"></text></g><g><title>osrs_gph.exe`reqwest::blocking::client::impl$7::drop (1 samples, 0.41%)</title><rect x="75.5187%" y="1093" width="0.4149%" height="15" fill="rgb(109,219,219)" fg:x="182" fg:w="1"/><text x="75.7687%" y="1103.50"></text></g><g><title>`0x7FFE593EC6C6 (1 samples, 0.41%)</title><rect x="75.9336%" y="773" width="0.4149%" height="15" fill="rgb(221,221,66)" fg:x="183" fg:w="1"/><text x="76.1836%" y="783.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::impl$9::index(std::collections::hash::map::HashMap&lt;alloc::string::String,std::collections::hash::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt;,std::collections::hash::map::RandomState&gt;*, ref$ (2 samples, 0.83%)</title><rect x="75.9336%" y="1093" width="0.8299%" height="15" fill="rgb(57,171,171)" fg:x="183" fg:w="2"/><text x="76.1836%" y="1103.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::impl$0::clone(hashbrown::map::HashMap (2 samples, 0.83%)</title><rect x="75.9336%" y="1077" width="0.8299%" height="15" fill="rgb(94,205,205)" fg:x="183" fg:w="2"/><text x="76.1836%" y="1087.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$13::clone&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (2 samples, 0.83%)</title><rect x="75.9336%" y="1061" width="0.8299%" height="15" fill="rgb(109,219,219)" fg:x="183" fg:w="2"/><text x="76.1836%" y="1071.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$14::clone_from_spec(hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;*, hashbrown::raw::RawTable&lt;tuple$ (2 samples, 0.83%)</title><rect x="75.9336%" y="1045" width="0.8299%" height="15" fill="rgb(59,174,174)" fg:x="183" fg:w="2"/><text x="76.1836%" y="1055.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;::clone_from_impl(hashbrown::raw::RawTable&lt;tuple$ (2 samples, 0.83%)</title><rect x="75.9336%" y="1029" width="0.8299%" height="15" fill="rgb(62,176,176)" fg:x="183" fg:w="2"/><text x="76.1836%" y="1039.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$28::next(hashbrown::raw::RawIter&lt;tuple$ (2 samples, 0.83%)</title><rect x="75.9336%" y="1013" width="0.8299%" height="15" fill="rgb(82,194,194)" fg:x="183" fg:w="2"/><text x="76.1836%" y="1023.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt; &gt;::next_impl (2 samples, 0.83%)</title><rect x="75.9336%" y="997" width="0.8299%" height="15" fill="rgb(67,181,181)" fg:x="183" fg:w="2"/><text x="76.1836%" y="1007.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::bitmask::impl$3::next (2 samples, 0.83%)</title><rect x="75.9336%" y="981" width="0.8299%" height="15" fill="rgb(61,175,175)" fg:x="183" fg:w="2"/><text x="76.1836%" y="991.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::bitmask::BitMask::remove_lowest_bit (2 samples, 0.83%)</title><rect x="75.9336%" y="965" width="0.8299%" height="15" fill="rgb(64,177,177)" fg:x="183" fg:w="2"/><text x="76.1836%" y="975.50"></text></g><g><title>osrs_gph.exe`alloc::string::impl$6::clone (2 samples, 0.83%)</title><rect x="75.9336%" y="949" width="0.8299%" height="15" fill="rgb(84,196,196)" fg:x="183" fg:w="2"/><text x="76.1836%" y="959.50"></text></g><g><title>osrs_gph.exe`alloc::vec::impl$10::clone (2 samples, 0.83%)</title><rect x="75.9336%" y="933" width="0.8299%" height="15" fill="rgb(109,219,219)" fg:x="183" fg:w="2"/><text x="76.1836%" y="943.50"></text></g><g><title>osrs_gph.exe`alloc::slice::impl$0::to_vec_in (2 samples, 0.83%)</title><rect x="75.9336%" y="917" width="0.8299%" height="15" fill="rgb(75,188,188)" fg:x="183" fg:w="2"/><text x="76.1836%" y="927.50"></text></g><g><title>osrs_gph.exe`alloc::slice::hack::to_vec (2 samples, 0.83%)</title><rect x="75.9336%" y="901" width="0.8299%" height="15" fill="rgb(70,183,183)" fg:x="183" fg:w="2"/><text x="76.1836%" y="911.50"></text></g><g><title>osrs_gph.exe`alloc::slice::hack::impl$1::to_vec (2 samples, 0.83%)</title><rect x="75.9336%" y="885" width="0.8299%" height="15" fill="rgb(84,196,196)" fg:x="183" fg:w="2"/><text x="76.1836%" y="895.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec::with_capacity_in (2 samples, 0.83%)</title><rect x="75.9336%" y="869" width="0.8299%" height="15" fill="rgb(63,177,177)" fg:x="183" fg:w="2"/><text x="76.1836%" y="879.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec::with_capacity_in (2 samples, 0.83%)</title><rect x="75.9336%" y="853" width="0.8299%" height="15" fill="rgb(72,185,185)" fg:x="183" fg:w="2"/><text x="76.1836%" y="863.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec::allocate_in (2 samples, 0.83%)</title><rect x="75.9336%" y="837" width="0.8299%" height="15" fill="rgb(67,180,180)" fg:x="183" fg:w="2"/><text x="76.1836%" y="847.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::impl$1::allocate (2 samples, 0.83%)</title><rect x="75.9336%" y="821" width="0.8299%" height="15" fill="rgb(88,200,200)" fg:x="183" fg:w="2"/><text x="76.1836%" y="831.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::Global::alloc_impl (2 samples, 0.83%)</title><rect x="75.9336%" y="805" width="0.8299%" height="15" fill="rgb(88,200,200)" fg:x="183" fg:w="2"/><text x="76.1836%" y="815.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::alloc (2 samples, 0.83%)</title><rect x="75.9336%" y="789" width="0.8299%" height="15" fill="rgb(97,208,208)" fg:x="183" fg:w="2"/><text x="76.1836%" y="799.50"></text></g><g><title>`0x7FFE593EC61F (1 samples, 0.41%)</title><rect x="76.3485%" y="773" width="0.4149%" height="15" fill="rgb(188,188,54)" fg:x="184" fg:w="1"/><text x="76.5985%" y="783.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;::insert_in_slot(unsigned long long, hashbrown::raw::InsertSlot, tuple$ (1 samples, 0.41%)</title><rect x="76.7635%" y="1013" width="0.4149%" height="15" fill="rgb(60,174,174)" fg:x="185" fg:w="1"/><text x="77.0135%" y="1023.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt; &gt;::write(tuple$ (1 samples, 0.41%)</title><rect x="76.7635%" y="997" width="0.4149%" height="15" fill="rgb(94,205,205)" fg:x="185" fg:w="1"/><text x="77.0135%" y="1007.50"></text></g><g><title>osrs_gph.exe`core::ptr::mut_ptr::impl$0::write(tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;*, tuple$ (1 samples, 0.41%)</title><rect x="76.7635%" y="981" width="0.4149%" height="15" fill="rgb(70,184,184)" fg:x="185" fg:w="1"/><text x="77.0135%" y="991.50"></text></g><g><title>osrs_gph.exe`core::ptr::write(tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;*, tuple$ (1 samples, 0.41%)</title><rect x="76.7635%" y="965" width="0.4149%" height="15" fill="rgb(96,207,207)" fg:x="185" fg:w="1"/><text x="77.0135%" y="975.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::impl$46::next(std::collections::hash::map::IntoIter (2 samples, 0.83%)</title><rect x="76.7635%" y="1093" width="0.8299%" height="15" fill="rgb(55,169,169)" fg:x="185" fg:w="2"/><text x="77.0135%" y="1103.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::impl$67::next(hashbrown::map::IntoIter (2 samples, 0.83%)</title><rect x="76.7635%" y="1077" width="0.8299%" height="15" fill="rgb(54,169,169)" fg:x="185" fg:w="2"/><text x="77.0135%" y="1087.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$39::next(hashbrown::raw::RawIntoIter&lt;tuple$ (2 samples, 0.83%)</title><rect x="76.7635%" y="1061" width="0.8299%" height="15" fill="rgb(94,205,205)" fg:x="185" fg:w="2"/><text x="77.0135%" y="1071.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$28::next(hashbrown::raw::RawIter&lt;tuple$ (2 samples, 0.83%)</title><rect x="76.7635%" y="1045" width="0.8299%" height="15" fill="rgb(73,186,186)" fg:x="185" fg:w="2"/><text x="77.0135%" y="1055.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState,alloc::alloc::Global&gt; (2 samples, 0.83%)</title><rect x="76.7635%" y="1029" width="0.8299%" height="15" fill="rgb(76,188,188)" fg:x="185" fg:w="2"/><text x="77.0135%" y="1039.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;alloc::string::String,alloc::string::String,osrs_gph::data_types::PriceDatum&gt;, hashbrown::map::make_hasher::closure_env$0 (1 samples, 0.41%)</title><rect x="77.1784%" y="1013" width="0.4149%" height="15" fill="rgb(73,186,186)" fg:x="186" fg:w="1"/><text x="77.4284%" y="1023.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;::reserve(unsigned long long, hashbrown::map::make_hasher::closure_env$0 (1 samples, 0.41%)</title><rect x="77.1784%" y="997" width="0.4149%" height="15" fill="rgb(100,211,211)" fg:x="186" fg:w="1"/><text x="77.4284%" y="1007.50"></text></g><g><title>osrs_gph.exe`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;alloc::string::String&gt; &gt; (1 samples, 0.41%)</title><rect x="77.1784%" y="981" width="0.4149%" height="15" fill="rgb(83,195,195)" fg:x="186" fg:w="1"/><text x="77.4284%" y="991.50"></text></g><g><title>osrs_gph.exe`core::hash::impls::impl$5::hash (1 samples, 0.41%)</title><rect x="77.1784%" y="965" width="0.4149%" height="15" fill="rgb(93,204,204)" fg:x="186" fg:w="1"/><text x="77.4284%" y="975.50"></text></g><g><title>osrs_gph.exe`alloc::string::impl$23::hash (1 samples, 0.41%)</title><rect x="77.1784%" y="949" width="0.4149%" height="15" fill="rgb(55,170,170)" fg:x="186" fg:w="1"/><text x="77.4284%" y="959.50"></text></g><g><title>osrs_gph.exe`core::hash::impls::impl$2::hash(ref$ (1 samples, 0.41%)</title><rect x="77.1784%" y="933" width="0.4149%" height="15" fill="rgb(63,177,177)" fg:x="186" fg:w="1"/><text x="77.4284%" y="943.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::impl$86::write_str(std::collections::hash::map::DefaultHasher*, ref$ (1 samples, 0.41%)</title><rect x="77.1784%" y="917" width="0.4149%" height="15" fill="rgb(93,204,204)" fg:x="186" fg:w="1"/><text x="77.4284%" y="927.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$4::write_str(core::hash::sip::SipHasher13*, ref$ (1 samples, 0.41%)</title><rect x="77.1784%" y="901" width="0.4149%" height="15" fill="rgb(81,193,193)" fg:x="186" fg:w="1"/><text x="77.4284%" y="911.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$5::write_str(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$ (1 samples, 0.41%)</title><rect x="77.1784%" y="885" width="0.4149%" height="15" fill="rgb(81,193,193)" fg:x="186" fg:w="1"/><text x="77.4284%" y="895.50"></text></g><g><title>osrs_gph.exe`core::hash::Hasher::write_u8(core::hash::sip::Hasher (1 samples, 0.41%)</title><rect x="77.1784%" y="869" width="0.4149%" height="15" fill="rgb(67,181,181)" fg:x="186" fg:w="1"/><text x="77.4284%" y="879.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="77.1784%" y="853" width="0.4149%" height="15" fill="rgb(100,211,211)" fg:x="186" fg:w="1"/><text x="77.4284%" y="863.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner,hashbrown::raw::impl$12::prepare_resize::closure_env$0 (1 samples, 0.41%)</title><rect x="77.5934%" y="933" width="0.4149%" height="15" fill="rgb(71,185,185)" fg:x="187" fg:w="1"/><text x="77.8434%" y="943.50"></text></g><g><title>osrs_gph.exe`hashbrown::scopeguard::impl$3::drop(hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner,hashbrown::raw::impl$12::prepare_resize::closure_env$0 (1 samples, 0.41%)</title><rect x="77.5934%" y="917" width="0.4149%" height="15" fill="rgb(53,167,167)" fg:x="187" fg:w="1"/><text x="77.8434%" y="927.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$12::prepare_resize::closure$0(hashbrown::raw::impl$12::prepare_resize::closure_env$0 (1 samples, 0.41%)</title><rect x="77.5934%" y="901" width="0.4149%" height="15" fill="rgb(64,178,178)" fg:x="187" fg:w="1"/><text x="77.8434%" y="911.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::free_buckets (1 samples, 0.41%)</title><rect x="77.5934%" y="885" width="0.4149%" height="15" fill="rgb(76,189,189)" fg:x="187" fg:w="1"/><text x="77.8434%" y="895.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.41%)</title><rect x="77.5934%" y="869" width="0.4149%" height="15" fill="rgb(91,203,203)" fg:x="187" fg:w="1"/><text x="77.8434%" y="879.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::dealloc (1 samples, 0.41%)</title><rect x="77.5934%" y="853" width="0.4149%" height="15" fill="rgb(79,192,192)" fg:x="187" fg:w="1"/><text x="77.8434%" y="863.50"></text></g><g><title>`0x7FFE593EAB11 (1 samples, 0.41%)</title><rect x="77.5934%" y="837" width="0.4149%" height="15" fill="rgb(214,214,64)" fg:x="187" fg:w="1"/><text x="77.8434%" y="847.50"></text></g><g><title>`0x7FFE593EBE44 (1 samples, 0.41%)</title><rect x="77.5934%" y="821" width="0.4149%" height="15" fill="rgb(181,181,52)" fg:x="187" fg:w="1"/><text x="77.8434%" y="831.50"></text></g><g><title>`0x7FFE593E9728 (1 samples, 0.41%)</title><rect x="77.5934%" y="805" width="0.4149%" height="15" fill="rgb(188,188,54)" fg:x="187" fg:w="1"/><text x="77.8434%" y="815.50"></text></g><g><title>`0x7FFE593F4B1B (1 samples, 0.41%)</title><rect x="77.5934%" y="789" width="0.4149%" height="15" fill="rgb(189,189,55)" fg:x="187" fg:w="1"/><text x="77.8434%" y="799.50"></text></g><g><title>`0x7FFE593F63FA (1 samples, 0.41%)</title><rect x="77.5934%" y="773" width="0.4149%" height="15" fill="rgb(181,181,52)" fg:x="187" fg:w="1"/><text x="77.8434%" y="783.50"></text></g><g><title>`0x7FFE593F64A8 (1 samples, 0.41%)</title><rect x="77.5934%" y="757" width="0.4149%" height="15" fill="rgb(225,225,68)" fg:x="187" fg:w="1"/><text x="77.8434%" y="767.50"></text></g><g><title>`0x7FFE593F65E6 (1 samples, 0.41%)</title><rect x="77.5934%" y="741" width="0.4149%" height="15" fill="rgb(225,225,68)" fg:x="187" fg:w="1"/><text x="77.8434%" y="751.50"></text></g><g><title>`0x7FFE5944F734 (1 samples, 0.41%)</title><rect x="77.5934%" y="725" width="0.4149%" height="15" fill="rgb(215,215,64)" fg:x="187" fg:w="1"/><text x="77.8434%" y="735.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt;::insert (3 samples, 1.24%)</title><rect x="77.5934%" y="1029" width="1.2448%" height="15" fill="rgb(96,207,207)" fg:x="187" fg:w="3"/><text x="77.8434%" y="1039.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState,alloc::alloc::Global&gt; (3 samples, 1.24%)</title><rect x="77.5934%" y="1013" width="1.2448%" height="15" fill="rgb(101,212,212)" fg:x="187" fg:w="3"/><text x="77.8434%" y="1023.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;alloc::string::String,alloc::string::String,osrs_gph::data_types::PriceDatum&gt;, hashbrown::map::make_hasher::closure_env$0 (3 samples, 1.24%)</title><rect x="77.5934%" y="997" width="1.2448%" height="15" fill="rgb(68,181,181)" fg:x="187" fg:w="3"/><text x="77.8434%" y="1007.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt; &gt;(unsigned long long, hashbrown::map::make_hasher::closure_env$0 (3 samples, 1.24%)</title><rect x="77.5934%" y="981" width="1.2448%" height="15" fill="rgb(105,215,215)" fg:x="187" fg:w="3"/><text x="77.8434%" y="991.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::reserve_rehash_inner(alloc::alloc::Global*, unsigned long long, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;ref_mut$&lt;hashbrown::raw::RawTableInner&gt;,usize&gt;,assoc$&lt;Output,u64&gt; &gt; &gt; &gt;, hashbrown::raw::Fallibility, hashbrown::raw::TableLayout, enum2$&lt;core::option::Option&lt;void (*)(ptr_mut$ (3 samples, 1.24%)</title><rect x="77.5934%" y="965" width="1.2448%" height="15" fill="rgb(75,188,188)" fg:x="187" fg:w="3"/><text x="77.8434%" y="975.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::resize_inner(alloc::alloc::Global*, unsigned long long, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;ref_mut$&lt;hashbrown::raw::RawTableInner&gt;,usize&gt;,assoc$ (3 samples, 1.24%)</title><rect x="77.5934%" y="949" width="1.2448%" height="15" fill="rgb(71,184,184)" fg:x="187" fg:w="3"/><text x="77.8434%" y="959.50"></text></g><g><title>osrs_gph.exe`core::intrinsics::copy_nonoverlapping (2 samples, 0.83%)</title><rect x="78.0083%" y="933" width="0.8299%" height="15" fill="rgb(109,219,219)" fg:x="188" fg:w="2"/><text x="78.2583%" y="943.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::string::String,enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="78.8382%" y="805" width="0.4149%" height="15" fill="rgb(76,188,188)" fg:x="190" fg:w="1"/><text x="79.0882%" y="815.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;*, tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="78.8382%" y="789" width="0.4149%" height="15" fill="rgb(73,186,186)" fg:x="190" fg:w="1"/><text x="79.0882%" y="799.50"></text></g><g><title>osrs_gph.exe`hashbrown::impl$0::equivalent(ref$ (1 samples, 0.41%)</title><rect x="78.8382%" y="773" width="0.4149%" height="15" fill="rgb(104,214,214)" fg:x="190" fg:w="1"/><text x="79.0882%" y="783.50"></text></g><g><title>osrs_gph.exe`core::cmp::impls::impl$9::eq(ref$&lt;str$&gt;*, ref$ (1 samples, 0.41%)</title><rect x="78.8382%" y="757" width="0.4149%" height="15" fill="rgb(58,172,172)" fg:x="190" fg:w="1"/><text x="79.0882%" y="767.50"></text></g><g><title>osrs_gph.exe`core::str::traits::impl$1::eq(ref$&lt;str$&gt;, ref$ (1 samples, 0.41%)</title><rect x="78.8382%" y="741" width="0.4149%" height="15" fill="rgb(90,201,201)" fg:x="190" fg:w="1"/><text x="79.0882%" y="751.50"></text></g><g><title>osrs_gph.exe`core::cmp::impls::impl$9::eq(ref$&lt;slice2$&lt;u8&gt; &gt;*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="78.8382%" y="725" width="0.4149%" height="15" fill="rgb(92,204,204)" fg:x="190" fg:w="1"/><text x="79.0882%" y="735.50"></text></g><g><title>osrs_gph.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="78.8382%" y="709" width="0.4149%" height="15" fill="rgb(102,213,213)" fg:x="190" fg:w="1"/><text x="79.0882%" y="719.50"></text></g><g><title>osrs_gph.exe`core::slice::cmp::impl$5::equal(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="78.8382%" y="693" width="0.4149%" height="15" fill="rgb(52,167,167)" fg:x="190" fg:w="1"/><text x="79.0882%" y="703.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;,alloc::alloc::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::string::String,enum2$&lt;core::option::Option (2 samples, 0.83%)</title><rect x="78.8382%" y="853" width="0.8299%" height="15" fill="rgb(64,178,178)" fg:x="190" fg:w="2"/><text x="79.0882%" y="863.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::string::String,enum2$&lt;core::option::Option (2 samples, 0.83%)</title><rect x="78.8382%" y="837" width="0.8299%" height="15" fill="rgb(100,210,210)" fg:x="190" fg:w="2"/><text x="79.0882%" y="847.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (2 samples, 0.83%)</title><rect x="78.8382%" y="821" width="0.8299%" height="15" fill="rgb(61,175,175)" fg:x="190" fg:w="2"/><text x="79.0882%" y="831.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::h2 (1 samples, 0.41%)</title><rect x="79.2531%" y="805" width="0.4149%" height="15" fill="rgb(61,175,175)" fg:x="191" fg:w="1"/><text x="79.5031%" y="815.50"></text></g><g><title>osrs_gph.exe`core::num::impl$9::wrapping_add (1 samples, 0.41%)</title><rect x="79.6680%" y="773" width="0.4149%" height="15" fill="rgb(79,191,191)" fg:x="192" fg:w="1"/><text x="79.9180%" y="783.50"></text></g><g><title>osrs_gph.exe`core::num::impl$9::rotate_left (1 samples, 0.41%)</title><rect x="80.0830%" y="773" width="0.4149%" height="15" fill="rgb(67,180,180)" fg:x="193" fg:w="1"/><text x="80.3330%" y="783.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$8::d_rounds (3 samples, 1.24%)</title><rect x="79.6680%" y="789" width="1.2448%" height="15" fill="rgb(79,191,191)" fg:x="192" fg:w="3"/><text x="79.9180%" y="799.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState&gt;::get(ref$ (6 samples, 2.49%)</title><rect x="78.8382%" y="901" width="2.4896%" height="15" fill="rgb(80,193,193)" fg:x="190" fg:w="6"/><text x="79.0882%" y="911.50">os..</text></g><g><title>osrs_gph.exe`hashbrown::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::get(ref$ (6 samples, 2.49%)</title><rect x="78.8382%" y="885" width="2.4896%" height="15" fill="rgb(72,185,185)" fg:x="190" fg:w="6"/><text x="79.0882%" y="895.50">os..</text></g><g><title>osrs_gph.exe`hashbrown::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::get_inner(ref$ (6 samples, 2.49%)</title><rect x="78.8382%" y="869" width="2.4896%" height="15" fill="rgb(94,206,206)" fg:x="190" fg:w="6"/><text x="79.0882%" y="879.50">os..</text></g><g><title>osrs_gph.exe`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;str$&gt; &gt;(std::collections::hash::map::RandomState*, ref$ (4 samples, 1.66%)</title><rect x="79.6680%" y="853" width="1.6598%" height="15" fill="rgb(89,201,201)" fg:x="192" fg:w="4"/><text x="79.9180%" y="863.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::impl$86::finish (4 samples, 1.66%)</title><rect x="79.6680%" y="837" width="1.6598%" height="15" fill="rgb(101,212,212)" fg:x="192" fg:w="4"/><text x="79.9180%" y="847.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$4::finish (4 samples, 1.66%)</title><rect x="79.6680%" y="821" width="1.6598%" height="15" fill="rgb(54,169,169)" fg:x="192" fg:w="4"/><text x="79.9180%" y="831.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (4 samples, 1.66%)</title><rect x="79.6680%" y="805" width="1.6598%" height="15" fill="rgb(93,204,204)" fg:x="192" fg:w="4"/><text x="79.9180%" y="815.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;,alloc::alloc::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::string::String,enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="81.3278%" y="853" width="0.4149%" height="15" fill="rgb(76,189,189)" fg:x="196" fg:w="1"/><text x="81.5778%" y="863.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::string::String,enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="81.3278%" y="837" width="0.4149%" height="15" fill="rgb(77,189,189)" fg:x="196" fg:w="1"/><text x="81.5778%" y="847.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (1 samples, 0.41%)</title><rect x="81.3278%" y="821" width="0.4149%" height="15" fill="rgb(99,210,210)" fg:x="196" fg:w="1"/><text x="81.5778%" y="831.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::string::String,enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="81.3278%" y="805" width="0.4149%" height="15" fill="rgb(102,213,213)" fg:x="196" fg:w="1"/><text x="81.5778%" y="815.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;*, tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="81.3278%" y="789" width="0.4149%" height="15" fill="rgb(79,191,191)" fg:x="196" fg:w="1"/><text x="81.5778%" y="799.50"></text></g><g><title>osrs_gph.exe`hashbrown::impl$0::equivalent(ref$ (1 samples, 0.41%)</title><rect x="81.3278%" y="773" width="0.4149%" height="15" fill="rgb(95,206,206)" fg:x="196" fg:w="1"/><text x="81.5778%" y="783.50"></text></g><g><title>osrs_gph.exe`core::cmp::impls::impl$9::eq(ref$&lt;str$&gt;*, ref$ (1 samples, 0.41%)</title><rect x="81.3278%" y="757" width="0.4149%" height="15" fill="rgb(108,218,218)" fg:x="196" fg:w="1"/><text x="81.5778%" y="767.50"></text></g><g><title>osrs_gph.exe`core::str::traits::impl$1::eq(ref$&lt;str$&gt;, ref$ (1 samples, 0.41%)</title><rect x="81.3278%" y="741" width="0.4149%" height="15" fill="rgb(87,198,198)" fg:x="196" fg:w="1"/><text x="81.5778%" y="751.50"></text></g><g><title>osrs_gph.exe`core::cmp::impls::impl$9::eq(ref$&lt;slice2$&lt;u8&gt; &gt;*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="81.3278%" y="725" width="0.4149%" height="15" fill="rgb(104,214,214)" fg:x="196" fg:w="1"/><text x="81.5778%" y="735.50"></text></g><g><title>osrs_gph.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="81.3278%" y="709" width="0.4149%" height="15" fill="rgb(97,208,208)" fg:x="196" fg:w="1"/><text x="81.5778%" y="719.50"></text></g><g><title>osrs_gph.exe`core::slice::cmp::impl$5::equal(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="81.3278%" y="693" width="0.4149%" height="15" fill="rgb(83,196,196)" fg:x="196" fg:w="1"/><text x="81.5778%" y="703.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::impl$9::index(std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState&gt;*, ref$ (8 samples, 3.32%)</title><rect x="78.8382%" y="917" width="3.3195%" height="15" fill="rgb(80,193,193)" fg:x="190" fg:w="8"/><text x="79.0882%" y="927.50">osr..</text></g><g><title>osrs_gph.exe`enum2$&lt;core::option::Option&lt;ref$&lt;enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt; &gt; &gt;::expect(enum2$&lt;core::option::Option&lt;ref$&lt;enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt; &gt; &gt;, ref$ (2 samples, 0.83%)</title><rect x="81.3278%" y="901" width="0.8299%" height="15" fill="rgb(98,209,209)" fg:x="196" fg:w="2"/><text x="81.5778%" y="911.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::get(ref$ (2 samples, 0.83%)</title><rect x="81.3278%" y="885" width="0.8299%" height="15" fill="rgb(89,200,200)" fg:x="196" fg:w="2"/><text x="81.5778%" y="895.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::get_inner(ref$ (2 samples, 0.83%)</title><rect x="81.3278%" y="869" width="0.8299%" height="15" fill="rgb(109,219,219)" fg:x="196" fg:w="2"/><text x="81.5778%" y="879.50"></text></g><g><title>osrs_gph.exe`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;str$&gt; &gt;(std::collections::hash::map::RandomState*, ref$ (1 samples, 0.41%)</title><rect x="81.7427%" y="853" width="0.4149%" height="15" fill="rgb(70,183,183)" fg:x="197" fg:w="1"/><text x="81.9927%" y="863.50"></text></g><g><title>osrs_gph.exe`core::hash::impls::impl$5::hash(ref$ (1 samples, 0.41%)</title><rect x="81.7427%" y="837" width="0.4149%" height="15" fill="rgb(106,216,216)" fg:x="197" fg:w="1"/><text x="81.9927%" y="847.50"></text></g><g><title>osrs_gph.exe`core::hash::impls::impl$2::hash(ref$ (1 samples, 0.41%)</title><rect x="81.7427%" y="821" width="0.4149%" height="15" fill="rgb(69,182,182)" fg:x="197" fg:w="1"/><text x="81.9927%" y="831.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::impl$86::write_str(std::collections::hash::map::DefaultHasher*, ref$ (1 samples, 0.41%)</title><rect x="81.7427%" y="805" width="0.4149%" height="15" fill="rgb(81,193,193)" fg:x="197" fg:w="1"/><text x="81.9927%" y="815.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$4::write_str(core::hash::sip::SipHasher13*, ref$ (1 samples, 0.41%)</title><rect x="81.7427%" y="789" width="0.4149%" height="15" fill="rgb(84,196,196)" fg:x="197" fg:w="1"/><text x="81.9927%" y="799.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$5::write_str(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$ (1 samples, 0.41%)</title><rect x="81.7427%" y="773" width="0.4149%" height="15" fill="rgb(94,205,205)" fg:x="197" fg:w="1"/><text x="81.9927%" y="783.50"></text></g><g><title>osrs_gph.exe`core::hash::Hasher::write_u8(core::hash::sip::Hasher (1 samples, 0.41%)</title><rect x="81.7427%" y="757" width="0.4149%" height="15" fill="rgb(75,187,187)" fg:x="197" fg:w="1"/><text x="81.9927%" y="767.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="81.7427%" y="741" width="0.4149%" height="15" fill="rgb(104,215,215)" fg:x="197" fg:w="1"/><text x="81.9927%" y="751.50"></text></g><g><title>osrs_gph.exe`serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;::parse_number&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt; (1 samples, 0.41%)</title><rect x="82.1577%" y="757" width="0.4149%" height="15" fill="rgb(73,186,186)" fg:x="198" fg:w="1"/><text x="82.4077%" y="767.50"></text></g><g><title>osrs_gph.exe`std::io::uninlined_slow_read_byte&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;(std::io::buffered::bufreader::BufReader&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="82.5726%" y="677" width="0.4149%" height="15" fill="rgb(109,219,219)" fg:x="199" fg:w="1"/><text x="82.8226%" y="687.50"></text></g><g><title>osrs_gph.exe`std::io::inlined_slow_read_byte(std::io::buffered::bufreader::BufReader&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="82.5726%" y="661" width="0.4149%" height="15" fill="rgb(67,181,181)" fg:x="199" fg:w="1"/><text x="82.8226%" y="671.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufreader::impl$4::read&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt;(std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt;*, ref_mut$&lt;slice2$ (1 samples, 0.41%)</title><rect x="82.5726%" y="645" width="0.4149%" height="15" fill="rgb(97,208,208)" fg:x="199" fg:w="1"/><text x="82.8226%" y="655.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufreader::impl$5::fill_buf(std::io::buffered::bufreader::BufReader&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="82.5726%" y="629" width="0.4149%" height="15" fill="rgb(63,177,177)" fg:x="199" fg:w="1"/><text x="82.8226%" y="639.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufreader::buffer::Buffer::fill_buf (1 samples, 0.41%)</title><rect x="82.5726%" y="613" width="0.4149%" height="15" fill="rgb(105,216,216)" fg:x="199" fg:w="1"/><text x="82.8226%" y="623.50"></text></g><g><title>osrs_gph.exe`std::io::impls::impl$0::read_buf (1 samples, 0.41%)</title><rect x="82.5726%" y="597" width="0.4149%" height="15" fill="rgb(69,183,183)" fg:x="199" fg:w="1"/><text x="82.8226%" y="607.50"></text></g><g><title>osrs_gph.exe`std::io::impls::impl$0::read_buf (1 samples, 0.41%)</title><rect x="82.5726%" y="581" width="0.4149%" height="15" fill="rgb(97,208,208)" fg:x="199" fg:w="1"/><text x="82.8226%" y="591.50"></text></g><g><title>osrs_gph.exe`std::io::Read::read_buf (1 samples, 0.41%)</title><rect x="82.5726%" y="565" width="0.4149%" height="15" fill="rgb(80,193,193)" fg:x="199" fg:w="1"/><text x="82.8226%" y="575.50"></text></g><g><title>osrs_gph.exe`std::io::default_read_buf(std::io::Read::read_buf::closure_env$0 (1 samples, 0.41%)</title><rect x="82.5726%" y="549" width="0.4149%" height="15" fill="rgb(94,206,206)" fg:x="199" fg:w="1"/><text x="82.8226%" y="559.50"></text></g><g><title>osrs_gph.exe`core::io::borrowed_buf::BorrowedCursor::ensure_init (1 samples, 0.41%)</title><rect x="82.5726%" y="533" width="0.4149%" height="15" fill="rgb(96,207,207)" fg:x="199" fg:w="1"/><text x="82.8226%" y="543.50"></text></g><g><title>osrs_gph.exe`reqwest::blocking::response::impl$2::read(reqwest::blocking::response::Response*, ref_mut$&lt;slice2$ (1 samples, 0.41%)</title><rect x="82.5726%" y="517" width="0.4149%" height="15" fill="rgb(76,189,189)" fg:x="199" fg:w="1"/><text x="82.8226%" y="527.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;usize,enum2$&lt;reqwest::blocking::wait::Waited&lt;std::io::error::Error&gt; &gt; &gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;usize,enum2$&lt;reqwest::blocking::wait::Waited (1 samples, 0.41%)</title><rect x="82.5726%" y="501" width="0.4149%" height="15" fill="rgb(83,195,195)" fg:x="199" fg:w="1"/><text x="82.8226%" y="511.50"></text></g><g><title>osrs_gph.exe`reqwest::blocking::wait::timeout&lt;futures_util::io::read::Read&lt;core::pin::Pin&lt;ref_mut$&lt;dyn$&lt;futures_io::if_std::AsyncRead&gt; &gt; &gt; &gt;,usize,std::io::error::Error&gt;(futures_util::io::read::Read&lt;core::pin::Pin&lt;ref_mut$&lt;dyn$&lt;futures_io::if_std::AsyncRead&gt; &gt; &gt; &gt;, enum2$&lt;core::option::Option (1 samples, 0.41%)</title><rect x="82.5726%" y="485" width="0.4149%" height="15" fill="rgb(58,172,172)" fg:x="199" fg:w="1"/><text x="82.8226%" y="495.50"></text></g><g><title>osrs_gph.exe`std::thread::park_timeout (1 samples, 0.41%)</title><rect x="82.5726%" y="469" width="0.4149%" height="15" fill="rgb(61,175,175)" fg:x="199" fg:w="1"/><text x="82.8226%" y="479.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::thread_parking::Parker::park_timeout (1 samples, 0.41%)</title><rect x="82.5726%" y="453" width="0.4149%" height="15" fill="rgb(84,196,196)" fg:x="199" fg:w="1"/><text x="82.8226%" y="463.50"></text></g><g><title>`0x7FFE56B72DF3 (1 samples, 0.41%)</title><rect x="82.5726%" y="437" width="0.4149%" height="15" fill="rgb(210,210,62)" fg:x="199" fg:w="1"/><text x="82.8226%" y="447.50"></text></g><g><title>`0x7FFE593FBA93 (1 samples, 0.41%)</title><rect x="82.5726%" y="421" width="0.4149%" height="15" fill="rgb(215,215,64)" fg:x="199" fg:w="1"/><text x="82.8226%" y="431.50"></text></g><g><title>`0x7FFE593FF9CC (1 samples, 0.41%)</title><rect x="82.5726%" y="405" width="0.4149%" height="15" fill="rgb(188,188,54)" fg:x="199" fg:w="1"/><text x="82.8226%" y="415.50"></text></g><g><title>`0x7FFE593E39BE (1 samples, 0.41%)</title><rect x="82.5726%" y="389" width="0.4149%" height="15" fill="rgb(222,222,67)" fg:x="199" fg:w="1"/><text x="82.8226%" y="399.50"></text></g><g><title>osrs_gph.exe`serde_json::de::impl$11::next_value_seed(serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;*, core::marker::PhantomData&lt;enum2$&lt;core::option::Option (3 samples, 1.24%)</title><rect x="82.1577%" y="885" width="1.2448%" height="15" fill="rgb(61,175,175)" fg:x="198" fg:w="3"/><text x="82.4077%" y="895.50"></text></g><g><title>osrs_gph.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;, serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (3 samples, 1.24%)</title><rect x="82.1577%" y="869" width="1.2448%" height="15" fill="rgb(105,215,215)" fg:x="198" fg:w="3"/><text x="82.4077%" y="879.50"></text></g><g><title>osrs_gph.exe`serde::de::impls::impl$16::deserialize(serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (3 samples, 1.24%)</title><rect x="82.1577%" y="853" width="1.2448%" height="15" fill="rgb(53,168,168)" fg:x="198" fg:w="3"/><text x="82.4077%" y="863.50"></text></g><g><title>osrs_gph.exe`serde_json::de::impl$7::deserialize_option(serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;*, serde::de::impls::OptionVisitor (3 samples, 1.24%)</title><rect x="82.1577%" y="837" width="1.2448%" height="15" fill="rgb(79,192,192)" fg:x="198" fg:w="3"/><text x="82.4077%" y="847.50"></text></g><g><title>osrs_gph.exe`serde::de::impls::impl$15::visit_some(serde::de::impls::OptionVisitor&lt;i32&gt;, serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (3 samples, 1.24%)</title><rect x="82.1577%" y="821" width="1.2448%" height="15" fill="rgb(60,174,174)" fg:x="198" fg:w="3"/><text x="82.4077%" y="831.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;i32,serde_json::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;i32,serde_json::error::Error&gt; &gt;, enum2$&lt;core::option::Option&lt;i32&gt; &gt; (*) (3 samples, 1.24%)</title><rect x="82.1577%" y="805" width="1.2448%" height="15" fill="rgb(84,196,196)" fg:x="198" fg:w="3"/><text x="82.4077%" y="815.50"></text></g><g><title>osrs_gph.exe`serde_json::de::impl$7::deserialize_i32&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;,serde::de::impls::impl$49::deserialize::PrimitiveVisitor&gt;(serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (3 samples, 1.24%)</title><rect x="82.1577%" y="789" width="1.2448%" height="15" fill="rgb(99,210,210)" fg:x="198" fg:w="3"/><text x="82.4077%" y="799.50"></text></g><g><title>osrs_gph.exe`serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;::deserialize_number (3 samples, 1.24%)</title><rect x="82.1577%" y="773" width="1.2448%" height="15" fill="rgb(59,173,173)" fg:x="198" fg:w="3"/><text x="82.4077%" y="783.50"></text></g><g><title>osrs_gph.exe`serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;::parse_integer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt; (2 samples, 0.83%)</title><rect x="82.5726%" y="757" width="0.8299%" height="15" fill="rgb(108,218,218)" fg:x="199" fg:w="2"/><text x="82.8226%" y="767.50"></text></g><g><title>osrs_gph.exe`serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;::peek_or_null (2 samples, 0.83%)</title><rect x="82.5726%" y="741" width="0.8299%" height="15" fill="rgb(92,204,204)" fg:x="199" fg:w="2"/><text x="82.8226%" y="751.50"></text></g><g><title>osrs_gph.exe`serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;::peek (2 samples, 0.83%)</title><rect x="82.5726%" y="725" width="0.8299%" height="15" fill="rgb(87,199,199)" fg:x="199" fg:w="2"/><text x="82.8226%" y="735.50"></text></g><g><title>osrs_gph.exe`serde_json::read::impl$4::peek(serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (2 samples, 0.83%)</title><rect x="82.5726%" y="709" width="0.8299%" height="15" fill="rgb(108,218,218)" fg:x="199" fg:w="2"/><text x="82.8226%" y="719.50"></text></g><g><title>osrs_gph.exe`serde_json::iter::impl$1::next(serde_json::iter::LineColIterator&lt;std::io::Bytes&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (2 samples, 0.83%)</title><rect x="82.5726%" y="693" width="0.8299%" height="15" fill="rgb(99,210,210)" fg:x="199" fg:w="2"/><text x="82.8226%" y="703.50"></text></g><g><title>osrs_gph.exe`std::io::impl$20::next(std::io::Bytes&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="82.9876%" y="677" width="0.4149%" height="15" fill="rgb(52,167,167)" fg:x="200" fg:w="1"/><text x="83.2376%" y="687.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufreader::impl$3::spec_read_byte(std::io::buffered::bufreader::BufReader&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="82.9876%" y="661" width="0.4149%" height="15" fill="rgb(62,176,176)" fg:x="200" fg:w="1"/><text x="83.2376%" y="671.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufreader::buffer::Buffer::consume_with(unsigned long long, std::io::buffered::bufreader::impl$3::spec_read_byte::closure_env$0&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="82.9876%" y="645" width="0.4149%" height="15" fill="rgb(79,192,192)" fg:x="200" fg:w="1"/><text x="83.2376%" y="655.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufreader::buffer::Buffer::buffer (1 samples, 0.41%)</title><rect x="82.9876%" y="629" width="0.4149%" height="15" fill="rgb(54,169,169)" fg:x="200" fg:w="1"/><text x="83.2376%" y="639.50"></text></g><g><title>osrs_gph.exe`serde_json::iter::impl$1::next(serde_json::iter::LineColIterator&lt;std::io::Bytes&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="83.4025%" y="741" width="0.4149%" height="15" fill="rgb(89,201,201)" fg:x="201" fg:w="1"/><text x="83.6525%" y="751.50"></text></g><g><title>osrs_gph.exe`std::io::impl$20::next(std::io::Bytes&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="83.4025%" y="725" width="0.4149%" height="15" fill="rgb(54,168,168)" fg:x="201" fg:w="1"/><text x="83.6525%" y="735.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufreader::impl$3::spec_read_byte(std::io::buffered::bufreader::BufReader&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="83.4025%" y="709" width="0.4149%" height="15" fill="rgb(86,198,198)" fg:x="201" fg:w="1"/><text x="83.6525%" y="719.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufreader::buffer::Buffer::consume_with(unsigned long long, std::io::buffered::bufreader::impl$3::spec_read_byte::closure_env$0&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="83.4025%" y="693" width="0.4149%" height="15" fill="rgb(68,182,182)" fg:x="201" fg:w="1"/><text x="83.6525%" y="703.50"></text></g><g><title>osrs_gph.exe`serde_json::read::next_or_eof(serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (2 samples, 0.83%)</title><rect x="83.4025%" y="773" width="0.8299%" height="15" fill="rgb(98,209,209)" fg:x="201" fg:w="2"/><text x="83.6525%" y="783.50"></text></g><g><title>osrs_gph.exe`serde_json::read::impl$4::next(serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (2 samples, 0.83%)</title><rect x="83.4025%" y="757" width="0.8299%" height="15" fill="rgb(106,216,216)" fg:x="201" fg:w="2"/><text x="83.6525%" y="767.50"></text></g><g><title>osrs_gph.exe`core::str::validations::run_utf8_validation (1 samples, 0.41%)</title><rect x="84.2324%" y="709" width="0.4149%" height="15" fill="rgb(88,200,200)" fg:x="203" fg:w="1"/><text x="84.4824%" y="719.50"></text></g><g><title>osrs_gph.exe`serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;::parse_str_bytes(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, bool, enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,serde_json::error::Error&gt; &gt; (*)(serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;*, ref$&lt;slice2$ (4 samples, 1.66%)</title><rect x="83.4025%" y="789" width="1.6598%" height="15" fill="rgb(97,208,208)" fg:x="201" fg:w="4"/><text x="83.6525%" y="799.50"></text></g><g><title>osrs_gph.exe`core::ops::function::FnOnce::call_once(enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,serde_json::error::Error&gt; &gt; (*)(serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;*, ref$&lt;slice2$&lt;u8&gt; &gt;), serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;*, ref$&lt;slice2$ (2 samples, 0.83%)</title><rect x="84.2324%" y="773" width="0.8299%" height="15" fill="rgb(108,218,218)" fg:x="203" fg:w="2"/><text x="84.4824%" y="783.50"></text></g><g><title>osrs_gph.exe`serde_json::read::as_str(serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;*, ref$&lt;slice2$ (2 samples, 0.83%)</title><rect x="84.2324%" y="757" width="0.8299%" height="15" fill="rgb(104,215,215)" fg:x="203" fg:w="2"/><text x="84.4824%" y="767.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,core::str::error::Utf8Error&gt; &gt;::or_else(enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,core::str::error::Utf8Error&gt; &gt;, serde_json::read::as_str::closure_env$0&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (2 samples, 0.83%)</title><rect x="84.2324%" y="741" width="0.8299%" height="15" fill="rgb(54,169,169)" fg:x="203" fg:w="2"/><text x="84.4824%" y="751.50"></text></g><g><title>osrs_gph.exe`core::str::converts::from_utf8 (2 samples, 0.83%)</title><rect x="84.2324%" y="725" width="0.8299%" height="15" fill="rgb(103,213,213)" fg:x="203" fg:w="2"/><text x="84.4824%" y="735.50"></text></g><g><title>osrs_gph.exe`serde_json::read::impl$4::parse_str&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;(serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;*, alloc::vec::Vec (5 samples, 2.07%)</title><rect x="83.4025%" y="805" width="2.0747%" height="15" fill="rgb(81,193,193)" fg:x="201" fg:w="5"/><text x="83.6525%" y="815.50">o..</text></g><g><title>`0x7FFE593EC800 (1 samples, 0.41%)</title><rect x="85.4772%" y="597" width="0.4149%" height="15" fill="rgb(198,198,58)" fg:x="206" fg:w="1"/><text x="85.7272%" y="607.50"></text></g><g><title>`0x7FFE593ED6DF (1 samples, 0.41%)</title><rect x="85.8921%" y="581" width="0.4149%" height="15" fill="rgb(190,190,55)" fg:x="207" fg:w="1"/><text x="86.1421%" y="591.50"></text></g><g><title>`0x7FFE593F1634 (1 samples, 0.41%)</title><rect x="85.8921%" y="565" width="0.4149%" height="15" fill="rgb(194,194,56)" fg:x="207" fg:w="1"/><text x="86.1421%" y="575.50"></text></g><g><title>`0x7FFE593F17C3 (1 samples, 0.41%)</title><rect x="85.8921%" y="549" width="0.4149%" height="15" fill="rgb(217,217,65)" fg:x="207" fg:w="1"/><text x="86.1421%" y="559.50"></text></g><g><title>`0x7FFE593ED1AA (1 samples, 0.41%)</title><rect x="86.3071%" y="581" width="0.4149%" height="15" fill="rgb(219,219,66)" fg:x="208" fg:w="1"/><text x="86.5571%" y="591.50"></text></g><g><title>`0x7FFE5944ECB2 (1 samples, 0.41%)</title><rect x="86.3071%" y="565" width="0.4149%" height="15" fill="rgb(180,180,52)" fg:x="208" fg:w="1"/><text x="86.5571%" y="575.50"></text></g><g><title>`0x7FFE593ED102 (1 samples, 0.41%)</title><rect x="86.7220%" y="581" width="0.4149%" height="15" fill="rgb(215,215,64)" fg:x="209" fg:w="1"/><text x="86.9720%" y="591.50"></text></g><g><title>osrs_gph.exe`serde_json::de::impl$11::next_key_seed&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;,core::marker::PhantomData&lt;alloc::string::String&gt; &gt;(serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;*, core::marker::PhantomData (10 samples, 4.15%)</title><rect x="83.4025%" y="885" width="4.1494%" height="15" fill="rgb(67,180,180)" fg:x="201" fg:w="10"/><text x="83.6525%" y="895.50">osrs_..</text></g><g><title>osrs_gph.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;alloc::string::String&gt;, serde_json::de::MapKey&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (10 samples, 4.15%)</title><rect x="83.4025%" y="869" width="4.1494%" height="15" fill="rgb(60,174,174)" fg:x="201" fg:w="10"/><text x="83.6525%" y="879.50">osrs_..</text></g><g><title>osrs_gph.exe`serde::de::impls::impl$8::deserialize(serde_json::de::MapKey&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (10 samples, 4.15%)</title><rect x="83.4025%" y="853" width="4.1494%" height="15" fill="rgb(58,172,172)" fg:x="201" fg:w="10"/><text x="83.6525%" y="863.50">osrs_..</text></g><g><title>osrs_gph.exe`serde_json::de::impl$19::deserialize_string(serde_json::de::MapKey&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (10 samples, 4.15%)</title><rect x="83.4025%" y="837" width="4.1494%" height="15" fill="rgb(100,211,211)" fg:x="201" fg:w="10"/><text x="83.6525%" y="847.50">osrs_..</text></g><g><title>osrs_gph.exe`serde_json::de::impl$19::deserialize_any(serde_json::de::MapKey&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (10 samples, 4.15%)</title><rect x="83.4025%" y="821" width="4.1494%" height="15" fill="rgb(95,206,206)" fg:x="201" fg:w="10"/><text x="83.6525%" y="831.50">osrs_..</text></g><g><title>osrs_gph.exe`serde::de::impls::impl$6::visit_str(serde::de::impls::StringVisitor, ref$ (5 samples, 2.07%)</title><rect x="85.4772%" y="805" width="2.0747%" height="15" fill="rgb(101,212,212)" fg:x="206" fg:w="5"/><text x="85.7272%" y="815.50">o..</text></g><g><title>osrs_gph.exe`alloc::str::impl$4::to_owned(ref$ (5 samples, 2.07%)</title><rect x="85.4772%" y="789" width="2.0747%" height="15" fill="rgb(78,190,190)" fg:x="206" fg:w="5"/><text x="85.7272%" y="799.50">o..</text></g><g><title>osrs_gph.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (5 samples, 2.07%)</title><rect x="85.4772%" y="773" width="2.0747%" height="15" fill="rgb(96,207,207)" fg:x="206" fg:w="5"/><text x="85.7272%" y="783.50">o..</text></g><g><title>osrs_gph.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (5 samples, 2.07%)</title><rect x="85.4772%" y="757" width="2.0747%" height="15" fill="rgb(59,173,173)" fg:x="206" fg:w="5"/><text x="85.7272%" y="767.50">o..</text></g><g><title>osrs_gph.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (5 samples, 2.07%)</title><rect x="85.4772%" y="741" width="2.0747%" height="15" fill="rgb(59,173,173)" fg:x="206" fg:w="5"/><text x="85.7272%" y="751.50">o..</text></g><g><title>osrs_gph.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (5 samples, 2.07%)</title><rect x="85.4772%" y="725" width="2.0747%" height="15" fill="rgb(98,209,209)" fg:x="206" fg:w="5"/><text x="85.7272%" y="735.50">o..</text></g><g><title>osrs_gph.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (5 samples, 2.07%)</title><rect x="85.4772%" y="709" width="2.0747%" height="15" fill="rgb(60,174,174)" fg:x="206" fg:w="5"/><text x="85.7272%" y="719.50">o..</text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (5 samples, 2.07%)</title><rect x="85.4772%" y="693" width="2.0747%" height="15" fill="rgb(62,176,176)" fg:x="206" fg:w="5"/><text x="85.7272%" y="703.50">o..</text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (5 samples, 2.07%)</title><rect x="85.4772%" y="677" width="2.0747%" height="15" fill="rgb(59,173,173)" fg:x="206" fg:w="5"/><text x="85.7272%" y="687.50">o..</text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::allocate_in (5 samples, 2.07%)</title><rect x="85.4772%" y="661" width="2.0747%" height="15" fill="rgb(77,190,190)" fg:x="206" fg:w="5"/><text x="85.7272%" y="671.50">o..</text></g><g><title>osrs_gph.exe`alloc::alloc::impl$1::allocate (5 samples, 2.07%)</title><rect x="85.4772%" y="645" width="2.0747%" height="15" fill="rgb(75,188,188)" fg:x="206" fg:w="5"/><text x="85.7272%" y="655.50">o..</text></g><g><title>osrs_gph.exe`alloc::alloc::Global::alloc_impl (5 samples, 2.07%)</title><rect x="85.4772%" y="629" width="2.0747%" height="15" fill="rgb(84,196,196)" fg:x="206" fg:w="5"/><text x="85.7272%" y="639.50">o..</text></g><g><title>osrs_gph.exe`alloc::alloc::alloc (5 samples, 2.07%)</title><rect x="85.4772%" y="613" width="2.0747%" height="15" fill="rgb(74,187,187)" fg:x="206" fg:w="5"/><text x="85.7272%" y="623.50">o..</text></g><g><title>`0x7FFE593EC7BA (4 samples, 1.66%)</title><rect x="85.8921%" y="597" width="1.6598%" height="15" fill="rgb(178,178,51)" fg:x="207" fg:w="4"/><text x="86.1421%" y="607.50"></text></g><g><title>`0x7FFE593ED0BA (1 samples, 0.41%)</title><rect x="87.1369%" y="581" width="0.4149%" height="15" fill="rgb(177,177,51)" fg:x="210" fg:w="1"/><text x="87.3869%" y="591.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::make_hash (1 samples, 0.41%)</title><rect x="87.5519%" y="869" width="0.4149%" height="15" fill="rgb(65,179,179)" fg:x="211" fg:w="1"/><text x="87.8019%" y="879.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;(alloc::string::String, enum2$&lt;core::option::Option (2 samples, 0.83%)</title><rect x="87.5519%" y="885" width="0.8299%" height="15" fill="rgb(104,214,214)" fg:x="211" fg:w="2"/><text x="87.8019%" y="895.50"></text></g><g><title>osrs_gph.exe`serde::de::MapAccess::next_entry(serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (16 samples, 6.64%)</title><rect x="82.1577%" y="917" width="6.6390%" height="15" fill="rgb(108,218,218)" fg:x="198" fg:w="16"/><text x="82.4077%" y="927.50">osrs_gph...</text></g><g><title>osrs_gph.exe`serde::de::MapAccess::next_entry_seed(serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;*, core::marker::PhantomData&lt;alloc::string::String&gt;, core::marker::PhantomData&lt;enum2$&lt;core::option::Option (16 samples, 6.64%)</title><rect x="82.1577%" y="901" width="6.6390%" height="15" fill="rgb(53,168,168)" fg:x="198" fg:w="16"/><text x="82.4077%" y="911.50">osrs_gph...</text></g><g><title>`0x7FFE5945C361 (1 samples, 0.41%)</title><rect x="88.7967%" y="661" width="0.4149%" height="15" fill="rgb(185,185,53)" fg:x="214" fg:w="1"/><text x="89.0467%" y="671.50"></text></g><g><title>osrs_gph.exe`serde_json::de::impl$11::next_value_seed(serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;*, core::marker::PhantomData (26 samples, 10.79%)</title><rect x="78.8382%" y="997" width="10.7884%" height="15" fill="rgb(99,210,210)" fg:x="190" fg:w="26"/><text x="79.0882%" y="1007.50">osrs_gph.exe`ser..</text></g><g><title>osrs_gph.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;osrs_gph::data_types::PriceDatum&gt;, serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (26 samples, 10.79%)</title><rect x="78.8382%" y="981" width="10.7884%" height="15" fill="rgb(67,181,181)" fg:x="190" fg:w="26"/><text x="79.0882%" y="991.50">osrs_gph.exe`ser..</text></g><g><title>osrs_gph.exe`osrs_gph::data_types::impl$0::deserialize(serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (26 samples, 10.79%)</title><rect x="78.8382%" y="965" width="10.7884%" height="15" fill="rgb(99,210,210)" fg:x="190" fg:w="26"/><text x="79.0882%" y="975.50">osrs_gph.exe`osr..</text></g><g><title>osrs_gph.exe`serde_json::de::impl$7::deserialize_any(serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (26 samples, 10.79%)</title><rect x="78.8382%" y="949" width="10.7884%" height="15" fill="rgb(105,216,216)" fg:x="190" fg:w="26"/><text x="79.0882%" y="959.50">osrs_gph.exe`ser..</text></g><g><title>osrs_gph.exe`osrs_gph::data_types::impl$0::deserialize::impl$0::visit_map&lt;serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt; &gt;(osrs_gph::data_types::impl$0::deserialize::PriceDatumVisitor, serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (26 samples, 10.79%)</title><rect x="78.8382%" y="933" width="10.7884%" height="15" fill="rgb(96,207,207)" fg:x="190" fg:w="26"/><text x="79.0882%" y="943.50">osrs_gph.exe`osr..</text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option (2 samples, 0.83%)</title><rect x="88.7967%" y="917" width="0.8299%" height="15" fill="rgb(62,176,176)" fg:x="214" fg:w="2"/><text x="89.0467%" y="927.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(hashbrown::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option (2 samples, 0.83%)</title><rect x="88.7967%" y="901" width="0.8299%" height="15" fill="rgb(71,184,184)" fg:x="214" fg:w="2"/><text x="89.0467%" y="911.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option (2 samples, 0.83%)</title><rect x="88.7967%" y="885" width="0.8299%" height="15" fill="rgb(75,188,188)" fg:x="214" fg:w="2"/><text x="89.0467%" y="895.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$18::drop(hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option (2 samples, 0.83%)</title><rect x="88.7967%" y="869" width="0.8299%" height="15" fill="rgb(72,185,185)" fg:x="214" fg:w="2"/><text x="89.0467%" y="879.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::drop_inner_table (2 samples, 0.83%)</title><rect x="88.7967%" y="853" width="0.8299%" height="15" fill="rgb(62,176,176)" fg:x="214" fg:w="2"/><text x="89.0467%" y="863.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::drop_elements (2 samples, 0.83%)</title><rect x="88.7967%" y="837" width="0.8299%" height="15" fill="rgb(53,168,168)" fg:x="214" fg:w="2"/><text x="89.0467%" y="847.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt; &gt;::drop (2 samples, 0.83%)</title><rect x="88.7967%" y="821" width="0.8299%" height="15" fill="rgb(70,183,183)" fg:x="214" fg:w="2"/><text x="89.0467%" y="831.50"></text></g><g><title>osrs_gph.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option (2 samples, 0.83%)</title><rect x="88.7967%" y="805" width="0.8299%" height="15" fill="rgb(93,205,205)" fg:x="214" fg:w="2"/><text x="89.0467%" y="815.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option (2 samples, 0.83%)</title><rect x="88.7967%" y="789" width="0.8299%" height="15" fill="rgb(106,216,216)" fg:x="214" fg:w="2"/><text x="89.0467%" y="799.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (2 samples, 0.83%)</title><rect x="88.7967%" y="773" width="0.8299%" height="15" fill="rgb(109,219,219)" fg:x="214" fg:w="2"/><text x="89.0467%" y="783.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::vec::Vec (2 samples, 0.83%)</title><rect x="88.7967%" y="757" width="0.8299%" height="15" fill="rgb(92,204,204)" fg:x="214" fg:w="2"/><text x="89.0467%" y="767.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (2 samples, 0.83%)</title><rect x="88.7967%" y="741" width="0.8299%" height="15" fill="rgb(107,218,218)" fg:x="214" fg:w="2"/><text x="89.0467%" y="751.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (2 samples, 0.83%)</title><rect x="88.7967%" y="725" width="0.8299%" height="15" fill="rgb(84,196,196)" fg:x="214" fg:w="2"/><text x="89.0467%" y="735.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (2 samples, 0.83%)</title><rect x="88.7967%" y="709" width="0.8299%" height="15" fill="rgb(93,205,205)" fg:x="214" fg:w="2"/><text x="89.0467%" y="719.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::dealloc (2 samples, 0.83%)</title><rect x="88.7967%" y="693" width="0.8299%" height="15" fill="rgb(72,185,185)" fg:x="214" fg:w="2"/><text x="89.0467%" y="703.50"></text></g><g><title>`0x7FFE593EAB11 (2 samples, 0.83%)</title><rect x="88.7967%" y="677" width="0.8299%" height="15" fill="rgb(176,176,50)" fg:x="214" fg:w="2"/><text x="89.0467%" y="687.50"></text></g><g><title>`0x7FFE593EBE5F (1 samples, 0.41%)</title><rect x="89.2116%" y="661" width="0.4149%" height="15" fill="rgb(229,229,69)" fg:x="215" fg:w="1"/><text x="89.4616%" y="671.50"></text></g><g><title>osrs_gph.exe`core::ops::function::impls::impl$2::call_once (34 samples, 14.11%)</title><rect x="75.9336%" y="1205" width="14.1079%" height="15" fill="rgb(106,217,217)" fg:x="183" fg:w="34"/><text x="76.1836%" y="1215.50">osrs_gph.exe`core::op..</text></g><g><title>osrs_gph.exe`osrs_gph::api_request::closure$0 (34 samples, 14.11%)</title><rect x="75.9336%" y="1189" width="14.1079%" height="15" fill="rgb(101,212,212)" fg:x="183" fg:w="34"/><text x="76.1836%" y="1199.50">osrs_gph.exe`osrs_gph..</text></g><g><title>osrs_gph.exe`serde_json::de::from_reader&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt;,osrs_gph::data_types::PriceDataType&gt;(std::io::buffered::bufreader::BufReader&lt;ref_mut$ (34 samples, 14.11%)</title><rect x="75.9336%" y="1173" width="14.1079%" height="15" fill="rgb(77,190,190)" fg:x="183" fg:w="34"/><text x="76.1836%" y="1183.50">osrs_gph.exe`serde_js..</text></g><g><title>osrs_gph.exe`serde_json::de::from_trait(serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (34 samples, 14.11%)</title><rect x="75.9336%" y="1157" width="14.1079%" height="15" fill="rgb(109,219,219)" fg:x="183" fg:w="34"/><text x="76.1836%" y="1167.50">osrs_gph.exe`serde_js..</text></g><g><title>osrs_gph.exe`osrs_gph::data_types::impl$1::deserialize(serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (34 samples, 14.11%)</title><rect x="75.9336%" y="1141" width="14.1079%" height="15" fill="rgb(57,172,172)" fg:x="183" fg:w="34"/><text x="76.1836%" y="1151.50">osrs_gph.exe`osrs_gph..</text></g><g><title>osrs_gph.exe`serde_json::de::impl$7::deserialize_any(serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (34 samples, 14.11%)</title><rect x="75.9336%" y="1125" width="14.1079%" height="15" fill="rgb(68,181,181)" fg:x="183" fg:w="34"/><text x="76.1836%" y="1135.50">osrs_gph.exe`serde_js..</text></g><g><title>osrs_gph.exe`osrs_gph::data_types::impl$1::deserialize::impl$0::visit_map(osrs_gph::data_types::impl$1::deserialize::PriceDataTypeVisitor, serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (34 samples, 14.11%)</title><rect x="75.9336%" y="1109" width="14.1079%" height="15" fill="rgb(77,190,190)" fg:x="183" fg:w="34"/><text x="76.1836%" y="1119.50">osrs_gph.exe`osrs_gph..</text></g><g><title>osrs_gph.exe`serde::de::MapAccess::next_entry(serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (30 samples, 12.45%)</title><rect x="77.5934%" y="1093" width="12.4481%" height="15" fill="rgb(80,192,192)" fg:x="187" fg:w="30"/><text x="77.8434%" y="1103.50">osrs_gph.exe`serde:..</text></g><g><title>osrs_gph.exe`serde::de::MapAccess::next_entry_seed(serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;*, core::marker::PhantomData&lt;alloc::string::String&gt;, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (30 samples, 12.45%)</title><rect x="77.5934%" y="1077" width="12.4481%" height="15" fill="rgb(89,201,201)" fg:x="187" fg:w="30"/><text x="77.8434%" y="1087.50">osrs_gph.exe`serde:..</text></g><g><title>osrs_gph.exe`serde_json::de::impl$7::deserialize_map&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;,serde::de::impls::impl$190::deserialize::MapVisitor&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt; &gt;(serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;*, serde::de::impls::impl$190::deserialize::MapVisitor (30 samples, 12.45%)</title><rect x="77.5934%" y="1061" width="12.4481%" height="15" fill="rgb(51,166,166)" fg:x="187" fg:w="30"/><text x="77.8434%" y="1071.50">osrs_gph.exe`serde_..</text></g><g><title>osrs_gph.exe`serde::de::impls::impl$190::deserialize::impl$0::visit_map(serde::de::impls::impl$190::deserialize::MapVisitor&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt;, serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (30 samples, 12.45%)</title><rect x="77.5934%" y="1045" width="12.4481%" height="15" fill="rgb(89,200,200)" fg:x="187" fg:w="30"/><text x="77.8434%" y="1055.50">osrs_gph.exe`serde:..</text></g><g><title>osrs_gph.exe`serde::de::MapAccess::next_entry(serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (27 samples, 11.20%)</title><rect x="78.8382%" y="1029" width="11.2033%" height="15" fill="rgb(98,209,209)" fg:x="190" fg:w="27"/><text x="79.0882%" y="1039.50">osrs_gph.exe`ser..</text></g><g><title>osrs_gph.exe`serde::de::MapAccess::next_entry_seed(serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;*, core::marker::PhantomData&lt;alloc::string::String&gt;, core::marker::PhantomData (27 samples, 11.20%)</title><rect x="78.8382%" y="1013" width="11.2033%" height="15" fill="rgb(60,174,174)" fg:x="190" fg:w="27"/><text x="79.0882%" y="1023.50">osrs_gph.exe`ser..</text></g><g><title>osrs_gph.exe`serde_json::de::impl$11::next_key_seed&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;,core::marker::PhantomData&lt;alloc::string::String&gt; &gt;(serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;*, core::marker::PhantomData (1 samples, 0.41%)</title><rect x="89.6266%" y="997" width="0.4149%" height="15" fill="rgb(93,204,204)" fg:x="216" fg:w="1"/><text x="89.8766%" y="1007.50"></text></g><g><title>osrs_gph.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;alloc::string::String&gt;, serde_json::de::MapKey&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="89.6266%" y="981" width="0.4149%" height="15" fill="rgb(78,191,191)" fg:x="216" fg:w="1"/><text x="89.8766%" y="991.50"></text></g><g><title>osrs_gph.exe`serde::de::impls::impl$8::deserialize(serde_json::de::MapKey&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="89.6266%" y="965" width="0.4149%" height="15" fill="rgb(106,216,216)" fg:x="216" fg:w="1"/><text x="89.8766%" y="975.50"></text></g><g><title>osrs_gph.exe`serde_json::de::impl$19::deserialize_string(serde_json::de::MapKey&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="89.6266%" y="949" width="0.4149%" height="15" fill="rgb(95,206,206)" fg:x="216" fg:w="1"/><text x="89.8766%" y="959.50"></text></g><g><title>osrs_gph.exe`serde_json::de::impl$19::deserialize_any(serde_json::de::MapKey&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="89.6266%" y="933" width="0.4149%" height="15" fill="rgb(73,186,186)" fg:x="216" fg:w="1"/><text x="89.8766%" y="943.50"></text></g><g><title>osrs_gph.exe`serde_json::read::impl$4::parse_str&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;(serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;*, alloc::vec::Vec (1 samples, 0.41%)</title><rect x="89.6266%" y="917" width="0.4149%" height="15" fill="rgb(100,211,211)" fg:x="216" fg:w="1"/><text x="89.8766%" y="927.50"></text></g><g><title>osrs_gph.exe`serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;::parse_str_bytes(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, bool, enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,serde_json::error::Error&gt; &gt; (*)(serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="89.6266%" y="901" width="0.4149%" height="15" fill="rgb(68,182,182)" fg:x="216" fg:w="1"/><text x="89.8766%" y="911.50"></text></g><g><title>osrs_gph.exe`core::ops::function::FnOnce::call_once(enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,serde_json::error::Error&gt; &gt; (*)(serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;*, ref$&lt;slice2$&lt;u8&gt; &gt;), serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="89.6266%" y="885" width="0.4149%" height="15" fill="rgb(77,190,190)" fg:x="216" fg:w="1"/><text x="89.8766%" y="895.50"></text></g><g><title>osrs_gph.exe`serde_json::read::as_str(serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;*, ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="89.6266%" y="869" width="0.4149%" height="15" fill="rgb(107,217,217)" fg:x="216" fg:w="1"/><text x="89.8766%" y="879.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,core::str::error::Utf8Error&gt; &gt;::or_else(enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,core::str::error::Utf8Error&gt; &gt;, serde_json::read::as_str::closure_env$0&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (1 samples, 0.41%)</title><rect x="89.6266%" y="853" width="0.4149%" height="15" fill="rgb(79,191,191)" fg:x="216" fg:w="1"/><text x="89.8766%" y="863.50"></text></g><g><title>osrs_gph.exe`core::str::converts::from_utf8 (1 samples, 0.41%)</title><rect x="89.6266%" y="837" width="0.4149%" height="15" fill="rgb(96,207,207)" fg:x="216" fg:w="1"/><text x="89.8766%" y="847.50"></text></g><g><title>osrs_gph.exe`osrs_gph::api_request(osrs_gph::logging::Logging&lt;osrs_gph::api::API (37 samples, 15.35%)</title><rect x="75.1037%" y="1237" width="15.3527%" height="15" fill="rgb(80,192,192)" fg:x="181" fg:w="37"/><text x="75.3537%" y="1247.50">osrs_gph.exe`osrs_gph::a..</text></g><g><title>osrs_gph.exe`osrs_gph::logging::Logging&lt;osrs_gph::api::API&lt;alloc::string::String&gt; &gt;::request&lt;alloc::string::String,enum2$&lt;core::result::Result&lt;osrs_gph::data_types::PriceDataType,serde_json::error::Error&gt; &gt;,alloc::string::String,ref$&lt;osrs_gph::api_request::closure_env$0&gt; &gt;(alloc::string::String, osrs_gph::api_request::closure_env$0*, enum2$&lt;core::option::Option&lt;ref$ (37 samples, 15.35%)</title><rect x="75.1037%" y="1221" width="15.3527%" height="15" fill="rgb(68,181,181)" fg:x="181" fg:w="37"/><text x="75.3537%" y="1231.50">osrs_gph.exe`osrs_gph::l..</text></g><g><title>osrs_gph.exe`core::convert::impl$6::try_into (1 samples, 0.41%)</title><rect x="90.0415%" y="1205" width="0.4149%" height="15" fill="rgb(92,203,203)" fg:x="217" fg:w="1"/><text x="90.2915%" y="1215.50"></text></g><g><title>osrs_gph.exe`core::convert::impl$7::try_from (1 samples, 0.41%)</title><rect x="90.0415%" y="1189" width="0.4149%" height="15" fill="rgb(51,166,166)" fg:x="217" fg:w="1"/><text x="90.2915%" y="1199.50"></text></g><g><title>osrs_gph.exe`osrs_gph::api::impl$1::into (1 samples, 0.41%)</title><rect x="90.0415%" y="1173" width="0.4149%" height="15" fill="rgb(109,219,219)" fg:x="217" fg:w="1"/><text x="90.2915%" y="1183.50"></text></g><g><title>osrs_gph.exe`http::header::map::impl$6::try_from(std::collections::hash::map::HashMap (1 samples, 0.41%)</title><rect x="90.0415%" y="1157" width="0.4149%" height="15" fill="rgb(55,170,170)" fg:x="217" fg:w="1"/><text x="90.2915%" y="1167.50"></text></g><g><title>osrs_gph.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::string::String&gt;,http::header::map::impl$6::try_from::closure_env$0 (1 samples, 0.41%)</title><rect x="90.0415%" y="1141" width="0.4149%" height="15" fill="rgb(58,172,172)" fg:x="217" fg:w="1"/><text x="90.2915%" y="1151.50"></text></g><g><title>osrs_gph.exe`core::result::impl$25::from_iter(core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::string::String&gt;,http::header::map::impl$6::try_from::closure_env$0 (1 samples, 0.41%)</title><rect x="90.0415%" y="1125" width="0.4149%" height="15" fill="rgb(96,207,207)" fg:x="217" fg:w="1"/><text x="90.2915%" y="1135.50"></text></g><g><title>osrs_gph.exe`core::iter::adapters::try_process(core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::string::String&gt;,http::header::map::impl$6::try_from::closure_env$0&lt;alloc::string::String,alloc::string::String,http::header::value::HeaderValue&gt; &gt;, core::result::impl$25::from_iter::closure_env$0&lt;tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;,http::error::Error,http::header::map::HeaderMap&lt;http::header::value::HeaderValue&gt;,core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::string::String&gt;,http::header::map::impl$6::try_from::closure_env$0 (1 samples, 0.41%)</title><rect x="90.0415%" y="1109" width="0.4149%" height="15" fill="rgb(92,203,203)" fg:x="217" fg:w="1"/><text x="90.2915%" y="1119.50"></text></g><g><title>osrs_gph.exe`http::header::map::impl$5::from_iter&lt;http::header::value::HeaderValue,core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::string::String&gt;,http::header::map::impl$6::try_from::closure_env$0&lt;alloc::string::String,alloc::string::String,http::header::value::HeaderValue&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::convert::Infallible&gt;,http::error::Error&gt; &gt; &gt; &gt;(core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::string::String&gt;,http::header::map::impl$6::try_from::closure_env$0&lt;alloc::string::String,alloc::string::String,http::header::value::HeaderValue&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$ (1 samples, 0.41%)</title><rect x="90.0415%" y="1093" width="0.4149%" height="15" fill="rgb(58,172,172)" fg:x="217" fg:w="1"/><text x="90.2915%" y="1103.50"></text></g><g><title>osrs_gph.exe`http::header::map::impl$8::extend(http::header::map::HeaderMap&lt;http::header::value::HeaderValue&gt;*, core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::string::String&gt;,http::header::map::impl$6::try_from::closure_env$0&lt;alloc::string::String,alloc::string::String,http::header::value::HeaderValue&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$ (1 samples, 0.41%)</title><rect x="90.0415%" y="1077" width="0.4149%" height="15" fill="rgb(80,192,192)" fg:x="217" fg:w="1"/><text x="90.2915%" y="1087.50"></text></g><g><title>osrs_gph.exe`core::iter::adapters::impl$0::next&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::string::String&gt;,http::header::map::impl$6::try_from::closure_env$0&lt;alloc::string::String,alloc::string::String,http::header::value::HeaderValue&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::convert::Infallible&gt;,http::error::Error&gt; &gt; &gt;(core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::string::String&gt;,http::header::map::impl$6::try_from::closure_env$0&lt;alloc::string::String,alloc::string::String,http::header::value::HeaderValue&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$ (1 samples, 0.41%)</title><rect x="90.0415%" y="1061" width="0.4149%" height="15" fill="rgb(74,187,187)" fg:x="217" fg:w="1"/><text x="90.2915%" y="1071.50"></text></g><g><title>osrs_gph.exe`core::iter::traits::iterator::Iterator::try_for_each(core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::string::String&gt;,http::header::map::impl$6::try_from::closure_env$0&lt;alloc::string::String,alloc::string::String,http::header::value::HeaderValue&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::convert::Infallible&gt;,http::error::Error&gt; &gt; &gt;*, enum2$&lt;core::ops::control_flow::ControlFlow&lt;tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;,tuple$&lt;&gt; &gt; &gt; (*)(tuple$ (1 samples, 0.41%)</title><rect x="90.0415%" y="1045" width="0.4149%" height="15" fill="rgb(99,210,210)" fg:x="217" fg:w="1"/><text x="90.2915%" y="1055.50"></text></g><g><title>osrs_gph.exe`core::iter::adapters::impl$0::try_fold(core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::string::String&gt;,http::header::map::impl$6::try_from::closure_env$0&lt;alloc::string::String,alloc::string::String,http::header::value::HeaderValue&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::convert::Infallible&gt;,http::error::Error&gt; &gt; &gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;,tuple$&lt;&gt; &gt; &gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;,tuple$&lt;&gt; &gt; &gt; (*)(tuple$ (1 samples, 0.41%)</title><rect x="90.0415%" y="1029" width="0.4149%" height="15" fill="rgb(52,167,167)" fg:x="217" fg:w="1"/><text x="90.2915%" y="1039.50"></text></g><g><title>osrs_gph.exe`core::iter::adapters::map::impl$2::try_fold(core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::string::String&gt;,http::header::map::impl$6::try_from::closure_env$0&lt;alloc::string::String,alloc::string::String,http::header::value::HeaderValue&gt; &gt;*, tuple$&lt;&gt;, core::iter::adapters::impl$0::try_fold::closure_env$0&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::string::String&gt;,http::header::map::impl$6::try_from::closure_env$0&lt;alloc::string::String,alloc::string::String,http::header::value::HeaderValue&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::convert::Infallible&gt;,http::error::Error&gt; &gt;,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;,tuple$&lt;&gt; &gt; &gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;,tuple$&lt;&gt; &gt; &gt; (*)(tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;)&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;,tuple$ (1 samples, 0.41%)</title><rect x="90.0415%" y="1013" width="0.4149%" height="15" fill="rgb(51,166,166)" fg:x="217" fg:w="1"/><text x="90.2915%" y="1023.50"></text></g><g><title>osrs_gph.exe`core::iter::traits::iterator::Iterator::try_fold(std::collections::hash::map::Iter&lt;alloc::string::String,alloc::string::String&gt;*, tuple$&lt;&gt;, core::iter::adapters::map::map_try_fold::closure_env$0&lt;tuple$&lt;ref$&lt;alloc::string::String&gt;,ref$&lt;alloc::string::String&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;,http::error::Error&gt; &gt;,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;enum2$&lt;core::ops::control_flow::ControlFlow&lt;tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;,tuple$&lt;&gt; &gt; &gt;,tuple$&lt;&gt; &gt; &gt;,http::header::map::impl$6::try_from::closure_env$0&lt;alloc::string::String,alloc::string::String,http::header::value::HeaderValue&gt;,core::iter::adapters::impl$0::try_fold::closure_env$0&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::string::String&gt;,http::header::map::impl$6::try_from::closure_env$0&lt;alloc::string::String,alloc::string::String,http::header::value::HeaderValue&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::convert::Infallible&gt;,http::error::Error&gt; &gt;,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;,tuple$&lt;&gt; &gt; &gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;,tuple$&lt;&gt; &gt; &gt; (*)(tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;)&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;,tuple$ (1 samples, 0.41%)</title><rect x="90.0415%" y="997" width="0.4149%" height="15" fill="rgb(72,185,185)" fg:x="217" fg:w="1"/><text x="90.2915%" y="1007.50"></text></g><g><title>osrs_gph.exe`core::iter::adapters::map::map_try_fold::closure$0(core::iter::adapters::map::map_try_fold::closure_env$0&lt;tuple$&lt;ref$&lt;alloc::string::String&gt;,ref$&lt;alloc::string::String&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;,http::error::Error&gt; &gt;,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;enum2$&lt;core::ops::control_flow::ControlFlow&lt;tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;,tuple$&lt;&gt; &gt; &gt;,tuple$&lt;&gt; &gt; &gt;,http::header::map::impl$6::try_from::closure_env$0&lt;alloc::string::String,alloc::string::String,http::header::value::HeaderValue&gt;,core::iter::adapters::impl$0::try_fold::closure_env$0&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::string::String&gt;,http::header::map::impl$6::try_from::closure_env$0&lt;alloc::string::String,alloc::string::String,http::header::value::HeaderValue&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::convert::Infallible&gt;,http::error::Error&gt; &gt;,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;,tuple$&lt;&gt; &gt; &gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;,tuple$&lt;&gt; &gt; &gt; (*)(tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;)&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;tuple$&lt;http::header::name::HeaderName,http::header::value::HeaderValue&gt;,tuple$&lt;&gt; &gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, tuple$&lt;ref$&lt;alloc::string::String&gt;,ref$ (1 samples, 0.41%)</title><rect x="90.0415%" y="981" width="0.4149%" height="15" fill="rgb(95,207,207)" fg:x="217" fg:w="1"/><text x="90.2915%" y="991.50"></text></g><g><title>osrs_gph.exe`http::header::map::impl$6::try_from::closure$0(http::header::map::impl$6::try_from::closure_env$0&lt;alloc::string::String,alloc::string::String,http::header::value::HeaderValue&gt;*, tuple$&lt;ref$&lt;alloc::string::String&gt;,ref$ (1 samples, 0.41%)</title><rect x="90.0415%" y="965" width="0.4149%" height="15" fill="rgb(83,196,196)" fg:x="217" fg:w="1"/><text x="90.2915%" y="975.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;http::header::name::HeaderName,http::header::name::InvalidHeaderName&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;http::header::name::HeaderName,http::header::name::InvalidHeaderName&gt; &gt;, http::error::Error (*) (1 samples, 0.41%)</title><rect x="90.0415%" y="949" width="0.4149%" height="15" fill="rgb(55,169,169)" fg:x="217" fg:w="1"/><text x="90.2915%" y="959.50"></text></g><g><title>osrs_gph.exe`http::header::name::HeaderName::from_bytes(ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="90.0415%" y="933" width="0.4149%" height="15" fill="rgb(75,188,188)" fg:x="217" fg:w="1"/><text x="90.2915%" y="943.50"></text></g><g><title>osrs_gph.exe`http::header::name::parse_hdr(ref$&lt;slice2$&lt;u8&gt; &gt;, core::mem::maybe_uninit::MaybeUninit (1 samples, 0.41%)</title><rect x="90.0415%" y="917" width="0.4149%" height="15" fill="rgb(77,190,190)" fg:x="217" fg:w="1"/><text x="90.2915%" y="927.50"></text></g><g><title>osrs_gph.exe`http::header::name::StandardHeader::from_bytes(ref$&lt;slice2$ (1 samples, 0.41%)</title><rect x="90.0415%" y="901" width="0.4149%" height="15" fill="rgb(90,202,202)" fg:x="217" fg:w="1"/><text x="90.2915%" y="911.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="90.4564%" y="1237" width="0.4149%" height="15" fill="rgb(93,205,205)" fg:x="218" fg:w="1"/><text x="90.7064%" y="1247.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (1 samples, 0.41%)</title><rect x="90.4564%" y="1221" width="0.4149%" height="15" fill="rgb(56,170,170)" fg:x="218" fg:w="1"/><text x="90.7064%" y="1231.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (1 samples, 0.41%)</title><rect x="90.4564%" y="1205" width="0.4149%" height="15" fill="rgb(107,217,217)" fg:x="218" fg:w="1"/><text x="90.7064%" y="1215.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (1 samples, 0.41%)</title><rect x="90.4564%" y="1189" width="0.4149%" height="15" fill="rgb(90,202,202)" fg:x="218" fg:w="1"/><text x="90.7064%" y="1199.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$18::drop(hashbrown::raw::RawTable&lt;tuple$ (1 samples, 0.41%)</title><rect x="90.4564%" y="1173" width="0.4149%" height="15" fill="rgb(75,188,188)" fg:x="218" fg:w="1"/><text x="90.7064%" y="1183.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.41%)</title><rect x="90.4564%" y="1157" width="0.4149%" height="15" fill="rgb(68,181,181)" fg:x="218" fg:w="1"/><text x="90.7064%" y="1167.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::drop_elements (1 samples, 0.41%)</title><rect x="90.4564%" y="1141" width="0.4149%" height="15" fill="rgb(101,211,211)" fg:x="218" fg:w="1"/><text x="90.7064%" y="1151.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt; &gt;::drop (1 samples, 0.41%)</title><rect x="90.4564%" y="1125" width="0.4149%" height="15" fill="rgb(103,213,213)" fg:x="218" fg:w="1"/><text x="90.7064%" y="1135.50"></text></g><g><title>osrs_gph.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (1 samples, 0.41%)</title><rect x="90.4564%" y="1109" width="0.4149%" height="15" fill="rgb(82,195,195)" fg:x="218" fg:w="1"/><text x="90.7064%" y="1119.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tuple$ (1 samples, 0.41%)</title><rect x="90.4564%" y="1093" width="0.4149%" height="15" fill="rgb(97,208,208)" fg:x="218" fg:w="1"/><text x="90.7064%" y="1103.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="90.4564%" y="1077" width="0.4149%" height="15" fill="rgb(91,203,203)" fg:x="218" fg:w="1"/><text x="90.7064%" y="1087.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.41%)</title><rect x="90.4564%" y="1061" width="0.4149%" height="15" fill="rgb(60,174,174)" fg:x="218" fg:w="1"/><text x="90.7064%" y="1071.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.41%)</title><rect x="90.4564%" y="1045" width="0.4149%" height="15" fill="rgb(106,216,216)" fg:x="218" fg:w="1"/><text x="90.7064%" y="1055.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1 samples, 0.41%)</title><rect x="90.4564%" y="1029" width="0.4149%" height="15" fill="rgb(81,193,193)" fg:x="218" fg:w="1"/><text x="90.7064%" y="1039.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.41%)</title><rect x="90.4564%" y="1013" width="0.4149%" height="15" fill="rgb(64,178,178)" fg:x="218" fg:w="1"/><text x="90.7064%" y="1023.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::dealloc (1 samples, 0.41%)</title><rect x="90.4564%" y="997" width="0.4149%" height="15" fill="rgb(58,173,173)" fg:x="218" fg:w="1"/><text x="90.7064%" y="1007.50"></text></g><g><title>`0x7FFE593EAB11 (1 samples, 0.41%)</title><rect x="90.4564%" y="981" width="0.4149%" height="15" fill="rgb(225,225,68)" fg:x="218" fg:w="1"/><text x="90.7064%" y="991.50"></text></g><g><title>`0x7FFE5945C06F (1 samples, 0.41%)</title><rect x="90.4564%" y="965" width="0.4149%" height="15" fill="rgb(191,191,56)" fg:x="218" fg:w="1"/><text x="90.7064%" y="975.50"></text></g><g><title>osrs_gph.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (91 samples, 37.76%)</title><rect x="53.5270%" y="1285" width="37.7593%" height="15" fill="rgb(87,199,199)" fg:x="129" fg:w="91"/><text x="53.7770%" y="1295.50">osrs_gph.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::r..</text></g><g><title>osrs_gph.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (91 samples, 37.76%)</title><rect x="53.5270%" y="1269" width="37.7593%" height="15" fill="rgb(81,193,193)" fg:x="129" fg:w="91"/><text x="53.7770%" y="1279.50">osrs_gph.exe`std::sys_common::backtrace::__rust_begin_short_b..</text></g><g><title>osrs_gph.exe`osrs_gph::main (91 samples, 37.76%)</title><rect x="53.5270%" y="1253" width="37.7593%" height="15" fill="rgb(63,177,177)" fg:x="129" fg:w="91"/><text x="53.7770%" y="1263.50">osrs_gph.exe`osrs_gph::main</text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(slog::Logger&lt;alloc::sync::Arc&lt;dyn$&lt;slog::SendSyncRefUnwindSafeDrain&lt;assoc$&lt;Err,slog::private::NeverStruct&gt;,assoc$&lt;Ok,tuple$ (1 samples, 0.41%)</title><rect x="90.8714%" y="1237" width="0.4149%" height="15" fill="rgb(109,219,219)" fg:x="219" fg:w="1"/><text x="91.1214%" y="1247.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.41%)</title><rect x="90.8714%" y="1221" width="0.4149%" height="15" fill="rgb(54,169,169)" fg:x="219" fg:w="1"/><text x="91.1214%" y="1231.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::sync::Arc&lt;dyn$ (1 samples, 0.41%)</title><rect x="90.8714%" y="1205" width="0.4149%" height="15" fill="rgb(103,213,213)" fg:x="219" fg:w="1"/><text x="91.1214%" y="1215.50"></text></g><g><title>osrs_gph.exe`alloc::sync::impl$33::drop(alloc::sync::Arc&lt;dyn$ (1 samples, 0.41%)</title><rect x="90.8714%" y="1189" width="0.4149%" height="15" fill="rgb(76,189,189)" fg:x="219" fg:w="1"/><text x="91.1214%" y="1199.50"></text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;dyn$&lt;slog::SendSyncRefUnwindSafeKV&gt;,alloc::alloc::Global&gt;::inner (1 samples, 0.41%)</title><rect x="90.8714%" y="1173" width="0.4149%" height="15" fill="rgb(56,170,170)" fg:x="219" fg:w="1"/><text x="91.1214%" y="1183.50"></text></g><g><title>osrs_gph.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;dyn$&lt;slog::SendSyncRefUnwindSafeKV&gt; &gt; &gt;::as_ref (1 samples, 0.41%)</title><rect x="90.8714%" y="1157" width="0.4149%" height="15" fill="rgb(103,213,213)" fg:x="219" fg:w="1"/><text x="91.1214%" y="1167.50"></text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;dyn$&lt;slog::SendSyncRefUnwindSafeDrain&lt;assoc$&lt;Err,slog::private::NeverStruct&gt;,assoc$&lt;Ok,tuple$&lt;&gt; &gt; &gt; &gt;,alloc::alloc::Global&gt;::drop_slow&lt;dyn$&lt;slog::SendSyncRefUnwindSafeDrain&lt;assoc$&lt;Err,slog::private::NeverStruct&gt;,assoc$&lt;Ok,tuple$&lt;&gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; (1 samples, 0.41%)</title><rect x="90.8714%" y="1141" width="0.4149%" height="15" fill="rgb(70,184,184)" fg:x="219" fg:w="1"/><text x="91.1214%" y="1151.50"></text></g><g><title>osrs_gph.exe`core::mem::drop(alloc::sync::Weak&lt;dyn$&lt;slog::SendSyncRefUnwindSafeDrain&lt;assoc$&lt;Err,slog::private::NeverStruct&gt;,assoc$&lt;Ok,tuple$&lt;&gt; &gt; &gt; &gt;,ref$ (1 samples, 0.41%)</title><rect x="90.8714%" y="1125" width="0.4149%" height="15" fill="rgb(102,213,213)" fg:x="219" fg:w="1"/><text x="91.1214%" y="1135.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::sync::Weak&lt;dyn$&lt;slog::SendSyncRefUnwindSafeDrain&lt;assoc$&lt;Err,slog::private::NeverStruct&gt;,assoc$&lt;Ok,tuple$&lt;&gt; &gt; &gt; &gt;,ref$ (1 samples, 0.41%)</title><rect x="90.8714%" y="1109" width="0.4149%" height="15" fill="rgb(65,179,179)" fg:x="219" fg:w="1"/><text x="91.1214%" y="1119.50"></text></g><g><title>osrs_gph.exe`alloc::sync::impl$42::drop(alloc::sync::Weak&lt;dyn$&lt;slog::SendSyncRefUnwindSafeDrain&lt;assoc$&lt;Err,slog::private::NeverStruct&gt;,assoc$&lt;Ok,tuple$&lt;&gt; &gt; &gt; &gt;,ref$ (1 samples, 0.41%)</title><rect x="90.8714%" y="1093" width="0.4149%" height="15" fill="rgb(63,177,177)" fg:x="219" fg:w="1"/><text x="91.1214%" y="1103.50"></text></g><g><title>osrs_gph.exe`alloc::sync::Weak&lt;dyn$&lt;slog::SendSyncRefUnwindSafeDrain&lt;assoc$&lt;Err,slog::private::NeverStruct&gt;,assoc$&lt;Ok,tuple$&lt;&gt; &gt; &gt; &gt;,ref$&lt;alloc::alloc::Global&gt; &gt;::inner (1 samples, 0.41%)</title><rect x="90.8714%" y="1077" width="0.4149%" height="15" fill="rgb(81,193,193)" fg:x="219" fg:w="1"/><text x="91.1214%" y="1087.50"></text></g><g><title>osrs_gph.exe`alloc::rc::is_dangling(ptr_mut$&lt;alloc::sync::ArcInner&lt;dyn$&lt;slog::SendSyncRefUnwindSafeDrain&lt;assoc$&lt;Err,slog::private::NeverStruct&gt;,assoc$&lt;Ok,tuple$ (1 samples, 0.41%)</title><rect x="90.8714%" y="1061" width="0.4149%" height="15" fill="rgb(85,197,197)" fg:x="219" fg:w="1"/><text x="91.1214%" y="1071.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;slog_async::AsyncCore&gt; (1 samples, 0.41%)</title><rect x="90.8714%" y="1045" width="0.4149%" height="15" fill="rgb(93,205,205)" fg:x="219" fg:w="1"/><text x="91.1214%" y="1055.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(std::sync::mutex::Mutex&lt;enum2$&lt;core::option::Option&lt;std::thread::JoinHandle&lt;tuple$ (1 samples, 0.41%)</title><rect x="90.8714%" y="1029" width="0.4149%" height="15" fill="rgb(76,189,189)" fg:x="219" fg:w="1"/><text x="91.1214%" y="1039.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(core::cell::UnsafeCell&lt;enum2$&lt;core::option::Option&lt;std::thread::JoinHandle&lt;tuple$ (1 samples, 0.41%)</title><rect x="90.8714%" y="1013" width="0.4149%" height="15" fill="rgb(96,207,207)" fg:x="219" fg:w="1"/><text x="91.1214%" y="1023.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;std::thread::JoinHandle&lt;tuple$ (1 samples, 0.41%)</title><rect x="90.8714%" y="997" width="0.4149%" height="15" fill="rgb(52,166,166)" fg:x="219" fg:w="1"/><text x="91.1214%" y="1007.50"></text></g><g><title>osrs_gph.exe`thread_local::impl$3::drop&lt;crossbeam_channel::channel::Sender&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt; &gt;(thread_local::ThreadLocal&lt;crossbeam_channel::channel::Sender&lt;enum2$ (1 samples, 0.41%)</title><rect x="90.8714%" y="981" width="0.4149%" height="15" fill="rgb(81,193,193)" fg:x="219" fg:w="1"/><text x="91.1214%" y="991.50"></text></g><g><title>osrs_gph.exe`thread_local::deallocate_bucket(thread_local::Entry&lt;crossbeam_channel::channel::Sender&lt;enum2$ (1 samples, 0.41%)</title><rect x="90.8714%" y="965" width="0.4149%" height="15" fill="rgb(69,182,182)" fg:x="219" fg:w="1"/><text x="91.1214%" y="975.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::boxed::Box&lt;slice2$&lt;thread_local::Entry&lt;crossbeam_channel::channel::Sender&lt;enum2$ (1 samples, 0.41%)</title><rect x="90.8714%" y="949" width="0.4149%" height="15" fill="rgb(59,173,173)" fg:x="219" fg:w="1"/><text x="91.1214%" y="959.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;thread_local::Entry&lt;crossbeam_channel::channel::Sender&lt;enum2$ (1 samples, 0.41%)</title><rect x="90.8714%" y="933" width="0.4149%" height="15" fill="rgb(81,193,193)" fg:x="219" fg:w="1"/><text x="91.1214%" y="943.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(thread_local::Entry&lt;crossbeam_channel::channel::Sender&lt;enum2$ (1 samples, 0.41%)</title><rect x="90.8714%" y="917" width="0.4149%" height="15" fill="rgb(76,189,189)" fg:x="219" fg:w="1"/><text x="91.1214%" y="927.50"></text></g><g><title>osrs_gph.exe`thread_local::impl$0::drop(thread_local::Entry&lt;crossbeam_channel::channel::Sender&lt;enum2$ (1 samples, 0.41%)</title><rect x="90.8714%" y="901" width="0.4149%" height="15" fill="rgb(102,213,213)" fg:x="219" fg:w="1"/><text x="91.1214%" y="911.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(crossbeam_channel::channel::Sender&lt;enum2$ (1 samples, 0.41%)</title><rect x="90.8714%" y="885" width="0.4149%" height="15" fill="rgb(98,209,209)" fg:x="219" fg:w="1"/><text x="91.1214%" y="895.50"></text></g><g><title>osrs_gph.exe`crossbeam_channel::channel::impl$5::drop(crossbeam_channel::channel::Sender&lt;enum2$ (1 samples, 0.41%)</title><rect x="90.8714%" y="869" width="0.4149%" height="15" fill="rgb(78,190,190)" fg:x="219" fg:w="1"/><text x="91.1214%" y="879.50"></text></g><g><title>osrs_gph.exe`crossbeam_channel::counter::Sender&lt;crossbeam_channel::flavors::array::Channel&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt; &gt;::release(crossbeam_channel::channel::impl$5::drop::closure_env$0&lt;enum2$ (1 samples, 0.41%)</title><rect x="90.8714%" y="853" width="0.4149%" height="15" fill="rgb(96,207,207)" fg:x="219" fg:w="1"/><text x="91.1214%" y="863.50"></text></g><g><title>osrs_gph.exe`core::mem::drop(crossbeam_channel::counter::Counter&lt;crossbeam_channel::flavors::array::Channel&lt;enum2$ (1 samples, 0.41%)</title><rect x="90.8714%" y="837" width="0.4149%" height="15" fill="rgb(68,181,181)" fg:x="219" fg:w="1"/><text x="91.1214%" y="847.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(crossbeam_channel::counter::Counter&lt;crossbeam_channel::flavors::array::Channel&lt;enum2$ (1 samples, 0.41%)</title><rect x="90.8714%" y="821" width="0.4149%" height="15" fill="rgb(104,214,214)" fg:x="219" fg:w="1"/><text x="91.1214%" y="831.50"></text></g><g><title>osrs_gph.exe`alloc::boxed::impl$8::drop(crossbeam_channel::counter::Counter&lt;crossbeam_channel::flavors::array::Channel&lt;enum2$ (1 samples, 0.41%)</title><rect x="90.8714%" y="805" width="0.4149%" height="15" fill="rgb(51,166,166)" fg:x="219" fg:w="1"/><text x="91.1214%" y="815.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.41%)</title><rect x="90.8714%" y="789" width="0.4149%" height="15" fill="rgb(61,175,175)" fg:x="219" fg:w="1"/><text x="91.1214%" y="799.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::dealloc (1 samples, 0.41%)</title><rect x="90.8714%" y="773" width="0.4149%" height="15" fill="rgb(85,197,197)" fg:x="219" fg:w="1"/><text x="91.1214%" y="783.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;crossbeam_channel::counter::Counter&lt;crossbeam_channel::flavors::array::Channel&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt; &gt; &gt;(crossbeam_channel::counter::Counter&lt;crossbeam_channel::flavors::array::Channel&lt;enum2$ (1 samples, 0.41%)</title><rect x="90.8714%" y="757" width="0.4149%" height="15" fill="rgb(73,186,186)" fg:x="219" fg:w="1"/><text x="91.1214%" y="767.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(crossbeam_channel::flavors::array::Channel&lt;enum2$ (1 samples, 0.41%)</title><rect x="90.8714%" y="741" width="0.4149%" height="15" fill="rgb(73,186,186)" fg:x="219" fg:w="1"/><text x="91.1214%" y="751.50"></text></g><g><title>`0x7FFE593EAB11 (1 samples, 0.41%)</title><rect x="90.8714%" y="725" width="0.4149%" height="15" fill="rgb(196,196,57)" fg:x="219" fg:w="1"/><text x="91.1214%" y="735.50"></text></g><g><title>`0x7FFE593EBE44 (1 samples, 0.41%)</title><rect x="90.8714%" y="709" width="0.4149%" height="15" fill="rgb(219,219,66)" fg:x="219" fg:w="1"/><text x="91.1214%" y="719.50"></text></g><g><title>`0x7FFE593E9728 (1 samples, 0.41%)</title><rect x="90.8714%" y="693" width="0.4149%" height="15" fill="rgb(176,176,50)" fg:x="219" fg:w="1"/><text x="91.1214%" y="703.50"></text></g><g><title>`0x7FFE593F4B1B (1 samples, 0.41%)</title><rect x="90.8714%" y="677" width="0.4149%" height="15" fill="rgb(211,211,63)" fg:x="219" fg:w="1"/><text x="91.1214%" y="687.50"></text></g><g><title>`0x7FFE593F63FA (1 samples, 0.41%)</title><rect x="90.8714%" y="661" width="0.4149%" height="15" fill="rgb(209,209,62)" fg:x="219" fg:w="1"/><text x="91.1214%" y="671.50"></text></g><g><title>`0x7FFE593F64A8 (1 samples, 0.41%)</title><rect x="90.8714%" y="645" width="0.4149%" height="15" fill="rgb(196,196,57)" fg:x="219" fg:w="1"/><text x="91.1214%" y="655.50"></text></g><g><title>`0x7FFE593F65E6 (1 samples, 0.41%)</title><rect x="90.8714%" y="629" width="0.4149%" height="15" fill="rgb(183,183,53)" fg:x="219" fg:w="1"/><text x="91.1214%" y="639.50"></text></g><g><title>`0x7FFE5944F734 (1 samples, 0.41%)</title><rect x="90.8714%" y="613" width="0.4149%" height="15" fill="rgb(226,226,68)" fg:x="219" fg:w="1"/><text x="91.1214%" y="623.50"></text></g><g><title>osrs_gph.exe`std::rt::lang_start_internal::closure$2 (92 samples, 38.17%)</title><rect x="53.5270%" y="1317" width="38.1743%" height="15" fill="rgb(80,192,192)" fg:x="129" fg:w="92"/><text x="53.7770%" y="1327.50">osrs_gph.exe`std::rt::lang_start_internal::closure$2</text></g><g><title>osrs_gph.exe`std::panic::catch_unwind (92 samples, 38.17%)</title><rect x="53.5270%" y="1301" width="38.1743%" height="15" fill="rgb(66,180,180)" fg:x="129" fg:w="92"/><text x="53.7770%" y="1311.50">osrs_gph.exe`std::panic::catch_unwind</text></g><g><title>osrs_gph.exe`std::panicking::try (1 samples, 0.41%)</title><rect x="91.2863%" y="1285" width="0.4149%" height="15" fill="rgb(84,196,196)" fg:x="220" fg:w="1"/><text x="91.5363%" y="1295.50"></text></g><g><title>osrs_gph.exe`std::panicking::try::do_call (1 samples, 0.41%)</title><rect x="91.2863%" y="1269" width="0.4149%" height="15" fill="rgb(91,203,203)" fg:x="220" fg:w="1"/><text x="91.5363%" y="1279.50"></text></g><g><title>osrs_gph.exe`core::ops::function::impls::impl$2::call_once (1 samples, 0.41%)</title><rect x="91.2863%" y="1253" width="0.4149%" height="15" fill="rgb(74,187,187)" fg:x="220" fg:w="1"/><text x="91.5363%" y="1263.50"></text></g><g><title>osrs_gph.exe`invoke_main() (93 samples, 38.59%)</title><rect x="53.5270%" y="1413" width="38.5892%" height="15" fill="rgb(194,194,57)" fg:x="129" fg:w="93"/><text x="53.7770%" y="1423.50">osrs_gph.exe`invoke_main()</text></g><g><title>osrs_gph.exe`std::rt::lang_start&lt;tuple$&lt;&gt; &gt;(void (*) (93 samples, 38.59%)</title><rect x="53.5270%" y="1397" width="38.5892%" height="15" fill="rgb(74,187,187)" fg:x="129" fg:w="93"/><text x="53.7770%" y="1407.50">osrs_gph.exe`std::rt::lang_start&lt;tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>osrs_gph.exe`std::rt::lang_start_internal (93 samples, 38.59%)</title><rect x="53.5270%" y="1381" width="38.5892%" height="15" fill="rgb(55,170,170)" fg:x="129" fg:w="93"/><text x="53.7770%" y="1391.50">osrs_gph.exe`std::rt::lang_start_internal</text></g><g><title>osrs_gph.exe`std::panic::catch_unwind (93 samples, 38.59%)</title><rect x="53.5270%" y="1365" width="38.5892%" height="15" fill="rgb(83,195,195)" fg:x="129" fg:w="93"/><text x="53.7770%" y="1375.50">osrs_gph.exe`std::panic::catch_unwind</text></g><g><title>osrs_gph.exe`std::panicking::try (93 samples, 38.59%)</title><rect x="53.5270%" y="1349" width="38.5892%" height="15" fill="rgb(83,195,195)" fg:x="129" fg:w="93"/><text x="53.7770%" y="1359.50">osrs_gph.exe`std::panicking::try</text></g><g><title>osrs_gph.exe`std::panicking::try::do_call (93 samples, 38.59%)</title><rect x="53.5270%" y="1333" width="38.5892%" height="15" fill="rgb(94,205,205)" fg:x="129" fg:w="93"/><text x="53.7770%" y="1343.50">osrs_gph.exe`std::panicking::try::do_call</text></g><g><title>osrs_gph.exe`core::ops::function::FnOnce::call_once (1 samples, 0.41%)</title><rect x="91.7012%" y="1317" width="0.4149%" height="15" fill="rgb(60,174,174)" fg:x="221" fg:w="1"/><text x="91.9512%" y="1327.50"></text></g><g><title>osrs_gph.exe`std::rt::cleanup (1 samples, 0.41%)</title><rect x="91.7012%" y="1301" width="0.4149%" height="15" fill="rgb(89,201,201)" fg:x="221" fg:w="1"/><text x="91.9512%" y="1311.50"></text></g><g><title>osrs_gph.exe`std::sync::once::Once::call_once (1 samples, 0.41%)</title><rect x="91.7012%" y="1285" width="0.4149%" height="15" fill="rgb(54,169,169)" fg:x="221" fg:w="1"/><text x="91.9512%" y="1295.50"></text></g><g><title>osrs_gph.exe`std::sys_common::once::queue::Once::call (1 samples, 0.41%)</title><rect x="91.7012%" y="1269" width="0.4149%" height="15" fill="rgb(79,192,192)" fg:x="221" fg:w="1"/><text x="91.9512%" y="1279.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell::get (1 samples, 0.41%)</title><rect x="91.7012%" y="1253" width="0.4149%" height="15" fill="rgb(51,166,166)" fg:x="221" fg:w="1"/><text x="91.9512%" y="1263.50"></text></g><g><title>osrs_gph.exe`std::sync::once::impl$2::call_once::closure$0&lt;std::rt::cleanup::closure_env$0&gt; (1 samples, 0.41%)</title><rect x="91.7012%" y="1237" width="0.4149%" height="15" fill="rgb(96,207,207)" fg:x="221" fg:w="1"/><text x="91.9512%" y="1247.50"></text></g><g><title>`0x7FFE579C1480 (1 samples, 0.41%)</title><rect x="91.7012%" y="1221" width="0.4149%" height="15" fill="rgb(227,227,69)" fg:x="221" fg:w="1"/><text x="91.9512%" y="1231.50"></text></g><g><title>`0x7FFE579C1496 (1 samples, 0.41%)</title><rect x="91.7012%" y="1205" width="0.4149%" height="15" fill="rgb(215,215,64)" fg:x="221" fg:w="1"/><text x="91.9512%" y="1215.50"></text></g><g><title>`0x7FFE579C0AA8 (1 samples, 0.41%)</title><rect x="91.7012%" y="1189" width="0.4149%" height="15" fill="rgb(224,224,67)" fg:x="221" fg:w="1"/><text x="91.9512%" y="1199.50"></text></g><g><title>`0x7FFE579C0B6A (1 samples, 0.41%)</title><rect x="91.7012%" y="1173" width="0.4149%" height="15" fill="rgb(195,195,57)" fg:x="221" fg:w="1"/><text x="91.9512%" y="1183.50"></text></g><g><title>`0x7FFE579C0DBB (1 samples, 0.41%)</title><rect x="91.7012%" y="1157" width="0.4149%" height="15" fill="rgb(181,181,52)" fg:x="221" fg:w="1"/><text x="91.9512%" y="1167.50"></text></g><g><title>`0x7FFE579C12D7 (1 samples, 0.41%)</title><rect x="91.7012%" y="1141" width="0.4149%" height="15" fill="rgb(177,177,51)" fg:x="221" fg:w="1"/><text x="91.9512%" y="1151.50"></text></g><g><title>`0x7FFE579C137E (1 samples, 0.41%)</title><rect x="91.7012%" y="1125" width="0.4149%" height="15" fill="rgb(209,209,62)" fg:x="221" fg:w="1"/><text x="91.9512%" y="1135.50"></text></g><g><title>`0x7FFE579C128A (1 samples, 0.41%)</title><rect x="91.7012%" y="1109" width="0.4149%" height="15" fill="rgb(201,201,59)" fg:x="221" fg:w="1"/><text x="91.9512%" y="1119.50"></text></g><g><title>`0x7FFE579C154C (1 samples, 0.41%)</title><rect x="91.7012%" y="1093" width="0.4149%" height="15" fill="rgb(212,212,63)" fg:x="221" fg:w="1"/><text x="91.9512%" y="1103.50"></text></g><g><title>`0x7FFE56B38F6E (1 samples, 0.41%)</title><rect x="91.7012%" y="1077" width="0.4149%" height="15" fill="rgb(229,229,69)" fg:x="221" fg:w="1"/><text x="91.9512%" y="1087.50"></text></g><g><title>`0x7FFE593DCEC2 (1 samples, 0.41%)</title><rect x="91.7012%" y="1061" width="0.4149%" height="15" fill="rgb(178,178,51)" fg:x="221" fg:w="1"/><text x="91.9512%" y="1071.50"></text></g><g><title>`0x7FFE593D2129 (1 samples, 0.41%)</title><rect x="91.7012%" y="1045" width="0.4149%" height="15" fill="rgb(215,215,64)" fg:x="221" fg:w="1"/><text x="91.9512%" y="1055.50"></text></g><g><title>`0x7FFE59423613 (1 samples, 0.41%)</title><rect x="91.7012%" y="1029" width="0.4149%" height="15" fill="rgb(180,180,51)" fg:x="221" fg:w="1"/><text x="91.9512%" y="1039.50"></text></g><g><title>`0x7FFE5942364D (1 samples, 0.41%)</title><rect x="91.7012%" y="1013" width="0.4149%" height="15" fill="rgb(185,185,53)" fg:x="221" fg:w="1"/><text x="91.9512%" y="1023.50"></text></g><g><title>`0x7FFE594236A7 (1 samples, 0.41%)</title><rect x="91.7012%" y="997" width="0.4149%" height="15" fill="rgb(191,191,56)" fg:x="221" fg:w="1"/><text x="91.9512%" y="1007.50"></text></g><g><title>`0x7FFE593E290B (1 samples, 0.41%)</title><rect x="91.7012%" y="981" width="0.4149%" height="15" fill="rgb(218,218,65)" fg:x="221" fg:w="1"/><text x="91.9512%" y="991.50"></text></g><g><title>`0x7FFE593C072D (1 samples, 0.41%)</title><rect x="92.1162%" y="1253" width="0.4149%" height="15" fill="rgb(176,176,50)" fg:x="222" fg:w="1"/><text x="92.3662%" y="1263.50"></text></g><g><title>`0x7FFE5944F554 (1 samples, 0.41%)</title><rect x="92.1162%" y="1237" width="0.4149%" height="15" fill="rgb(196,196,57)" fg:x="222" fg:w="1"/><text x="92.3662%" y="1247.50"></text></g><g><title>`0x7FFE593DC399 (1 samples, 0.41%)</title><rect x="92.5311%" y="1237" width="0.4149%" height="15" fill="rgb(192,192,56)" fg:x="223" fg:w="1"/><text x="92.7811%" y="1247.50"></text></g><g><title>`0x7FFE593DAF46 (1 samples, 0.41%)</title><rect x="92.5311%" y="1221" width="0.4149%" height="15" fill="rgb(208,208,62)" fg:x="223" fg:w="1"/><text x="92.7811%" y="1231.50"></text></g><g><title>`0x7FFE593DB121 (1 samples, 0.41%)</title><rect x="92.5311%" y="1205" width="0.4149%" height="15" fill="rgb(217,217,65)" fg:x="223" fg:w="1"/><text x="92.7811%" y="1215.50"></text></g><g><title>`0x7FFE593DB261 (1 samples, 0.41%)</title><rect x="92.5311%" y="1189" width="0.4149%" height="15" fill="rgb(204,204,60)" fg:x="223" fg:w="1"/><text x="92.7811%" y="1199.50"></text></g><g><title>`0x7FFE593DB346 (1 samples, 0.41%)</title><rect x="92.5311%" y="1173" width="0.4149%" height="15" fill="rgb(197,197,58)" fg:x="223" fg:w="1"/><text x="92.7811%" y="1183.50"></text></g><g><title>`0x7FFE593C10F0 (3 samples, 1.24%)</title><rect x="92.1162%" y="1269" width="1.2448%" height="15" fill="rgb(183,183,52)" fg:x="222" fg:w="3"/><text x="92.3662%" y="1279.50"></text></g><g><title>`0x7FFE593C070F (2 samples, 0.83%)</title><rect x="92.5311%" y="1253" width="0.8299%" height="15" fill="rgb(185,185,53)" fg:x="223" fg:w="2"/><text x="92.7811%" y="1263.50"></text></g><g><title>`0x7FFE593DC254 (1 samples, 0.41%)</title><rect x="92.9461%" y="1237" width="0.4149%" height="15" fill="rgb(180,180,51)" fg:x="224" fg:w="1"/><text x="93.1961%" y="1247.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.41%)</title><rect x="92.9461%" y="1221" width="0.4149%" height="15" fill="rgb(198,198,58)" fg:x="224" fg:w="1"/><text x="93.1961%" y="1231.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.41%)</title><rect x="92.9461%" y="1205" width="0.4149%" height="15" fill="rgb(207,207,61)" fg:x="224" fg:w="1"/><text x="93.1961%" y="1215.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.41%)</title><rect x="92.9461%" y="1189" width="0.4149%" height="15" fill="rgb(204,204,60)" fg:x="224" fg:w="1"/><text x="93.1961%" y="1199.50"></text></g><g><title>osrs_gph.exe`__scrt_common_main_seh() (97 samples, 40.25%)</title><rect x="53.5270%" y="1429" width="40.2490%" height="15" fill="rgb(218,218,65)" fg:x="129" fg:w="97"/><text x="53.7770%" y="1439.50">osrs_gph.exe`__scrt_common_main_seh()</text></g><g><title>`0x7FFE567CBCD9 (4 samples, 1.66%)</title><rect x="92.1162%" y="1413" width="1.6598%" height="15" fill="rgb(226,226,68)" fg:x="222" fg:w="4"/><text x="92.3662%" y="1423.50"></text></g><g><title>`0x7FFE567CBAE8 (4 samples, 1.66%)</title><rect x="92.1162%" y="1397" width="1.6598%" height="15" fill="rgb(185,185,53)" fg:x="222" fg:w="4"/><text x="92.3662%" y="1407.50"></text></g><g><title>`0x7FFE567D8F91 (4 samples, 1.66%)</title><rect x="92.1162%" y="1381" width="1.6598%" height="15" fill="rgb(205,205,61)" fg:x="222" fg:w="4"/><text x="92.3662%" y="1391.50"></text></g><g><title>`0x7FFE567D1843 (4 samples, 1.66%)</title><rect x="92.1162%" y="1365" width="1.6598%" height="15" fill="rgb(203,203,60)" fg:x="222" fg:w="4"/><text x="92.3662%" y="1375.50"></text></g><g><title>`0x7FFE56B26452 (4 samples, 1.66%)</title><rect x="92.1162%" y="1349" width="1.6598%" height="15" fill="rgb(210,210,62)" fg:x="222" fg:w="4"/><text x="92.3662%" y="1359.50"></text></g><g><title>`0x7FFE593DA25A (4 samples, 1.66%)</title><rect x="92.1162%" y="1333" width="1.6598%" height="15" fill="rgb(223,223,67)" fg:x="222" fg:w="4"/><text x="92.3662%" y="1343.50"></text></g><g><title>`0x7FFE593C8CAC (4 samples, 1.66%)</title><rect x="92.1162%" y="1317" width="1.6598%" height="15" fill="rgb(218,218,65)" fg:x="222" fg:w="4"/><text x="92.3662%" y="1327.50"></text></g><g><title>`0x7FFE593D88D4 (4 samples, 1.66%)</title><rect x="92.1162%" y="1301" width="1.6598%" height="15" fill="rgb(176,176,50)" fg:x="222" fg:w="4"/><text x="92.3662%" y="1311.50"></text></g><g><title>`0x7FFE593C0EBF (4 samples, 1.66%)</title><rect x="92.1162%" y="1285" width="1.6598%" height="15" fill="rgb(219,219,66)" fg:x="222" fg:w="4"/><text x="92.3662%" y="1295.50"></text></g><g><title>`0x7FFE593C1082 (1 samples, 0.41%)</title><rect x="93.3610%" y="1269" width="0.4149%" height="15" fill="rgb(183,183,53)" fg:x="225" fg:w="1"/><text x="93.6110%" y="1279.50"></text></g><g><title>`0x7FFE593DA407 (1 samples, 0.41%)</title><rect x="93.3610%" y="1253" width="0.4149%" height="15" fill="rgb(223,223,67)" fg:x="225" fg:w="1"/><text x="93.6110%" y="1263.50"></text></g><g><title>`0x7FFE593DAC49 (1 samples, 0.41%)</title><rect x="93.3610%" y="1237" width="0.4149%" height="15" fill="rgb(215,215,64)" fg:x="225" fg:w="1"/><text x="93.6110%" y="1247.50"></text></g><g><title>`0x7FFE5944FB14 (1 samples, 0.41%)</title><rect x="93.3610%" y="1221" width="0.4149%" height="15" fill="rgb(201,201,59)" fg:x="225" fg:w="1"/><text x="93.6110%" y="1231.50"></text></g><g><title>`0x7FFE593D4673 (1 samples, 0.41%)</title><rect x="93.7759%" y="1317" width="0.4149%" height="15" fill="rgb(187,187,54)" fg:x="226" fg:w="1"/><text x="94.0259%" y="1327.50"></text></g><g><title>`0x7FFE593DC3F8 (2 samples, 0.83%)</title><rect x="93.7759%" y="1333" width="0.8299%" height="15" fill="rgb(191,191,55)" fg:x="226" fg:w="2"/><text x="94.0259%" y="1343.50"></text></g><g><title>`0x7FFE593D452F (1 samples, 0.41%)</title><rect x="94.1909%" y="1317" width="0.4149%" height="15" fill="rgb(183,183,53)" fg:x="227" fg:w="1"/><text x="94.4409%" y="1327.50"></text></g><g><title>`0x7FFE5942152C (1 samples, 0.41%)</title><rect x="94.1909%" y="1301" width="0.4149%" height="15" fill="rgb(177,177,51)" fg:x="227" fg:w="1"/><text x="94.4409%" y="1311.50"></text></g><g><title>`0x7FFE57DC1081 (1 samples, 0.41%)</title><rect x="94.1909%" y="1285" width="0.4149%" height="15" fill="rgb(201,201,59)" fg:x="227" fg:w="1"/><text x="94.4409%" y="1295.50"></text></g><g><title>`0x7FFE56B84DB0 (1 samples, 0.41%)</title><rect x="94.1909%" y="1269" width="0.4149%" height="15" fill="rgb(196,196,57)" fg:x="227" fg:w="1"/><text x="94.4409%" y="1279.50"></text></g><g><title>`0x7FFE57DB67A7 (1 samples, 0.41%)</title><rect x="94.1909%" y="1253" width="0.4149%" height="15" fill="rgb(219,219,66)" fg:x="227" fg:w="1"/><text x="94.4409%" y="1263.50"></text></g><g><title>`0x7FFE57DB78B7 (1 samples, 0.41%)</title><rect x="94.1909%" y="1237" width="0.4149%" height="15" fill="rgb(211,211,63)" fg:x="227" fg:w="1"/><text x="94.4409%" y="1247.50"></text></g><g><title>`0x7FFE57DB7CA0 (1 samples, 0.41%)</title><rect x="94.1909%" y="1221" width="0.4149%" height="15" fill="rgb(178,178,51)" fg:x="227" fg:w="1"/><text x="94.4409%" y="1231.50"></text></g><g><title>`0x7FFE57DB9E9C (1 samples, 0.41%)</title><rect x="94.1909%" y="1205" width="0.4149%" height="15" fill="rgb(207,207,61)" fg:x="227" fg:w="1"/><text x="94.4409%" y="1215.50"></text></g><g><title>`0x7FFE5944F654 (1 samples, 0.41%)</title><rect x="94.1909%" y="1189" width="0.4149%" height="15" fill="rgb(187,187,54)" fg:x="227" fg:w="1"/><text x="94.4409%" y="1199.50"></text></g><g><title>`0x7FFE593C070F (5 samples, 2.07%)</title><rect x="93.7759%" y="1349" width="2.0747%" height="15" fill="rgb(207,207,61)" fg:x="226" fg:w="5"/><text x="94.0259%" y="1359.50">`..</text></g><g><title>`0x7FFE593DC254 (3 samples, 1.24%)</title><rect x="94.6058%" y="1333" width="1.2448%" height="15" fill="rgb(188,188,54)" fg:x="228" fg:w="3"/><text x="94.8558%" y="1343.50"></text></g><g><title>`0x7FFE593DC0CA (3 samples, 1.24%)</title><rect x="94.6058%" y="1317" width="1.2448%" height="15" fill="rgb(194,194,56)" fg:x="228" fg:w="3"/><text x="94.8558%" y="1327.50"></text></g><g><title>`0x7FFE593DC4CC (3 samples, 1.24%)</title><rect x="94.6058%" y="1301" width="1.2448%" height="15" fill="rgb(188,188,55)" fg:x="228" fg:w="3"/><text x="94.8558%" y="1311.50"></text></g><g><title>`0x7FFE5944F874 (3 samples, 1.24%)</title><rect x="94.6058%" y="1285" width="1.2448%" height="15" fill="rgb(221,221,66)" fg:x="228" fg:w="3"/><text x="94.8558%" y="1295.50"></text></g><g><title>`0x7FFE593C0BC8 (7 samples, 2.90%)</title><rect x="93.7759%" y="1365" width="2.9046%" height="15" fill="rgb(215,215,64)" fg:x="226" fg:w="7"/><text x="94.0259%" y="1375.50">`0..</text></g><g><title>`0x7FFE593C065C (2 samples, 0.83%)</title><rect x="95.8506%" y="1349" width="0.8299%" height="15" fill="rgb(226,226,68)" fg:x="231" fg:w="2"/><text x="96.1006%" y="1359.50"></text></g><g><title>`0x7FFE5944F9D4 (2 samples, 0.83%)</title><rect x="95.8506%" y="1333" width="0.8299%" height="15" fill="rgb(202,202,60)" fg:x="231" fg:w="2"/><text x="96.1006%" y="1343.50"></text></g><g><title>`0x7FFE593DA407 (1 samples, 0.41%)</title><rect x="96.6805%" y="1333" width="0.4149%" height="15" fill="rgb(225,225,68)" fg:x="233" fg:w="1"/><text x="96.9305%" y="1343.50"></text></g><g><title>`0x7FFE593DAC49 (1 samples, 0.41%)</title><rect x="96.6805%" y="1317" width="0.4149%" height="15" fill="rgb(197,197,58)" fg:x="233" fg:w="1"/><text x="96.9305%" y="1327.50"></text></g><g><title>`0x7FFE5944FB14 (1 samples, 0.41%)</title><rect x="96.6805%" y="1301" width="0.4149%" height="15" fill="rgb(227,227,68)" fg:x="233" fg:w="1"/><text x="96.9305%" y="1311.50"></text></g><g><title>`0x7FFE593C0F90 (9 samples, 3.73%)</title><rect x="93.7759%" y="1381" width="3.7344%" height="15" fill="rgb(202,202,59)" fg:x="226" fg:w="9"/><text x="94.0259%" y="1391.50">`0x7..</text></g><g><title>`0x7FFE593C0AFE (2 samples, 0.83%)</title><rect x="96.6805%" y="1365" width="0.8299%" height="15" fill="rgb(209,209,62)" fg:x="233" fg:w="2"/><text x="96.9305%" y="1375.50"></text></g><g><title>`0x7FFE593DDB51 (2 samples, 0.83%)</title><rect x="96.6805%" y="1349" width="0.8299%" height="15" fill="rgb(202,202,59)" fg:x="233" fg:w="2"/><text x="96.9305%" y="1359.50"></text></g><g><title>`0x7FFE593DA37F (1 samples, 0.41%)</title><rect x="97.0954%" y="1333" width="0.4149%" height="15" fill="rgb(195,195,57)" fg:x="234" fg:w="1"/><text x="97.3454%" y="1343.50"></text></g><g><title>`0x7FFE593DD869 (1 samples, 0.41%)</title><rect x="97.0954%" y="1317" width="0.4149%" height="15" fill="rgb(225,225,68)" fg:x="234" fg:w="1"/><text x="97.3454%" y="1327.50"></text></g><g><title>`0x7FFE593CBEC2 (1 samples, 0.41%)</title><rect x="97.0954%" y="1301" width="0.4149%" height="15" fill="rgb(227,227,69)" fg:x="234" fg:w="1"/><text x="97.3454%" y="1311.50"></text></g><g><title>`0x7FFE593D3FC7 (1 samples, 0.41%)</title><rect x="97.5104%" y="1365" width="0.4149%" height="15" fill="rgb(223,223,67)" fg:x="235" fg:w="1"/><text x="97.7604%" y="1375.50"></text></g><g><title>`0x7FFE594123CA (12 samples, 4.98%)</title><rect x="93.7759%" y="1413" width="4.9793%" height="15" fill="rgb(223,223,67)" fg:x="226" fg:w="12"/><text x="94.0259%" y="1423.50">`0x7FF..</text></g><g><title>`0x7FFE593C0DCB (12 samples, 4.98%)</title><rect x="93.7759%" y="1397" width="4.9793%" height="15" fill="rgb(197,197,58)" fg:x="226" fg:w="12"/><text x="94.0259%" y="1407.50">`0x7FF..</text></g><g><title>`0x7FFE593C0E8B (3 samples, 1.24%)</title><rect x="97.5104%" y="1381" width="1.2448%" height="15" fill="rgb(203,203,60)" fg:x="235" fg:w="3"/><text x="97.7604%" y="1391.50"></text></g><g><title>`0x7FFE593D3C6C (2 samples, 0.83%)</title><rect x="97.9253%" y="1365" width="0.8299%" height="15" fill="rgb(194,194,57)" fg:x="236" fg:w="2"/><text x="98.1753%" y="1375.50"></text></g><g><title>`0x7FFE5940AA58 (212 samples, 87.97%)</title><rect x="11.2033%" y="1461" width="87.9668%" height="15" fill="rgb(194,194,57)" fg:x="27" fg:w="212"/><text x="11.4533%" y="1471.50">`0x7FFE5940AA58</text></g><g><title>`0x7FFE57DC257D (212 samples, 87.97%)</title><rect x="11.2033%" y="1445" width="87.9668%" height="15" fill="rgb(191,191,56)" fg:x="27" fg:w="212"/><text x="11.4533%" y="1455.50">`0x7FFE57DC257D</text></g><g><title>`0x7FFE593E5986 (13 samples, 5.39%)</title><rect x="93.7759%" y="1429" width="5.3942%" height="15" fill="rgb(195,195,57)" fg:x="226" fg:w="13"/><text x="94.0259%" y="1439.50">`0x7FFE..</text></g><g><title>`0x7FFE594122F8 (1 samples, 0.41%)</title><rect x="98.7552%" y="1413" width="0.4149%" height="15" fill="rgb(209,209,62)" fg:x="238" fg:w="1"/><text x="99.0052%" y="1423.50"></text></g><g><title>`0x7FFE593FE722 (1 samples, 0.41%)</title><rect x="98.7552%" y="1397" width="0.4149%" height="15" fill="rgb(213,213,64)" fg:x="238" fg:w="1"/><text x="99.0052%" y="1407.50"></text></g><g><title>`0x7FFE593E4EE6 (1 samples, 0.41%)</title><rect x="98.7552%" y="1381" width="0.4149%" height="15" fill="rgb(183,183,53)" fg:x="238" fg:w="1"/><text x="99.0052%" y="1391.50"></text></g><g><title>`0x7FFE594522E4 (1 samples, 0.41%)</title><rect x="98.7552%" y="1365" width="0.4149%" height="15" fill="rgb(206,206,61)" fg:x="238" fg:w="1"/><text x="99.0052%" y="1375.50"></text></g><g><title>all (241 samples, 100%)</title><rect x="0.0000%" y="1477" width="100.0000%" height="15" fill="rgb(213,213,63)" fg:x="0" fg:w="241"/><text x="0.2500%" y="1487.50"></text></g><g><title>`0x7FFE5940AA30 (2 samples, 0.83%)</title><rect x="99.1701%" y="1461" width="0.8299%" height="15" fill="rgb(226,226,68)" fg:x="239" fg:w="2"/><text x="99.4201%" y="1471.50"></text></g></svg></svg>