<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1718" onload="init(evt)" viewBox="0 0 1200 1718" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1718" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1701.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1701.00"> </text><svg id="frames" x="10" width="1180" total_samples="211"><g><title>osrs_gph.exe`ring_core_0_17_7_p256_point_add_affine (1 samples, 0.47%)</title><rect x="0.0000%" y="1653" width="0.4739%" height="15" fill="rgb(175,175,50)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1663.50"></text></g><g><title>osrs_gph.exe`ring_core_0_17_7_p256_sqr_mont (1 samples, 0.47%)</title><rect x="0.0000%" y="1637" width="0.4739%" height="15" fill="rgb(175,175,50)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1647.50"></text></g><g><title>`0x7FFE5948EAEE (1 samples, 0.47%)</title><rect x="0.4739%" y="1605" width="0.4739%" height="15" fill="rgb(221,221,66)" fg:x="1" fg:w="1"/><text x="0.7239%" y="1615.50"></text></g><g><title>`0x7FFE5942F0D4 (1 samples, 0.47%)</title><rect x="0.4739%" y="1589" width="0.4739%" height="15" fill="rgb(225,225,68)" fg:x="1" fg:w="1"/><text x="0.7239%" y="1599.50"></text></g><g><title>`0x7FFE5944F5B4 (1 samples, 0.47%)</title><rect x="0.4739%" y="1573" width="0.4739%" height="15" fill="rgb(191,191,55)" fg:x="1" fg:w="1"/><text x="0.7239%" y="1583.50"></text></g><g><title>`0x7FFE5941CE70 (1 samples, 0.47%)</title><rect x="0.9479%" y="1557" width="0.4739%" height="15" fill="rgb(205,205,61)" fg:x="2" fg:w="1"/><text x="1.1979%" y="1567.50"></text></g><g><title>`0x7FFE5941CDFE (1 samples, 0.47%)</title><rect x="0.9479%" y="1541" width="0.4739%" height="15" fill="rgb(213,213,63)" fg:x="2" fg:w="1"/><text x="1.1979%" y="1551.50"></text></g><g><title>`0x7FFE5941D04D (1 samples, 0.47%)</title><rect x="0.9479%" y="1525" width="0.4739%" height="15" fill="rgb(180,180,52)" fg:x="2" fg:w="1"/><text x="1.1979%" y="1535.50"></text></g><g><title>`0x7FFE593D869F (1 samples, 0.47%)</title><rect x="0.9479%" y="1509" width="0.4739%" height="15" fill="rgb(182,182,52)" fg:x="2" fg:w="1"/><text x="1.1979%" y="1519.50"></text></g><g><title>`0x7FFE570DA067 (1 samples, 0.47%)</title><rect x="0.9479%" y="1493" width="0.4739%" height="15" fill="rgb(204,204,60)" fg:x="2" fg:w="1"/><text x="1.1979%" y="1503.50"></text></g><g><title>`0x7FFE570D35BC (1 samples, 0.47%)</title><rect x="0.9479%" y="1477" width="0.4739%" height="15" fill="rgb(229,229,69)" fg:x="2" fg:w="1"/><text x="1.1979%" y="1487.50"></text></g><g><title>`0x7FFE570D3839 (1 samples, 0.47%)</title><rect x="0.9479%" y="1461" width="0.4739%" height="15" fill="rgb(221,221,66)" fg:x="2" fg:w="1"/><text x="1.1979%" y="1471.50"></text></g><g><title>`0x7FFE570D3953 (1 samples, 0.47%)</title><rect x="0.9479%" y="1445" width="0.4739%" height="15" fill="rgb(179,179,51)" fg:x="2" fg:w="1"/><text x="1.1979%" y="1455.50"></text></g><g><title>`0x7FFE570D6413 (1 samples, 0.47%)</title><rect x="0.9479%" y="1429" width="0.4739%" height="15" fill="rgb(219,219,66)" fg:x="2" fg:w="1"/><text x="1.1979%" y="1439.50"></text></g><g><title>`0x7FFE5944F454 (1 samples, 0.47%)</title><rect x="0.9479%" y="1413" width="0.4739%" height="15" fill="rgb(224,224,68)" fg:x="2" fg:w="1"/><text x="1.1979%" y="1423.50"></text></g><g><title>`0x7FFE5941CE70 (2 samples, 0.95%)</title><rect x="0.9479%" y="1573" width="0.9479%" height="15" fill="rgb(192,192,56)" fg:x="2" fg:w="2"/><text x="1.1979%" y="1583.50"></text></g><g><title>`0x7FFE5941CDFE (1 samples, 0.47%)</title><rect x="1.4218%" y="1557" width="0.4739%" height="15" fill="rgb(179,179,51)" fg:x="3" fg:w="1"/><text x="1.6718%" y="1567.50"></text></g><g><title>`0x7FFE5941D04D (1 samples, 0.47%)</title><rect x="1.4218%" y="1541" width="0.4739%" height="15" fill="rgb(182,182,52)" fg:x="3" fg:w="1"/><text x="1.6718%" y="1551.50"></text></g><g><title>`0x7FFE593D869F (1 samples, 0.47%)</title><rect x="1.4218%" y="1525" width="0.4739%" height="15" fill="rgb(222,222,67)" fg:x="3" fg:w="1"/><text x="1.6718%" y="1535.50"></text></g><g><title>`0x7FFE58277C2F (1 samples, 0.47%)</title><rect x="1.4218%" y="1509" width="0.4739%" height="15" fill="rgb(181,181,52)" fg:x="3" fg:w="1"/><text x="1.6718%" y="1519.50"></text></g><g><title>`0x7FFE582939A2 (1 samples, 0.47%)</title><rect x="1.4218%" y="1493" width="0.4739%" height="15" fill="rgb(182,182,52)" fg:x="3" fg:w="1"/><text x="1.6718%" y="1503.50"></text></g><g><title>`0x7FFE58293B20 (1 samples, 0.47%)</title><rect x="1.4218%" y="1477" width="0.4739%" height="15" fill="rgb(218,218,65)" fg:x="3" fg:w="1"/><text x="1.6718%" y="1487.50"></text></g><g><title>`0x7FFE5828CD6B (1 samples, 0.47%)</title><rect x="1.4218%" y="1461" width="0.4739%" height="15" fill="rgb(176,176,50)" fg:x="3" fg:w="1"/><text x="1.6718%" y="1471.50"></text></g><g><title>`0x7FFE5828CB80 (1 samples, 0.47%)</title><rect x="1.4218%" y="1445" width="0.4739%" height="15" fill="rgb(179,179,51)" fg:x="3" fg:w="1"/><text x="1.6718%" y="1455.50"></text></g><g><title>`0x7FFE593ECD59 (1 samples, 0.47%)</title><rect x="1.4218%" y="1429" width="0.4739%" height="15" fill="rgb(206,206,61)" fg:x="3" fg:w="1"/><text x="1.6718%" y="1439.50"></text></g><g><title>`0x7FFE593EFA38 (1 samples, 0.47%)</title><rect x="1.4218%" y="1413" width="0.4739%" height="15" fill="rgb(182,182,52)" fg:x="3" fg:w="1"/><text x="1.6718%" y="1423.50"></text></g><g><title>`0x7FFE593F9FDB (1 samples, 0.47%)</title><rect x="1.4218%" y="1397" width="0.4739%" height="15" fill="rgb(201,201,59)" fg:x="3" fg:w="1"/><text x="1.6718%" y="1407.50"></text></g><g><title>`0x7FFE593F9541 (1 samples, 0.47%)</title><rect x="1.4218%" y="1381" width="0.4739%" height="15" fill="rgb(213,213,63)" fg:x="3" fg:w="1"/><text x="1.6718%" y="1391.50"></text></g><g><title>`0x7FFE593F8E1C (1 samples, 0.47%)</title><rect x="1.4218%" y="1365" width="0.4739%" height="15" fill="rgb(210,210,62)" fg:x="3" fg:w="1"/><text x="1.6718%" y="1375.50"></text></g><g><title>`0x7FFE593F9799 (1 samples, 0.47%)</title><rect x="1.4218%" y="1349" width="0.4739%" height="15" fill="rgb(183,183,53)" fg:x="3" fg:w="1"/><text x="1.6718%" y="1359.50"></text></g><g><title>`0x7FFE593E23FA (1 samples, 0.47%)</title><rect x="1.4218%" y="1333" width="0.4739%" height="15" fill="rgb(199,199,58)" fg:x="3" fg:w="1"/><text x="1.6718%" y="1343.50"></text></g><g><title>`0x7FFE5942F4F1 (1 samples, 0.47%)</title><rect x="1.4218%" y="1317" width="0.4739%" height="15" fill="rgb(196,196,57)" fg:x="3" fg:w="1"/><text x="1.6718%" y="1327.50"></text></g><g><title>`0x7FFE5944F654 (1 samples, 0.47%)</title><rect x="1.4218%" y="1301" width="0.4739%" height="15" fill="rgb(218,218,65)" fg:x="3" fg:w="1"/><text x="1.6718%" y="1311.50"></text></g><g><title>`0x7FFE5948EA75 (3 samples, 1.42%)</title><rect x="0.9479%" y="1605" width="1.4218%" height="15" fill="rgb(220,220,66)" fg:x="2" fg:w="3"/><text x="1.1979%" y="1615.50"></text></g><g><title>`0x7FFE5941CE70 (3 samples, 1.42%)</title><rect x="0.9479%" y="1589" width="1.4218%" height="15" fill="rgb(195,195,57)" fg:x="2" fg:w="3"/><text x="1.1979%" y="1599.50"></text></g><g><title>`0x7FFE5941CDFE (1 samples, 0.47%)</title><rect x="1.8957%" y="1573" width="0.4739%" height="15" fill="rgb(183,183,53)" fg:x="4" fg:w="1"/><text x="2.1457%" y="1583.50"></text></g><g><title>`0x7FFE5941D04D (1 samples, 0.47%)</title><rect x="1.8957%" y="1557" width="0.4739%" height="15" fill="rgb(175,175,50)" fg:x="4" fg:w="1"/><text x="2.1457%" y="1567.50"></text></g><g><title>`0x7FFE593D869F (1 samples, 0.47%)</title><rect x="1.8957%" y="1541" width="0.4739%" height="15" fill="rgb(221,221,66)" fg:x="4" fg:w="1"/><text x="2.1457%" y="1551.50"></text></g><g><title>`0x7FFE579C5BDA (1 samples, 0.47%)</title><rect x="1.8957%" y="1525" width="0.4739%" height="15" fill="rgb(215,215,64)" fg:x="4" fg:w="1"/><text x="2.1457%" y="1535.50"></text></g><g><title>`0x7FFE579C64F7 (1 samples, 0.47%)</title><rect x="1.8957%" y="1509" width="0.4739%" height="15" fill="rgb(218,218,65)" fg:x="4" fg:w="1"/><text x="2.1457%" y="1519.50"></text></g><g><title>`0x7FFE579C3DC0 (1 samples, 0.47%)</title><rect x="1.8957%" y="1493" width="0.4739%" height="15" fill="rgb(189,189,55)" fg:x="4" fg:w="1"/><text x="2.1457%" y="1503.50"></text></g><g><title>`0x7FFE593E14E0 (1 samples, 0.47%)</title><rect x="1.8957%" y="1477" width="0.4739%" height="15" fill="rgb(191,191,56)" fg:x="4" fg:w="1"/><text x="2.1457%" y="1487.50"></text></g><g><title>`0x7FFE593E21EC (1 samples, 0.47%)</title><rect x="1.8957%" y="1461" width="0.4739%" height="15" fill="rgb(197,197,58)" fg:x="4" fg:w="1"/><text x="2.1457%" y="1471.50"></text></g><g><title>`0x7FFE593E36DA (1 samples, 0.47%)</title><rect x="1.8957%" y="1445" width="0.4739%" height="15" fill="rgb(202,202,60)" fg:x="4" fg:w="1"/><text x="2.1457%" y="1455.50"></text></g><g><title>`0x7FFE593D58C4 (1 samples, 0.47%)</title><rect x="2.3697%" y="1397" width="0.4739%" height="15" fill="rgb(224,224,68)" fg:x="5" fg:w="1"/><text x="2.6197%" y="1407.50"></text></g><g><title>`0x7FFE593DCE29 (1 samples, 0.47%)</title><rect x="2.3697%" y="1381" width="0.4739%" height="15" fill="rgb(198,198,58)" fg:x="5" fg:w="1"/><text x="2.6197%" y="1391.50"></text></g><g><title>`0x7FFE593DC254 (1 samples, 0.47%)</title><rect x="2.3697%" y="1365" width="0.4739%" height="15" fill="rgb(208,208,62)" fg:x="5" fg:w="1"/><text x="2.6197%" y="1375.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.47%)</title><rect x="2.3697%" y="1349" width="0.4739%" height="15" fill="rgb(220,220,66)" fg:x="5" fg:w="1"/><text x="2.6197%" y="1359.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.47%)</title><rect x="2.3697%" y="1333" width="0.4739%" height="15" fill="rgb(189,189,55)" fg:x="5" fg:w="1"/><text x="2.6197%" y="1343.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.47%)</title><rect x="2.3697%" y="1317" width="0.4739%" height="15" fill="rgb(181,181,52)" fg:x="5" fg:w="1"/><text x="2.6197%" y="1327.50"></text></g><g><title>`0x7FFE593DC3F8 (2 samples, 0.95%)</title><rect x="2.3697%" y="1445" width="0.9479%" height="15" fill="rgb(183,183,53)" fg:x="5" fg:w="2"/><text x="2.6197%" y="1455.50"></text></g><g><title>`0x7FFE593D46BB (2 samples, 0.95%)</title><rect x="2.3697%" y="1429" width="0.9479%" height="15" fill="rgb(226,226,68)" fg:x="5" fg:w="2"/><text x="2.6197%" y="1439.50"></text></g><g><title>`0x7FFE593D4906 (2 samples, 0.95%)</title><rect x="2.3697%" y="1413" width="0.9479%" height="15" fill="rgb(204,204,60)" fg:x="5" fg:w="2"/><text x="2.6197%" y="1423.50"></text></g><g><title>`0x7FFE593D539C (1 samples, 0.47%)</title><rect x="2.8436%" y="1397" width="0.4739%" height="15" fill="rgb(208,208,62)" fg:x="6" fg:w="1"/><text x="3.0936%" y="1407.50"></text></g><g><title>`0x7FFE593DC3F8 (5 samples, 2.37%)</title><rect x="2.3697%" y="1525" width="2.3697%" height="15" fill="rgb(209,209,62)" fg:x="5" fg:w="5"/><text x="2.6197%" y="1535.50">`0..</text></g><g><title>`0x7FFE593D46BB (5 samples, 2.37%)</title><rect x="2.3697%" y="1509" width="2.3697%" height="15" fill="rgb(203,203,60)" fg:x="5" fg:w="5"/><text x="2.6197%" y="1519.50">`0..</text></g><g><title>`0x7FFE593D4906 (5 samples, 2.37%)</title><rect x="2.3697%" y="1493" width="2.3697%" height="15" fill="rgb(210,210,62)" fg:x="5" fg:w="5"/><text x="2.6197%" y="1503.50">`0..</text></g><g><title>`0x7FFE593D58C4 (5 samples, 2.37%)</title><rect x="2.3697%" y="1477" width="2.3697%" height="15" fill="rgb(194,194,57)" fg:x="5" fg:w="5"/><text x="2.6197%" y="1487.50">`0..</text></g><g><title>`0x7FFE593DCE29 (5 samples, 2.37%)</title><rect x="2.3697%" y="1461" width="2.3697%" height="15" fill="rgb(177,177,51)" fg:x="5" fg:w="5"/><text x="2.6197%" y="1471.50">`0..</text></g><g><title>`0x7FFE593DC254 (3 samples, 1.42%)</title><rect x="3.3175%" y="1445" width="1.4218%" height="15" fill="rgb(175,175,50)" fg:x="7" fg:w="3"/><text x="3.5675%" y="1455.50"></text></g><g><title>`0x7FFE593DC0CA (3 samples, 1.42%)</title><rect x="3.3175%" y="1429" width="1.4218%" height="15" fill="rgb(186,186,54)" fg:x="7" fg:w="3"/><text x="3.5675%" y="1439.50"></text></g><g><title>`0x7FFE593DC4CC (3 samples, 1.42%)</title><rect x="3.3175%" y="1413" width="1.4218%" height="15" fill="rgb(177,177,50)" fg:x="7" fg:w="3"/><text x="3.5675%" y="1423.50"></text></g><g><title>`0x7FFE5944F874 (3 samples, 1.42%)</title><rect x="3.3175%" y="1397" width="1.4218%" height="15" fill="rgb(229,229,69)" fg:x="7" fg:w="3"/><text x="3.5675%" y="1407.50"></text></g><g><title>`0x7FFE5948E8EF (8 samples, 3.79%)</title><rect x="2.3697%" y="1605" width="3.7915%" height="15" fill="rgb(210,210,62)" fg:x="5" fg:w="8"/><text x="2.6197%" y="1615.50">`0x7..</text></g><g><title>`0x7FFE593D46BB (8 samples, 3.79%)</title><rect x="2.3697%" y="1589" width="3.7915%" height="15" fill="rgb(191,191,55)" fg:x="5" fg:w="8"/><text x="2.6197%" y="1599.50">`0x7..</text></g><g><title>`0x7FFE593D4906 (8 samples, 3.79%)</title><rect x="2.3697%" y="1573" width="3.7915%" height="15" fill="rgb(198,198,58)" fg:x="5" fg:w="8"/><text x="2.6197%" y="1583.50">`0x7..</text></g><g><title>`0x7FFE593D58C4 (8 samples, 3.79%)</title><rect x="2.3697%" y="1557" width="3.7915%" height="15" fill="rgb(208,208,62)" fg:x="5" fg:w="8"/><text x="2.6197%" y="1567.50">`0x7..</text></g><g><title>`0x7FFE593DCE29 (8 samples, 3.79%)</title><rect x="2.3697%" y="1541" width="3.7915%" height="15" fill="rgb(193,193,56)" fg:x="5" fg:w="8"/><text x="2.6197%" y="1551.50">`0x7..</text></g><g><title>`0x7FFE593DC254 (3 samples, 1.42%)</title><rect x="4.7393%" y="1525" width="1.4218%" height="15" fill="rgb(217,217,65)" fg:x="10" fg:w="3"/><text x="4.9893%" y="1535.50"></text></g><g><title>`0x7FFE593DC0CA (3 samples, 1.42%)</title><rect x="4.7393%" y="1509" width="1.4218%" height="15" fill="rgb(190,190,55)" fg:x="10" fg:w="3"/><text x="4.9893%" y="1519.50"></text></g><g><title>`0x7FFE593DC4CC (3 samples, 1.42%)</title><rect x="4.7393%" y="1493" width="1.4218%" height="15" fill="rgb(211,211,63)" fg:x="10" fg:w="3"/><text x="4.9893%" y="1503.50"></text></g><g><title>`0x7FFE5944F874 (3 samples, 1.42%)</title><rect x="4.7393%" y="1477" width="1.4218%" height="15" fill="rgb(183,183,53)" fg:x="10" fg:w="3"/><text x="4.9893%" y="1487.50"></text></g><g><title>`0x7FFE5948E67C (1 samples, 0.47%)</title><rect x="6.1611%" y="1605" width="0.4739%" height="15" fill="rgb(202,202,60)" fg:x="13" fg:w="1"/><text x="6.4111%" y="1615.50"></text></g><g><title>`0x7FFE593B980A (1 samples, 0.47%)</title><rect x="6.1611%" y="1589" width="0.4739%" height="15" fill="rgb(187,187,54)" fg:x="13" fg:w="1"/><text x="6.4111%" y="1599.50"></text></g><g><title>`0x7FFE5944F5B4 (1 samples, 0.47%)</title><rect x="6.1611%" y="1573" width="0.4739%" height="15" fill="rgb(195,195,57)" fg:x="13" fg:w="1"/><text x="6.4111%" y="1583.50"></text></g><g><title>`0x7FFE56B3C78C (1 samples, 0.47%)</title><rect x="6.6351%" y="1461" width="0.4739%" height="15" fill="rgb(203,203,60)" fg:x="14" fg:w="1"/><text x="6.8851%" y="1471.50"></text></g><g><title>`0x7FFE56B797A8 (1 samples, 0.47%)</title><rect x="6.6351%" y="1445" width="0.4739%" height="15" fill="rgb(185,185,53)" fg:x="14" fg:w="1"/><text x="6.8851%" y="1455.50"></text></g><g><title>`0x7FFE593E14E0 (1 samples, 0.47%)</title><rect x="6.6351%" y="1429" width="0.4739%" height="15" fill="rgb(184,184,53)" fg:x="14" fg:w="1"/><text x="6.8851%" y="1439.50"></text></g><g><title>`0x7FFE593E2179 (1 samples, 0.47%)</title><rect x="6.6351%" y="1413" width="0.4739%" height="15" fill="rgb(225,225,68)" fg:x="14" fg:w="1"/><text x="6.8851%" y="1423.50"></text></g><g><title>`0x7FFE593E22D9 (1 samples, 0.47%)</title><rect x="6.6351%" y="1397" width="0.4739%" height="15" fill="rgb(194,194,56)" fg:x="14" fg:w="1"/><text x="6.8851%" y="1407.50"></text></g><g><title>`0x7FFE593ECD59 (1 samples, 0.47%)</title><rect x="6.6351%" y="1381" width="0.4739%" height="15" fill="rgb(198,198,58)" fg:x="14" fg:w="1"/><text x="6.8851%" y="1391.50"></text></g><g><title>`0x7FFE593EF738 (1 samples, 0.47%)</title><rect x="6.6351%" y="1365" width="0.4739%" height="15" fill="rgb(226,226,68)" fg:x="14" fg:w="1"/><text x="6.8851%" y="1375.50"></text></g><g><title>`0x7FFE593F57DB (1 samples, 0.47%)</title><rect x="6.6351%" y="1349" width="0.4739%" height="15" fill="rgb(194,194,57)" fg:x="14" fg:w="1"/><text x="6.8851%" y="1359.50"></text></g><g><title>`0x7FFE593F5B59 (1 samples, 0.47%)</title><rect x="6.6351%" y="1333" width="0.4739%" height="15" fill="rgb(220,220,66)" fg:x="14" fg:w="1"/><text x="6.8851%" y="1343.50"></text></g><g><title>`0x7FFE5944F674 (1 samples, 0.47%)</title><rect x="6.6351%" y="1317" width="0.4739%" height="15" fill="rgb(225,225,68)" fg:x="14" fg:w="1"/><text x="6.8851%" y="1327.50"></text></g><g><title>`0x7FFE593D8940 (2 samples, 0.95%)</title><rect x="6.6351%" y="1557" width="0.9479%" height="15" fill="rgb(204,204,60)" fg:x="14" fg:w="2"/><text x="6.8851%" y="1567.50"></text></g><g><title>`0x7FFE593DD62D (2 samples, 0.95%)</title><rect x="6.6351%" y="1541" width="0.9479%" height="15" fill="rgb(227,227,69)" fg:x="14" fg:w="2"/><text x="6.8851%" y="1551.50"></text></g><g><title>`0x7FFE5941CE70 (2 samples, 0.95%)</title><rect x="6.6351%" y="1525" width="0.9479%" height="15" fill="rgb(191,191,55)" fg:x="14" fg:w="2"/><text x="6.8851%" y="1535.50"></text></g><g><title>`0x7FFE5941CDFE (2 samples, 0.95%)</title><rect x="6.6351%" y="1509" width="0.9479%" height="15" fill="rgb(179,179,51)" fg:x="14" fg:w="2"/><text x="6.8851%" y="1519.50"></text></g><g><title>`0x7FFE5941D04D (2 samples, 0.95%)</title><rect x="6.6351%" y="1493" width="0.9479%" height="15" fill="rgb(204,204,60)" fg:x="14" fg:w="2"/><text x="6.8851%" y="1503.50"></text></g><g><title>`0x7FFE593D869F (2 samples, 0.95%)</title><rect x="6.6351%" y="1477" width="0.9479%" height="15" fill="rgb(215,215,64)" fg:x="14" fg:w="2"/><text x="6.8851%" y="1487.50"></text></g><g><title>`0x7FFE56B3C68D (1 samples, 0.47%)</title><rect x="7.1090%" y="1461" width="0.4739%" height="15" fill="rgb(214,214,64)" fg:x="15" fg:w="1"/><text x="7.3590%" y="1471.50"></text></g><g><title>`0x7FFE56B3CC68 (1 samples, 0.47%)</title><rect x="7.1090%" y="1445" width="0.4739%" height="15" fill="rgb(226,226,68)" fg:x="15" fg:w="1"/><text x="7.3590%" y="1455.50"></text></g><g><title>`0x7FFE56B7BC50 (1 samples, 0.47%)</title><rect x="7.1090%" y="1429" width="0.4739%" height="15" fill="rgb(202,202,60)" fg:x="15" fg:w="1"/><text x="7.3590%" y="1439.50"></text></g><g><title>`0x7FFE593E14E0 (1 samples, 0.47%)</title><rect x="7.1090%" y="1413" width="0.4739%" height="15" fill="rgb(198,198,58)" fg:x="15" fg:w="1"/><text x="7.3590%" y="1423.50"></text></g><g><title>`0x7FFE593E21CA (1 samples, 0.47%)</title><rect x="7.1090%" y="1397" width="0.4739%" height="15" fill="rgb(177,177,50)" fg:x="15" fg:w="1"/><text x="7.3590%" y="1407.50"></text></g><g><title>`0x7FFE593E2057 (1 samples, 0.47%)</title><rect x="7.1090%" y="1381" width="0.4739%" height="15" fill="rgb(209,209,62)" fg:x="15" fg:w="1"/><text x="7.3590%" y="1391.50"></text></g><g><title>`0x7FFE59452DC4 (1 samples, 0.47%)</title><rect x="7.1090%" y="1365" width="0.4739%" height="15" fill="rgb(198,198,58)" fg:x="15" fg:w="1"/><text x="7.3590%" y="1375.50"></text></g><g><title>`0x7FFE593D3C73 (1 samples, 0.47%)</title><rect x="7.5829%" y="1477" width="0.4739%" height="15" fill="rgb(224,224,68)" fg:x="16" fg:w="1"/><text x="7.8329%" y="1487.50"></text></g><g><title>`0x7FFE593D4774 (2 samples, 0.95%)</title><rect x="7.5829%" y="1493" width="0.9479%" height="15" fill="rgb(214,214,64)" fg:x="16" fg:w="2"/><text x="7.8329%" y="1503.50"></text></g><g><title>`0x7FFE593D3C6C (1 samples, 0.47%)</title><rect x="8.0569%" y="1477" width="0.4739%" height="15" fill="rgb(205,205,61)" fg:x="17" fg:w="1"/><text x="8.3069%" y="1487.50"></text></g><g><title>`0x7FFE593D46BB (1 samples, 0.47%)</title><rect x="8.5308%" y="1493" width="0.4739%" height="15" fill="rgb(179,179,51)" fg:x="18" fg:w="1"/><text x="8.7808%" y="1503.50"></text></g><g><title>`0x7FFE593D4906 (1 samples, 0.47%)</title><rect x="8.5308%" y="1477" width="0.4739%" height="15" fill="rgb(200,200,59)" fg:x="18" fg:w="1"/><text x="8.7808%" y="1487.50"></text></g><g><title>`0x7FFE593D58C4 (1 samples, 0.47%)</title><rect x="8.5308%" y="1461" width="0.4739%" height="15" fill="rgb(181,181,52)" fg:x="18" fg:w="1"/><text x="8.7808%" y="1471.50"></text></g><g><title>`0x7FFE593DCE29 (1 samples, 0.47%)</title><rect x="8.5308%" y="1445" width="0.4739%" height="15" fill="rgb(228,228,69)" fg:x="18" fg:w="1"/><text x="8.7808%" y="1455.50"></text></g><g><title>`0x7FFE593DC254 (1 samples, 0.47%)</title><rect x="8.5308%" y="1429" width="0.4739%" height="15" fill="rgb(180,180,51)" fg:x="18" fg:w="1"/><text x="8.7808%" y="1439.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.47%)</title><rect x="8.5308%" y="1413" width="0.4739%" height="15" fill="rgb(180,180,52)" fg:x="18" fg:w="1"/><text x="8.7808%" y="1423.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.47%)</title><rect x="8.5308%" y="1397" width="0.4739%" height="15" fill="rgb(176,176,50)" fg:x="18" fg:w="1"/><text x="8.7808%" y="1407.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.47%)</title><rect x="8.5308%" y="1381" width="0.4739%" height="15" fill="rgb(194,194,57)" fg:x="18" fg:w="1"/><text x="8.7808%" y="1391.50"></text></g><g><title>`0x7FFE593DC3F8 (4 samples, 1.90%)</title><rect x="7.5829%" y="1509" width="1.8957%" height="15" fill="rgb(191,191,56)" fg:x="16" fg:w="4"/><text x="7.8329%" y="1519.50">`..</text></g><g><title>`0x7FFE593D4541 (1 samples, 0.47%)</title><rect x="9.0047%" y="1493" width="0.4739%" height="15" fill="rgb(191,191,55)" fg:x="19" fg:w="1"/><text x="9.2547%" y="1503.50"></text></g><g><title>`0x7FFE593DAE0E (1 samples, 0.47%)</title><rect x="9.0047%" y="1477" width="0.4739%" height="15" fill="rgb(219,219,66)" fg:x="19" fg:w="1"/><text x="9.2547%" y="1487.50"></text></g><g><title>`0x7FFE5948E5BF (7 samples, 3.32%)</title><rect x="6.6351%" y="1605" width="3.3175%" height="15" fill="rgb(202,202,59)" fg:x="14" fg:w="7"/><text x="6.8851%" y="1615.50">`0x..</text></g><g><title>`0x7FFE593DA25A (7 samples, 3.32%)</title><rect x="6.6351%" y="1589" width="3.3175%" height="15" fill="rgb(221,221,66)" fg:x="14" fg:w="7"/><text x="6.8851%" y="1599.50">`0x..</text></g><g><title>`0x7FFE593C8CAC (7 samples, 3.32%)</title><rect x="6.6351%" y="1573" width="3.3175%" height="15" fill="rgb(200,200,59)" fg:x="14" fg:w="7"/><text x="6.8851%" y="1583.50">`0x..</text></g><g><title>`0x7FFE593D88B6 (5 samples, 2.37%)</title><rect x="7.5829%" y="1557" width="2.3697%" height="15" fill="rgb(216,216,65)" fg:x="16" fg:w="5"/><text x="7.8329%" y="1567.50">`0..</text></g><g><title>`0x7FFE593DDDA9 (5 samples, 2.37%)</title><rect x="7.5829%" y="1541" width="2.3697%" height="15" fill="rgb(202,202,59)" fg:x="16" fg:w="5"/><text x="7.8329%" y="1551.50">`0..</text></g><g><title>`0x7FFE593DCE29 (5 samples, 2.37%)</title><rect x="7.5829%" y="1525" width="2.3697%" height="15" fill="rgb(213,213,63)" fg:x="16" fg:w="5"/><text x="7.8329%" y="1535.50">`0..</text></g><g><title>`0x7FFE593DC254 (1 samples, 0.47%)</title><rect x="9.4787%" y="1509" width="0.4739%" height="15" fill="rgb(216,216,65)" fg:x="20" fg:w="1"/><text x="9.7287%" y="1519.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.47%)</title><rect x="9.4787%" y="1493" width="0.4739%" height="15" fill="rgb(180,180,52)" fg:x="20" fg:w="1"/><text x="9.7287%" y="1503.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.47%)</title><rect x="9.4787%" y="1477" width="0.4739%" height="15" fill="rgb(203,203,60)" fg:x="20" fg:w="1"/><text x="9.7287%" y="1487.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.47%)</title><rect x="9.4787%" y="1461" width="0.4739%" height="15" fill="rgb(192,192,56)" fg:x="20" fg:w="1"/><text x="9.7287%" y="1471.50"></text></g><g><title>`0x7FFE5948DD3E (1 samples, 0.47%)</title><rect x="9.9526%" y="1605" width="0.4739%" height="15" fill="rgb(191,191,56)" fg:x="21" fg:w="1"/><text x="10.2026%" y="1615.50"></text></g><g><title>`0x7FFE5942E846 (1 samples, 0.47%)</title><rect x="9.9526%" y="1589" width="0.4739%" height="15" fill="rgb(205,205,60)" fg:x="21" fg:w="1"/><text x="10.2026%" y="1599.50"></text></g><g><title>`0x7FFE593DAF24 (1 samples, 0.47%)</title><rect x="9.9526%" y="1573" width="0.4739%" height="15" fill="rgb(183,183,53)" fg:x="21" fg:w="1"/><text x="10.2026%" y="1583.50"></text></g><g><title>`0x7FFE593DB0BF (1 samples, 0.47%)</title><rect x="9.9526%" y="1557" width="0.4739%" height="15" fill="rgb(204,204,60)" fg:x="21" fg:w="1"/><text x="10.2026%" y="1567.50"></text></g><g><title>`0x7FFE5948D719 (1 samples, 0.47%)</title><rect x="10.4265%" y="1605" width="0.4739%" height="15" fill="rgb(178,178,51)" fg:x="22" fg:w="1"/><text x="10.6765%" y="1615.50"></text></g><g><title>`0x7FFE5942F5FA (1 samples, 0.47%)</title><rect x="10.4265%" y="1589" width="0.4739%" height="15" fill="rgb(206,206,61)" fg:x="22" fg:w="1"/><text x="10.6765%" y="1599.50"></text></g><g><title>`0x7FFE593E14E0 (1 samples, 0.47%)</title><rect x="10.4265%" y="1573" width="0.4739%" height="15" fill="rgb(186,186,54)" fg:x="22" fg:w="1"/><text x="10.6765%" y="1583.50"></text></g><g><title>`0x7FFE593E21CA (1 samples, 0.47%)</title><rect x="10.4265%" y="1557" width="0.4739%" height="15" fill="rgb(218,218,65)" fg:x="22" fg:w="1"/><text x="10.6765%" y="1567.50"></text></g><g><title>`0x7FFE593E2014 (1 samples, 0.47%)</title><rect x="10.4265%" y="1541" width="0.4739%" height="15" fill="rgb(178,178,51)" fg:x="22" fg:w="1"/><text x="10.6765%" y="1551.50"></text></g><g><title>`0x7FFE593E23FA (1 samples, 0.47%)</title><rect x="10.4265%" y="1525" width="0.4739%" height="15" fill="rgb(229,229,69)" fg:x="22" fg:w="1"/><text x="10.6765%" y="1535.50"></text></g><g><title>`0x7FFE593FB27E (1 samples, 0.47%)</title><rect x="10.4265%" y="1509" width="0.4739%" height="15" fill="rgb(188,188,54)" fg:x="22" fg:w="1"/><text x="10.6765%" y="1519.50"></text></g><g><title>`0x7FFE593FD4FC (1 samples, 0.47%)</title><rect x="10.4265%" y="1493" width="0.4739%" height="15" fill="rgb(177,177,50)" fg:x="22" fg:w="1"/><text x="10.6765%" y="1503.50"></text></g><g><title>`0x7FFE593DF917 (1 samples, 0.47%)</title><rect x="10.4265%" y="1477" width="0.4739%" height="15" fill="rgb(189,189,55)" fg:x="22" fg:w="1"/><text x="10.6765%" y="1487.50"></text></g><g><title>`0x7FFE593E2CA5 (1 samples, 0.47%)</title><rect x="10.4265%" y="1461" width="0.4739%" height="15" fill="rgb(204,204,60)" fg:x="22" fg:w="1"/><text x="10.6765%" y="1471.50"></text></g><g><title>`0x7FFE593E2F31 (1 samples, 0.47%)</title><rect x="10.4265%" y="1445" width="0.4739%" height="15" fill="rgb(201,201,59)" fg:x="22" fg:w="1"/><text x="10.6765%" y="1455.50"></text></g><g><title>`0x7FFE593E1350 (1 samples, 0.47%)</title><rect x="10.4265%" y="1429" width="0.4739%" height="15" fill="rgb(179,179,51)" fg:x="22" fg:w="1"/><text x="10.6765%" y="1439.50"></text></g><g><title>`0x7FFE593FBD90 (1 samples, 0.47%)</title><rect x="10.4265%" y="1413" width="0.4739%" height="15" fill="rgb(184,184,53)" fg:x="22" fg:w="1"/><text x="10.6765%" y="1423.50"></text></g><g><title>`0x7FFE59450DC4 (1 samples, 0.47%)</title><rect x="10.4265%" y="1397" width="0.4739%" height="15" fill="rgb(204,204,60)" fg:x="22" fg:w="1"/><text x="10.6765%" y="1407.50"></text></g><g><title>`0x7FFE5947A184 (23 samples, 10.90%)</title><rect x="0.4739%" y="1621" width="10.9005%" height="15" fill="rgb(204,204,60)" fg:x="1" fg:w="23"/><text x="0.7239%" y="1631.50">`0x7FFE5947A184</text></g><g><title>`0x7FFE5948CE0D (1 samples, 0.47%)</title><rect x="10.9005%" y="1605" width="0.4739%" height="15" fill="rgb(198,198,58)" fg:x="23" fg:w="1"/><text x="11.1505%" y="1615.50"></text></g><g><title>`0x7FFE5945E509 (1 samples, 0.47%)</title><rect x="10.9005%" y="1589" width="0.4739%" height="15" fill="rgb(219,219,66)" fg:x="23" fg:w="1"/><text x="11.1505%" y="1599.50"></text></g><g><title>`0x7FFE59451364 (1 samples, 0.47%)</title><rect x="10.9005%" y="1573" width="0.4739%" height="15" fill="rgb(224,224,68)" fg:x="23" fg:w="1"/><text x="11.1505%" y="1583.50"></text></g><g><title>`0x7FFE59423DDE (24 samples, 11.37%)</title><rect x="0.4739%" y="1653" width="11.3744%" height="15" fill="rgb(222,222,67)" fg:x="1" fg:w="24"/><text x="0.7239%" y="1663.50">`0x7FFE59423DDE</text></g><g><title>`0x7FFE59423EB3 (24 samples, 11.37%)</title><rect x="0.4739%" y="1637" width="11.3744%" height="15" fill="rgb(223,223,67)" fg:x="1" fg:w="24"/><text x="0.7239%" y="1647.50">`0x7FFE59423EB3</text></g><g><title>`0x7FFE59423F7F (1 samples, 0.47%)</title><rect x="11.3744%" y="1621" width="0.4739%" height="15" fill="rgb(186,186,54)" fg:x="24" fg:w="1"/><text x="11.6244%" y="1631.50"></text></g><g><title>`0x7FFE593D83A3 (1 samples, 0.47%)</title><rect x="11.3744%" y="1605" width="0.4739%" height="15" fill="rgb(183,183,53)" fg:x="24" fg:w="1"/><text x="11.6244%" y="1615.50"></text></g><g><title>`0x7FFE593D9FC0 (1 samples, 0.47%)</title><rect x="11.3744%" y="1589" width="0.4739%" height="15" fill="rgb(182,182,52)" fg:x="24" fg:w="1"/><text x="11.6244%" y="1599.50"></text></g><g><title>`0x7FFE593D6ADF (1 samples, 0.47%)</title><rect x="11.3744%" y="1573" width="0.4739%" height="15" fill="rgb(223,223,67)" fg:x="24" fg:w="1"/><text x="11.6244%" y="1583.50"></text></g><g><title>`0x7FFE4E8E3CB5 (1 samples, 0.47%)</title><rect x="11.8483%" y="821" width="0.4739%" height="15" fill="rgb(199,199,58)" fg:x="25" fg:w="1"/><text x="12.0983%" y="831.50"></text></g><g><title>`0x7FFE58BF0FD4 (1 samples, 0.47%)</title><rect x="11.8483%" y="805" width="0.4739%" height="15" fill="rgb(201,201,59)" fg:x="25" fg:w="1"/><text x="12.0983%" y="815.50"></text></g><g><title>`0x7FFE58BBC548 (1 samples, 0.47%)</title><rect x="11.8483%" y="789" width="0.4739%" height="15" fill="rgb(192,192,56)" fg:x="25" fg:w="1"/><text x="12.0983%" y="799.50"></text></g><g><title>`0x7FFE58BE714A (1 samples, 0.47%)</title><rect x="11.8483%" y="773" width="0.4739%" height="15" fill="rgb(198,198,58)" fg:x="25" fg:w="1"/><text x="12.0983%" y="783.50"></text></g><g><title>`0x7FFE58BE8584 (1 samples, 0.47%)</title><rect x="11.8483%" y="757" width="0.4739%" height="15" fill="rgb(180,180,51)" fg:x="25" fg:w="1"/><text x="12.0983%" y="767.50"></text></g><g><title>`0x7FFE58BBF706 (1 samples, 0.47%)</title><rect x="11.8483%" y="741" width="0.4739%" height="15" fill="rgb(214,214,64)" fg:x="25" fg:w="1"/><text x="12.0983%" y="751.50"></text></g><g><title>`0x7FFE58BF0FD4 (1 samples, 0.47%)</title><rect x="11.8483%" y="725" width="0.4739%" height="15" fill="rgb(181,181,52)" fg:x="25" fg:w="1"/><text x="12.0983%" y="735.50"></text></g><g><title>`0x7FFE58BBC548 (1 samples, 0.47%)</title><rect x="11.8483%" y="709" width="0.4739%" height="15" fill="rgb(200,200,59)" fg:x="25" fg:w="1"/><text x="12.0983%" y="719.50"></text></g><g><title>`0x7FFE58BE7159 (1 samples, 0.47%)</title><rect x="11.8483%" y="693" width="0.4739%" height="15" fill="rgb(184,184,53)" fg:x="25" fg:w="1"/><text x="12.0983%" y="703.50"></text></g><g><title>`0x7FFE58BE8979 (1 samples, 0.47%)</title><rect x="11.8483%" y="677" width="0.4739%" height="15" fill="rgb(191,191,55)" fg:x="25" fg:w="1"/><text x="12.0983%" y="687.50"></text></g><g><title>`0x7FFE58BE8B0F (1 samples, 0.47%)</title><rect x="11.8483%" y="661" width="0.4739%" height="15" fill="rgb(176,176,50)" fg:x="25" fg:w="1"/><text x="12.0983%" y="671.50"></text></g><g><title>`0x7FFE58BBEF95 (1 samples, 0.47%)</title><rect x="11.8483%" y="645" width="0.4739%" height="15" fill="rgb(179,179,51)" fg:x="25" fg:w="1"/><text x="12.0983%" y="655.50"></text></g><g><title>`0x7FFE58BBF206 (1 samples, 0.47%)</title><rect x="11.8483%" y="629" width="0.4739%" height="15" fill="rgb(194,194,57)" fg:x="25" fg:w="1"/><text x="12.0983%" y="639.50"></text></g><g><title>`0x7FFE56B88593 (1 samples, 0.47%)</title><rect x="11.8483%" y="613" width="0.4739%" height="15" fill="rgb(181,181,52)" fg:x="25" fg:w="1"/><text x="12.0983%" y="623.50"></text></g><g><title>`0x7FFE593FBD90 (1 samples, 0.47%)</title><rect x="11.8483%" y="597" width="0.4739%" height="15" fill="rgb(219,219,66)" fg:x="25" fg:w="1"/><text x="12.0983%" y="607.50"></text></g><g><title>`0x7FFE59450DC4 (1 samples, 0.47%)</title><rect x="11.8483%" y="581" width="0.4739%" height="15" fill="rgb(216,216,65)" fg:x="25" fg:w="1"/><text x="12.0983%" y="591.50"></text></g><g><title>`0x7FFE4E8E43AE (1 samples, 0.47%)</title><rect x="12.3223%" y="805" width="0.4739%" height="15" fill="rgb(223,223,67)" fg:x="26" fg:w="1"/><text x="12.5723%" y="815.50"></text></g><g><title>`0x7FFE58C81B6B (1 samples, 0.47%)</title><rect x="12.3223%" y="789" width="0.4739%" height="15" fill="rgb(193,193,56)" fg:x="26" fg:w="1"/><text x="12.5723%" y="799.50"></text></g><g><title>`0x7FFE58C8244C (1 samples, 0.47%)</title><rect x="12.3223%" y="773" width="0.4739%" height="15" fill="rgb(205,205,61)" fg:x="26" fg:w="1"/><text x="12.5723%" y="783.50"></text></g><g><title>`0x7FFE58C84F21 (1 samples, 0.47%)</title><rect x="12.3223%" y="757" width="0.4739%" height="15" fill="rgb(186,186,54)" fg:x="26" fg:w="1"/><text x="12.5723%" y="767.50"></text></g><g><title>`0x7FFE58BB6669 (1 samples, 0.47%)</title><rect x="12.3223%" y="741" width="0.4739%" height="15" fill="rgb(191,191,55)" fg:x="26" fg:w="1"/><text x="12.5723%" y="751.50"></text></g><g><title>`0x7FFE58BB6C7B (1 samples, 0.47%)</title><rect x="12.3223%" y="725" width="0.4739%" height="15" fill="rgb(195,195,57)" fg:x="26" fg:w="1"/><text x="12.5723%" y="735.50"></text></g><g><title>`0x7FFE58BE459B (1 samples, 0.47%)</title><rect x="12.3223%" y="709" width="0.4739%" height="15" fill="rgb(185,185,53)" fg:x="26" fg:w="1"/><text x="12.5723%" y="719.50"></text></g><g><title>`0x7FFE58BE46E1 (1 samples, 0.47%)</title><rect x="12.3223%" y="693" width="0.4739%" height="15" fill="rgb(212,212,63)" fg:x="26" fg:w="1"/><text x="12.5723%" y="703.50"></text></g><g><title>`0x7FFE58BE3719 (1 samples, 0.47%)</title><rect x="12.3223%" y="677" width="0.4739%" height="15" fill="rgb(188,188,54)" fg:x="26" fg:w="1"/><text x="12.5723%" y="687.50"></text></g><g><title>`0x7FFE58BE6113 (1 samples, 0.47%)</title><rect x="12.3223%" y="661" width="0.4739%" height="15" fill="rgb(175,175,50)" fg:x="26" fg:w="1"/><text x="12.5723%" y="671.50"></text></g><g><title>`0x7FFE58BBFDEB (1 samples, 0.47%)</title><rect x="12.3223%" y="645" width="0.4739%" height="15" fill="rgb(182,182,52)" fg:x="26" fg:w="1"/><text x="12.5723%" y="655.50"></text></g><g><title>`0x7FFE58BBFEDA (1 samples, 0.47%)</title><rect x="12.3223%" y="629" width="0.4739%" height="15" fill="rgb(193,193,56)" fg:x="26" fg:w="1"/><text x="12.5723%" y="639.50"></text></g><g><title>`0x7FFE58BC0059 (1 samples, 0.47%)</title><rect x="12.3223%" y="613" width="0.4739%" height="15" fill="rgb(209,209,62)" fg:x="26" fg:w="1"/><text x="12.5723%" y="623.50"></text></g><g><title>`0x7FFE58BE3719 (1 samples, 0.47%)</title><rect x="12.3223%" y="597" width="0.4739%" height="15" fill="rgb(180,180,51)" fg:x="26" fg:w="1"/><text x="12.5723%" y="607.50"></text></g><g><title>`0x7FFE58BE5E0D (1 samples, 0.47%)</title><rect x="12.3223%" y="581" width="0.4739%" height="15" fill="rgb(215,215,64)" fg:x="26" fg:w="1"/><text x="12.5723%" y="591.50"></text></g><g><title>`0x7FFE58BE37EA (1 samples, 0.47%)</title><rect x="12.3223%" y="565" width="0.4739%" height="15" fill="rgb(212,212,63)" fg:x="26" fg:w="1"/><text x="12.5723%" y="575.50"></text></g><g><title>`0x7FFE58BE684B (1 samples, 0.47%)</title><rect x="12.3223%" y="549" width="0.4739%" height="15" fill="rgb(226,226,68)" fg:x="26" fg:w="1"/><text x="12.5723%" y="559.50"></text></g><g><title>`0x7FFE593EC7BA (1 samples, 0.47%)</title><rect x="12.3223%" y="533" width="0.4739%" height="15" fill="rgb(176,176,50)" fg:x="26" fg:w="1"/><text x="12.5723%" y="543.50"></text></g><g><title>`0x7FFE593ED0A5 (1 samples, 0.47%)</title><rect x="12.3223%" y="517" width="0.4739%" height="15" fill="rgb(199,199,58)" fg:x="26" fg:w="1"/><text x="12.5723%" y="527.50"></text></g><g><title>`0x7FFE4E8E42ED (1 samples, 0.47%)</title><rect x="12.7962%" y="805" width="0.4739%" height="15" fill="rgb(198,198,58)" fg:x="27" fg:w="1"/><text x="13.0462%" y="815.50"></text></g><g><title>`0x7FFE593C1A14 (1 samples, 0.47%)</title><rect x="12.7962%" y="789" width="0.4739%" height="15" fill="rgb(211,211,63)" fg:x="27" fg:w="1"/><text x="13.0462%" y="799.50"></text></g><g><title>`0x7FFE593C1F6E (1 samples, 0.47%)</title><rect x="12.7962%" y="773" width="0.4739%" height="15" fill="rgb(223,223,67)" fg:x="27" fg:w="1"/><text x="13.0462%" y="783.50"></text></g><g><title>`0x7FFE593C216C (1 samples, 0.47%)</title><rect x="12.7962%" y="757" width="0.4739%" height="15" fill="rgb(180,180,51)" fg:x="27" fg:w="1"/><text x="13.0462%" y="767.50"></text></g><g><title>`0x7FFE593C2333 (1 samples, 0.47%)</title><rect x="12.7962%" y="741" width="0.4739%" height="15" fill="rgb(187,187,54)" fg:x="27" fg:w="1"/><text x="13.0462%" y="751.50"></text></g><g><title>`0x7FFE593ECD59 (1 samples, 0.47%)</title><rect x="12.7962%" y="725" width="0.4739%" height="15" fill="rgb(181,181,52)" fg:x="27" fg:w="1"/><text x="13.0462%" y="735.50"></text></g><g><title>`0x7FFE593EF22D (1 samples, 0.47%)</title><rect x="12.7962%" y="709" width="0.4739%" height="15" fill="rgb(184,184,53)" fg:x="27" fg:w="1"/><text x="13.0462%" y="719.50"></text></g><g><title>`0x7FFE593F423A (1 samples, 0.47%)</title><rect x="12.7962%" y="693" width="0.4739%" height="15" fill="rgb(227,227,69)" fg:x="27" fg:w="1"/><text x="13.0462%" y="703.50"></text></g><g><title>`0x7FFE593F4633 (1 samples, 0.47%)</title><rect x="12.7962%" y="677" width="0.4739%" height="15" fill="rgb(181,181,52)" fg:x="27" fg:w="1"/><text x="13.0462%" y="687.50"></text></g><g><title>`0x7FFE58BE8D18 (1 samples, 0.47%)</title><rect x="13.2701%" y="629" width="0.4739%" height="15" fill="rgb(188,188,54)" fg:x="28" fg:w="1"/><text x="13.5201%" y="639.50"></text></g><g><title>`0x7FFE58BE55B7 (1 samples, 0.47%)</title><rect x="13.2701%" y="613" width="0.4739%" height="15" fill="rgb(206,206,61)" fg:x="28" fg:w="1"/><text x="13.5201%" y="623.50"></text></g><g><title>`0x7FFE58BEF9DD (1 samples, 0.47%)</title><rect x="13.2701%" y="597" width="0.4739%" height="15" fill="rgb(225,225,68)" fg:x="28" fg:w="1"/><text x="13.5201%" y="607.50"></text></g><g><title>`0x7FFE58BEC3EF (1 samples, 0.47%)</title><rect x="13.2701%" y="581" width="0.4739%" height="15" fill="rgb(182,182,52)" fg:x="28" fg:w="1"/><text x="13.5201%" y="591.50"></text></g><g><title>`0x7FFE593ECD59 (1 samples, 0.47%)</title><rect x="13.2701%" y="565" width="0.4739%" height="15" fill="rgb(210,210,63)" fg:x="28" fg:w="1"/><text x="13.5201%" y="575.50"></text></g><g><title>`0x7FFE593EF738 (1 samples, 0.47%)</title><rect x="13.2701%" y="549" width="0.4739%" height="15" fill="rgb(212,212,63)" fg:x="28" fg:w="1"/><text x="13.5201%" y="559.50"></text></g><g><title>`0x7FFE593F57DB (1 samples, 0.47%)</title><rect x="13.2701%" y="533" width="0.4739%" height="15" fill="rgb(221,221,66)" fg:x="28" fg:w="1"/><text x="13.5201%" y="543.50"></text></g><g><title>`0x7FFE593F5B59 (1 samples, 0.47%)</title><rect x="13.2701%" y="517" width="0.4739%" height="15" fill="rgb(207,207,61)" fg:x="28" fg:w="1"/><text x="13.5201%" y="527.50"></text></g><g><title>`0x7FFE5944F674 (1 samples, 0.47%)</title><rect x="13.2701%" y="501" width="0.4739%" height="15" fill="rgb(186,186,54)" fg:x="28" fg:w="1"/><text x="13.5201%" y="511.50"></text></g><g><title>`0x7FFE579BC8DB (5 samples, 2.37%)</title><rect x="11.8483%" y="853" width="2.3697%" height="15" fill="rgb(185,185,53)" fg:x="25" fg:w="5"/><text x="12.0983%" y="863.50">`0..</text></g><g><title>`0x7FFE4E8E35FB (5 samples, 2.37%)</title><rect x="11.8483%" y="837" width="2.3697%" height="15" fill="rgb(178,178,51)" fg:x="25" fg:w="5"/><text x="12.0983%" y="847.50">`0..</text></g><g><title>`0x7FFE4E8E3981 (4 samples, 1.90%)</title><rect x="12.3223%" y="821" width="1.8957%" height="15" fill="rgb(218,218,65)" fg:x="26" fg:w="4"/><text x="12.5723%" y="831.50">`..</text></g><g><title>`0x7FFE4E8E41F2 (2 samples, 0.95%)</title><rect x="13.2701%" y="805" width="0.9479%" height="15" fill="rgb(216,216,65)" fg:x="28" fg:w="2"/><text x="13.5201%" y="815.50"></text></g><g><title>`0x7FFE58BE4206 (2 samples, 0.95%)</title><rect x="13.2701%" y="789" width="0.9479%" height="15" fill="rgb(175,175,50)" fg:x="28" fg:w="2"/><text x="13.5201%" y="799.50"></text></g><g><title>`0x7FFE58BE8CD3 (2 samples, 0.95%)</title><rect x="13.2701%" y="773" width="0.9479%" height="15" fill="rgb(204,204,60)" fg:x="28" fg:w="2"/><text x="13.5201%" y="783.50"></text></g><g><title>`0x7FFE58BE9538 (2 samples, 0.95%)</title><rect x="13.2701%" y="757" width="0.9479%" height="15" fill="rgb(180,180,51)" fg:x="28" fg:w="2"/><text x="13.5201%" y="767.50"></text></g><g><title>`0x7FFE58BDC8DF (2 samples, 0.95%)</title><rect x="13.2701%" y="741" width="0.9479%" height="15" fill="rgb(223,223,67)" fg:x="28" fg:w="2"/><text x="13.5201%" y="751.50"></text></g><g><title>`0x7FFE58BDCF24 (2 samples, 0.95%)</title><rect x="13.2701%" y="725" width="0.9479%" height="15" fill="rgb(189,189,55)" fg:x="28" fg:w="2"/><text x="13.5201%" y="735.50"></text></g><g><title>`0x7FFE58BDD79D (2 samples, 0.95%)</title><rect x="13.2701%" y="709" width="0.9479%" height="15" fill="rgb(224,224,68)" fg:x="28" fg:w="2"/><text x="13.5201%" y="719.50"></text></g><g><title>`0x7FFE58BDDEF5 (2 samples, 0.95%)</title><rect x="13.2701%" y="693" width="0.9479%" height="15" fill="rgb(188,188,54)" fg:x="28" fg:w="2"/><text x="13.5201%" y="703.50"></text></g><g><title>`0x7FFE58BDBED1 (2 samples, 0.95%)</title><rect x="13.2701%" y="677" width="0.9479%" height="15" fill="rgb(193,193,56)" fg:x="28" fg:w="2"/><text x="13.5201%" y="687.50"></text></g><g><title>`0x7FFE58BDCCA7 (2 samples, 0.95%)</title><rect x="13.2701%" y="661" width="0.9479%" height="15" fill="rgb(204,204,60)" fg:x="28" fg:w="2"/><text x="13.5201%" y="671.50"></text></g><g><title>`0x7FFE58BE4206 (2 samples, 0.95%)</title><rect x="13.2701%" y="645" width="0.9479%" height="15" fill="rgb(221,221,66)" fg:x="28" fg:w="2"/><text x="13.5201%" y="655.50"></text></g><g><title>`0x7FFE58BE8CD3 (1 samples, 0.47%)</title><rect x="13.7441%" y="629" width="0.4739%" height="15" fill="rgb(216,216,65)" fg:x="29" fg:w="1"/><text x="13.9941%" y="639.50"></text></g><g><title>`0x7FFE58BE93A5 (1 samples, 0.47%)</title><rect x="13.7441%" y="613" width="0.4739%" height="15" fill="rgb(223,223,67)" fg:x="29" fg:w="1"/><text x="13.9941%" y="623.50"></text></g><g><title>`0x7FFE58BE9883 (1 samples, 0.47%)</title><rect x="13.7441%" y="597" width="0.4739%" height="15" fill="rgb(188,188,55)" fg:x="29" fg:w="1"/><text x="13.9941%" y="607.50"></text></g><g><title>`0x7FFE58BDD55A (1 samples, 0.47%)</title><rect x="13.7441%" y="581" width="0.4739%" height="15" fill="rgb(217,217,65)" fg:x="29" fg:w="1"/><text x="13.9941%" y="591.50"></text></g><g><title>`0x7FFE59450284 (1 samples, 0.47%)</title><rect x="13.7441%" y="565" width="0.4739%" height="15" fill="rgb(225,225,68)" fg:x="29" fg:w="1"/><text x="13.9941%" y="575.50"></text></g><g><title>`0x7FFE593DC3F8 (1 samples, 0.47%)</title><rect x="14.2180%" y="709" width="0.4739%" height="15" fill="rgb(205,205,61)" fg:x="30" fg:w="1"/><text x="14.4680%" y="719.50"></text></g><g><title>`0x7FFE593D4774 (1 samples, 0.47%)</title><rect x="14.2180%" y="693" width="0.4739%" height="15" fill="rgb(214,214,64)" fg:x="30" fg:w="1"/><text x="14.4680%" y="703.50"></text></g><g><title>`0x7FFE593D3DF0 (1 samples, 0.47%)</title><rect x="14.2180%" y="677" width="0.4739%" height="15" fill="rgb(215,215,64)" fg:x="30" fg:w="1"/><text x="14.4680%" y="687.50"></text></g><g><title>`0x7FFE59444038 (1 samples, 0.47%)</title><rect x="14.2180%" y="661" width="0.4739%" height="15" fill="rgb(209,209,62)" fg:x="30" fg:w="1"/><text x="14.4680%" y="671.50"></text></g><g><title>`0x7FFE593C070F (2 samples, 0.95%)</title><rect x="14.2180%" y="725" width="0.9479%" height="15" fill="rgb(210,210,63)" fg:x="30" fg:w="2"/><text x="14.4680%" y="735.50"></text></g><g><title>`0x7FFE593DC254 (1 samples, 0.47%)</title><rect x="14.6919%" y="709" width="0.4739%" height="15" fill="rgb(183,183,53)" fg:x="31" fg:w="1"/><text x="14.9419%" y="719.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.47%)</title><rect x="14.6919%" y="693" width="0.4739%" height="15" fill="rgb(196,196,57)" fg:x="31" fg:w="1"/><text x="14.9419%" y="703.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.47%)</title><rect x="14.6919%" y="677" width="0.4739%" height="15" fill="rgb(226,226,68)" fg:x="31" fg:w="1"/><text x="14.9419%" y="687.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.47%)</title><rect x="14.6919%" y="661" width="0.4739%" height="15" fill="rgb(208,208,62)" fg:x="31" fg:w="1"/><text x="14.9419%" y="671.50"></text></g><g><title>`0x7FFE579B91DB (8 samples, 3.79%)</title><rect x="11.8483%" y="869" width="3.7915%" height="15" fill="rgb(215,215,64)" fg:x="25" fg:w="8"/><text x="12.0983%" y="879.50">`0x7..</text></g><g><title>`0x7FFE579BC8BE (3 samples, 1.42%)</title><rect x="14.2180%" y="853" width="1.4218%" height="15" fill="rgb(226,226,68)" fg:x="30" fg:w="3"/><text x="14.4680%" y="863.50"></text></g><g><title>`0x7FFE579BC94A (3 samples, 1.42%)</title><rect x="14.2180%" y="837" width="1.4218%" height="15" fill="rgb(196,196,57)" fg:x="30" fg:w="3"/><text x="14.4680%" y="847.50"></text></g><g><title>`0x7FFE56B26452 (3 samples, 1.42%)</title><rect x="14.2180%" y="821" width="1.4218%" height="15" fill="rgb(221,221,66)" fg:x="30" fg:w="3"/><text x="14.4680%" y="831.50"></text></g><g><title>`0x7FFE593DA25A (3 samples, 1.42%)</title><rect x="14.2180%" y="805" width="1.4218%" height="15" fill="rgb(196,196,57)" fg:x="30" fg:w="3"/><text x="14.4680%" y="815.50"></text></g><g><title>`0x7FFE593C8CAC (3 samples, 1.42%)</title><rect x="14.2180%" y="789" width="1.4218%" height="15" fill="rgb(200,200,59)" fg:x="30" fg:w="3"/><text x="14.4680%" y="799.50"></text></g><g><title>`0x7FFE593D88D4 (3 samples, 1.42%)</title><rect x="14.2180%" y="773" width="1.4218%" height="15" fill="rgb(192,192,56)" fg:x="30" fg:w="3"/><text x="14.4680%" y="783.50"></text></g><g><title>`0x7FFE593C0EBF (3 samples, 1.42%)</title><rect x="14.2180%" y="757" width="1.4218%" height="15" fill="rgb(208,208,62)" fg:x="30" fg:w="3"/><text x="14.4680%" y="767.50"></text></g><g><title>`0x7FFE593C10F0 (3 samples, 1.42%)</title><rect x="14.2180%" y="741" width="1.4218%" height="15" fill="rgb(218,218,65)" fg:x="30" fg:w="3"/><text x="14.4680%" y="751.50"></text></g><g><title>`0x7FFE593C065C (1 samples, 0.47%)</title><rect x="15.1659%" y="725" width="0.4739%" height="15" fill="rgb(178,178,51)" fg:x="32" fg:w="1"/><text x="15.4159%" y="735.50"></text></g><g><title>`0x7FFE5944F9D4 (1 samples, 0.47%)</title><rect x="15.1659%" y="709" width="0.4739%" height="15" fill="rgb(177,177,50)" fg:x="32" fg:w="1"/><text x="15.4159%" y="719.50"></text></g><g><title>`0x7FFE551DA2B6 (1 samples, 0.47%)</title><rect x="15.6398%" y="757" width="0.4739%" height="15" fill="rgb(182,182,52)" fg:x="33" fg:w="1"/><text x="15.8898%" y="767.50"></text></g><g><title>`0x7FFE551D89C6 (1 samples, 0.47%)</title><rect x="15.6398%" y="741" width="0.4739%" height="15" fill="rgb(188,188,54)" fg:x="33" fg:w="1"/><text x="15.8898%" y="751.50"></text></g><g><title>`0x7FFE551C3F6B (1 samples, 0.47%)</title><rect x="15.6398%" y="725" width="0.4739%" height="15" fill="rgb(198,198,58)" fg:x="33" fg:w="1"/><text x="15.8898%" y="735.50"></text></g><g><title>`0x7FFE59402BCE (1 samples, 0.47%)</title><rect x="15.6398%" y="709" width="0.4739%" height="15" fill="rgb(200,200,59)" fg:x="33" fg:w="1"/><text x="15.8898%" y="719.50"></text></g><g><title>`0x7FFE5944A8B8 (1 samples, 0.47%)</title><rect x="15.6398%" y="693" width="0.4739%" height="15" fill="rgb(186,186,54)" fg:x="33" fg:w="1"/><text x="15.8898%" y="703.50"></text></g><g><title>`0x7FFE5944A8F3 (1 samples, 0.47%)</title><rect x="15.6398%" y="677" width="0.4739%" height="15" fill="rgb(206,206,61)" fg:x="33" fg:w="1"/><text x="15.8898%" y="687.50"></text></g><g><title>`0x7FFE5944C69C (1 samples, 0.47%)</title><rect x="15.6398%" y="661" width="0.4739%" height="15" fill="rgb(181,181,52)" fg:x="33" fg:w="1"/><text x="15.8898%" y="671.50"></text></g><g><title>`0x7FFE5944CBD8 (1 samples, 0.47%)</title><rect x="15.6398%" y="645" width="0.4739%" height="15" fill="rgb(193,193,56)" fg:x="33" fg:w="1"/><text x="15.8898%" y="655.50"></text></g><g><title>`0x7FFE551C7726 (1 samples, 0.47%)</title><rect x="16.1137%" y="725" width="0.4739%" height="15" fill="rgb(198,198,58)" fg:x="34" fg:w="1"/><text x="16.3637%" y="735.50"></text></g><g><title>`0x7FFE58C81B6B (1 samples, 0.47%)</title><rect x="16.1137%" y="709" width="0.4739%" height="15" fill="rgb(191,191,55)" fg:x="34" fg:w="1"/><text x="16.3637%" y="719.50"></text></g><g><title>`0x7FFE58C826EA (1 samples, 0.47%)</title><rect x="16.1137%" y="693" width="0.4739%" height="15" fill="rgb(206,206,61)" fg:x="34" fg:w="1"/><text x="16.3637%" y="703.50"></text></g><g><title>`0x7FFE58BB933F (1 samples, 0.47%)</title><rect x="16.1137%" y="677" width="0.4739%" height="15" fill="rgb(186,186,54)" fg:x="34" fg:w="1"/><text x="16.3637%" y="687.50"></text></g><g><title>`0x7FFE58BF9E60 (1 samples, 0.47%)</title><rect x="16.1137%" y="661" width="0.4739%" height="15" fill="rgb(219,219,66)" fg:x="34" fg:w="1"/><text x="16.3637%" y="671.50"></text></g><g><title>`0x7FFE58BE4E32 (1 samples, 0.47%)</title><rect x="16.5877%" y="661" width="0.4739%" height="15" fill="rgb(207,207,61)" fg:x="35" fg:w="1"/><text x="16.8377%" y="671.50"></text></g><g><title>`0x7FFE58BD6127 (1 samples, 0.47%)</title><rect x="16.5877%" y="645" width="0.4739%" height="15" fill="rgb(208,208,62)" fg:x="35" fg:w="1"/><text x="16.8377%" y="655.50"></text></g><g><title>`0x7FFE58BD69DA (1 samples, 0.47%)</title><rect x="16.5877%" y="629" width="0.4739%" height="15" fill="rgb(187,187,54)" fg:x="35" fg:w="1"/><text x="16.8377%" y="639.50"></text></g><g><title>`0x7FFE58BDD345 (1 samples, 0.47%)</title><rect x="16.5877%" y="613" width="0.4739%" height="15" fill="rgb(228,228,69)" fg:x="35" fg:w="1"/><text x="16.8377%" y="623.50"></text></g><g><title>`0x7FFE58BDD9FF (1 samples, 0.47%)</title><rect x="16.5877%" y="597" width="0.4739%" height="15" fill="rgb(228,228,69)" fg:x="35" fg:w="1"/><text x="16.8377%" y="607.50"></text></g><g><title>`0x7FFE58BB8225 (1 samples, 0.47%)</title><rect x="16.5877%" y="581" width="0.4739%" height="15" fill="rgb(213,213,64)" fg:x="35" fg:w="1"/><text x="16.8377%" y="591.50"></text></g><g><title>`0x7FFE551DA11C (3 samples, 1.42%)</title><rect x="16.1137%" y="757" width="1.4218%" height="15" fill="rgb(197,197,58)" fg:x="34" fg:w="3"/><text x="16.3637%" y="767.50"></text></g><g><title>`0x7FFE551C6E15 (3 samples, 1.42%)</title><rect x="16.1137%" y="741" width="1.4218%" height="15" fill="rgb(191,191,55)" fg:x="34" fg:w="3"/><text x="16.3637%" y="751.50"></text></g><g><title>`0x7FFE551C7677 (2 samples, 0.95%)</title><rect x="16.5877%" y="725" width="0.9479%" height="15" fill="rgb(195,195,57)" fg:x="35" fg:w="2"/><text x="16.8377%" y="735.50"></text></g><g><title>`0x7FFE551C93C8 (2 samples, 0.95%)</title><rect x="16.5877%" y="709" width="0.9479%" height="15" fill="rgb(211,211,63)" fg:x="35" fg:w="2"/><text x="16.8377%" y="719.50"></text></g><g><title>`0x7FFE551C5E1E (2 samples, 0.95%)</title><rect x="16.5877%" y="693" width="0.9479%" height="15" fill="rgb(226,226,68)" fg:x="35" fg:w="2"/><text x="16.8377%" y="703.50"></text></g><g><title>`0x7FFE551C5C98 (2 samples, 0.95%)</title><rect x="16.5877%" y="677" width="0.9479%" height="15" fill="rgb(227,227,69)" fg:x="35" fg:w="2"/><text x="16.8377%" y="687.50"></text></g><g><title>`0x7FFE551F82EA (1 samples, 0.47%)</title><rect x="17.0616%" y="661" width="0.4739%" height="15" fill="rgb(206,206,61)" fg:x="36" fg:w="1"/><text x="17.3116%" y="671.50"></text></g><g><title>`0x7FFE551ED8D2 (1 samples, 0.47%)</title><rect x="17.0616%" y="645" width="0.4739%" height="15" fill="rgb(221,221,66)" fg:x="36" fg:w="1"/><text x="17.3116%" y="655.50"></text></g><g><title>`0x7FFE593DB9F7 (1 samples, 0.47%)</title><rect x="17.0616%" y="629" width="0.4739%" height="15" fill="rgb(205,205,61)" fg:x="36" fg:w="1"/><text x="17.3116%" y="639.50"></text></g><g><title>`0x7FFE593D2EE7 (1 samples, 0.47%)</title><rect x="17.0616%" y="613" width="0.4739%" height="15" fill="rgb(202,202,59)" fg:x="36" fg:w="1"/><text x="17.3116%" y="623.50"></text></g><g><title>`0x7FFE551D9E37 (1 samples, 0.47%)</title><rect x="17.5355%" y="757" width="0.4739%" height="15" fill="rgb(228,228,69)" fg:x="37" fg:w="1"/><text x="17.7855%" y="767.50"></text></g><g><title>`0x7FFE551C9B49 (1 samples, 0.47%)</title><rect x="17.5355%" y="741" width="0.4739%" height="15" fill="rgb(228,228,69)" fg:x="37" fg:w="1"/><text x="17.7855%" y="751.50"></text></g><g><title>`0x7FFE551CC241 (1 samples, 0.47%)</title><rect x="17.5355%" y="725" width="0.4739%" height="15" fill="rgb(201,201,59)" fg:x="37" fg:w="1"/><text x="17.7855%" y="735.50"></text></g><g><title>`0x7FFE551CC456 (1 samples, 0.47%)</title><rect x="17.5355%" y="709" width="0.4739%" height="15" fill="rgb(224,224,68)" fg:x="37" fg:w="1"/><text x="17.7855%" y="719.50"></text></g><g><title>`0x7FFE56B2A653 (1 samples, 0.47%)</title><rect x="17.5355%" y="693" width="0.4739%" height="15" fill="rgb(185,185,53)" fg:x="37" fg:w="1"/><text x="17.7855%" y="703.50"></text></g><g><title>`0x7FFE56B2ACD9 (1 samples, 0.47%)</title><rect x="17.5355%" y="677" width="0.4739%" height="15" fill="rgb(204,204,60)" fg:x="37" fg:w="1"/><text x="17.7855%" y="687.50"></text></g><g><title>`0x7FFE5944F654 (1 samples, 0.47%)</title><rect x="17.5355%" y="661" width="0.4739%" height="15" fill="rgb(221,221,66)" fg:x="37" fg:w="1"/><text x="17.7855%" y="671.50"></text></g><g><title>`0x7FFE579B8EF6 (14 samples, 6.64%)</title><rect x="11.8483%" y="885" width="6.6351%" height="15" fill="rgb(194,194,57)" fg:x="25" fg:w="14"/><text x="12.0983%" y="895.50">`0x7FFE57..</text></g><g><title>`0x7FFE579B9113 (6 samples, 2.84%)</title><rect x="15.6398%" y="869" width="2.8436%" height="15" fill="rgb(190,190,55)" fg:x="33" fg:w="6"/><text x="15.8898%" y="879.50">`0..</text></g><g><title>`0x7FFE579B9413 (6 samples, 2.84%)</title><rect x="15.6398%" y="853" width="2.8436%" height="15" fill="rgb(186,186,54)" fg:x="33" fg:w="6"/><text x="15.8898%" y="863.50">`0..</text></g><g><title>`0x7FFE579B979F (6 samples, 2.84%)</title><rect x="15.6398%" y="837" width="2.8436%" height="15" fill="rgb(182,182,52)" fg:x="33" fg:w="6"/><text x="15.8898%" y="847.50">`0..</text></g><g><title>`0x7FFE55B531F8 (6 samples, 2.84%)</title><rect x="15.6398%" y="821" width="2.8436%" height="15" fill="rgb(208,208,62)" fg:x="33" fg:w="6"/><text x="15.8898%" y="831.50">`0..</text></g><g><title>`0x7FFE55B538BB (6 samples, 2.84%)</title><rect x="15.6398%" y="805" width="2.8436%" height="15" fill="rgb(213,213,63)" fg:x="33" fg:w="6"/><text x="15.8898%" y="815.50">`0..</text></g><g><title>`0x7FFE55B53BD5 (6 samples, 2.84%)</title><rect x="15.6398%" y="789" width="2.8436%" height="15" fill="rgb(228,228,69)" fg:x="33" fg:w="6"/><text x="15.8898%" y="799.50">`0..</text></g><g><title>`0x7FFE551D8166 (6 samples, 2.84%)</title><rect x="15.6398%" y="773" width="2.8436%" height="15" fill="rgb(227,227,68)" fg:x="33" fg:w="6"/><text x="15.8898%" y="783.50">`0..</text></g><g><title>`0x7FFE551D9DFF (1 samples, 0.47%)</title><rect x="18.0095%" y="757" width="0.4739%" height="15" fill="rgb(217,217,65)" fg:x="38" fg:w="1"/><text x="18.2595%" y="767.50"></text></g><g><title>`0x7FFE551DCD33 (1 samples, 0.47%)</title><rect x="18.0095%" y="741" width="0.4739%" height="15" fill="rgb(207,207,61)" fg:x="38" fg:w="1"/><text x="18.2595%" y="751.50"></text></g><g><title>`0x7FFE551DCE2F (1 samples, 0.47%)</title><rect x="18.0095%" y="725" width="0.4739%" height="15" fill="rgb(222,222,67)" fg:x="38" fg:w="1"/><text x="18.2595%" y="735.50"></text></g><g><title>`0x7FFE551DE35B (1 samples, 0.47%)</title><rect x="18.0095%" y="709" width="0.4739%" height="15" fill="rgb(228,228,69)" fg:x="38" fg:w="1"/><text x="18.2595%" y="719.50"></text></g><g><title>`0x7FFE551E1EA7 (1 samples, 0.47%)</title><rect x="18.0095%" y="693" width="0.4739%" height="15" fill="rgb(219,219,66)" fg:x="38" fg:w="1"/><text x="18.2595%" y="703.50"></text></g><g><title>`0x7FFE551DAA8E (1 samples, 0.47%)</title><rect x="18.0095%" y="677" width="0.4739%" height="15" fill="rgb(223,223,67)" fg:x="38" fg:w="1"/><text x="18.2595%" y="687.50"></text></g><g><title>`0x7FFE551DC304 (1 samples, 0.47%)</title><rect x="18.0095%" y="661" width="0.4739%" height="15" fill="rgb(229,229,69)" fg:x="38" fg:w="1"/><text x="18.2595%" y="671.50"></text></g><g><title>`0x7FFE56B274CB (1 samples, 0.47%)</title><rect x="18.0095%" y="645" width="0.4739%" height="15" fill="rgb(216,216,65)" fg:x="38" fg:w="1"/><text x="18.2595%" y="655.50"></text></g><g><title>`0x7FFE56B2762C (1 samples, 0.47%)</title><rect x="18.0095%" y="629" width="0.4739%" height="15" fill="rgb(183,183,52)" fg:x="38" fg:w="1"/><text x="18.2595%" y="639.50"></text></g><g><title>`0x7FFE56B27946 (1 samples, 0.47%)</title><rect x="18.0095%" y="613" width="0.4739%" height="15" fill="rgb(188,188,55)" fg:x="38" fg:w="1"/><text x="18.2595%" y="623.50"></text></g><g><title>`0x7FFE56B2831E (1 samples, 0.47%)</title><rect x="18.0095%" y="597" width="0.4739%" height="15" fill="rgb(191,191,55)" fg:x="38" fg:w="1"/><text x="18.2595%" y="607.50"></text></g><g><title>`0x7FFE5944F714 (1 samples, 0.47%)</title><rect x="18.0095%" y="581" width="0.4739%" height="15" fill="rgb(229,229,69)" fg:x="38" fg:w="1"/><text x="18.2595%" y="591.50"></text></g><g><title>`0x7FFE593DC3F8 (1 samples, 0.47%)</title><rect x="18.4834%" y="661" width="0.4739%" height="15" fill="rgb(182,182,52)" fg:x="39" fg:w="1"/><text x="18.7334%" y="671.50"></text></g><g><title>`0x7FFE593D4774 (1 samples, 0.47%)</title><rect x="18.4834%" y="645" width="0.4739%" height="15" fill="rgb(213,213,63)" fg:x="39" fg:w="1"/><text x="18.7334%" y="655.50"></text></g><g><title>`0x7FFE593D3C6C (1 samples, 0.47%)</title><rect x="18.4834%" y="629" width="0.4739%" height="15" fill="rgb(212,212,63)" fg:x="39" fg:w="1"/><text x="18.7334%" y="639.50"></text></g><g><title>`0x7FFE593C070F (2 samples, 0.95%)</title><rect x="18.4834%" y="677" width="0.9479%" height="15" fill="rgb(175,175,50)" fg:x="39" fg:w="2"/><text x="18.7334%" y="687.50"></text></g><g><title>`0x7FFE593DC254 (1 samples, 0.47%)</title><rect x="18.9573%" y="661" width="0.4739%" height="15" fill="rgb(217,217,65)" fg:x="40" fg:w="1"/><text x="19.2073%" y="671.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.47%)</title><rect x="18.9573%" y="645" width="0.4739%" height="15" fill="rgb(180,180,52)" fg:x="40" fg:w="1"/><text x="19.2073%" y="655.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.47%)</title><rect x="18.9573%" y="629" width="0.4739%" height="15" fill="rgb(178,178,51)" fg:x="40" fg:w="1"/><text x="19.2073%" y="639.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.47%)</title><rect x="18.9573%" y="613" width="0.4739%" height="15" fill="rgb(227,227,69)" fg:x="40" fg:w="1"/><text x="19.2073%" y="623.50"></text></g><g><title>`0x7FFE579B987A (3 samples, 1.42%)</title><rect x="18.4834%" y="837" width="1.4218%" height="15" fill="rgb(222,222,67)" fg:x="39" fg:w="3"/><text x="18.7334%" y="847.50"></text></g><g><title>`0x7FFE579B9B5A (3 samples, 1.42%)</title><rect x="18.4834%" y="821" width="1.4218%" height="15" fill="rgb(198,198,58)" fg:x="39" fg:w="3"/><text x="18.7334%" y="831.50"></text></g><g><title>`0x7FFE579B9C6E (3 samples, 1.42%)</title><rect x="18.4834%" y="805" width="1.4218%" height="15" fill="rgb(201,201,59)" fg:x="39" fg:w="3"/><text x="18.7334%" y="815.50"></text></g><g><title>`0x7FFE56B224F1 (3 samples, 1.42%)</title><rect x="18.4834%" y="789" width="1.4218%" height="15" fill="rgb(194,194,57)" fg:x="39" fg:w="3"/><text x="18.7334%" y="799.50"></text></g><g><title>`0x7FFE56B26452 (3 samples, 1.42%)</title><rect x="18.4834%" y="773" width="1.4218%" height="15" fill="rgb(210,210,63)" fg:x="39" fg:w="3"/><text x="18.7334%" y="783.50"></text></g><g><title>`0x7FFE593DA25A (3 samples, 1.42%)</title><rect x="18.4834%" y="757" width="1.4218%" height="15" fill="rgb(183,183,53)" fg:x="39" fg:w="3"/><text x="18.7334%" y="767.50"></text></g><g><title>`0x7FFE593C8CAC (3 samples, 1.42%)</title><rect x="18.4834%" y="741" width="1.4218%" height="15" fill="rgb(194,194,56)" fg:x="39" fg:w="3"/><text x="18.7334%" y="751.50"></text></g><g><title>`0x7FFE593D88D4 (3 samples, 1.42%)</title><rect x="18.4834%" y="725" width="1.4218%" height="15" fill="rgb(228,228,69)" fg:x="39" fg:w="3"/><text x="18.7334%" y="735.50"></text></g><g><title>`0x7FFE593C0EBF (3 samples, 1.42%)</title><rect x="18.4834%" y="709" width="1.4218%" height="15" fill="rgb(207,207,61)" fg:x="39" fg:w="3"/><text x="18.7334%" y="719.50"></text></g><g><title>`0x7FFE593C10F0 (3 samples, 1.42%)</title><rect x="18.4834%" y="693" width="1.4218%" height="15" fill="rgb(182,182,52)" fg:x="39" fg:w="3"/><text x="18.7334%" y="703.50"></text></g><g><title>`0x7FFE593C065C (1 samples, 0.47%)</title><rect x="19.4313%" y="677" width="0.4739%" height="15" fill="rgb(207,207,61)" fg:x="41" fg:w="1"/><text x="19.6813%" y="687.50"></text></g><g><title>`0x7FFE5944F9D4 (1 samples, 0.47%)</title><rect x="19.4313%" y="661" width="0.4739%" height="15" fill="rgb(195,195,57)" fg:x="41" fg:w="1"/><text x="19.6813%" y="671.50"></text></g><g><title>`0x7FFE579B9113 (4 samples, 1.90%)</title><rect x="18.4834%" y="869" width="1.8957%" height="15" fill="rgb(217,217,65)" fg:x="39" fg:w="4"/><text x="18.7334%" y="879.50">`..</text></g><g><title>`0x7FFE579B9413 (4 samples, 1.90%)</title><rect x="18.4834%" y="853" width="1.8957%" height="15" fill="rgb(190,190,55)" fg:x="39" fg:w="4"/><text x="18.7334%" y="863.50">`..</text></g><g><title>`0x7FFE579B979F (1 samples, 0.47%)</title><rect x="19.9052%" y="837" width="0.4739%" height="15" fill="rgb(183,183,53)" fg:x="42" fg:w="1"/><text x="20.1552%" y="847.50"></text></g><g><title>`0x7FFE55B531F8 (1 samples, 0.47%)</title><rect x="19.9052%" y="821" width="0.4739%" height="15" fill="rgb(190,190,55)" fg:x="42" fg:w="1"/><text x="20.1552%" y="831.50"></text></g><g><title>`0x7FFE55B538BB (1 samples, 0.47%)</title><rect x="19.9052%" y="805" width="0.4739%" height="15" fill="rgb(192,192,56)" fg:x="42" fg:w="1"/><text x="20.1552%" y="815.50"></text></g><g><title>`0x7FFE55B53BD5 (1 samples, 0.47%)</title><rect x="19.9052%" y="789" width="0.4739%" height="15" fill="rgb(196,196,57)" fg:x="42" fg:w="1"/><text x="20.1552%" y="799.50"></text></g><g><title>`0x7FFE551D8166 (1 samples, 0.47%)</title><rect x="19.9052%" y="773" width="0.4739%" height="15" fill="rgb(223,223,67)" fg:x="42" fg:w="1"/><text x="20.1552%" y="783.50"></text></g><g><title>`0x7FFE551D9BB7 (1 samples, 0.47%)</title><rect x="19.9052%" y="757" width="0.4739%" height="15" fill="rgb(193,193,56)" fg:x="42" fg:w="1"/><text x="20.1552%" y="767.50"></text></g><g><title>`0x7FFE551D885F (1 samples, 0.47%)</title><rect x="19.9052%" y="741" width="0.4739%" height="15" fill="rgb(193,193,56)" fg:x="42" fg:w="1"/><text x="20.1552%" y="751.50"></text></g><g><title>`0x7FFE593DC399 (1 samples, 0.47%)</title><rect x="20.3791%" y="341" width="0.4739%" height="15" fill="rgb(208,208,62)" fg:x="43" fg:w="1"/><text x="20.6291%" y="351.50"></text></g><g><title>`0x7FFE593DAF85 (1 samples, 0.47%)</title><rect x="20.3791%" y="325" width="0.4739%" height="15" fill="rgb(207,207,61)" fg:x="43" fg:w="1"/><text x="20.6291%" y="335.50"></text></g><g><title>`0x7FFE593DB4D7 (1 samples, 0.47%)</title><rect x="20.3791%" y="309" width="0.4739%" height="15" fill="rgb(181,181,52)" fg:x="43" fg:w="1"/><text x="20.6291%" y="319.50"></text></g><g><title>`0x7FFE5944FD74 (1 samples, 0.47%)</title><rect x="20.3791%" y="293" width="0.4739%" height="15" fill="rgb(214,214,64)" fg:x="43" fg:w="1"/><text x="20.6291%" y="303.50"></text></g><g><title>`0x7FFE593C0BC8 (2 samples, 0.95%)</title><rect x="20.3791%" y="373" width="0.9479%" height="15" fill="rgb(215,215,64)" fg:x="43" fg:w="2"/><text x="20.6291%" y="383.50"></text></g><g><title>`0x7FFE593C070F (2 samples, 0.95%)</title><rect x="20.3791%" y="357" width="0.9479%" height="15" fill="rgb(195,195,57)" fg:x="43" fg:w="2"/><text x="20.6291%" y="367.50"></text></g><g><title>`0x7FFE593DC254 (1 samples, 0.47%)</title><rect x="20.8531%" y="341" width="0.4739%" height="15" fill="rgb(186,186,54)" fg:x="44" fg:w="1"/><text x="21.1031%" y="351.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.47%)</title><rect x="20.8531%" y="325" width="0.4739%" height="15" fill="rgb(179,179,51)" fg:x="44" fg:w="1"/><text x="21.1031%" y="335.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.47%)</title><rect x="20.8531%" y="309" width="0.4739%" height="15" fill="rgb(194,194,57)" fg:x="44" fg:w="1"/><text x="21.1031%" y="319.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.47%)</title><rect x="20.8531%" y="293" width="0.4739%" height="15" fill="rgb(222,222,67)" fg:x="44" fg:w="1"/><text x="21.1031%" y="303.50"></text></g><g><title>`0x7FFE551F81C2 (3 samples, 1.42%)</title><rect x="20.3791%" y="501" width="1.4218%" height="15" fill="rgb(220,220,66)" fg:x="43" fg:w="3"/><text x="20.6291%" y="511.50"></text></g><g><title>`0x7FFE551ED8D2 (3 samples, 1.42%)</title><rect x="20.3791%" y="485" width="1.4218%" height="15" fill="rgb(225,225,68)" fg:x="43" fg:w="3"/><text x="20.6291%" y="495.50"></text></g><g><title>`0x7FFE593DB9F7 (3 samples, 1.42%)</title><rect x="20.3791%" y="469" width="1.4218%" height="15" fill="rgb(213,213,64)" fg:x="43" fg:w="3"/><text x="20.6291%" y="479.50"></text></g><g><title>`0x7FFE593D2C35 (3 samples, 1.42%)</title><rect x="20.3791%" y="453" width="1.4218%" height="15" fill="rgb(229,229,69)" fg:x="43" fg:w="3"/><text x="20.6291%" y="463.50"></text></g><g><title>`0x7FFE593C5C8E (3 samples, 1.42%)</title><rect x="20.3791%" y="437" width="1.4218%" height="15" fill="rgb(195,195,57)" fg:x="43" fg:w="3"/><text x="20.6291%" y="447.50"></text></g><g><title>`0x7FFE593C8AD0 (3 samples, 1.42%)</title><rect x="20.3791%" y="421" width="1.4218%" height="15" fill="rgb(185,185,53)" fg:x="43" fg:w="3"/><text x="20.6291%" y="431.50"></text></g><g><title>`0x7FFE593D88D4 (3 samples, 1.42%)</title><rect x="20.3791%" y="405" width="1.4218%" height="15" fill="rgb(217,217,65)" fg:x="43" fg:w="3"/><text x="20.6291%" y="415.50"></text></g><g><title>`0x7FFE593C0F90 (3 samples, 1.42%)</title><rect x="20.3791%" y="389" width="1.4218%" height="15" fill="rgb(217,217,65)" fg:x="43" fg:w="3"/><text x="20.6291%" y="399.50"></text></g><g><title>`0x7FFE593C0AFE (1 samples, 0.47%)</title><rect x="21.3270%" y="373" width="0.4739%" height="15" fill="rgb(227,227,69)" fg:x="45" fg:w="1"/><text x="21.5770%" y="383.50"></text></g><g><title>`0x7FFE593DDB51 (1 samples, 0.47%)</title><rect x="21.3270%" y="357" width="0.4739%" height="15" fill="rgb(215,215,64)" fg:x="45" fg:w="1"/><text x="21.5770%" y="367.50"></text></g><g><title>`0x7FFE593DA407 (1 samples, 0.47%)</title><rect x="21.3270%" y="341" width="0.4739%" height="15" fill="rgb(179,179,51)" fg:x="45" fg:w="1"/><text x="21.5770%" y="351.50"></text></g><g><title>`0x7FFE593DAC49 (1 samples, 0.47%)</title><rect x="21.3270%" y="325" width="0.4739%" height="15" fill="rgb(176,176,50)" fg:x="45" fg:w="1"/><text x="21.5770%" y="335.50"></text></g><g><title>`0x7FFE5944FB14 (1 samples, 0.47%)</title><rect x="21.3270%" y="309" width="0.4739%" height="15" fill="rgb(209,209,62)" fg:x="45" fg:w="1"/><text x="21.5770%" y="319.50"></text></g><g><title>`0x7FFE593DC399 (1 samples, 0.47%)</title><rect x="21.8009%" y="325" width="0.4739%" height="15" fill="rgb(206,206,61)" fg:x="46" fg:w="1"/><text x="22.0509%" y="335.50"></text></g><g><title>`0x7FFE593DAF46 (1 samples, 0.47%)</title><rect x="21.8009%" y="309" width="0.4739%" height="15" fill="rgb(176,176,50)" fg:x="46" fg:w="1"/><text x="22.0509%" y="319.50"></text></g><g><title>`0x7FFE593DB1A3 (1 samples, 0.47%)</title><rect x="21.8009%" y="293" width="0.4739%" height="15" fill="rgb(198,198,58)" fg:x="46" fg:w="1"/><text x="22.0509%" y="303.50"></text></g><g><title>`0x7FFE593D8940 (5 samples, 2.37%)</title><rect x="20.3791%" y="645" width="2.3697%" height="15" fill="rgb(175,175,50)" fg:x="43" fg:w="5"/><text x="20.6291%" y="655.50">`0..</text></g><g><title>`0x7FFE593DD62D (5 samples, 2.37%)</title><rect x="20.3791%" y="629" width="2.3697%" height="15" fill="rgb(225,225,68)" fg:x="43" fg:w="5"/><text x="20.6291%" y="639.50">`0..</text></g><g><title>`0x7FFE5941CDFE (5 samples, 2.37%)</title><rect x="20.3791%" y="613" width="2.3697%" height="15" fill="rgb(207,207,61)" fg:x="43" fg:w="5"/><text x="20.6291%" y="623.50">`0..</text></g><g><title>`0x7FFE5941D04D (5 samples, 2.37%)</title><rect x="20.3791%" y="597" width="2.3697%" height="15" fill="rgb(207,207,61)" fg:x="43" fg:w="5"/><text x="20.6291%" y="607.50">`0..</text></g><g><title>`0x7FFE593D869F (5 samples, 2.37%)</title><rect x="20.3791%" y="581" width="2.3697%" height="15" fill="rgb(179,179,51)" fg:x="43" fg:w="5"/><text x="20.6291%" y="591.50">`0..</text></g><g><title>`0x7FFE551F7B3A (5 samples, 2.37%)</title><rect x="20.3791%" y="565" width="2.3697%" height="15" fill="rgb(219,219,66)" fg:x="43" fg:w="5"/><text x="20.6291%" y="575.50">`0..</text></g><g><title>`0x7FFE551F9077 (5 samples, 2.37%)</title><rect x="20.3791%" y="549" width="2.3697%" height="15" fill="rgb(227,227,69)" fg:x="43" fg:w="5"/><text x="20.6291%" y="559.50">`0..</text></g><g><title>`0x7FFE551E31AD (5 samples, 2.37%)</title><rect x="20.3791%" y="533" width="2.3697%" height="15" fill="rgb(218,218,65)" fg:x="43" fg:w="5"/><text x="20.6291%" y="543.50">`0..</text></g><g><title>`0x7FFE551E3314 (5 samples, 2.37%)</title><rect x="20.3791%" y="517" width="2.3697%" height="15" fill="rgb(188,188,54)" fg:x="43" fg:w="5"/><text x="20.6291%" y="527.50">`0..</text></g><g><title>`0x7FFE55152A48 (2 samples, 0.95%)</title><rect x="21.8009%" y="501" width="0.9479%" height="15" fill="rgb(198,198,58)" fg:x="46" fg:w="2"/><text x="22.0509%" y="511.50"></text></g><g><title>`0x7FFE55153782 (2 samples, 0.95%)</title><rect x="21.8009%" y="485" width="0.9479%" height="15" fill="rgb(225,225,68)" fg:x="46" fg:w="2"/><text x="22.0509%" y="495.50"></text></g><g><title>`0x7FFE5515B731 (2 samples, 0.95%)</title><rect x="21.8009%" y="469" width="0.9479%" height="15" fill="rgb(176,176,50)" fg:x="46" fg:w="2"/><text x="22.0509%" y="479.50"></text></g><g><title>`0x7FFE551599B2 (2 samples, 0.95%)</title><rect x="21.8009%" y="453" width="0.9479%" height="15" fill="rgb(223,223,67)" fg:x="46" fg:w="2"/><text x="22.0509%" y="463.50"></text></g><g><title>`0x7FFE593DB9F7 (2 samples, 0.95%)</title><rect x="21.8009%" y="437" width="0.9479%" height="15" fill="rgb(224,224,67)" fg:x="46" fg:w="2"/><text x="22.0509%" y="447.50"></text></g><g><title>`0x7FFE593D2C35 (2 samples, 0.95%)</title><rect x="21.8009%" y="421" width="0.9479%" height="15" fill="rgb(188,188,54)" fg:x="46" fg:w="2"/><text x="22.0509%" y="431.50"></text></g><g><title>`0x7FFE593C5C8E (2 samples, 0.95%)</title><rect x="21.8009%" y="405" width="0.9479%" height="15" fill="rgb(219,219,66)" fg:x="46" fg:w="2"/><text x="22.0509%" y="415.50"></text></g><g><title>`0x7FFE593C8AD0 (2 samples, 0.95%)</title><rect x="21.8009%" y="389" width="0.9479%" height="15" fill="rgb(201,201,59)" fg:x="46" fg:w="2"/><text x="22.0509%" y="399.50"></text></g><g><title>`0x7FFE593D88B6 (2 samples, 0.95%)</title><rect x="21.8009%" y="373" width="0.9479%" height="15" fill="rgb(210,210,62)" fg:x="46" fg:w="2"/><text x="22.0509%" y="383.50"></text></g><g><title>`0x7FFE593DDDA9 (2 samples, 0.95%)</title><rect x="21.8009%" y="357" width="0.9479%" height="15" fill="rgb(224,224,67)" fg:x="46" fg:w="2"/><text x="22.0509%" y="367.50"></text></g><g><title>`0x7FFE593DCE29 (2 samples, 0.95%)</title><rect x="21.8009%" y="341" width="0.9479%" height="15" fill="rgb(211,211,63)" fg:x="46" fg:w="2"/><text x="22.0509%" y="351.50"></text></g><g><title>`0x7FFE593DC254 (1 samples, 0.47%)</title><rect x="22.2749%" y="325" width="0.4739%" height="15" fill="rgb(211,211,63)" fg:x="47" fg:w="1"/><text x="22.5249%" y="335.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.47%)</title><rect x="22.2749%" y="309" width="0.4739%" height="15" fill="rgb(208,208,62)" fg:x="47" fg:w="1"/><text x="22.5249%" y="319.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.47%)</title><rect x="22.2749%" y="293" width="0.4739%" height="15" fill="rgb(190,190,55)" fg:x="47" fg:w="1"/><text x="22.5249%" y="303.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.47%)</title><rect x="22.2749%" y="277" width="0.4739%" height="15" fill="rgb(186,186,54)" fg:x="47" fg:w="1"/><text x="22.5249%" y="287.50"></text></g><g><title>`0x7FFE593C0BC8 (1 samples, 0.47%)</title><rect x="22.7488%" y="613" width="0.4739%" height="15" fill="rgb(192,192,56)" fg:x="48" fg:w="1"/><text x="22.9988%" y="623.50"></text></g><g><title>`0x7FFE593C070F (1 samples, 0.47%)</title><rect x="22.7488%" y="597" width="0.4739%" height="15" fill="rgb(185,185,53)" fg:x="48" fg:w="1"/><text x="22.9988%" y="607.50"></text></g><g><title>`0x7FFE593DC254 (1 samples, 0.47%)</title><rect x="22.7488%" y="581" width="0.4739%" height="15" fill="rgb(210,210,63)" fg:x="48" fg:w="1"/><text x="22.9988%" y="591.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.47%)</title><rect x="22.7488%" y="565" width="0.4739%" height="15" fill="rgb(181,181,52)" fg:x="48" fg:w="1"/><text x="22.9988%" y="575.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.47%)</title><rect x="22.7488%" y="549" width="0.4739%" height="15" fill="rgb(206,206,61)" fg:x="48" fg:w="1"/><text x="22.9988%" y="559.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.47%)</title><rect x="22.7488%" y="533" width="0.4739%" height="15" fill="rgb(191,191,55)" fg:x="48" fg:w="1"/><text x="22.9988%" y="543.50"></text></g><g><title>`0x7FFE55B617B0 (7 samples, 3.32%)</title><rect x="20.3791%" y="741" width="3.3175%" height="15" fill="rgb(191,191,55)" fg:x="43" fg:w="7"/><text x="20.6291%" y="751.50">`0x..</text></g><g><title>`0x7FFE55B5E8C2 (7 samples, 3.32%)</title><rect x="20.3791%" y="725" width="3.3175%" height="15" fill="rgb(209,209,62)" fg:x="43" fg:w="7"/><text x="20.6291%" y="735.50">`0x..</text></g><g><title>`0x7FFE593DB9F7 (7 samples, 3.32%)</title><rect x="20.3791%" y="709" width="3.3175%" height="15" fill="rgb(181,181,52)" fg:x="43" fg:w="7"/><text x="20.6291%" y="719.50">`0x..</text></g><g><title>`0x7FFE593D2C35 (7 samples, 3.32%)</title><rect x="20.3791%" y="693" width="3.3175%" height="15" fill="rgb(203,203,60)" fg:x="43" fg:w="7"/><text x="20.6291%" y="703.50">`0x..</text></g><g><title>`0x7FFE593C5C8E (7 samples, 3.32%)</title><rect x="20.3791%" y="677" width="3.3175%" height="15" fill="rgb(198,198,58)" fg:x="43" fg:w="7"/><text x="20.6291%" y="687.50">`0x..</text></g><g><title>`0x7FFE593C8AD0 (7 samples, 3.32%)</title><rect x="20.3791%" y="661" width="3.3175%" height="15" fill="rgb(181,181,52)" fg:x="43" fg:w="7"/><text x="20.6291%" y="671.50">`0x..</text></g><g><title>`0x7FFE593D88D4 (2 samples, 0.95%)</title><rect x="22.7488%" y="645" width="0.9479%" height="15" fill="rgb(209,209,62)" fg:x="48" fg:w="2"/><text x="22.9988%" y="655.50"></text></g><g><title>`0x7FFE593C0F90 (2 samples, 0.95%)</title><rect x="22.7488%" y="629" width="0.9479%" height="15" fill="rgb(195,195,57)" fg:x="48" fg:w="2"/><text x="22.9988%" y="639.50"></text></g><g><title>`0x7FFE593C0AFE (1 samples, 0.47%)</title><rect x="23.2227%" y="613" width="0.4739%" height="15" fill="rgb(195,195,57)" fg:x="49" fg:w="1"/><text x="23.4727%" y="623.50"></text></g><g><title>`0x7FFE593DDB51 (1 samples, 0.47%)</title><rect x="23.2227%" y="597" width="0.4739%" height="15" fill="rgb(224,224,67)" fg:x="49" fg:w="1"/><text x="23.4727%" y="607.50"></text></g><g><title>`0x7FFE593DA407 (1 samples, 0.47%)</title><rect x="23.2227%" y="581" width="0.4739%" height="15" fill="rgb(223,223,67)" fg:x="49" fg:w="1"/><text x="23.4727%" y="591.50"></text></g><g><title>`0x7FFE593DAC49 (1 samples, 0.47%)</title><rect x="23.2227%" y="565" width="0.4739%" height="15" fill="rgb(189,189,55)" fg:x="49" fg:w="1"/><text x="23.4727%" y="575.50"></text></g><g><title>`0x7FFE5944FB14 (1 samples, 0.47%)</title><rect x="23.2227%" y="549" width="0.4739%" height="15" fill="rgb(217,217,65)" fg:x="49" fg:w="1"/><text x="23.4727%" y="559.50"></text></g><g><title>`0x7FFE579C1195 (8 samples, 3.79%)</title><rect x="20.3791%" y="789" width="3.7915%" height="15" fill="rgb(178,178,51)" fg:x="43" fg:w="8"/><text x="20.6291%" y="799.50">`0x7..</text></g><g><title>`0x7FFE55B52658 (8 samples, 3.79%)</title><rect x="20.3791%" y="773" width="3.7915%" height="15" fill="rgb(181,181,52)" fg:x="43" fg:w="8"/><text x="20.6291%" y="783.50">`0x7..</text></g><g><title>`0x7FFE55B526C0 (8 samples, 3.79%)</title><rect x="20.3791%" y="757" width="3.7915%" height="15" fill="rgb(183,183,53)" fg:x="43" fg:w="8"/><text x="20.6291%" y="767.50">`0x7..</text></g><g><title>`0x7FFE551E1B84 (1 samples, 0.47%)</title><rect x="23.6967%" y="741" width="0.4739%" height="15" fill="rgb(191,191,55)" fg:x="50" fg:w="1"/><text x="23.9467%" y="751.50"></text></g><g><title>`0x7FFE551E1D5F (1 samples, 0.47%)</title><rect x="23.6967%" y="725" width="0.4739%" height="15" fill="rgb(203,203,60)" fg:x="50" fg:w="1"/><text x="23.9467%" y="735.50"></text></g><g><title>`0x7FFE551E1EA7 (1 samples, 0.47%)</title><rect x="23.6967%" y="709" width="0.4739%" height="15" fill="rgb(198,198,58)" fg:x="50" fg:w="1"/><text x="23.9467%" y="719.50"></text></g><g><title>`0x7FFE551DAA8E (1 samples, 0.47%)</title><rect x="23.6967%" y="693" width="0.4739%" height="15" fill="rgb(176,176,50)" fg:x="50" fg:w="1"/><text x="23.9467%" y="703.50"></text></g><g><title>`0x7FFE551DC3F5 (1 samples, 0.47%)</title><rect x="23.6967%" y="677" width="0.4739%" height="15" fill="rgb(198,198,58)" fg:x="50" fg:w="1"/><text x="23.9467%" y="687.50"></text></g><g><title>`0x7FFE593C1814 (1 samples, 0.47%)</title><rect x="24.1706%" y="533" width="0.4739%" height="15" fill="rgb(176,176,50)" fg:x="51" fg:w="1"/><text x="24.4206%" y="543.50"></text></g><g><title>`0x7FFE5945A671 (1 samples, 0.47%)</title><rect x="24.1706%" y="517" width="0.4739%" height="15" fill="rgb(220,220,66)" fg:x="51" fg:w="1"/><text x="24.4206%" y="527.50"></text></g><g><title>`0x7FFE593BA3CB (1 samples, 0.47%)</title><rect x="24.1706%" y="501" width="0.4739%" height="15" fill="rgb(195,195,57)" fg:x="51" fg:w="1"/><text x="24.4206%" y="511.50"></text></g><g><title>`0x7FFE593BC2BA (1 samples, 0.47%)</title><rect x="24.1706%" y="485" width="0.4739%" height="15" fill="rgb(199,199,58)" fg:x="51" fg:w="1"/><text x="24.4206%" y="495.50"></text></g><g><title>`0x7FFE593BE47C (1 samples, 0.47%)</title><rect x="24.1706%" y="469" width="0.4739%" height="15" fill="rgb(215,215,64)" fg:x="51" fg:w="1"/><text x="24.4206%" y="479.50"></text></g><g><title>`0x7FFE5944F5B4 (1 samples, 0.47%)</title><rect x="24.1706%" y="453" width="0.4739%" height="15" fill="rgb(202,202,59)" fg:x="51" fg:w="1"/><text x="24.4206%" y="463.50"></text></g><g><title>`0x7FFE593DC3F8 (2 samples, 0.95%)</title><rect x="24.1706%" y="661" width="0.9479%" height="15" fill="rgb(219,219,66)" fg:x="51" fg:w="2"/><text x="24.4206%" y="671.50"></text></g><g><title>`0x7FFE593D452F (2 samples, 0.95%)</title><rect x="24.1706%" y="645" width="0.9479%" height="15" fill="rgb(197,197,58)" fg:x="51" fg:w="2"/><text x="24.4206%" y="655.50"></text></g><g><title>`0x7FFE5942152C (2 samples, 0.95%)</title><rect x="24.1706%" y="629" width="0.9479%" height="15" fill="rgb(220,220,66)" fg:x="51" fg:w="2"/><text x="24.4206%" y="639.50"></text></g><g><title>`0x7FFE57DC1081 (2 samples, 0.95%)</title><rect x="24.1706%" y="613" width="0.9479%" height="15" fill="rgb(211,211,63)" fg:x="51" fg:w="2"/><text x="24.4206%" y="623.50"></text></g><g><title>`0x7FFE56B84DB0 (2 samples, 0.95%)</title><rect x="24.1706%" y="597" width="0.9479%" height="15" fill="rgb(180,180,51)" fg:x="51" fg:w="2"/><text x="24.4206%" y="607.50"></text></g><g><title>`0x7FFE57DB67A7 (2 samples, 0.95%)</title><rect x="24.1706%" y="581" width="0.9479%" height="15" fill="rgb(225,225,68)" fg:x="51" fg:w="2"/><text x="24.4206%" y="591.50"></text></g><g><title>`0x7FFE57DB6D0D (2 samples, 0.95%)</title><rect x="24.1706%" y="565" width="0.9479%" height="15" fill="rgb(208,208,62)" fg:x="51" fg:w="2"/><text x="24.4206%" y="575.50"></text></g><g><title>`0x7FFE57DB7BF5 (2 samples, 0.95%)</title><rect x="24.1706%" y="549" width="0.9479%" height="15" fill="rgb(197,197,58)" fg:x="51" fg:w="2"/><text x="24.4206%" y="559.50"></text></g><g><title>`0x7FFE593C17B3 (1 samples, 0.47%)</title><rect x="24.6445%" y="533" width="0.4739%" height="15" fill="rgb(217,217,65)" fg:x="52" fg:w="1"/><text x="24.8945%" y="543.50"></text></g><g><title>`0x7FFE593CED59 (1 samples, 0.47%)</title><rect x="24.6445%" y="517" width="0.4739%" height="15" fill="rgb(214,214,64)" fg:x="52" fg:w="1"/><text x="24.8945%" y="527.50"></text></g><g><title>`0x7FFE593BA17E (1 samples, 0.47%)</title><rect x="24.6445%" y="501" width="0.4739%" height="15" fill="rgb(183,183,53)" fg:x="52" fg:w="1"/><text x="24.8945%" y="511.50"></text></g><g><title>`0x7FFE593B9D8D (1 samples, 0.47%)</title><rect x="24.6445%" y="485" width="0.4739%" height="15" fill="rgb(214,214,64)" fg:x="52" fg:w="1"/><text x="24.8945%" y="495.50"></text></g><g><title>`0x7FFE593B9BA5 (1 samples, 0.47%)</title><rect x="24.6445%" y="469" width="0.4739%" height="15" fill="rgb(224,224,67)" fg:x="52" fg:w="1"/><text x="24.8945%" y="479.50"></text></g><g><title>`0x7FFE593C38B0 (1 samples, 0.47%)</title><rect x="24.6445%" y="453" width="0.4739%" height="15" fill="rgb(203,203,60)" fg:x="52" fg:w="1"/><text x="24.8945%" y="463.50"></text></g><g><title>`0x7FFE5942F75E (1 samples, 0.47%)</title><rect x="24.6445%" y="437" width="0.4739%" height="15" fill="rgb(200,200,59)" fg:x="52" fg:w="1"/><text x="24.8945%" y="447.50"></text></g><g><title>`0x7FFE5942F865 (1 samples, 0.47%)</title><rect x="24.6445%" y="421" width="0.4739%" height="15" fill="rgb(208,208,62)" fg:x="52" fg:w="1"/><text x="24.8945%" y="431.50"></text></g><g><title>`0x7FFE593C10F0 (3 samples, 1.42%)</title><rect x="24.1706%" y="693" width="1.4218%" height="15" fill="rgb(195,195,57)" fg:x="51" fg:w="3"/><text x="24.4206%" y="703.50"></text></g><g><title>`0x7FFE593C070F (3 samples, 1.42%)</title><rect x="24.1706%" y="677" width="1.4218%" height="15" fill="rgb(220,220,66)" fg:x="51" fg:w="3"/><text x="24.4206%" y="687.50"></text></g><g><title>`0x7FFE593DC254 (1 samples, 0.47%)</title><rect x="25.1185%" y="661" width="0.4739%" height="15" fill="rgb(201,201,59)" fg:x="53" fg:w="1"/><text x="25.3685%" y="671.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.47%)</title><rect x="25.1185%" y="645" width="0.4739%" height="15" fill="rgb(195,195,57)" fg:x="53" fg:w="1"/><text x="25.3685%" y="655.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.47%)</title><rect x="25.1185%" y="629" width="0.4739%" height="15" fill="rgb(221,221,66)" fg:x="53" fg:w="1"/><text x="25.3685%" y="639.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.47%)</title><rect x="25.1185%" y="613" width="0.4739%" height="15" fill="rgb(181,181,52)" fg:x="53" fg:w="1"/><text x="25.3685%" y="623.50"></text></g><g><title>`0x7FFE579B56FE (30 samples, 14.22%)</title><rect x="11.8483%" y="901" width="14.2180%" height="15" fill="rgb(188,188,54)" fg:x="25" fg:w="30"/><text x="12.0983%" y="911.50">`0x7FFE579B56FE</text></g><g><title>`0x7FFE579B8EAA (16 samples, 7.58%)</title><rect x="18.4834%" y="885" width="7.5829%" height="15" fill="rgb(226,226,68)" fg:x="39" fg:w="16"/><text x="18.7334%" y="895.50">`0x7FFE579..</text></g><g><title>`0x7FFE579B90ED (12 samples, 5.69%)</title><rect x="20.3791%" y="869" width="5.6872%" height="15" fill="rgb(223,223,67)" fg:x="43" fg:w="12"/><text x="20.6291%" y="879.50">`0x7FFE..</text></g><g><title>`0x7FFE579B9F8B (12 samples, 5.69%)</title><rect x="20.3791%" y="853" width="5.6872%" height="15" fill="rgb(202,202,60)" fg:x="43" fg:w="12"/><text x="20.6291%" y="863.50">`0x7FFE..</text></g><g><title>`0x7FFE579BAC26 (12 samples, 5.69%)</title><rect x="20.3791%" y="837" width="5.6872%" height="15" fill="rgb(192,192,56)" fg:x="43" fg:w="12"/><text x="20.6291%" y="847.50">`0x7FFE..</text></g><g><title>`0x7FFE579C0EFE (12 samples, 5.69%)</title><rect x="20.3791%" y="821" width="5.6872%" height="15" fill="rgb(208,208,62)" fg:x="43" fg:w="12"/><text x="20.6291%" y="831.50">`0x7FFE..</text></g><g><title>`0x7FFE579C1069 (12 samples, 5.69%)</title><rect x="20.3791%" y="805" width="5.6872%" height="15" fill="rgb(179,179,51)" fg:x="43" fg:w="12"/><text x="20.6291%" y="815.50">`0x7FFE..</text></g><g><title>`0x7FFE579C1142 (4 samples, 1.90%)</title><rect x="24.1706%" y="789" width="1.8957%" height="15" fill="rgb(222,222,67)" fg:x="51" fg:w="4"/><text x="24.4206%" y="799.50">`..</text></g><g><title>`0x7FFE56B26452 (4 samples, 1.90%)</title><rect x="24.1706%" y="773" width="1.8957%" height="15" fill="rgb(201,201,59)" fg:x="51" fg:w="4"/><text x="24.4206%" y="783.50">`..</text></g><g><title>`0x7FFE593DA25A (4 samples, 1.90%)</title><rect x="24.1706%" y="757" width="1.8957%" height="15" fill="rgb(204,204,60)" fg:x="51" fg:w="4"/><text x="24.4206%" y="767.50">`..</text></g><g><title>`0x7FFE593C8CAC (4 samples, 1.90%)</title><rect x="24.1706%" y="741" width="1.8957%" height="15" fill="rgb(196,196,57)" fg:x="51" fg:w="4"/><text x="24.4206%" y="751.50">`..</text></g><g><title>`0x7FFE593D88D4 (4 samples, 1.90%)</title><rect x="24.1706%" y="725" width="1.8957%" height="15" fill="rgb(211,211,63)" fg:x="51" fg:w="4"/><text x="24.4206%" y="735.50">`..</text></g><g><title>`0x7FFE593C0EBF (4 samples, 1.90%)</title><rect x="24.1706%" y="709" width="1.8957%" height="15" fill="rgb(210,210,62)" fg:x="51" fg:w="4"/><text x="24.4206%" y="719.50">`..</text></g><g><title>`0x7FFE593C1082 (1 samples, 0.47%)</title><rect x="25.5924%" y="693" width="0.4739%" height="15" fill="rgb(213,213,63)" fg:x="54" fg:w="1"/><text x="25.8424%" y="703.50"></text></g><g><title>`0x7FFE593DA407 (1 samples, 0.47%)</title><rect x="25.5924%" y="677" width="0.4739%" height="15" fill="rgb(187,187,54)" fg:x="54" fg:w="1"/><text x="25.8424%" y="687.50"></text></g><g><title>`0x7FFE593DAC49 (1 samples, 0.47%)</title><rect x="25.5924%" y="661" width="0.4739%" height="15" fill="rgb(207,207,61)" fg:x="54" fg:w="1"/><text x="25.8424%" y="671.50"></text></g><g><title>`0x7FFE5944FB14 (1 samples, 0.47%)</title><rect x="25.5924%" y="645" width="0.4739%" height="15" fill="rgb(194,194,56)" fg:x="54" fg:w="1"/><text x="25.8424%" y="655.50"></text></g><g><title>`0x7FFE579BCF29 (1 samples, 0.47%)</title><rect x="26.0664%" y="821" width="0.4739%" height="15" fill="rgb(200,200,59)" fg:x="55" fg:w="1"/><text x="26.3164%" y="831.50"></text></g><g><title>`0x7FFE579BA105 (1 samples, 0.47%)</title><rect x="26.0664%" y="805" width="0.4739%" height="15" fill="rgb(217,217,65)" fg:x="55" fg:w="1"/><text x="26.3164%" y="815.50"></text></g><g><title>`0x7FFE579BA2E9 (1 samples, 0.47%)</title><rect x="26.0664%" y="789" width="0.4739%" height="15" fill="rgb(177,177,50)" fg:x="55" fg:w="1"/><text x="26.3164%" y="799.50"></text></g><g><title>`0x7FFE55B56D24 (1 samples, 0.47%)</title><rect x="26.0664%" y="773" width="0.4739%" height="15" fill="rgb(200,200,59)" fg:x="55" fg:w="1"/><text x="26.3164%" y="783.50"></text></g><g><title>`0x7FFE55B56F55 (1 samples, 0.47%)</title><rect x="26.0664%" y="757" width="0.4739%" height="15" fill="rgb(227,227,69)" fg:x="55" fg:w="1"/><text x="26.3164%" y="767.50"></text></g><g><title>`0x7FFE55B57941 (1 samples, 0.47%)</title><rect x="26.0664%" y="741" width="0.4739%" height="15" fill="rgb(187,187,54)" fg:x="55" fg:w="1"/><text x="26.3164%" y="751.50"></text></g><g><title>`0x7FFE55B54FB9 (1 samples, 0.47%)</title><rect x="26.0664%" y="725" width="0.4739%" height="15" fill="rgb(212,212,63)" fg:x="55" fg:w="1"/><text x="26.3164%" y="735.50"></text></g><g><title>`0x7FFE56B2A279 (1 samples, 0.47%)</title><rect x="26.0664%" y="709" width="0.4739%" height="15" fill="rgb(180,180,51)" fg:x="55" fg:w="1"/><text x="26.3164%" y="719.50"></text></g><g><title>`0x7FFE56B2A3C8 (1 samples, 0.47%)</title><rect x="26.0664%" y="693" width="0.4739%" height="15" fill="rgb(179,179,51)" fg:x="55" fg:w="1"/><text x="26.3164%" y="703.50"></text></g><g><title>`0x7FFE56B2B1E4 (1 samples, 0.47%)</title><rect x="26.0664%" y="677" width="0.4739%" height="15" fill="rgb(185,185,53)" fg:x="55" fg:w="1"/><text x="26.3164%" y="687.50"></text></g><g><title>`0x7FFE59451884 (1 samples, 0.47%)</title><rect x="26.0664%" y="661" width="0.4739%" height="15" fill="rgb(199,199,59)" fg:x="55" fg:w="1"/><text x="26.3164%" y="671.50"></text></g><g><title>`0x7FFE579BA2E9 (1 samples, 0.47%)</title><rect x="26.5403%" y="789" width="0.4739%" height="15" fill="rgb(194,194,57)" fg:x="56" fg:w="1"/><text x="26.7903%" y="799.50"></text></g><g><title>`0x7FFE55B56D24 (1 samples, 0.47%)</title><rect x="26.5403%" y="773" width="0.4739%" height="15" fill="rgb(183,183,52)" fg:x="56" fg:w="1"/><text x="26.7903%" y="783.50"></text></g><g><title>`0x7FFE55B56F55 (1 samples, 0.47%)</title><rect x="26.5403%" y="757" width="0.4739%" height="15" fill="rgb(225,225,68)" fg:x="56" fg:w="1"/><text x="26.7903%" y="767.50"></text></g><g><title>`0x7FFE55B5798F (1 samples, 0.47%)</title><rect x="26.5403%" y="741" width="0.4739%" height="15" fill="rgb(211,211,63)" fg:x="56" fg:w="1"/><text x="26.7903%" y="751.50"></text></g><g><title>`0x7FFE55B56008 (1 samples, 0.47%)</title><rect x="26.5403%" y="725" width="0.4739%" height="15" fill="rgb(190,190,55)" fg:x="56" fg:w="1"/><text x="26.7903%" y="735.50"></text></g><g><title>`0x7FFE56B2A279 (1 samples, 0.47%)</title><rect x="26.5403%" y="709" width="0.4739%" height="15" fill="rgb(213,213,64)" fg:x="56" fg:w="1"/><text x="26.7903%" y="719.50"></text></g><g><title>`0x7FFE56B2A3C8 (1 samples, 0.47%)</title><rect x="26.5403%" y="693" width="0.4739%" height="15" fill="rgb(208,208,62)" fg:x="56" fg:w="1"/><text x="26.7903%" y="703.50"></text></g><g><title>`0x7FFE56B2B1E4 (1 samples, 0.47%)</title><rect x="26.5403%" y="677" width="0.4739%" height="15" fill="rgb(229,229,69)" fg:x="56" fg:w="1"/><text x="26.7903%" y="687.50"></text></g><g><title>`0x7FFE59451884 (1 samples, 0.47%)</title><rect x="26.5403%" y="661" width="0.4739%" height="15" fill="rgb(225,225,68)" fg:x="56" fg:w="1"/><text x="26.7903%" y="671.50"></text></g><g><title>`0x7FFE593D8940 (1 samples, 0.47%)</title><rect x="27.0142%" y="677" width="0.4739%" height="15" fill="rgb(214,214,64)" fg:x="57" fg:w="1"/><text x="27.2642%" y="687.50"></text></g><g><title>`0x7FFE593DD5E1 (1 samples, 0.47%)</title><rect x="27.0142%" y="661" width="0.4739%" height="15" fill="rgb(178,178,51)" fg:x="57" fg:w="1"/><text x="27.2642%" y="671.50"></text></g><g><title>`0x7FFE593DE7EF (1 samples, 0.47%)</title><rect x="27.0142%" y="645" width="0.4739%" height="15" fill="rgb(183,183,53)" fg:x="57" fg:w="1"/><text x="27.2642%" y="655.50"></text></g><g><title>`0x7FFE593DE8CC (1 samples, 0.47%)</title><rect x="27.0142%" y="629" width="0.4739%" height="15" fill="rgb(218,218,65)" fg:x="57" fg:w="1"/><text x="27.2642%" y="639.50"></text></g><g><title>`0x7FFE59423C10 (1 samples, 0.47%)</title><rect x="27.0142%" y="613" width="0.4739%" height="15" fill="rgb(184,184,53)" fg:x="57" fg:w="1"/><text x="27.2642%" y="623.50"></text></g><g><title>`0x7FFE5944FCF4 (1 samples, 0.47%)</title><rect x="27.0142%" y="597" width="0.4739%" height="15" fill="rgb(201,201,59)" fg:x="57" fg:w="1"/><text x="27.2642%" y="607.50"></text></g><g><title>`0x7FFE593C10F0 (2 samples, 0.95%)</title><rect x="27.4882%" y="645" width="0.9479%" height="15" fill="rgb(221,221,66)" fg:x="58" fg:w="2"/><text x="27.7382%" y="655.50"></text></g><g><title>`0x7FFE593C070F (2 samples, 0.95%)</title><rect x="27.4882%" y="629" width="0.9479%" height="15" fill="rgb(200,200,59)" fg:x="58" fg:w="2"/><text x="27.7382%" y="639.50"></text></g><g><title>`0x7FFE593DC254 (2 samples, 0.95%)</title><rect x="27.4882%" y="613" width="0.9479%" height="15" fill="rgb(228,228,69)" fg:x="58" fg:w="2"/><text x="27.7382%" y="623.50"></text></g><g><title>`0x7FFE593DC0CA (2 samples, 0.95%)</title><rect x="27.4882%" y="597" width="0.9479%" height="15" fill="rgb(229,229,69)" fg:x="58" fg:w="2"/><text x="27.7382%" y="607.50"></text></g><g><title>`0x7FFE593DC4CC (2 samples, 0.95%)</title><rect x="27.4882%" y="581" width="0.9479%" height="15" fill="rgb(222,222,67)" fg:x="58" fg:w="2"/><text x="27.7382%" y="591.50"></text></g><g><title>`0x7FFE5944F874 (2 samples, 0.95%)</title><rect x="27.4882%" y="565" width="0.9479%" height="15" fill="rgb(225,225,68)" fg:x="58" fg:w="2"/><text x="27.7382%" y="575.50"></text></g><g><title>osrs_gph.exe`std::sys_common::net::impl$6::try_from::closure$0 (36 samples, 17.06%)</title><rect x="11.8483%" y="965" width="17.0616%" height="15" fill="rgb(101,211,211)" fg:x="25" fg:w="36"/><text x="12.0983%" y="975.50">osrs_gph.exe`std::sys_comm..</text></g><g><title>osrs_gph.exe`std::sys::windows::net::cvt_gai (36 samples, 17.06%)</title><rect x="11.8483%" y="949" width="17.0616%" height="15" fill="rgb(74,187,187)" fg:x="25" fg:w="36"/><text x="12.0983%" y="959.50">osrs_gph.exe`std::sys::win..</text></g><g><title>`0x7FFE579B3D93 (36 samples, 17.06%)</title><rect x="11.8483%" y="933" width="17.0616%" height="15" fill="rgb(184,184,53)" fg:x="25" fg:w="36"/><text x="12.0983%" y="943.50">`0x7FFE579B3D93</text></g><g><title>`0x7FFE579B4304 (36 samples, 17.06%)</title><rect x="11.8483%" y="917" width="17.0616%" height="15" fill="rgb(201,201,59)" fg:x="25" fg:w="36"/><text x="12.0983%" y="927.50">`0x7FFE579B4304</text></g><g><title>`0x7FFE579B5672 (6 samples, 2.84%)</title><rect x="26.0664%" y="901" width="2.8436%" height="15" fill="rgb(210,210,62)" fg:x="55" fg:w="6"/><text x="26.3164%" y="911.50">`0..</text></g><g><title>`0x7FFE579B5938 (6 samples, 2.84%)</title><rect x="26.0664%" y="885" width="2.8436%" height="15" fill="rgb(182,182,52)" fg:x="55" fg:w="6"/><text x="26.3164%" y="895.50">`0..</text></g><g><title>`0x7FFE579B59C5 (6 samples, 2.84%)</title><rect x="26.0664%" y="869" width="2.8436%" height="15" fill="rgb(192,192,56)" fg:x="55" fg:w="6"/><text x="26.3164%" y="879.50">`0..</text></g><g><title>`0x7FFE56B61151 (6 samples, 2.84%)</title><rect x="26.0664%" y="853" width="2.8436%" height="15" fill="rgb(226,226,68)" fg:x="55" fg:w="6"/><text x="26.3164%" y="863.50">`0..</text></g><g><title>`0x7FFE593E23FA (6 samples, 2.84%)</title><rect x="26.0664%" y="837" width="2.8436%" height="15" fill="rgb(201,201,59)" fg:x="55" fg:w="6"/><text x="26.3164%" y="847.50">`0..</text></g><g><title>`0x7FFE579BCF02 (5 samples, 2.37%)</title><rect x="26.5403%" y="821" width="2.3697%" height="15" fill="rgb(180,180,51)" fg:x="56" fg:w="5"/><text x="26.7903%" y="831.50">`0..</text></g><g><title>`0x7FFE579BA105 (5 samples, 2.37%)</title><rect x="26.5403%" y="805" width="2.3697%" height="15" fill="rgb(208,208,62)" fg:x="56" fg:w="5"/><text x="26.7903%" y="815.50">`0..</text></g><g><title>`0x7FFE579BA25E (4 samples, 1.90%)</title><rect x="27.0142%" y="789" width="1.8957%" height="15" fill="rgb(215,215,64)" fg:x="57" fg:w="4"/><text x="27.2642%" y="799.50">`..</text></g><g><title>`0x7FFE579BAB10 (4 samples, 1.90%)</title><rect x="27.0142%" y="773" width="1.8957%" height="15" fill="rgb(203,203,60)" fg:x="57" fg:w="4"/><text x="27.2642%" y="783.50">`..</text></g><g><title>`0x7FFE579BC02E (4 samples, 1.90%)</title><rect x="27.0142%" y="757" width="1.8957%" height="15" fill="rgb(195,195,57)" fg:x="57" fg:w="4"/><text x="27.2642%" y="767.50">`..</text></g><g><title>`0x7FFE579BCA78 (4 samples, 1.90%)</title><rect x="27.0142%" y="741" width="1.8957%" height="15" fill="rgb(184,184,53)" fg:x="57" fg:w="4"/><text x="27.2642%" y="751.50">`..</text></g><g><title>`0x7FFE56B26452 (4 samples, 1.90%)</title><rect x="27.0142%" y="725" width="1.8957%" height="15" fill="rgb(203,203,60)" fg:x="57" fg:w="4"/><text x="27.2642%" y="735.50">`..</text></g><g><title>`0x7FFE593DA25A (4 samples, 1.90%)</title><rect x="27.0142%" y="709" width="1.8957%" height="15" fill="rgb(214,214,64)" fg:x="57" fg:w="4"/><text x="27.2642%" y="719.50">`..</text></g><g><title>`0x7FFE593C8CAC (4 samples, 1.90%)</title><rect x="27.0142%" y="693" width="1.8957%" height="15" fill="rgb(202,202,59)" fg:x="57" fg:w="4"/><text x="27.2642%" y="703.50">`..</text></g><g><title>`0x7FFE593D88D4 (3 samples, 1.42%)</title><rect x="27.4882%" y="677" width="1.4218%" height="15" fill="rgb(176,176,50)" fg:x="58" fg:w="3"/><text x="27.7382%" y="687.50"></text></g><g><title>`0x7FFE593C0EBF (3 samples, 1.42%)</title><rect x="27.4882%" y="661" width="1.4218%" height="15" fill="rgb(182,182,52)" fg:x="58" fg:w="3"/><text x="27.7382%" y="671.50"></text></g><g><title>`0x7FFE593C1082 (1 samples, 0.47%)</title><rect x="28.4360%" y="645" width="0.4739%" height="15" fill="rgb(196,196,57)" fg:x="60" fg:w="1"/><text x="28.6860%" y="655.50"></text></g><g><title>`0x7FFE593DA407 (1 samples, 0.47%)</title><rect x="28.4360%" y="629" width="0.4739%" height="15" fill="rgb(224,224,68)" fg:x="60" fg:w="1"/><text x="28.6860%" y="639.50"></text></g><g><title>`0x7FFE593DAC49 (1 samples, 0.47%)</title><rect x="28.4360%" y="613" width="0.4739%" height="15" fill="rgb(212,212,63)" fg:x="60" fg:w="1"/><text x="28.6860%" y="623.50"></text></g><g><title>`0x7FFE5944FB14 (1 samples, 0.47%)</title><rect x="28.4360%" y="597" width="0.4739%" height="15" fill="rgb(221,221,66)" fg:x="60" fg:w="1"/><text x="28.6860%" y="607.50"></text></g><g><title>`0x7FFE579BE8BE (1 samples, 0.47%)</title><rect x="28.9100%" y="725" width="0.4739%" height="15" fill="rgb(201,201,59)" fg:x="61" fg:w="1"/><text x="29.1600%" y="735.50"></text></g><g><title>`0x7FFE579BE9B3 (1 samples, 0.47%)</title><rect x="28.9100%" y="709" width="0.4739%" height="15" fill="rgb(191,191,56)" fg:x="61" fg:w="1"/><text x="29.1600%" y="719.50"></text></g><g><title>`0x7FFE56B28529 (1 samples, 0.47%)</title><rect x="28.9100%" y="693" width="0.4739%" height="15" fill="rgb(181,181,52)" fg:x="61" fg:w="1"/><text x="29.1600%" y="703.50"></text></g><g><title>`0x7FFE56B2ACD9 (1 samples, 0.47%)</title><rect x="28.9100%" y="677" width="0.4739%" height="15" fill="rgb(200,200,59)" fg:x="61" fg:w="1"/><text x="29.1600%" y="687.50"></text></g><g><title>`0x7FFE5944F654 (1 samples, 0.47%)</title><rect x="28.9100%" y="661" width="0.4739%" height="15" fill="rgb(228,228,69)" fg:x="61" fg:w="1"/><text x="29.1600%" y="671.50"></text></g><g><title>`0x7FFE579BE84C (1 samples, 0.47%)</title><rect x="29.3839%" y="725" width="0.4739%" height="15" fill="rgb(217,217,65)" fg:x="62" fg:w="1"/><text x="29.6339%" y="735.50"></text></g><g><title>`0x7FFE579BE9B3 (1 samples, 0.47%)</title><rect x="29.3839%" y="709" width="0.4739%" height="15" fill="rgb(180,180,52)" fg:x="62" fg:w="1"/><text x="29.6339%" y="719.50"></text></g><g><title>`0x7FFE56B28529 (1 samples, 0.47%)</title><rect x="29.3839%" y="693" width="0.4739%" height="15" fill="rgb(186,186,54)" fg:x="62" fg:w="1"/><text x="29.6339%" y="703.50"></text></g><g><title>`0x7FFE56B2ACD9 (1 samples, 0.47%)</title><rect x="29.3839%" y="677" width="0.4739%" height="15" fill="rgb(221,221,67)" fg:x="62" fg:w="1"/><text x="29.6339%" y="687.50"></text></g><g><title>`0x7FFE579BE7BB (1 samples, 0.47%)</title><rect x="29.8578%" y="725" width="0.4739%" height="15" fill="rgb(211,211,63)" fg:x="63" fg:w="1"/><text x="30.1078%" y="735.50"></text></g><g><title>`0x7FFE579BE9B3 (1 samples, 0.47%)</title><rect x="29.8578%" y="709" width="0.4739%" height="15" fill="rgb(210,210,63)" fg:x="63" fg:w="1"/><text x="30.1078%" y="719.50"></text></g><g><title>`0x7FFE56B28529 (1 samples, 0.47%)</title><rect x="29.8578%" y="693" width="0.4739%" height="15" fill="rgb(223,223,67)" fg:x="63" fg:w="1"/><text x="30.1078%" y="703.50"></text></g><g><title>`0x7FFE56B2ACD9 (1 samples, 0.47%)</title><rect x="29.8578%" y="677" width="0.4739%" height="15" fill="rgb(210,210,62)" fg:x="63" fg:w="1"/><text x="30.1078%" y="687.50"></text></g><g><title>`0x7FFE5944F654 (1 samples, 0.47%)</title><rect x="29.8578%" y="661" width="0.4739%" height="15" fill="rgb(206,206,61)" fg:x="63" fg:w="1"/><text x="30.1078%" y="671.50"></text></g><g><title>`0x7FFE579BD74C (4 samples, 1.90%)</title><rect x="28.9100%" y="789" width="1.8957%" height="15" fill="rgb(195,195,57)" fg:x="61" fg:w="4"/><text x="29.1600%" y="799.50">`..</text></g><g><title>`0x7FFE579BEE24 (4 samples, 1.90%)</title><rect x="28.9100%" y="773" width="1.8957%" height="15" fill="rgb(229,229,69)" fg:x="61" fg:w="4"/><text x="29.1600%" y="783.50">`..</text></g><g><title>`0x7FFE579BDD8C (4 samples, 1.90%)</title><rect x="28.9100%" y="757" width="1.8957%" height="15" fill="rgb(216,216,65)" fg:x="61" fg:w="4"/><text x="29.1600%" y="767.50">`..</text></g><g><title>`0x7FFE579BDF34 (4 samples, 1.90%)</title><rect x="28.9100%" y="741" width="1.8957%" height="15" fill="rgb(215,215,64)" fg:x="61" fg:w="4"/><text x="29.1600%" y="751.50">`..</text></g><g><title>`0x7FFE579BE720 (1 samples, 0.47%)</title><rect x="30.3318%" y="725" width="0.4739%" height="15" fill="rgb(215,215,64)" fg:x="64" fg:w="1"/><text x="30.5818%" y="735.50"></text></g><g><title>`0x7FFE579BE9B3 (1 samples, 0.47%)</title><rect x="30.3318%" y="709" width="0.4739%" height="15" fill="rgb(208,208,62)" fg:x="64" fg:w="1"/><text x="30.5818%" y="719.50"></text></g><g><title>`0x7FFE56B28529 (1 samples, 0.47%)</title><rect x="30.3318%" y="693" width="0.4739%" height="15" fill="rgb(219,219,66)" fg:x="64" fg:w="1"/><text x="30.5818%" y="703.50"></text></g><g><title>`0x7FFE56B2ACD9 (1 samples, 0.47%)</title><rect x="30.3318%" y="677" width="0.4739%" height="15" fill="rgb(190,190,55)" fg:x="64" fg:w="1"/><text x="30.5818%" y="687.50"></text></g><g><title>`0x7FFE5944F654 (1 samples, 0.47%)</title><rect x="30.3318%" y="661" width="0.4739%" height="15" fill="rgb(226,226,68)" fg:x="64" fg:w="1"/><text x="30.5818%" y="671.50"></text></g><g><title>`0x7FFE579BE2BA (1 samples, 0.47%)</title><rect x="30.8057%" y="757" width="0.4739%" height="15" fill="rgb(220,220,66)" fg:x="65" fg:w="1"/><text x="31.0557%" y="767.50"></text></g><g><title>`0x7FFE579BD7E3 (1 samples, 0.47%)</title><rect x="30.8057%" y="741" width="0.4739%" height="15" fill="rgb(194,194,56)" fg:x="65" fg:w="1"/><text x="31.0557%" y="751.50"></text></g><g><title>`0x7FFE579BD8A2 (1 samples, 0.47%)</title><rect x="30.8057%" y="725" width="0.4739%" height="15" fill="rgb(177,177,50)" fg:x="65" fg:w="1"/><text x="31.0557%" y="735.50"></text></g><g><title>`0x7FFE56B6F370 (1 samples, 0.47%)</title><rect x="30.8057%" y="709" width="0.4739%" height="15" fill="rgb(220,220,66)" fg:x="65" fg:w="1"/><text x="31.0557%" y="719.50"></text></g><g><title>`0x7FFE579BE1C7 (1 samples, 0.47%)</title><rect x="31.2796%" y="757" width="0.4739%" height="15" fill="rgb(183,183,53)" fg:x="66" fg:w="1"/><text x="31.5296%" y="767.50"></text></g><g><title>`0x7FFE579BE450 (1 samples, 0.47%)</title><rect x="31.2796%" y="741" width="0.4739%" height="15" fill="rgb(177,177,50)" fg:x="66" fg:w="1"/><text x="31.5296%" y="751.50"></text></g><g><title>`0x7FFE56B28529 (1 samples, 0.47%)</title><rect x="31.2796%" y="725" width="0.4739%" height="15" fill="rgb(200,200,59)" fg:x="66" fg:w="1"/><text x="31.5296%" y="735.50"></text></g><g><title>`0x7FFE56B2AE64 (1 samples, 0.47%)</title><rect x="31.2796%" y="709" width="0.4739%" height="15" fill="rgb(209,209,62)" fg:x="66" fg:w="1"/><text x="31.5296%" y="719.50"></text></g><g><title>`0x7FFE5944F654 (1 samples, 0.47%)</title><rect x="31.2796%" y="693" width="0.4739%" height="15" fill="rgb(178,178,51)" fg:x="66" fg:w="1"/><text x="31.5296%" y="703.50"></text></g><g><title>`0x7FFE579BD6DA (3 samples, 1.42%)</title><rect x="30.8057%" y="789" width="1.4218%" height="15" fill="rgb(200,200,59)" fg:x="65" fg:w="3"/><text x="31.0557%" y="799.50"></text></g><g><title>`0x7FFE579BEDE4 (3 samples, 1.42%)</title><rect x="30.8057%" y="773" width="1.4218%" height="15" fill="rgb(207,207,61)" fg:x="65" fg:w="3"/><text x="31.0557%" y="783.50"></text></g><g><title>`0x7FFE579BE019 (1 samples, 0.47%)</title><rect x="31.7536%" y="757" width="0.4739%" height="15" fill="rgb(224,224,67)" fg:x="67" fg:w="1"/><text x="32.0036%" y="767.50"></text></g><g><title>`0x7FFE579BDB58 (1 samples, 0.47%)</title><rect x="31.7536%" y="741" width="0.4739%" height="15" fill="rgb(194,194,56)" fg:x="67" fg:w="1"/><text x="32.0036%" y="751.50"></text></g><g><title>`0x7FFE56B2CC1D (1 samples, 0.47%)</title><rect x="31.7536%" y="725" width="0.4739%" height="15" fill="rgb(213,213,63)" fg:x="67" fg:w="1"/><text x="32.0036%" y="735.50"></text></g><g><title>`0x7FFE59451784 (1 samples, 0.47%)</title><rect x="31.7536%" y="709" width="0.4739%" height="15" fill="rgb(178,178,51)" fg:x="67" fg:w="1"/><text x="32.0036%" y="719.50"></text></g><g><title>osrs_gph.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$ (44 samples, 20.85%)</title><rect x="11.8483%" y="1525" width="20.8531%" height="15" fill="rgb(82,194,194)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1535.50">osrs_gph.exe`core::ops::function:..</text></g><g><title>osrs_gph.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$ (44 samples, 20.85%)</title><rect x="11.8483%" y="1509" width="20.8531%" height="15" fill="rgb(88,200,200)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1519.50">osrs_gph.exe`std::thread::impl$0:..</text></g><g><title>osrs_gph.exe`alloc::sync::impl$29::deref(alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$ (44 samples, 20.85%)</title><rect x="11.8483%" y="1493" width="20.8531%" height="15" fill="rgb(96,207,207)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1503.50">osrs_gph.exe`alloc::sync::impl$29..</text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::inner (44 samples, 20.85%)</title><rect x="11.8483%" y="1477" width="20.8531%" height="15" fill="rgb(96,207,207)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1487.50">osrs_gph.exe`alloc::sync::Arc&lt;std..</text></g><g><title>osrs_gph.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt; &gt; &gt;::as_ref (44 samples, 20.85%)</title><rect x="11.8483%" y="1461" width="20.8531%" height="15" fill="rgb(68,181,181)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1471.50">osrs_gph.exe`core::ptr::non_null:..</text></g><g><title>osrs_gph.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$&lt;&gt; &gt; (44 samples, 20.85%)</title><rect x="11.8483%" y="1445" width="20.8531%" height="15" fill="rgb(85,197,197)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1455.50">osrs_gph.exe`std::sys_common::bac..</text></g><g><title>osrs_gph.exe`tokio::runtime::blocking::pool::impl$6::spawn_thread::closure$0 (44 samples, 20.85%)</title><rect x="11.8483%" y="1429" width="20.8531%" height="15" fill="rgb(67,181,181)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1439.50">osrs_gph.exe`tokio::runtime::bloc..</text></g><g><title>osrs_gph.exe`tokio::runtime::blocking::pool::Inner::run (44 samples, 20.85%)</title><rect x="11.8483%" y="1413" width="20.8531%" height="15" fill="rgb(99,210,210)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1423.50">osrs_gph.exe`tokio::runtime::bloc..</text></g><g><title>osrs_gph.exe`tokio::runtime::blocking::pool::Task::run (44 samples, 20.85%)</title><rect x="11.8483%" y="1397" width="20.8531%" height="15" fill="rgb(88,200,200)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1407.50">osrs_gph.exe`tokio::runtime::bloc..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::UnownedTask&lt;tokio::runtime::blocking::schedule::BlockingSchedule&gt;::run(tokio::runtime::task::UnownedTask (44 samples, 20.85%)</title><rect x="11.8483%" y="1381" width="20.8531%" height="15" fill="rgb(57,172,172)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1391.50">osrs_gph.exe`tokio::runtime::task..</text></g><g><title>osrs_gph.exe`core::mem::drop(tokio::runtime::task::Task (44 samples, 20.85%)</title><rect x="11.8483%" y="1365" width="20.8531%" height="15" fill="rgb(99,210,210)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1375.50">osrs_gph.exe`core::mem::drop(toki..</text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tokio::runtime::task::Task (44 samples, 20.85%)</title><rect x="11.8483%" y="1349" width="20.8531%" height="15" fill="rgb(59,173,173)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1359.50">osrs_gph.exe`core::ptr::drop_in_p..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::impl$13::drop(tokio::runtime::task::Task (44 samples, 20.85%)</title><rect x="11.8483%" y="1333" width="20.8531%" height="15" fill="rgb(73,186,186)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1343.50">osrs_gph.exe`tokio::runtime::task..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::state::State::ref_dec (44 samples, 20.85%)</title><rect x="11.8483%" y="1317" width="20.8531%" height="15" fill="rgb(67,180,180)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1327.50">osrs_gph.exe`tokio::runtime::task..</text></g><g><title>osrs_gph.exe`core::sync::atomic::AtomicUsize::fetch_sub (44 samples, 20.85%)</title><rect x="11.8483%" y="1301" width="20.8531%" height="15" fill="rgb(53,168,168)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1311.50">osrs_gph.exe`core::sync::atomic::..</text></g><g><title>osrs_gph.exe`core::sync::atomic::atomic_sub (44 samples, 20.85%)</title><rect x="11.8483%" y="1285" width="20.8531%" height="15" fill="rgb(67,181,181)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1295.50">osrs_gph.exe`core::sync::atomic::..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask&lt;hyper::client::connect::dns::impl$7::call::closure_env$0&gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;::poll&lt;tokio::runtime::blocking::task::BlockingTask&lt;hyper::client::connect::dns::impl$7::call::closure_env$0&gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask (44 samples, 20.85%)</title><rect x="11.8483%" y="1269" width="20.8531%" height="15" fill="rgb(88,200,200)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1279.50">osrs_gph.exe`tokio::runtime::task..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask&lt;hyper::client::connect::dns::impl$7::call::closure_env$0&gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;::poll_inner (44 samples, 20.85%)</title><rect x="11.8483%" y="1253" width="20.8531%" height="15" fill="rgb(58,172,172)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1263.50">osrs_gph.exe`tokio::runtime::task..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::poll_future(tokio::runtime::task::core::Core&lt;tokio::runtime::blocking::task::BlockingTask (44 samples, 20.85%)</title><rect x="11.8483%" y="1237" width="20.8531%" height="15" fill="rgb(104,214,214)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1247.50">osrs_gph.exe`tokio::runtime::task..</text></g><g><title>osrs_gph.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask (44 samples, 20.85%)</title><rect x="11.8483%" y="1221" width="20.8531%" height="15" fill="rgb(64,178,178)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1231.50">osrs_gph.exe`std::panic::catch_un..</text></g><g><title>osrs_gph.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask (44 samples, 20.85%)</title><rect x="11.8483%" y="1205" width="20.8531%" height="15" fill="rgb(69,183,183)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1215.50">osrs_gph.exe`std::panicking::try(..</text></g><g><title>osrs_gph.exe`std::panicking::try::do_call (44 samples, 20.85%)</title><rect x="11.8483%" y="1189" width="20.8531%" height="15" fill="rgb(55,170,170)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1199.50">osrs_gph.exe`std::panicking::try:..</text></g><g><title>osrs_gph.exe`core::panic::unwind_safe::impl$23::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask (44 samples, 20.85%)</title><rect x="11.8483%" y="1173" width="20.8531%" height="15" fill="rgb(52,167,167)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1183.50">osrs_gph.exe`core::panic::unwind_..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::poll_future::closure$0(tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask (44 samples, 20.85%)</title><rect x="11.8483%" y="1157" width="20.8531%" height="15" fill="rgb(76,189,189)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1167.50">osrs_gph.exe`tokio::runtime::task..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::core::Core&lt;tokio::runtime::blocking::task::BlockingTask&lt;hyper::client::connect::dns::impl$7::call::closure_env$0&gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;::poll (44 samples, 20.85%)</title><rect x="11.8483%" y="1141" width="20.8531%" height="15" fill="rgb(56,171,171)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1151.50">osrs_gph.exe`tokio::runtime::task..</text></g><g><title>osrs_gph.exe`tokio::loom::std::unsafe_cell::UnsafeCell&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;hyper::client::connect::dns::impl$7::call::closure_env$0&gt; &gt; &gt; &gt;::with_mut(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask (44 samples, 20.85%)</title><rect x="11.8483%" y="1125" width="20.8531%" height="15" fill="rgb(93,204,204)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1135.50">osrs_gph.exe`tokio::loom::std::un..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::core::impl$6::poll::closure$0(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;hyper::client::connect::dns::impl$7::call::closure_env$0&gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;, enum2$&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask (44 samples, 20.85%)</title><rect x="11.8483%" y="1109" width="20.8531%" height="15" fill="rgb(102,213,213)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1119.50">osrs_gph.exe`tokio::runtime::task..</text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (44 samples, 20.85%)</title><rect x="11.8483%" y="1093" width="20.8531%" height="15" fill="rgb(106,216,216)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1103.50">osrs_gph.exe`core::ptr::drop_in_p..</text></g><g><title>osrs_gph.exe`tokio::runtime::blocking::task::impl$2::poll&lt;hyper::client::connect::dns::impl$7::call::closure_env$0,enum2$&lt;core::result::Result&lt;hyper::client::connect::dns::SocketAddrs,std::io::error::Error&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::blocking::task::BlockingTask (44 samples, 20.85%)</title><rect x="11.8483%" y="1077" width="20.8531%" height="15" fill="rgb(58,172,172)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1087.50">osrs_gph.exe`tokio::runtime::bloc..</text></g><g><title>osrs_gph.exe`hyper::client::connect::dns::impl$7::call::closure$0 (44 samples, 20.85%)</title><rect x="11.8483%" y="1061" width="20.8531%" height="15" fill="rgb(83,195,195)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1071.50">osrs_gph.exe`hyper::client::conne..</text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;alloc::vec::into_iter::IntoIter&lt;enum2$&lt;core::net::socket_addr::SocketAddr&gt;,alloc::alloc::Global&gt;,std::io::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;alloc::vec::into_iter::IntoIter&lt;enum2$ (44 samples, 20.85%)</title><rect x="11.8483%" y="1045" width="20.8531%" height="15" fill="rgb(85,197,197)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1055.50">osrs_gph.exe`enum2$&lt;core::result:..</text></g><g><title>osrs_gph.exe`std::net::socket_addr::impl$10::to_socket_addrs (44 samples, 20.85%)</title><rect x="11.8483%" y="1029" width="20.8531%" height="15" fill="rgb(68,181,181)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1039.50">osrs_gph.exe`std::net::socket_add..</text></g><g><title>osrs_gph.exe`core::convert::impl$6::try_into (44 samples, 20.85%)</title><rect x="11.8483%" y="1013" width="20.8531%" height="15" fill="rgb(69,183,183)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1023.50">osrs_gph.exe`core::convert::impl$..</text></g><g><title>osrs_gph.exe`std::sys_common::net::impl$6::try_from (44 samples, 20.85%)</title><rect x="11.8483%" y="997" width="20.8531%" height="15" fill="rgb(66,180,180)" fg:x="25" fg:w="44"/><text x="12.0983%" y="1007.50">osrs_gph.exe`std::sys_common::net..</text></g><g><title>osrs_gph.exe`std::sys::common::small_c_string::run_with_cstr (44 samples, 20.85%)</title><rect x="11.8483%" y="981" width="20.8531%" height="15" fill="rgb(92,203,203)" fg:x="25" fg:w="44"/><text x="12.0983%" y="991.50">osrs_gph.exe`std::sys::common::sm..</text></g><g><title>osrs_gph.exe`std::sync::once_lock::OnceLock::initialize&lt;i32 (*)(),std::sync::once_lock::impl$0::get_or_init::closure_env$0&lt;i32 (*)(),std::sys::windows::net::init::closure_env$0&gt;,never$&gt; (8 samples, 3.79%)</title><rect x="28.9100%" y="965" width="3.7915%" height="15" fill="rgb(91,203,203)" fg:x="61" fg:w="8"/><text x="29.1600%" y="975.50">osrs..</text></g><g><title>osrs_gph.exe`std::sys_common::once::queue::Once::call (8 samples, 3.79%)</title><rect x="28.9100%" y="949" width="3.7915%" height="15" fill="rgb(93,204,204)" fg:x="61" fg:w="8"/><text x="29.1600%" y="959.50">osrs..</text></g><g><title>osrs_gph.exe`core::cell::Cell::get (8 samples, 3.79%)</title><rect x="28.9100%" y="933" width="3.7915%" height="15" fill="rgb(107,217,217)" fg:x="61" fg:w="8"/><text x="29.1600%" y="943.50">osrs..</text></g><g><title>osrs_gph.exe`core::ops::function::FnOnce::call_once&lt;std::sync::once::impl$2::call_once_force::closure_env$0&lt;std::sync::once_lock::impl$0::initialize::closure_env$0&lt;i32 (*)(),std::sync::once_lock::impl$0::get_or_init::closure_env$0&lt;i32 (*)(),std::sys::windows::net::init::closure_env$0&gt;,never$&gt; &gt;,tuple$&lt;ref$&lt;std::sync::once::OnceState&gt; &gt; &gt; (8 samples, 3.79%)</title><rect x="28.9100%" y="917" width="3.7915%" height="15" fill="rgb(104,215,215)" fg:x="61" fg:w="8"/><text x="29.1600%" y="927.50">osrs..</text></g><g><title>osrs_gph.exe`core::ops::function::FnOnce::call_once (8 samples, 3.79%)</title><rect x="28.9100%" y="901" width="3.7915%" height="15" fill="rgb(61,175,175)" fg:x="61" fg:w="8"/><text x="29.1600%" y="911.50">osrs..</text></g><g><title>osrs_gph.exe`std::sync::once::impl$2::call_once_force::closure$0 (8 samples, 3.79%)</title><rect x="28.9100%" y="885" width="3.7915%" height="15" fill="rgb(91,203,203)" fg:x="61" fg:w="8"/><text x="29.1600%" y="895.50">osrs..</text></g><g><title>osrs_gph.exe`std::sync::once_lock::impl$0::initialize::closure$0 (8 samples, 3.79%)</title><rect x="28.9100%" y="869" width="3.7915%" height="15" fill="rgb(70,183,183)" fg:x="61" fg:w="8"/><text x="29.1600%" y="879.50">osrs..</text></g><g><title>osrs_gph.exe`std::sync::once_lock::impl$0::get_or_init::closure$0 (8 samples, 3.79%)</title><rect x="28.9100%" y="853" width="3.7915%" height="15" fill="rgb(68,181,181)" fg:x="61" fg:w="8"/><text x="29.1600%" y="863.50">osrs..</text></g><g><title>osrs_gph.exe`std::sys::windows::net::init::closure$0 (8 samples, 3.79%)</title><rect x="28.9100%" y="837" width="3.7915%" height="15" fill="rgb(72,185,185)" fg:x="61" fg:w="8"/><text x="29.1600%" y="847.50">osrs..</text></g><g><title>`0x7FFE579BF167 (8 samples, 3.79%)</title><rect x="28.9100%" y="821" width="3.7915%" height="15" fill="rgb(202,202,59)" fg:x="61" fg:w="8"/><text x="29.1600%" y="831.50">`0x7..</text></g><g><title>`0x7FFE579BF319 (8 samples, 3.79%)</title><rect x="28.9100%" y="805" width="3.7915%" height="15" fill="rgb(189,189,55)" fg:x="61" fg:w="8"/><text x="29.1600%" y="815.50">`0x7..</text></g><g><title>`0x7FFE579BD4A8 (1 samples, 0.47%)</title><rect x="32.2275%" y="789" width="0.4739%" height="15" fill="rgb(187,187,54)" fg:x="68" fg:w="1"/><text x="32.4775%" y="799.50"></text></g><g><title>`0x7FFE579BFA80 (1 samples, 0.47%)</title><rect x="32.2275%" y="773" width="0.4739%" height="15" fill="rgb(188,188,55)" fg:x="68" fg:w="1"/><text x="32.4775%" y="783.50"></text></g><g><title>`0x7FFE579C0188 (1 samples, 0.47%)</title><rect x="32.2275%" y="757" width="0.4739%" height="15" fill="rgb(202,202,60)" fg:x="68" fg:w="1"/><text x="32.4775%" y="767.50"></text></g><g><title>osrs_gph.exe`slog_term::impl$19::flush(slog_term::PlainRecordDecorator (1 samples, 0.47%)</title><rect x="32.7014%" y="1237" width="0.4739%" height="15" fill="rgb(89,201,201)" fg:x="69" fg:w="1"/><text x="32.9514%" y="1247.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(core::cell::RefMut (1 samples, 0.47%)</title><rect x="32.7014%" y="1221" width="0.4739%" height="15" fill="rgb(62,176,176)" fg:x="69" fg:w="1"/><text x="32.9514%" y="1231.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.47%)</title><rect x="32.7014%" y="1205" width="0.4739%" height="15" fill="rgb(76,189,189)" fg:x="69" fg:w="1"/><text x="32.9514%" y="1215.50"></text></g><g><title>osrs_gph.exe`core::cell::impl$42::drop (1 samples, 0.47%)</title><rect x="32.7014%" y="1189" width="0.4739%" height="15" fill="rgb(58,172,172)" fg:x="69" fg:w="1"/><text x="32.9514%" y="1199.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;isize&gt;::set (1 samples, 0.47%)</title><rect x="32.7014%" y="1173" width="0.4739%" height="15" fill="rgb(80,193,193)" fg:x="69" fg:w="1"/><text x="32.9514%" y="1183.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;isize&gt;::replace (1 samples, 0.47%)</title><rect x="32.7014%" y="1157" width="0.4739%" height="15" fill="rgb(55,169,169)" fg:x="69" fg:w="1"/><text x="32.9514%" y="1167.50"></text></g><g><title>osrs_gph.exe`core::mem::replace (1 samples, 0.47%)</title><rect x="32.7014%" y="1141" width="0.4739%" height="15" fill="rgb(84,196,196)" fg:x="69" fg:w="1"/><text x="32.9514%" y="1151.50"></text></g><g><title>osrs_gph.exe`core::ptr::write (1 samples, 0.47%)</title><rect x="32.7014%" y="1125" width="0.4739%" height="15" fill="rgb(51,166,166)" fg:x="69" fg:w="1"/><text x="32.9514%" y="1135.50"></text></g><g><title>osrs_gph.exe`std::path::impl$44::deref (1 samples, 0.47%)</title><rect x="33.1754%" y="997" width="0.4739%" height="15" fill="rgb(50,165,165)" fg:x="70" fg:w="1"/><text x="33.4254%" y="1007.50"></text></g><g><title>osrs_gph.exe`std::fs::metadata(ref$ (1 samples, 0.47%)</title><rect x="33.1754%" y="981" width="0.4739%" height="15" fill="rgb(72,185,185)" fg:x="70" fg:w="1"/><text x="33.4254%" y="991.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;std::sys::windows::fs::FileAttr,std::io::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;std::sys::windows::fs::FileAttr,std::io::error::Error&gt; &gt;, std::fs::Metadata (*) (1 samples, 0.47%)</title><rect x="33.1754%" y="965" width="0.4739%" height="15" fill="rgb(78,191,191)" fg:x="70" fg:w="1"/><text x="33.4254%" y="975.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::fs::stat (1 samples, 0.47%)</title><rect x="33.1754%" y="949" width="0.4739%" height="15" fill="rgb(62,176,176)" fg:x="70" fg:w="1"/><text x="33.4254%" y="959.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::fs::metadata (1 samples, 0.47%)</title><rect x="33.1754%" y="933" width="0.4739%" height="15" fill="rgb(91,203,203)" fg:x="70" fg:w="1"/><text x="33.4254%" y="943.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::fs::File::open (1 samples, 0.47%)</title><rect x="33.1754%" y="917" width="0.4739%" height="15" fill="rgb(105,215,215)" fg:x="70" fg:w="1"/><text x="33.4254%" y="927.50"></text></g><g><title>osrs_gph.exe`core::convert::impl$6::try_into (1 samples, 0.47%)</title><rect x="33.1754%" y="901" width="0.4739%" height="15" fill="rgb(65,179,179)" fg:x="70" fg:w="1"/><text x="33.4254%" y="911.50"></text></g><g><title>osrs_gph.exe`std::os::windows::io::handle::impl$12::try_from (1 samples, 0.47%)</title><rect x="33.1754%" y="885" width="0.4739%" height="15" fill="rgb(71,184,184)" fg:x="70" fg:w="1"/><text x="33.4254%" y="895.50"></text></g><g><title>`0x7FFE56B24CDC (1 samples, 0.47%)</title><rect x="33.1754%" y="869" width="0.4739%" height="15" fill="rgb(214,214,64)" fg:x="70" fg:w="1"/><text x="33.4254%" y="879.50"></text></g><g><title>`0x7FFE56B25370 (1 samples, 0.47%)</title><rect x="33.1754%" y="853" width="0.4739%" height="15" fill="rgb(186,186,54)" fg:x="70" fg:w="1"/><text x="33.4254%" y="863.50"></text></g><g><title>`0x7FFE5944FE14 (1 samples, 0.47%)</title><rect x="33.1754%" y="837" width="0.4739%" height="15" fill="rgb(205,205,61)" fg:x="70" fg:w="1"/><text x="33.4254%" y="847.50"></text></g><g><title>osrs_gph.exe`slog_term::CompactFormatSerializer::finish (4 samples, 1.90%)</title><rect x="33.1754%" y="1221" width="1.8957%" height="15" fill="rgb(99,210,210)" fg:x="70" fg:w="4"/><text x="33.4254%" y="1231.50">o..</text></g><g><title>osrs_gph.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (4 samples, 1.90%)</title><rect x="33.1754%" y="1205" width="1.8957%" height="15" fill="rgb(86,198,198)" fg:x="70" fg:w="4"/><text x="33.4254%" y="1215.50">o..</text></g><g><title>osrs_gph.exe`std::io::Write::write_all&lt;slog_term::PlainRecordDecorator&lt;sloggers::file::FileAppender&gt; &gt;(slog_term::PlainRecordDecorator&lt;sloggers::file::FileAppender&gt;*, ref$&lt;slice2$ (4 samples, 1.90%)</title><rect x="33.1754%" y="1189" width="1.8957%" height="15" fill="rgb(56,170,170)" fg:x="70" fg:w="4"/><text x="33.4254%" y="1199.50">o..</text></g><g><title>osrs_gph.exe`slog_term::impl$19::write(slog_term::PlainRecordDecorator&lt;sloggers::file::FileAppender&gt;*, ref$&lt;slice2$ (4 samples, 1.90%)</title><rect x="33.1754%" y="1173" width="1.8957%" height="15" fill="rgb(53,167,167)" fg:x="70" fg:w="4"/><text x="33.4254%" y="1183.50">o..</text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(core::cell::RefMut (4 samples, 1.90%)</title><rect x="33.1754%" y="1157" width="1.8957%" height="15" fill="rgb(109,219,219)" fg:x="70" fg:w="4"/><text x="33.4254%" y="1167.50">o..</text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (4 samples, 1.90%)</title><rect x="33.1754%" y="1141" width="1.8957%" height="15" fill="rgb(82,194,194)" fg:x="70" fg:w="4"/><text x="33.4254%" y="1151.50">o..</text></g><g><title>osrs_gph.exe`core::cell::impl$42::drop (4 samples, 1.90%)</title><rect x="33.1754%" y="1125" width="1.8957%" height="15" fill="rgb(67,181,181)" fg:x="70" fg:w="4"/><text x="33.4254%" y="1135.50">o..</text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;isize&gt;::set (4 samples, 1.90%)</title><rect x="33.1754%" y="1109" width="1.8957%" height="15" fill="rgb(82,195,195)" fg:x="70" fg:w="4"/><text x="33.4254%" y="1119.50">o..</text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;isize&gt;::replace (4 samples, 1.90%)</title><rect x="33.1754%" y="1093" width="1.8957%" height="15" fill="rgb(75,188,188)" fg:x="70" fg:w="4"/><text x="33.4254%" y="1103.50">o..</text></g><g><title>osrs_gph.exe`core::mem::replace (4 samples, 1.90%)</title><rect x="33.1754%" y="1077" width="1.8957%" height="15" fill="rgb(76,189,189)" fg:x="70" fg:w="4"/><text x="33.4254%" y="1087.50">o..</text></g><g><title>osrs_gph.exe`core::ptr::write (4 samples, 1.90%)</title><rect x="33.1754%" y="1061" width="1.8957%" height="15" fill="rgb(77,189,189)" fg:x="70" fg:w="4"/><text x="33.4254%" y="1071.50">o..</text></g><g><title>osrs_gph.exe`sloggers::file::impl$6::write(sloggers::file::FileAppender*, ref$&lt;slice2$ (4 samples, 1.90%)</title><rect x="33.1754%" y="1045" width="1.8957%" height="15" fill="rgb(100,211,211)" fg:x="70" fg:w="4"/><text x="33.4254%" y="1055.50">o..</text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (4 samples, 1.90%)</title><rect x="33.1754%" y="1029" width="1.8957%" height="15" fill="rgb(106,217,217)" fg:x="70" fg:w="4"/><text x="33.4254%" y="1039.50">o..</text></g><g><title>osrs_gph.exe`sloggers::file::FileAppender::reopen_if_needed (4 samples, 1.90%)</title><rect x="33.1754%" y="1013" width="1.8957%" height="15" fill="rgb(88,199,199)" fg:x="70" fg:w="4"/><text x="33.4254%" y="1023.50">o..</text></g><g><title>osrs_gph.exe`std::fs::OpenOptions::open (3 samples, 1.42%)</title><rect x="33.6493%" y="997" width="1.4218%" height="15" fill="rgb(53,167,167)" fg:x="71" fg:w="3"/><text x="33.8993%" y="1007.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::fs::File::open (3 samples, 1.42%)</title><rect x="33.6493%" y="981" width="1.4218%" height="15" fill="rgb(72,185,185)" fg:x="71" fg:w="3"/><text x="33.8993%" y="991.50"></text></g><g><title>osrs_gph.exe`core::convert::impl$6::try_into (3 samples, 1.42%)</title><rect x="33.6493%" y="965" width="1.4218%" height="15" fill="rgb(75,188,188)" fg:x="71" fg:w="3"/><text x="33.8993%" y="975.50"></text></g><g><title>osrs_gph.exe`std::os::windows::io::handle::impl$12::try_from (3 samples, 1.42%)</title><rect x="33.6493%" y="949" width="1.4218%" height="15" fill="rgb(76,188,188)" fg:x="71" fg:w="3"/><text x="33.8993%" y="959.50"></text></g><g><title>`0x7FFE56B24CDC (3 samples, 1.42%)</title><rect x="33.6493%" y="933" width="1.4218%" height="15" fill="rgb(215,215,64)" fg:x="71" fg:w="3"/><text x="33.8993%" y="943.50"></text></g><g><title>`0x7FFE56B25370 (3 samples, 1.42%)</title><rect x="33.6493%" y="917" width="1.4218%" height="15" fill="rgb(184,184,53)" fg:x="71" fg:w="3"/><text x="33.8993%" y="927.50"></text></g><g><title>`0x7FFE5944FE14 (3 samples, 1.42%)</title><rect x="33.6493%" y="901" width="1.4218%" height="15" fill="rgb(218,218,65)" fg:x="71" fg:w="3"/><text x="33.8993%" y="911.50"></text></g><g><title>osrs_gph.exe`time::formatting::formattable::impl$9::format_into(ref$&lt;slice2$&lt;enum2$&lt;time::format_description::borrowed_format_item::BorrowedFormatItem&gt; &gt; &gt;, alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, enum2$&lt;core::option::Option&lt;time::date::Date&gt; &gt;, enum2$&lt;core::option::Option&lt;time::time::Time&gt; &gt;, enum2$&lt;core::option::Option (1 samples, 0.47%)</title><rect x="35.0711%" y="1125" width="0.4739%" height="15" fill="rgb(96,207,207)" fg:x="74" fg:w="1"/><text x="35.3211%" y="1135.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;usize,enum2$ (1 samples, 0.47%)</title><rect x="35.0711%" y="1109" width="0.4739%" height="15" fill="rgb(86,198,198)" fg:x="74" fg:w="1"/><text x="35.3211%" y="1119.50"></text></g><g><title>osrs_gph.exe`time::formatting::formattable::impl$8::format_into&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;(enum2$&lt;time::format_description::borrowed_format_item::BorrowedFormatItem&gt;*, alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, enum2$&lt;core::option::Option&lt;time::date::Date&gt; &gt;, enum2$&lt;core::option::Option&lt;time::time::Time&gt; &gt;, enum2$&lt;core::option::Option (1 samples, 0.47%)</title><rect x="35.0711%" y="1093" width="0.4739%" height="15" fill="rgb(102,213,213)" fg:x="74" fg:w="1"/><text x="35.3211%" y="1103.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;usize,enum2$ (1 samples, 0.47%)</title><rect x="35.0711%" y="1077" width="0.4739%" height="15" fill="rgb(62,176,176)" fg:x="74" fg:w="1"/><text x="35.3211%" y="1087.50"></text></g><g><title>osrs_gph.exe`time::formatting::format_component&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, enum2$&lt;time::format_description::component::Component&gt;, enum2$&lt;core::option::Option&lt;time::date::Date&gt; &gt;, enum2$&lt;core::option::Option&lt;time::time::Time&gt; &gt;, enum2$&lt;core::option::Option (1 samples, 0.47%)</title><rect x="35.0711%" y="1061" width="0.4739%" height="15" fill="rgb(56,170,170)" fg:x="74" fg:w="1"/><text x="35.3211%" y="1071.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (1 samples, 0.47%)</title><rect x="35.0711%" y="1045" width="0.4739%" height="15" fill="rgb(52,167,167)" fg:x="74" fg:w="1"/><text x="35.3211%" y="1055.50"></text></g><g><title>osrs_gph.exe`time::formatting::format_number&lt;2,alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;,u8&gt;(alloc::vec::Vec (1 samples, 0.47%)</title><rect x="35.0711%" y="1029" width="0.4739%" height="15" fill="rgb(94,206,206)" fg:x="74" fg:w="1"/><text x="35.3211%" y="1039.50"></text></g><g><title>osrs_gph.exe`time::formatting::format_number_pad_space(alloc::vec::Vec (1 samples, 0.47%)</title><rect x="35.0711%" y="1013" width="0.4739%" height="15" fill="rgb(94,206,206)" fg:x="74" fg:w="1"/><text x="35.3211%" y="1023.50"></text></g><g><title>osrs_gph.exe`time::formatting::write(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="35.0711%" y="997" width="0.4739%" height="15" fill="rgb(68,182,182)" fg:x="74" fg:w="1"/><text x="35.3211%" y="1007.50"></text></g><g><title>osrs_gph.exe`std::io::impls::impl$11::write_all(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="35.0711%" y="981" width="0.4739%" height="15" fill="rgb(95,206,206)" fg:x="74" fg:w="1"/><text x="35.3211%" y="991.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::extend_from_slice(ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="35.0711%" y="965" width="0.4739%" height="15" fill="rgb(73,186,186)" fg:x="74" fg:w="1"/><text x="35.3211%" y="975.50"></text></g><g><title>osrs_gph.exe`alloc::vec::spec_extend::impl$4::spec_extend(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, core::slice::iter::Iter (1 samples, 0.47%)</title><rect x="35.0711%" y="949" width="0.4739%" height="15" fill="rgb(104,214,214)" fg:x="74" fg:w="1"/><text x="35.3211%" y="959.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::append_elements(ptr_const$&lt;slice2$ (1 samples, 0.47%)</title><rect x="35.0711%" y="933" width="0.4739%" height="15" fill="rgb(61,175,175)" fg:x="74" fg:w="1"/><text x="35.3211%" y="943.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::len (1 samples, 0.47%)</title><rect x="35.0711%" y="917" width="0.4739%" height="15" fill="rgb(53,168,168)" fg:x="74" fg:w="1"/><text x="35.3211%" y="927.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle&lt;u8,alloc::alloc::Global&gt;(alloc::raw_vec::RawVec (1 samples, 0.47%)</title><rect x="35.0711%" y="901" width="0.4739%" height="15" fill="rgb(102,212,212)" fg:x="74" fg:w="1"/><text x="35.3211%" y="911.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.47%)</title><rect x="35.0711%" y="885" width="0.4739%" height="15" fill="rgb(73,186,186)" fg:x="74" fg:w="1"/><text x="35.3211%" y="895.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.47%)</title><rect x="35.0711%" y="869" width="0.4739%" height="15" fill="rgb(97,208,208)" fg:x="74" fg:w="1"/><text x="35.3211%" y="879.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.47%)</title><rect x="35.0711%" y="853" width="0.4739%" height="15" fill="rgb(87,199,199)" fg:x="74" fg:w="1"/><text x="35.3211%" y="863.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (1 samples, 0.47%)</title><rect x="35.0711%" y="837" width="0.4739%" height="15" fill="rgb(66,180,180)" fg:x="74" fg:w="1"/><text x="35.3211%" y="847.50"></text></g><g><title>`0x7FFE593F1CAA (1 samples, 0.47%)</title><rect x="35.0711%" y="821" width="0.4739%" height="15" fill="rgb(201,201,59)" fg:x="74" fg:w="1"/><text x="35.3211%" y="831.50"></text></g><g><title>`0x7FFE593F1DE7 (1 samples, 0.47%)</title><rect x="35.0711%" y="805" width="0.4739%" height="15" fill="rgb(203,203,60)" fg:x="74" fg:w="1"/><text x="35.3211%" y="815.50"></text></g><g><title>`0x7FFE593F2FF8 (1 samples, 0.47%)</title><rect x="35.0711%" y="789" width="0.4739%" height="15" fill="rgb(181,181,52)" fg:x="74" fg:w="1"/><text x="35.3211%" y="799.50"></text></g><g><title>osrs_gph.exe`slog_async::AsyncRecord::log_to&lt;ref$&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt; &gt;(slog_async::AsyncRecord, slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (7 samples, 3.32%)</title><rect x="32.7014%" y="1365" width="3.3175%" height="15" fill="rgb(74,187,187)" fg:x="69" fg:w="7"/><text x="32.9514%" y="1375.50">osr..</text></g><g><title>osrs_gph.exe`slog::impl$3::log(slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (7 samples, 3.32%)</title><rect x="32.7014%" y="1349" width="3.3175%" height="15" fill="rgb(104,215,215)" fg:x="69" fg:w="7"/><text x="32.9514%" y="1359.50">osr..</text></g><g><title>osrs_gph.exe`slog::impl$23::log(slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (7 samples, 3.32%)</title><rect x="32.7014%" y="1333" width="3.3175%" height="15" fill="rgb(68,181,181)" fg:x="69" fg:w="7"/><text x="32.9514%" y="1343.50">osr..</text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt;::unwrap_or_else(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt;, slog::impl$23::log::closure_env$0&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (7 samples, 3.32%)</title><rect x="32.7014%" y="1317" width="3.3175%" height="15" fill="rgb(87,199,199)" fg:x="69" fg:w="7"/><text x="32.9514%" y="1327.50">osr..</text></g><g><title>osrs_gph.exe`slog_term::impl$7::log&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt;(slog_term::CompactFormat&lt;slog_term::PlainDecorator (7 samples, 3.32%)</title><rect x="32.7014%" y="1301" width="3.3175%" height="15" fill="rgb(80,192,192)" fg:x="69" fg:w="7"/><text x="32.9514%" y="1311.50">osr..</text></g><g><title>osrs_gph.exe`slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt;::format_compact (7 samples, 3.32%)</title><rect x="32.7014%" y="1285" width="3.3175%" height="15" fill="rgb(51,166,166)" fg:x="69" fg:w="7"/><text x="32.9514%" y="1295.50">osr..</text></g><g><title>osrs_gph.exe`slog_term::impl$18::with_record(slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt;*, slog::Record*, slog::OwnedKVList*, slog_term::impl$8::format_compact::closure_env$0&lt;slog_term::PlainDecorator (7 samples, 3.32%)</title><rect x="32.7014%" y="1269" width="3.3175%" height="15" fill="rgb(91,203,203)" fg:x="69" fg:w="7"/><text x="32.9514%" y="1279.50">osr..</text></g><g><title>osrs_gph.exe`slog_term::impl$8::format_compact::closure$0(slog_term::impl$8::format_compact::closure_env$0&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt;, ref_mut$&lt;dyn$ (7 samples, 3.32%)</title><rect x="32.7014%" y="1253" width="3.3175%" height="15" fill="rgb(68,182,182)" fg:x="69" fg:w="7"/><text x="32.9514%" y="1263.50">osr..</text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (6 samples, 2.84%)</title><rect x="33.1754%" y="1237" width="2.8436%" height="15" fill="rgb(80,193,193)" fg:x="70" fg:w="6"/><text x="33.4254%" y="1247.50">os..</text></g><g><title>osrs_gph.exe`core::ops::function::Fn::call&lt;enum2$&lt;core::result::Result&lt;bool,std::io::error::Error&gt; &gt; (*)(ref$&lt;dyn$&lt;slog_term::ThreadSafeTimestampFn&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt; &gt; &gt; &gt; &gt;,ref_mut$&lt;dyn$&lt;slog_term::RecordDecorator&gt; &gt;,ref$&lt;slog::Record&gt;,bool),tuple$&lt;ref$&lt;dyn$&lt;slog_term::ThreadSafeTimestampFn&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt; &gt; &gt; &gt; &gt;,ref_mut$&lt;dyn$&lt;slog_term::RecordDecorator&gt; &gt;,ref$&lt;slog::Record&gt;,bool&gt; &gt;(enum2$&lt;core::result::Result&lt;bool,std::io::error::Error&gt; &gt; (**)(ref$&lt;dyn$&lt;slog_term::ThreadSafeTimestampFn&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt; &gt; &gt; &gt; &gt;, ref_mut$&lt;dyn$&lt;slog_term::RecordDecorator&gt; &gt;, slog::Record*, bool), ref$&lt;dyn$&lt;slog_term::ThreadSafeTimestampFn&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt; &gt; &gt; &gt; &gt;, ref_mut$&lt;dyn$ (2 samples, 0.95%)</title><rect x="35.0711%" y="1221" width="0.9479%" height="15" fill="rgb(71,185,185)" fg:x="74" fg:w="2"/><text x="35.3211%" y="1231.50"></text></g><g><title>osrs_gph.exe`slog_term::print_msg_header(ref$&lt;dyn$&lt;slog_term::ThreadSafeTimestampFn&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt; &gt; &gt; &gt; &gt;, ref_mut$&lt;dyn$ (2 samples, 0.95%)</title><rect x="35.0711%" y="1205" width="0.9479%" height="15" fill="rgb(51,165,165)" fg:x="74" fg:w="2"/><text x="35.3211%" y="1215.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (2 samples, 0.95%)</title><rect x="35.0711%" y="1189" width="0.9479%" height="15" fill="rgb(90,202,202)" fg:x="74" fg:w="2"/><text x="35.3211%" y="1199.50"></text></g><g><title>osrs_gph.exe`slog_term::timestamp_local(ref_mut$&lt;dyn$ (2 samples, 0.95%)</title><rect x="35.0711%" y="1173" width="0.9479%" height="15" fill="rgb(57,171,171)" fg:x="74" fg:w="2"/><text x="35.3211%" y="1183.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,enum2$&lt;time::error::format::Format&gt; &gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;alloc::string::String,enum2$&lt;time::error::format::Format&gt; &gt; &gt;, std::io::error::Error (*)(enum2$ (2 samples, 0.95%)</title><rect x="35.0711%" y="1157" width="0.9479%" height="15" fill="rgb(74,187,187)" fg:x="74" fg:w="2"/><text x="35.3211%" y="1167.50"></text></g><g><title>osrs_gph.exe`time::formatting::formattable::sealed::Sealed::format&lt;slice2$&lt;enum2$&lt;time::format_description::borrowed_format_item::BorrowedFormatItem&gt; &gt; &gt;(ref$&lt;slice2$&lt;enum2$&lt;time::format_description::borrowed_format_item::BorrowedFormatItem&gt; &gt; &gt;, enum2$&lt;core::option::Option&lt;time::date::Date&gt; &gt;, enum2$&lt;core::option::Option&lt;time::time::Time&gt; &gt;, enum2$&lt;core::option::Option (2 samples, 0.95%)</title><rect x="35.0711%" y="1141" width="0.9479%" height="15" fill="rgb(79,192,192)" fg:x="74" fg:w="2"/><text x="35.3211%" y="1151.50"></text></g><g><title>`0x7FFE593EAB11 (1 samples, 0.47%)</title><rect x="35.5450%" y="1125" width="0.4739%" height="15" fill="rgb(175,175,50)" fg:x="75" fg:w="1"/><text x="35.7950%" y="1135.50"></text></g><g><title>`0x7FFE5945BFD2 (1 samples, 0.47%)</title><rect x="35.5450%" y="1109" width="0.4739%" height="15" fill="rgb(224,224,68)" fg:x="75" fg:w="1"/><text x="35.7950%" y="1119.50"></text></g><g><title>`0x7FFE593EABB0 (1 samples, 0.47%)</title><rect x="35.5450%" y="1093" width="0.4739%" height="15" fill="rgb(225,225,68)" fg:x="75" fg:w="1"/><text x="35.7950%" y="1103.50"></text></g><g><title>osrs_gph.exe`slog_async::impl$5::spawn_thread::closure$0(slog_async::impl$5::spawn_thread::closure_env$0&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (8 samples, 3.79%)</title><rect x="32.7014%" y="1429" width="3.7915%" height="15" fill="rgb(71,185,185)" fg:x="69" fg:w="8"/><text x="32.9514%" y="1439.50">osrs..</text></g><g><title>osrs_gph.exe`std::panicking::try&lt;tuple$&lt;&gt;,slog_async::impl$5::spawn_thread::closure$0::closure_env$0&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt; &gt;(slog_async::impl$5::spawn_thread::closure$0::closure_env$0&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (8 samples, 3.79%)</title><rect x="32.7014%" y="1413" width="3.7915%" height="15" fill="rgb(93,204,204)" fg:x="69" fg:w="8"/><text x="32.9514%" y="1423.50">osrs..</text></g><g><title>osrs_gph.exe`std::panicking::try::do_call (8 samples, 3.79%)</title><rect x="32.7014%" y="1397" width="3.7915%" height="15" fill="rgb(98,209,209)" fg:x="69" fg:w="8"/><text x="32.9514%" y="1407.50">osrs..</text></g><g><title>osrs_gph.exe`slog_async::impl$5::spawn_thread::closure$0::closure$0(slog_async::impl$5::spawn_thread::closure$0::closure_env$0&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (8 samples, 3.79%)</title><rect x="32.7014%" y="1381" width="3.7915%" height="15" fill="rgb(66,179,179)" fg:x="69" fg:w="8"/><text x="32.9514%" y="1391.50">osrs..</text></g><g><title>osrs_gph.exe`crossbeam_channel::channel::Receiver&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt;::recv&lt;enum2$&lt;slog_async::AsyncMsg&gt; &gt; (1 samples, 0.47%)</title><rect x="36.0190%" y="1365" width="0.4739%" height="15" fill="rgb(69,183,183)" fg:x="76" fg:w="1"/><text x="36.2690%" y="1375.50"></text></g><g><title>osrs_gph.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;slog_async::impl$5::spawn_thread::closure_env$0&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;slog_async::impl$5::spawn_thread::closure_env$0&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt;,tuple$ (9 samples, 4.27%)</title><rect x="32.7014%" y="1525" width="4.2654%" height="15" fill="rgb(77,190,190)" fg:x="69" fg:w="9"/><text x="32.9514%" y="1535.50">osrs_..</text></g><g><title>osrs_gph.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;slog_async::impl$5::spawn_thread::closure_env$0&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt;,tuple$ (9 samples, 4.27%)</title><rect x="32.7014%" y="1509" width="4.2654%" height="15" fill="rgb(101,212,212)" fg:x="69" fg:w="9"/><text x="32.9514%" y="1519.50">osrs_..</text></g><g><title>osrs_gph.exe`alloc::sync::impl$29::deref(alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$ (9 samples, 4.27%)</title><rect x="32.7014%" y="1493" width="4.2654%" height="15" fill="rgb(90,201,201)" fg:x="69" fg:w="9"/><text x="32.9514%" y="1503.50">osrs_..</text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::inner (9 samples, 4.27%)</title><rect x="32.7014%" y="1477" width="4.2654%" height="15" fill="rgb(79,192,192)" fg:x="69" fg:w="9"/><text x="32.9514%" y="1487.50">osrs_..</text></g><g><title>osrs_gph.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt; &gt; &gt;::as_ref (9 samples, 4.27%)</title><rect x="32.7014%" y="1461" width="4.2654%" height="15" fill="rgb(87,199,199)" fg:x="69" fg:w="9"/><text x="32.9514%" y="1471.50">osrs_..</text></g><g><title>osrs_gph.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;slog_async::impl$5::spawn_thread::closure_env$0&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(slog_async::impl$5::spawn_thread::closure_env$0&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (9 samples, 4.27%)</title><rect x="32.7014%" y="1445" width="4.2654%" height="15" fill="rgb(79,191,191)" fg:x="69" fg:w="9"/><text x="32.9514%" y="1455.50">osrs_..</text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt;(slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (1 samples, 0.47%)</title><rect x="36.4929%" y="1429" width="0.4739%" height="15" fill="rgb(75,188,188)" fg:x="77" fg:w="1"/><text x="36.7429%" y="1439.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(slog_term::CompactFormat&lt;slog_term::PlainDecorator (1 samples, 0.47%)</title><rect x="36.4929%" y="1413" width="0.4739%" height="15" fill="rgb(96,207,207)" fg:x="77" fg:w="1"/><text x="36.7429%" y="1423.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(core::cell::RefCell&lt;alloc::vec::Vec&lt;tuple$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;,alloc::vec::Vec (1 samples, 0.47%)</title><rect x="36.4929%" y="1397" width="0.4739%" height="15" fill="rgb(69,182,182)" fg:x="77" fg:w="1"/><text x="36.7429%" y="1407.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;tuple$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;,alloc::vec::Vec (1 samples, 0.47%)</title><rect x="36.4929%" y="1381" width="0.4739%" height="15" fill="rgb(67,181,181)" fg:x="77" fg:w="1"/><text x="36.7429%" y="1391.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;tuple$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;,alloc::vec::Vec (1 samples, 0.47%)</title><rect x="36.4929%" y="1365" width="0.4739%" height="15" fill="rgb(74,187,187)" fg:x="77" fg:w="1"/><text x="36.7429%" y="1375.50"></text></g><g><title>osrs_gph.exe`alloc::vec::impl$24::drop(alloc::vec::Vec&lt;tuple$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;,alloc::vec::Vec (1 samples, 0.47%)</title><rect x="36.4929%" y="1349" width="0.4739%" height="15" fill="rgb(89,200,200)" fg:x="77" fg:w="1"/><text x="36.7429%" y="1359.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt;(slog_term::PlainDecorator (1 samples, 0.47%)</title><rect x="36.4929%" y="1333" width="0.4739%" height="15" fill="rgb(64,178,178)" fg:x="77" fg:w="1"/><text x="36.7429%" y="1343.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(core::cell::RefCell (1 samples, 0.47%)</title><rect x="36.4929%" y="1317" width="0.4739%" height="15" fill="rgb(97,208,208)" fg:x="77" fg:w="1"/><text x="36.7429%" y="1327.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(core::cell::UnsafeCell (1 samples, 0.47%)</title><rect x="36.4929%" y="1301" width="0.4739%" height="15" fill="rgb(93,205,205)" fg:x="77" fg:w="1"/><text x="36.7429%" y="1311.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.47%)</title><rect x="36.4929%" y="1285" width="0.4739%" height="15" fill="rgb(69,182,182)" fg:x="77" fg:w="1"/><text x="36.7429%" y="1295.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;std::sync::mpsc::Receiver&lt;enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 0.47%)</title><rect x="36.4929%" y="1269" width="0.4739%" height="15" fill="rgb(103,213,213)" fg:x="77" fg:w="1"/><text x="36.7429%" y="1279.50"></text></g><g><title>`0x7FFE56B240AF (1 samples, 0.47%)</title><rect x="36.4929%" y="1253" width="0.4739%" height="15" fill="rgb(222,222,67)" fg:x="77" fg:w="1"/><text x="36.7429%" y="1263.50"></text></g><g><title>`0x7FFE5944F554 (1 samples, 0.47%)</title><rect x="36.4929%" y="1237" width="0.4739%" height="15" fill="rgb(198,198,58)" fg:x="77" fg:w="1"/><text x="36.7429%" y="1247.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::Harness&lt;futures_util::future::future::Map&lt;futures_util::future::try_future::MapErr&lt;hyper::client::conn::Connection&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$1&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;::poll&lt;futures_util::future::future::Map&lt;futures_util::future::try_future::MapErr&lt;hyper::client::conn::Connection&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$1&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;(tokio::runtime::task::harness::Harness&lt;futures_util::future::future::Map&lt;futures_util::future::try_future::MapErr&lt;hyper::client::conn::Connection&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$1&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::sync::Arc (1 samples, 0.47%)</title><rect x="36.9668%" y="1109" width="0.4739%" height="15" fill="rgb(82,194,194)" fg:x="78" fg:w="1"/><text x="37.2168%" y="1119.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::Harness&lt;futures_util::future::future::Map&lt;futures_util::future::try_future::MapErr&lt;hyper::client::conn::Connection&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$1&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;::poll_inner (1 samples, 0.47%)</title><rect x="36.9668%" y="1093" width="0.4739%" height="15" fill="rgb(98,209,209)" fg:x="78" fg:w="1"/><text x="37.2168%" y="1103.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::poll_future(tokio::runtime::task::core::Core&lt;futures_util::future::future::Map&lt;futures_util::future::try_future::MapErr&lt;hyper::client::conn::Connection&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$1&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::sync::Arc (1 samples, 0.47%)</title><rect x="36.9668%" y="1077" width="0.4739%" height="15" fill="rgb(85,197,197)" fg:x="78" fg:w="1"/><text x="37.2168%" y="1087.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::core::Core&lt;futures_util::future::future::Map&lt;futures_util::future::try_future::MapErr&lt;hyper::client::conn::Connection&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$1&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;::poll&lt;futures_util::future::future::Map&lt;futures_util::future::try_future::MapErr&lt;hyper::client::conn::Connection&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$1&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt; (1 samples, 0.47%)</title><rect x="36.9668%" y="1061" width="0.4739%" height="15" fill="rgb(105,216,216)" fg:x="78" fg:w="1"/><text x="37.2168%" y="1071.50"></text></g><g><title>osrs_gph.exe`tokio::loom::std::unsafe_cell::UnsafeCell&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;futures_util::future::future::Map&lt;futures_util::future::try_future::MapErr&lt;hyper::client::conn::Connection&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$1&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt; &gt;::with_mut(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;futures_util::future::future::Map&lt;futures_util::future::try_future::MapErr&lt;hyper::client::conn::Connection&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$1&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::sync::Arc (1 samples, 0.47%)</title><rect x="36.9668%" y="1045" width="0.4739%" height="15" fill="rgb(80,192,192)" fg:x="78" fg:w="1"/><text x="37.2168%" y="1055.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::core::impl$6::poll::closure$0(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;futures_util::future::future::Map&lt;futures_util::future::try_future::MapErr&lt;hyper::client::conn::Connection&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$1&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;, enum2$&lt;tokio::runtime::task::core::Stage&lt;futures_util::future::future::Map&lt;futures_util::future::try_future::MapErr&lt;hyper::client::conn::Connection&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$1 (1 samples, 0.47%)</title><rect x="36.9668%" y="1029" width="0.4739%" height="15" fill="rgb(108,219,219)" fg:x="78" fg:w="1"/><text x="37.2168%" y="1039.50"></text></g><g><title>osrs_gph.exe`futures_util::future::future::impl$14::poll(core::pin::Pin&lt;ref_mut$&lt;futures_util::future::future::Map&lt;futures_util::future::try_future::MapErr&lt;hyper::client::conn::Connection&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$1 (1 samples, 0.47%)</title><rect x="36.9668%" y="1013" width="0.4739%" height="15" fill="rgb(82,195,195)" fg:x="78" fg:w="1"/><text x="37.2168%" y="1023.50"></text></g><g><title>osrs_gph.exe`futures_util::future::future::map::impl$2::poll(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;futures_util::future::future::map::Map&lt;futures_util::future::try_future::MapErr&lt;hyper::client::conn::Connection&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$1 (1 samples, 0.47%)</title><rect x="36.9668%" y="997" width="0.4739%" height="15" fill="rgb(67,180,180)" fg:x="78" fg:w="1"/><text x="37.2168%" y="1007.50"></text></g><g><title>osrs_gph.exe`futures_util::future::future::map::impl$2::poll&lt;futures_util::future::try_future::into_future::IntoFuture&lt;hyper::client::conn::Connection&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::fns::MapErrFn&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;futures_util::future::future::map::Map&lt;futures_util::future::try_future::into_future::IntoFuture&lt;hyper::client::conn::Connection&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::fns::MapErrFn&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0::closure_env$0 (1 samples, 0.47%)</title><rect x="36.9668%" y="981" width="0.4739%" height="15" fill="rgb(75,188,188)" fg:x="78" fg:w="1"/><text x="37.2168%" y="991.50"></text></g><g><title>osrs_gph.exe`futures_util::future::try_future::into_future::impl$2::poll(core::pin::Pin&lt;ref_mut$&lt;futures_util::future::try_future::into_future::IntoFuture&lt;hyper::client::conn::Connection (1 samples, 0.47%)</title><rect x="36.9668%" y="965" width="0.4739%" height="15" fill="rgb(105,216,216)" fg:x="78" fg:w="1"/><text x="37.2168%" y="975.50"></text></g><g><title>osrs_gph.exe`futures_core::future::impl$2::try_poll(core::pin::Pin&lt;ref_mut$&lt;hyper::client::conn::Connection (1 samples, 0.47%)</title><rect x="36.9668%" y="949" width="0.4739%" height="15" fill="rgb(94,205,205)" fg:x="78" fg:w="1"/><text x="37.2168%" y="959.50"></text></g><g><title>osrs_gph.exe`hyper::client::conn::impl$9::poll&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;(core::pin::Pin&lt;ref_mut$&lt;hyper::client::conn::Connection (1 samples, 0.47%)</title><rect x="36.9668%" y="933" width="0.4739%" height="15" fill="rgb(58,172,172)" fg:x="78" fg:w="1"/><text x="37.2168%" y="943.50"></text></g><g><title>osrs_gph.exe`hyper::proto::h2::client::impl$4::poll&lt;reqwest::async_impl::body::ImplStream&gt;(core::pin::Pin&lt;ref_mut$&lt;hyper::proto::h2::client::ClientTask (1 samples, 0.47%)</title><rect x="36.9668%" y="917" width="0.4739%" height="15" fill="rgb(95,206,206)" fg:x="78" fg:w="1"/><text x="37.2168%" y="927.50"></text></g><g><title>osrs_gph.exe`h2::client::SendRequest&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt;::send_request&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt;(http::request::Request&lt;tuple$ (1 samples, 0.47%)</title><rect x="36.9668%" y="901" width="0.4739%" height="15" fill="rgb(59,173,173)" fg:x="78" fg:w="1"/><text x="37.2168%" y="911.50"></text></g><g><title>osrs_gph.exe`h2::proto::streams::streams::Streams&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt;,h2::client::Peer&gt;::send_request(http::request::Request&lt;tuple$&lt;&gt; &gt;, bool, enum2$&lt;core::option::Option&lt;ref$ (1 samples, 0.47%)</title><rect x="36.9668%" y="885" width="0.4739%" height="15" fill="rgb(52,167,167)" fg:x="78" fg:w="1"/><text x="37.2168%" y="895.50"></text></g><g><title>osrs_gph.exe`http::method::impl$21::eq (1 samples, 0.47%)</title><rect x="36.9668%" y="869" width="0.4739%" height="15" fill="rgb(107,217,217)" fg:x="78" fg:w="1"/><text x="37.2168%" y="879.50"></text></g><g><title>osrs_gph.exe`http::method::impl$27::eq(enum2$&lt;http::method::Inner&gt;*, enum2$ (1 samples, 0.47%)</title><rect x="36.9668%" y="853" width="0.4739%" height="15" fill="rgb(81,193,193)" fg:x="78" fg:w="1"/><text x="37.2168%" y="863.50"></text></g><g><title>osrs_gph.exe`h2::proto::streams::stream::Stream::new (1 samples, 0.47%)</title><rect x="36.9668%" y="837" width="0.4739%" height="15" fill="rgb(75,188,188)" fg:x="78" fg:w="1"/><text x="37.2168%" y="847.50"></text></g><g><title>osrs_gph.exe`hyper::client::client::Client&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;::connect_to(tuple$ (1 samples, 0.47%)</title><rect x="37.4408%" y="869" width="0.4739%" height="15" fill="rgb(65,179,179)" fg:x="79" fg:w="1"/><text x="37.6908%" y="879.50"></text></g><g><title>osrs_gph.exe`hyper::client::client::domain_as_uri(tuple$ (1 samples, 0.47%)</title><rect x="37.4408%" y="853" width="0.4739%" height="15" fill="rgb(74,187,187)" fg:x="79" fg:w="1"/><text x="37.6908%" y="863.50"></text></g><g><title>osrs_gph.exe`http::uri::builder::Builder::path_and_query(http::uri::builder::Builder, ref$ (1 samples, 0.47%)</title><rect x="37.4408%" y="837" width="0.4739%" height="15" fill="rgb(71,184,184)" fg:x="79" fg:w="1"/><text x="37.6908%" y="847.50"></text></g><g><title>osrs_gph.exe`http::uri::builder::Builder::map(http::uri::builder::Builder, http::uri::builder::impl$0::path_and_query::closure_env$0&lt;ref$ (1 samples, 0.47%)</title><rect x="37.4408%" y="821" width="0.4739%" height="15" fill="rgb(81,193,193)" fg:x="79" fg:w="1"/><text x="37.6908%" y="831.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;http::uri::Parts,http::error::Error&gt; &gt;::and_then(enum2$&lt;core::result::Result&lt;http::uri::Parts,http::error::Error&gt; &gt;, http::uri::builder::impl$0::path_and_query::closure_env$0&lt;ref$ (1 samples, 0.47%)</title><rect x="37.4408%" y="805" width="0.4739%" height="15" fill="rgb(62,176,176)" fg:x="79" fg:w="1"/><text x="37.6908%" y="815.50"></text></g><g><title>osrs_gph.exe`http::uri::builder::impl$0::path_and_query::closure$0(http::uri::builder::impl$0::path_and_query::closure_env$0&lt;ref$ (1 samples, 0.47%)</title><rect x="37.4408%" y="789" width="0.4739%" height="15" fill="rgb(106,216,216)" fg:x="79" fg:w="1"/><text x="37.6908%" y="799.50"></text></g><g><title>osrs_gph.exe`core::convert::impl$6::try_into(ref$ (1 samples, 0.47%)</title><rect x="37.4408%" y="773" width="0.4739%" height="15" fill="rgb(56,171,171)" fg:x="79" fg:w="1"/><text x="37.6908%" y="783.50"></text></g><g><title>osrs_gph.exe`http::uri::path::impl$2::try_from(ref$ (1 samples, 0.47%)</title><rect x="37.4408%" y="757" width="0.4739%" height="15" fill="rgb(62,176,176)" fg:x="79" fg:w="1"/><text x="37.6908%" y="767.50"></text></g><g><title>osrs_gph.exe`http::uri::path::impl$1::try_from(ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="37.4408%" y="741" width="0.4739%" height="15" fill="rgb(92,203,203)" fg:x="79" fg:w="1"/><text x="37.6908%" y="751.50"></text></g><g><title>osrs_gph.exe`bytes::bytes::Bytes::copy_from_slice(ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="37.4408%" y="725" width="0.4739%" height="15" fill="rgb(67,181,181)" fg:x="79" fg:w="1"/><text x="37.6908%" y="735.50"></text></g><g><title>osrs_gph.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="37.4408%" y="709" width="0.4739%" height="15" fill="rgb(97,208,208)" fg:x="79" fg:w="1"/><text x="37.6908%" y="719.50"></text></g><g><title>osrs_gph.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="37.4408%" y="693" width="0.4739%" height="15" fill="rgb(82,194,194)" fg:x="79" fg:w="1"/><text x="37.6908%" y="703.50"></text></g><g><title>osrs_gph.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="37.4408%" y="677" width="0.4739%" height="15" fill="rgb(102,213,213)" fg:x="79" fg:w="1"/><text x="37.6908%" y="687.50"></text></g><g><title>osrs_gph.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="37.4408%" y="661" width="0.4739%" height="15" fill="rgb(86,198,198)" fg:x="79" fg:w="1"/><text x="37.6908%" y="671.50"></text></g><g><title>`0x7FFE37DA1424 (1 samples, 0.47%)</title><rect x="37.4408%" y="645" width="0.4739%" height="15" fill="rgb(212,212,63)" fg:x="79" fg:w="1"/><text x="37.6908%" y="655.50"></text></g><g><title>osrs_gph.exe`hyper::common::lazy::impl$1::poll&lt;hyper::client::client::impl$3::connect_to::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;,enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::try_future::AndThen&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt;,enum2$&lt;futures_util::future::either::Either&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;enum2$&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::alloc::Global&gt; &gt;,futures_util::future::ready::Ready&lt;enum2$&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::error::Error&gt; &gt; &gt; &gt; &gt;,hyper::client::client::impl$3::connect_to::closure$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::ready::Ready&lt;enum2$&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::error::Error&gt; &gt; &gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;hyper::common::lazy::Lazy&lt;hyper::client::client::impl$3::connect_to::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;,enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::try_future::AndThen&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt;,enum2$&lt;futures_util::future::either::Either&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;enum2$&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::alloc::Global&gt; &gt;,futures_util::future::ready::Ready&lt;enum2$&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::error::Error&gt; &gt; &gt; &gt; &gt;,hyper::client::client::impl$3::connect_to::closure$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::ready::Ready&lt;enum2$&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient (1 samples, 0.47%)</title><rect x="37.9147%" y="853" width="0.4739%" height="15" fill="rgb(104,215,215)" fg:x="80" fg:w="1"/><text x="38.1647%" y="863.50"></text></g><g><title>osrs_gph.exe`futures_util::future::try_future::try_flatten::impl$2::poll&lt;futures_util::future::try_future::MapOk&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt;,hyper::client::client::impl$3::connect_to::closure$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;futures_util::future::try_future::MapOk&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt;,hyper::client::client::impl$3::connect_to::closure$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,enum2$&lt;futures_util::future::either::Either&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;enum2$&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::alloc::Global&gt; &gt;,futures_util::future::ready::Ready&lt;enum2$&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient (1 samples, 0.47%)</title><rect x="37.9147%" y="837" width="0.4739%" height="15" fill="rgb(80,192,192)" fg:x="80" fg:w="1"/><text x="38.1647%" y="847.50"></text></g><g><title>osrs_gph.exe`futures_util::future::future::map::impl$2::poll&lt;futures_util::future::try_future::into_future::IntoFuture&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt; &gt;,futures_util::fns::MapOkFn&lt;hyper::client::client::impl$3::connect_to::closure$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;futures_util::future::either::Either&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;enum2$&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::alloc::Global&gt; &gt;,futures_util::future::ready::Ready&lt;enum2$&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::error::Error&gt; &gt; &gt; &gt; &gt;,hyper::error::Error&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;futures_util::future::future::map::Map&lt;futures_util::future::try_future::into_future::IntoFuture&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt; &gt;,futures_util::fns::MapOkFn&lt;hyper::client::client::impl$3::connect_to::closure$0::closure_env$0 (1 samples, 0.47%)</title><rect x="37.9147%" y="821" width="0.4739%" height="15" fill="rgb(52,167,167)" fg:x="80" fg:w="1"/><text x="38.1647%" y="831.50"></text></g><g><title>osrs_gph.exe`futures_util::future::future::map::impl$2::poll&lt;futures_util::future::try_future::into_future::IntoFuture&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt; &gt;,futures_util::fns::MapErrFn&lt;hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt;,enum2$&lt;core::result::Result&lt;reqwest::connect::Conn,hyper::error::Error&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;futures_util::future::future::map::Map&lt;futures_util::future::try_future::into_future::IntoFuture&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt; &gt;,futures_util::fns::MapErrFn&lt;hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$ (1 samples, 0.47%)</title><rect x="37.9147%" y="805" width="0.4739%" height="15" fill="rgb(68,182,182)" fg:x="80" fg:w="1"/><text x="38.1647%" y="815.50"></text></g><g><title>osrs_gph.exe`hyper::service::oneshot::impl$0::poll&lt;reqwest::connect::Connector,http::uri::Uri&gt;(core::pin::Pin&lt;ref_mut$&lt;hyper::service::oneshot::Oneshot (1 samples, 0.47%)</title><rect x="37.9147%" y="789" width="0.4739%" height="15" fill="rgb(91,203,203)" fg:x="80" fg:w="1"/><text x="38.1647%" y="799.50"></text></g><g><title>osrs_gph.exe`reqwest::connect::with_timeout::async_fn$0&lt;reqwest::connect::Conn,enum2$&lt;reqwest::connect::impl$0::connect_with_maybe_proxy::async_fn_env$0&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;reqwest::connect::with_timeout::async_fn_env$0&lt;reqwest::connect::Conn,enum2$ (1 samples, 0.47%)</title><rect x="37.9147%" y="773" width="0.4739%" height="15" fill="rgb(60,174,174)" fg:x="80" fg:w="1"/><text x="38.1647%" y="783.50"></text></g><g><title>osrs_gph.exe`reqwest::connect::impl$0::connect_with_maybe_proxy::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (1 samples, 0.47%)</title><rect x="37.9147%" y="757" width="0.4739%" height="15" fill="rgb(100,211,211)" fg:x="80" fg:w="1"/><text x="38.1647%" y="767.50"></text></g><g><title>osrs_gph.exe`hyper_rustls::connector::impl$3::call::async_block$3&lt;hyper::client::connect::http::HttpConnector&lt;reqwest::dns::resolve::DynResolver&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper_rustls::connector::impl$3::call::async_block_env$3&lt;hyper::client::connect::http::HttpConnector (1 samples, 0.47%)</title><rect x="37.9147%" y="741" width="0.4739%" height="15" fill="rgb(54,169,169)" fg:x="80" fg:w="1"/><text x="38.1647%" y="751.50"></text></g><g><title>osrs_gph.exe`hyper::client::connect::http::impl$3::call::async_block$0&lt;reqwest::dns::resolve::DynResolver&gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::client::connect::http::impl$3::call::async_block_env$0 (1 samples, 0.47%)</title><rect x="37.9147%" y="725" width="0.4739%" height="15" fill="rgb(71,185,185)" fg:x="80" fg:w="1"/><text x="38.1647%" y="735.50"></text></g><g><title>osrs_gph.exe`hyper::client::connect::http::impl$4::call_async::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::client::connect::http::impl$4::call_async::async_fn_env$0 (1 samples, 0.47%)</title><rect x="37.9147%" y="709" width="0.4739%" height="15" fill="rgb(66,180,180)" fg:x="80" fg:w="1"/><text x="38.1647%" y="719.50"></text></g><g><title>osrs_gph.exe`hyper::client::connect::dns::SocketAddrs::try_parse(ref$ (1 samples, 0.47%)</title><rect x="37.9147%" y="693" width="0.4739%" height="15" fill="rgb(64,178,178)" fg:x="80" fg:w="1"/><text x="38.1647%" y="703.50"></text></g><g><title>osrs_gph.exe`core::net::parser::impl$6::from_str (1 samples, 0.47%)</title><rect x="37.9147%" y="677" width="0.4739%" height="15" fill="rgb(76,188,188)" fg:x="80" fg:w="1"/><text x="38.1647%" y="687.50"></text></g><g><title>osrs_gph.exe`core::net::ip_addr::Ipv6Addr::parse_ascii (1 samples, 0.47%)</title><rect x="37.9147%" y="661" width="0.4739%" height="15" fill="rgb(61,175,175)" fg:x="80" fg:w="1"/><text x="38.1647%" y="671.50"></text></g><g><title>osrs_gph.exe`core::net::parser::Parser::parse_with (1 samples, 0.47%)</title><rect x="37.9147%" y="645" width="0.4739%" height="15" fill="rgb(102,213,213)" fg:x="80" fg:w="1"/><text x="38.1647%" y="655.50"></text></g><g><title>osrs_gph.exe`core::net::parser::Parser::read_ipv6_addr (1 samples, 0.47%)</title><rect x="37.9147%" y="629" width="0.4739%" height="15" fill="rgb(58,173,173)" fg:x="80" fg:w="1"/><text x="38.1647%" y="639.50"></text></g><g><title>osrs_gph.exe`core::net::parser::Parser::read_atomically (1 samples, 0.47%)</title><rect x="37.9147%" y="613" width="0.4739%" height="15" fill="rgb(58,172,172)" fg:x="80" fg:w="1"/><text x="38.1647%" y="623.50"></text></g><g><title>osrs_gph.exe`core::net::parser::impl$0::read_ipv6_addr::closure$0 (1 samples, 0.47%)</title><rect x="37.9147%" y="597" width="0.4739%" height="15" fill="rgb(101,212,212)" fg:x="80" fg:w="1"/><text x="38.1647%" y="607.50"></text></g><g><title>osrs_gph.exe`core::net::parser::impl$0::read_ipv6_addr::read_groups (1 samples, 0.47%)</title><rect x="37.9147%" y="581" width="0.4739%" height="15" fill="rgb(55,170,170)" fg:x="80" fg:w="1"/><text x="38.1647%" y="591.50"></text></g><g><title>osrs_gph.exe`core::net::parser::Parser::read_separator (1 samples, 0.47%)</title><rect x="37.9147%" y="565" width="0.4739%" height="15" fill="rgb(50,165,165)" fg:x="80" fg:w="1"/><text x="38.1647%" y="575.50"></text></g><g><title>osrs_gph.exe`core::net::parser::Parser::read_atomically (1 samples, 0.47%)</title><rect x="37.9147%" y="549" width="0.4739%" height="15" fill="rgb(56,170,170)" fg:x="80" fg:w="1"/><text x="38.1647%" y="559.50"></text></g><g><title>osrs_gph.exe`core::net::parser::Parser::read_ipv4_addr (1 samples, 0.47%)</title><rect x="37.9147%" y="533" width="0.4739%" height="15" fill="rgb(73,186,186)" fg:x="80" fg:w="1"/><text x="38.1647%" y="543.50"></text></g><g><title>osrs_gph.exe`ring::rsa::verification::impl$0::verify (1 samples, 0.47%)</title><rect x="38.3886%" y="325" width="0.4739%" height="15" fill="rgb(83,195,195)" fg:x="81" fg:w="1"/><text x="38.6386%" y="335.50"></text></g><g><title>osrs_gph.exe`ring::rsa::verification::verify_rsa_(ring::rsa::RsaParameters*, tuple$ (1 samples, 0.47%)</title><rect x="38.3886%" y="309" width="0.4739%" height="15" fill="rgb(87,199,199)" fg:x="81" fg:w="1"/><text x="38.6386%" y="319.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (1 samples, 0.47%)</title><rect x="38.3886%" y="293" width="0.4739%" height="15" fill="rgb(80,193,193)" fg:x="81" fg:w="1"/><text x="38.6386%" y="303.50"></text></g><g><title>osrs_gph.exe`ring::rsa::public_key::Inner::from_modulus_and_exponent (1 samples, 0.47%)</title><rect x="38.3886%" y="277" width="0.4739%" height="15" fill="rgb(73,186,186)" fg:x="81" fg:w="1"/><text x="38.6386%" y="287.50"></text></g><g><title>osrs_gph.exe`core::ops::range::RangeInclusive&lt;ring::bits::BitLength&gt;::new (1 samples, 0.47%)</title><rect x="38.3886%" y="261" width="0.4739%" height="15" fill="rgb(92,204,204)" fg:x="81" fg:w="1"/><text x="38.6386%" y="271.50"></text></g><g><title>osrs_gph.exe`ring::rsa::public_modulus::PublicModulus::from_be_bytes(untrusted::input::Input, core::ops::range::RangeInclusive (1 samples, 0.47%)</title><rect x="38.3886%" y="245" width="0.4739%" height="15" fill="rgb(67,180,180)" fg:x="81" fg:w="1"/><text x="38.6386%" y="255.50"></text></g><g><title>osrs_gph.exe`ring::arithmetic::bigint::modulus::OwnedModulus&lt;enum2$&lt;ring::rsa::N&gt; &gt;::from_be_bytes (1 samples, 0.47%)</title><rect x="38.3886%" y="229" width="0.4739%" height="15" fill="rgb(76,188,188)" fg:x="81" fg:w="1"/><text x="38.6386%" y="239.50"></text></g><g><title>osrs_gph.exe`ring::arithmetic::bigint::boxed_limbs::BoxedLimbs&lt;enum2$&lt;ring::rsa::N&gt; &gt;::positive_minimal_width_from_be_bytes (1 samples, 0.47%)</title><rect x="38.3886%" y="213" width="0.4739%" height="15" fill="rgb(82,195,195)" fg:x="81" fg:w="1"/><text x="38.6386%" y="223.50"></text></g><g><title>osrs_gph.exe`ring::arithmetic::bigint::boxed_limbs::BoxedLimbs&lt;enum2$&lt;ring::rsa::N&gt; &gt;::zero (1 samples, 0.47%)</title><rect x="38.3886%" y="197" width="0.4739%" height="15" fill="rgb(95,206,206)" fg:x="81" fg:w="1"/><text x="38.6386%" y="207.50"></text></g><g><title>osrs_gph.exe`alloc::vec::from_elem (1 samples, 0.47%)</title><rect x="38.3886%" y="181" width="0.4739%" height="15" fill="rgb(51,166,166)" fg:x="81" fg:w="1"/><text x="38.6386%" y="191.50"></text></g><g><title>osrs_gph.exe`alloc::vec::spec_from_elem::impl$1::from_elem (1 samples, 0.47%)</title><rect x="38.3886%" y="165" width="0.4739%" height="15" fill="rgb(62,176,176)" fg:x="81" fg:w="1"/><text x="38.6386%" y="175.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec&lt;u64,alloc::alloc::Global&gt;::with_capacity_zeroed_in (1 samples, 0.47%)</title><rect x="38.3886%" y="149" width="0.4739%" height="15" fill="rgb(106,216,216)" fg:x="81" fg:w="1"/><text x="38.6386%" y="159.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec&lt;u64,alloc::alloc::Global&gt;::allocate_in (1 samples, 0.47%)</title><rect x="38.3886%" y="133" width="0.4739%" height="15" fill="rgb(77,190,190)" fg:x="81" fg:w="1"/><text x="38.6386%" y="143.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::impl$1::allocate_zeroed (1 samples, 0.47%)</title><rect x="38.3886%" y="117" width="0.4739%" height="15" fill="rgb(91,203,203)" fg:x="81" fg:w="1"/><text x="38.6386%" y="127.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.47%)</title><rect x="38.3886%" y="101" width="0.4739%" height="15" fill="rgb(104,214,214)" fg:x="81" fg:w="1"/><text x="38.6386%" y="111.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::alloc_zeroed (1 samples, 0.47%)</title><rect x="38.3886%" y="85" width="0.4739%" height="15" fill="rgb(60,174,174)" fg:x="81" fg:w="1"/><text x="38.6386%" y="95.50"></text></g><g><title>`0x7FFE593EC7BA (1 samples, 0.47%)</title><rect x="38.3886%" y="69" width="0.4739%" height="15" fill="rgb(188,188,54)" fg:x="81" fg:w="1"/><text x="38.6386%" y="79.50"></text></g><g><title>`0x7FFE593ED1AA (1 samples, 0.47%)</title><rect x="38.3886%" y="53" width="0.4739%" height="15" fill="rgb(223,223,67)" fg:x="81" fg:w="1"/><text x="38.6386%" y="63.50"></text></g><g><title>`0x7FFE5944EC44 (1 samples, 0.47%)</title><rect x="38.3886%" y="37" width="0.4739%" height="15" fill="rgb(199,199,58)" fg:x="81" fg:w="1"/><text x="38.6386%" y="47.50"></text></g><g><title>osrs_gph.exe`rustls::client::tls13::impl$4::handle(rustls::client::tls13::ExpectCertificateVerify*, rustls::common_state::Context (2 samples, 0.95%)</title><rect x="38.3886%" y="613" width="0.9479%" height="15" fill="rgb(104,215,215)" fg:x="81" fg:w="2"/><text x="38.6386%" y="623.50"></text></g><g><title>osrs_gph.exe`rustls::verify::impl$6::verify_server_cert(rustls::verify::WebPkiVerifier*, rustls::key::Certificate*, ref$&lt;slice2$&lt;rustls::key::Certificate&gt; &gt;, enum2$&lt;rustls::client::client_conn::ServerName&gt;*, ref_mut$&lt;dyn$&lt;core::iter::traits::iterator::Iterator&lt;assoc$&lt;Item,ref$&lt;slice2$&lt;u8&gt; &gt; &gt; &gt; &gt; &gt;, ref$&lt;slice2$ (2 samples, 0.95%)</title><rect x="38.3886%" y="597" width="0.9479%" height="15" fill="rgb(77,190,190)" fg:x="81" fg:w="2"/><text x="38.6386%" y="607.50"></text></g><g><title>osrs_gph.exe`alloc::sync::impl$29::deref(alloc::sync::Arc (2 samples, 0.95%)</title><rect x="38.3886%" y="581" width="0.9479%" height="15" fill="rgb(69,182,182)" fg:x="81" fg:w="2"/><text x="38.6386%" y="591.50"></text></g><g><title>osrs_gph.exe`rustls::verify::verify_server_cert_signed_by_trust_anchor(rustls::key::ParsedCertificate*, rustls::anchors::RootCertStore*, ref$&lt;slice2$ (2 samples, 0.95%)</title><rect x="38.3886%" y="565" width="0.9479%" height="15" fill="rgb(106,217,217)" fg:x="81" fg:w="2"/><text x="38.6386%" y="575.50"></text></g><g><title>osrs_gph.exe`webpki::end_entity::EndEntityCert::verify_for_usage(ref$&lt;slice2$&lt;ref$&lt;webpki::signed_data::SignatureAlgorithm&gt; &gt; &gt;, ref$&lt;slice2$&lt;webpki::trust_anchor::TrustAnchor&gt; &gt;, ref$&lt;slice2$&lt;ref$&lt;slice2$&lt;u8&gt; &gt; &gt; &gt;, webpki::time::Time, webpki::verify_cert::KeyUsage, ref$&lt;slice2$&lt;ref$&lt;dyn$ (2 samples, 0.95%)</title><rect x="38.3886%" y="549" width="0.9479%" height="15" fill="rgb(93,204,204)" fg:x="81" fg:w="2"/><text x="38.6386%" y="559.50"></text></g><g><title>osrs_gph.exe`webpki::end_entity::EndEntityCert::verify_is_valid_cert(ref$&lt;slice2$&lt;ref$&lt;webpki::signed_data::SignatureAlgorithm&gt; &gt; &gt;, ref$&lt;slice2$&lt;webpki::trust_anchor::TrustAnchor&gt; &gt;, ref$&lt;slice2$&lt;ref$&lt;slice2$&lt;u8&gt; &gt; &gt; &gt;, webpki::time::Time, webpki::verify_cert::KeyUsage, ref$&lt;slice2$&lt;ref$&lt;dyn$ (2 samples, 0.95%)</title><rect x="38.3886%" y="533" width="0.9479%" height="15" fill="rgb(73,186,186)" fg:x="81" fg:w="2"/><text x="38.6386%" y="543.50"></text></g><g><title>osrs_gph.exe`webpki::verify_cert::build_chain (2 samples, 0.95%)</title><rect x="38.3886%" y="517" width="0.9479%" height="15" fill="rgb(83,196,196)" fg:x="81" fg:w="2"/><text x="38.6386%" y="527.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;webpki::error::Error,webpki::error::Error&gt; &gt; &gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow (2 samples, 0.95%)</title><rect x="38.3886%" y="501" width="0.9479%" height="15" fill="rgb(101,212,212)" fg:x="81" fg:w="2"/><text x="38.6386%" y="511.50"></text></g><g><title>osrs_gph.exe`webpki::verify_cert::build_chain_inner (2 samples, 0.95%)</title><rect x="38.3886%" y="485" width="0.9479%" height="15" fill="rgb(87,199,199)" fg:x="81" fg:w="2"/><text x="38.6386%" y="495.50"></text></g><g><title>osrs_gph.exe`webpki::verify_cert::loop_while_non_fatal_error(webpki::error::Error, ref$&lt;slice2$&lt;ref$&lt;slice2$ (2 samples, 0.95%)</title><rect x="38.3886%" y="469" width="0.9479%" height="15" fill="rgb(78,191,191)" fg:x="81" fg:w="2"/><text x="38.6386%" y="479.50"></text></g><g><title>osrs_gph.exe`webpki::verify_cert::build_chain_inner::closure$1(webpki::verify_cert::build_chain_inner::closure_env$1*, ref$&lt;slice2$ (2 samples, 0.95%)</title><rect x="38.3886%" y="453" width="0.9479%" height="15" fill="rgb(82,194,194)" fg:x="81" fg:w="2"/><text x="38.6386%" y="463.50"></text></g><g><title>osrs_gph.exe`webpki::verify_cert::build_chain_inner (2 samples, 0.95%)</title><rect x="38.3886%" y="437" width="0.9479%" height="15" fill="rgb(62,176,176)" fg:x="81" fg:w="2"/><text x="38.6386%" y="447.50"></text></g><g><title>osrs_gph.exe`webpki::verify_cert::loop_while_non_fatal_error(webpki::error::Error, ref$&lt;slice2$ (2 samples, 0.95%)</title><rect x="38.3886%" y="421" width="0.9479%" height="15" fill="rgb(98,209,209)" fg:x="81" fg:w="2"/><text x="38.6386%" y="431.50"></text></g><g><title>osrs_gph.exe`webpki::verify_cert::build_chain_inner::closure$0 (2 samples, 0.95%)</title><rect x="38.3886%" y="405" width="0.9479%" height="15" fill="rgb(50,165,165)" fg:x="81" fg:w="2"/><text x="38.6386%" y="415.50"></text></g><g><title>osrs_gph.exe`webpki::verify_cert::check_signed_chain(ref$&lt;slice2$&lt;ref$&lt;webpki::signed_data::SignatureAlgorithm&gt; &gt; &gt;, webpki::cert::Cert*, webpki::trust_anchor::TrustAnchor*, ref$&lt;slice2$&lt;ref$&lt;dyn$ (2 samples, 0.95%)</title><rect x="38.3886%" y="389" width="0.9479%" height="15" fill="rgb(80,192,192)" fg:x="81" fg:w="2"/><text x="38.6386%" y="399.50"></text></g><g><title>osrs_gph.exe`webpki::signed_data::verify_signed_data(ref$&lt;slice2$&lt;ref$ (2 samples, 0.95%)</title><rect x="38.3886%" y="373" width="0.9479%" height="15" fill="rgb(74,187,187)" fg:x="81" fg:w="2"/><text x="38.6386%" y="383.50"></text></g><g><title>osrs_gph.exe`webpki::signed_data::verify_signature (2 samples, 0.95%)</title><rect x="38.3886%" y="357" width="0.9479%" height="15" fill="rgb(62,176,176)" fg:x="81" fg:w="2"/><text x="38.6386%" y="367.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,ring::error::Unspecified&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;tuple$ (2 samples, 0.95%)</title><rect x="38.3886%" y="341" width="0.9479%" height="15" fill="rgb(79,192,192)" fg:x="81" fg:w="2"/><text x="38.6386%" y="351.50"></text></g><g><title>osrs_gph.exe`ring::ec::suite_b::ecdsa::verification::impl$0::verify (1 samples, 0.47%)</title><rect x="38.8626%" y="325" width="0.4739%" height="15" fill="rgb(83,195,195)" fg:x="82" fg:w="1"/><text x="39.1126%" y="335.50"></text></g><g><title>osrs_gph.exe`ring::ec::suite_b::ecdsa::verification::EcdsaVerificationAlgorithm::verify_digest(untrusted::input::Input, ring::ec::suite_b::ops::elem::Elem&lt;enum2$&lt;ring::ec::suite_b::ops::N&gt;,enum2$ (1 samples, 0.47%)</title><rect x="38.8626%" y="309" width="0.4739%" height="15" fill="rgb(92,203,203)" fg:x="82" fg:w="1"/><text x="39.1126%" y="319.50"></text></g><g><title>osrs_gph.exe`ring::ec::suite_b::ops::p256::twin_mul_nistz256(ring::ec::suite_b::ops::elem::Elem&lt;enum2$&lt;ring::ec::suite_b::ops::N&gt;,enum2$&lt;ring::arithmetic::montgomery::Unencoded&gt; &gt;*, ring::ec::suite_b::ops::elem::Elem&lt;enum2$&lt;ring::ec::suite_b::ops::N&gt;,enum2$&lt;ring::arithmetic::montgomery::Unencoded&gt; &gt;*, tuple$&lt;ring::ec::suite_b::ops::elem::Elem&lt;enum2$&lt;ring::ec::suite_b::ops::Q&gt;,enum2$&lt;ring::arithmetic::montgomery::R&gt; &gt;,ring::ec::suite_b::ops::elem::Elem&lt;enum2$&lt;ring::ec::suite_b::ops::Q&gt;,enum2$ (1 samples, 0.47%)</title><rect x="38.8626%" y="293" width="0.4739%" height="15" fill="rgb(53,168,168)" fg:x="82" fg:w="1"/><text x="39.1126%" y="303.50"></text></g><g><title>osrs_gph.exe`ring::ec::suite_b::ops::p256::point_mul_base_vartime(ring::ec::suite_b::ops::elem::Elem&lt;enum2$&lt;ring::ec::suite_b::ops::N&gt;,enum2$ (1 samples, 0.47%)</title><rect x="38.8626%" y="277" width="0.4739%" height="15" fill="rgb(107,217,217)" fg:x="82" fg:w="1"/><text x="39.1126%" y="287.50"></text></g><g><title>osrs_gph.exe`ring_core_0_17_7_p256_point_mul_base_vartime(unsigned long long[4]*, unsigned long long const*) (1 samples, 0.47%)</title><rect x="38.8626%" y="261" width="0.4739%" height="15" fill="rgb(224,224,68)" fg:x="82" fg:w="1"/><text x="39.1126%" y="271.50"></text></g><g><title>osrs_gph.exe`OPENSSL_memcpy(void*, void const*, unsigned long long) (1 samples, 0.47%)</title><rect x="38.8626%" y="245" width="0.4739%" height="15" fill="rgb(217,217,65)" fg:x="82" fg:w="1"/><text x="39.1126%" y="255.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::impl$9::poll(core::pin::Pin&lt;ref_mut$&lt;tokio_rustls::Connect (3 samples, 1.42%)</title><rect x="38.3886%" y="741" width="1.4218%" height="15" fill="rgb(63,177,177)" fg:x="81" fg:w="3"/><text x="38.6386%" y="751.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::common::handshake::impl$0::poll(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;tokio_rustls::common::handshake::MidHandshake&lt;tokio_rustls::client::TlsStream (3 samples, 1.42%)</title><rect x="38.3886%" y="725" width="1.4218%" height="15" fill="rgb(86,198,198)" fg:x="81" fg:w="3"/><text x="38.6386%" y="735.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::common::Stream&lt;tokio::net::tcp::stream::TcpStream,rustls::client::client_conn::ClientConnection&gt;::handshake&lt;tokio::net::tcp::stream::TcpStream,rustls::client::client_conn::ClientConnection,rustls::client::client_conn::ClientConnectionData&gt; (3 samples, 1.42%)</title><rect x="38.3886%" y="709" width="1.4218%" height="15" fill="rgb(55,170,170)" fg:x="81" fg:w="3"/><text x="38.6386%" y="719.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::common::Stream&lt;tokio::net::tcp::stream::TcpStream,rustls::client::client_conn::ClientConnection&gt;::read_io&lt;tokio::net::tcp::stream::TcpStream,rustls::client::client_conn::ClientConnection,rustls::client::client_conn::ClientConnectionData&gt; (3 samples, 1.42%)</title><rect x="38.3886%" y="693" width="1.4218%" height="15" fill="rgb(66,179,179)" fg:x="81" fg:w="3"/><text x="38.6386%" y="703.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;rustls::common_state::IoState,enum2$&lt;rustls::error::Error&gt; &gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;rustls::common_state::IoState,enum2$&lt;rustls::error::Error&gt; &gt; &gt;, tokio_rustls::common::impl$1::read_io::closure_env$0 (3 samples, 1.42%)</title><rect x="38.3886%" y="677" width="1.4218%" height="15" fill="rgb(109,219,219)" fg:x="81" fg:w="3"/><text x="38.6386%" y="687.50"></text></g><g><title>osrs_gph.exe`rustls::conn::ConnectionCore&lt;rustls::client::client_conn::ClientConnectionData&gt;::process_new_packets&lt;rustls::client::client_conn::ClientConnectionData&gt; (3 samples, 1.42%)</title><rect x="38.3886%" y="661" width="1.4218%" height="15" fill="rgb(107,217,217)" fg:x="81" fg:w="3"/><text x="38.6386%" y="671.50"></text></g><g><title>osrs_gph.exe`rustls::conn::ConnectionCore&lt;rustls::client::client_conn::ClientConnectionData&gt;::process_msg(rustls::msgs::message::PlainMessage, alloc::boxed::Box&lt;dyn$&lt;rustls::common_state::State (3 samples, 1.42%)</title><rect x="38.3886%" y="645" width="1.4218%" height="15" fill="rgb(95,206,206)" fg:x="81" fg:w="3"/><text x="38.6386%" y="655.50"></text></g><g><title>osrs_gph.exe`rustls::common_state::CommonState::process_main_protocol(rustls::msgs::message::Message, alloc::boxed::Box&lt;dyn$&lt;rustls::common_state::State (3 samples, 1.42%)</title><rect x="38.3886%" y="629" width="1.4218%" height="15" fill="rgb(71,184,184)" fg:x="81" fg:w="3"/><text x="38.6386%" y="639.50"></text></g><g><title>osrs_gph.exe`rustls::client::hs::impl$2::handle(rustls::client::hs::ExpectServerHelloOrHelloRetryRequest*, rustls::common_state::Context (1 samples, 0.47%)</title><rect x="39.3365%" y="613" width="0.4739%" height="15" fill="rgb(101,211,211)" fg:x="83" fg:w="1"/><text x="39.5865%" y="623.50"></text></g><g><title>osrs_gph.exe`rustls::client::hs::impl$0::handle(rustls::client::hs::ExpectServerHello*, rustls::common_state::Context (1 samples, 0.47%)</title><rect x="39.3365%" y="597" width="0.4739%" height="15" fill="rgb(100,210,210)" fg:x="83" fg:w="1"/><text x="39.5865%" y="607.50"></text></g><g><title>osrs_gph.exe`rustls::client::tls13::handle_server_hello(alloc::sync::Arc&lt;rustls::client::client_conn::ClientConfig,alloc::alloc::Global&gt;, rustls::common_state::Context&lt;rustls::client::client_conn::ClientConnectionData&gt;*, rustls::msgs::handshake::ServerHelloPayload*, enum2$&lt;core::option::Option&lt;rustls::msgs::persist::Tls13ClientSessionValue&gt; &gt;, enum2$&lt;rustls::client::client_conn::ServerName&gt;, rustls::conn::ConnectionRandoms, rustls::tls13::Tls13CipherSuite*, rustls::hash_hs::HandshakeHash, enum2$&lt;core::option::Option (1 samples, 0.47%)</title><rect x="39.3365%" y="581" width="0.4739%" height="15" fill="rgb(82,194,194)" fg:x="83" fg:w="1"/><text x="39.5865%" y="591.50"></text></g><g><title>osrs_gph.exe`rustls::client::tls13::emit_fake_ccs (1 samples, 0.47%)</title><rect x="39.3365%" y="565" width="0.4739%" height="15" fill="rgb(58,172,172)" fg:x="83" fg:w="1"/><text x="39.5865%" y="575.50"></text></g><g><title>osrs_gph.exe`rustls::tls13::key_schedule::KeyScheduleHandshakeStart::derive_client_handshake_secrets(rustls::tls13::key_schedule::KeyScheduleHandshakeStart, bool, ring::digest::Digest, rustls::tls13::Tls13CipherSuite*, ref$&lt;dyn$ (1 samples, 0.47%)</title><rect x="39.3365%" y="549" width="0.4739%" height="15" fill="rgb(104,215,215)" fg:x="83" fg:w="1"/><text x="39.5865%" y="559.50"></text></g><g><title>osrs_gph.exe`rustls::tls13::key_schedule::KeySchedule::set_decrypter (1 samples, 0.47%)</title><rect x="39.3365%" y="533" width="0.4739%" height="15" fill="rgb(52,167,167)" fg:x="83" fg:w="1"/><text x="39.5865%" y="543.50"></text></g><g><title>osrs_gph.exe`rustls::record_layer::RecordLayer::set_message_decrypter(alloc::boxed::Box&lt;dyn$ (1 samples, 0.47%)</title><rect x="39.3365%" y="517" width="0.4739%" height="15" fill="rgb(76,188,188)" fg:x="83" fg:w="1"/><text x="39.5865%" y="527.50"></text></g><g><title>osrs_gph.exe`rustls::record_layer::RecordLayer::prepare_message_decrypter(alloc::boxed::Box&lt;dyn$ (1 samples, 0.47%)</title><rect x="39.3365%" y="501" width="0.4739%" height="15" fill="rgb(75,187,187)" fg:x="83" fg:w="1"/><text x="39.5865%" y="511.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::boxed::Box&lt;dyn$ (1 samples, 0.47%)</title><rect x="39.3365%" y="485" width="0.4739%" height="15" fill="rgb(78,191,191)" fg:x="83" fg:w="1"/><text x="39.5865%" y="495.50"></text></g><g><title>osrs_gph.exe`alloc::boxed::impl$8::drop(alloc::boxed::Box&lt;dyn$ (1 samples, 0.47%)</title><rect x="39.3365%" y="469" width="0.4739%" height="15" fill="rgb(99,210,210)" fg:x="83" fg:w="1"/><text x="39.5865%" y="479.50"></text></g><g><title>osrs_gph.exe`core::alloc::layout::Layout::for_value_raw(ptr_const$&lt;dyn$ (1 samples, 0.47%)</title><rect x="39.3365%" y="453" width="0.4739%" height="15" fill="rgb(94,206,206)" fg:x="83" fg:w="1"/><text x="39.5865%" y="463.50"></text></g><g><title>osrs_gph.exe`core::mem::size_of_val_raw(ptr_const$&lt;dyn$ (1 samples, 0.47%)</title><rect x="39.3365%" y="437" width="0.4739%" height="15" fill="rgb(66,179,179)" fg:x="83" fg:w="1"/><text x="39.5865%" y="447.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;serde::de::impls::impl$49::deserialize::PrimitiveVisitor&gt; (1 samples, 0.47%)</title><rect x="39.3365%" y="421" width="0.4739%" height="15" fill="rgb(79,192,192)" fg:x="83" fg:w="1"/><text x="39.5865%" y="431.50"></text></g><g><title>osrs_gph.exe`rustls::client::hs::emit_client_hello_for_retry(rustls::hash_hs::HandshakeHashBuffer, enum2$&lt;core::option::Option&lt;ref$&lt;rustls::msgs::handshake::HelloRetryRequest&gt; &gt; &gt;, enum2$&lt;core::option::Option&lt;rustls::kx::KeyExchange&gt; &gt;, alloc::vec::Vec&lt;enum2$&lt;rustls::msgs::handshake::ClientExtension&gt;,alloc::alloc::Global&gt;, bool, enum2$&lt;core::option::Option&lt;enum2$&lt;rustls::suites::SupportedCipherSuite&gt; &gt; &gt;, rustls::client::hs::ClientHelloInput, rustls::common_state::Context (1 samples, 0.47%)</title><rect x="39.8104%" y="629" width="0.4739%" height="15" fill="rgb(80,193,193)" fg:x="84" fg:w="1"/><text x="40.0604%" y="639.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::option::Option&lt;ref$&lt;rustls::msgs::handshake::HelloRetryRequest&gt; &gt; &gt;::and_then(enum2$&lt;core::option::Option&lt;ref$&lt;rustls::msgs::handshake::HelloRetryRequest&gt; &gt; &gt;, enum2$&lt;core::option::Option&lt;ref$&lt;rustls::msgs::base::PayloadU16&gt; &gt; &gt; (*) (1 samples, 0.47%)</title><rect x="39.8104%" y="613" width="0.4739%" height="15" fill="rgb(81,193,193)" fg:x="84" fg:w="1"/><text x="40.0604%" y="623.50"></text></g><g><title>osrs_gph.exe`rustls::msgs::handshake::impl$89::encode(rustls::msgs::handshake::HandshakeMessagePayload*, alloc::vec::Vec (1 samples, 0.47%)</title><rect x="39.8104%" y="597" width="0.4739%" height="15" fill="rgb(96,207,207)" fg:x="84" fg:w="1"/><text x="40.0604%" y="607.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;rustls::msgs::handshake::HandshakePayload&gt;::encode(alloc::vec::Vec (1 samples, 0.47%)</title><rect x="39.8104%" y="581" width="0.4739%" height="15" fill="rgb(104,215,215)" fg:x="84" fg:w="1"/><text x="40.0604%" y="591.50"></text></g><g><title>osrs_gph.exe`rustls::msgs::codec::impl$7::encode&lt;enum2$&lt;rustls::msgs::handshake::ClientExtension&gt; &gt;(alloc::vec::Vec&lt;enum2$&lt;rustls::msgs::handshake::ClientExtension&gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 0.47%)</title><rect x="39.8104%" y="565" width="0.4739%" height="15" fill="rgb(67,180,180)" fg:x="84" fg:w="1"/><text x="40.0604%" y="575.50"></text></g><g><title>osrs_gph.exe`rustls::msgs::handshake::impl$35::encode(enum2$&lt;rustls::msgs::handshake::ClientExtension&gt;*, alloc::vec::Vec (1 samples, 0.47%)</title><rect x="39.8104%" y="549" width="0.4739%" height="15" fill="rgb(108,218,218)" fg:x="84" fg:w="1"/><text x="40.0604%" y="559.50"></text></g><g><title>osrs_gph.exe`rustls::msgs::codec::impl$7::encode&lt;enum2$&lt;rustls::msgs::enums::PSKKeyExchangeMode&gt; &gt;(alloc::vec::Vec&lt;enum2$&lt;rustls::msgs::enums::PSKKeyExchangeMode&gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 0.47%)</title><rect x="39.8104%" y="533" width="0.4739%" height="15" fill="rgb(85,197,197)" fg:x="84" fg:w="1"/><text x="40.0604%" y="543.50"></text></g><g><title>osrs_gph.exe`alloc::vec::impl$20::extend(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="39.8104%" y="517" width="0.4739%" height="15" fill="rgb(76,189,189)" fg:x="84" fg:w="1"/><text x="40.0604%" y="527.50"></text></g><g><title>osrs_gph.exe`alloc::vec::spec_extend::impl$4::spec_extend(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, core::slice::iter::Iter (1 samples, 0.47%)</title><rect x="39.8104%" y="501" width="0.4739%" height="15" fill="rgb(78,190,190)" fg:x="84" fg:w="1"/><text x="40.0604%" y="511.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::append_elements(ptr_const$&lt;slice2$ (1 samples, 0.47%)</title><rect x="39.8104%" y="485" width="0.4739%" height="15" fill="rgb(76,189,189)" fg:x="84" fg:w="1"/><text x="40.0604%" y="495.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::reserve (1 samples, 0.47%)</title><rect x="39.8104%" y="469" width="0.4739%" height="15" fill="rgb(88,200,200)" fg:x="84" fg:w="1"/><text x="40.0604%" y="479.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::reserve (1 samples, 0.47%)</title><rect x="39.8104%" y="453" width="0.4739%" height="15" fill="rgb(52,167,167)" fg:x="84" fg:w="1"/><text x="40.0604%" y="463.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::TlsConnector::connect(enum2$ (2 samples, 0.95%)</title><rect x="39.8104%" y="741" width="0.9479%" height="15" fill="rgb(85,197,197)" fg:x="84" fg:w="2"/><text x="40.0604%" y="751.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::TlsConnector::connect_with(enum2$&lt;rustls::client::client_conn::ServerName&gt;, tokio::net::tcp::stream::TcpStream, tokio_rustls::impl$2::connect::closure_env$0 (2 samples, 0.95%)</title><rect x="39.8104%" y="725" width="0.9479%" height="15" fill="rgb(100,211,211)" fg:x="84" fg:w="2"/><text x="40.0604%" y="735.50"></text></g><g><title>osrs_gph.exe`rustls::client::client_conn::ClientConnection::new(alloc::sync::Arc&lt;rustls::client::client_conn::ClientConfig,alloc::alloc::Global&gt;, enum2$ (2 samples, 0.95%)</title><rect x="39.8104%" y="709" width="0.9479%" height="15" fill="rgb(84,196,196)" fg:x="84" fg:w="2"/><text x="40.0604%" y="719.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;enum2$&lt;rustls::msgs::handshake::ClientExtension&gt;,alloc::alloc::Global&gt;::new (2 samples, 0.95%)</title><rect x="39.8104%" y="693" width="0.9479%" height="15" fill="rgb(76,188,188)" fg:x="84" fg:w="2"/><text x="40.0604%" y="703.50"></text></g><g><title>osrs_gph.exe`rustls::conn::ConnectionCore&lt;rustls::client::client_conn::ClientConnectionData&gt;::for_client(alloc::sync::Arc&lt;rustls::client::client_conn::ClientConfig,alloc::alloc::Global&gt;, enum2$&lt;rustls::client::client_conn::ServerName&gt;, alloc::vec::Vec&lt;enum2$&lt;rustls::msgs::handshake::ClientExtension&gt;,alloc::alloc::Global&gt;, enum2$ (2 samples, 0.95%)</title><rect x="39.8104%" y="677" width="0.9479%" height="15" fill="rgb(98,209,209)" fg:x="84" fg:w="2"/><text x="40.0604%" y="687.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;alloc::boxed::Box&lt;dyn$&lt;rustls::common_state::State&lt;rustls::client::client_conn::ClientConnectionData&gt; &gt;,alloc::alloc::Global&gt;,enum2$ (2 samples, 0.95%)</title><rect x="39.8104%" y="661" width="0.9479%" height="15" fill="rgb(86,198,198)" fg:x="84" fg:w="2"/><text x="40.0604%" y="671.50"></text></g><g><title>osrs_gph.exe`rustls::client::hs::start_handshake(enum2$&lt;rustls::client::client_conn::ServerName&gt;, alloc::vec::Vec&lt;enum2$&lt;rustls::msgs::handshake::ClientExtension&gt;,alloc::alloc::Global&gt;, alloc::sync::Arc&lt;rustls::client::client_conn::ClientConfig,alloc::alloc::Global&gt;, rustls::common_state::Context (2 samples, 0.95%)</title><rect x="39.8104%" y="645" width="0.9479%" height="15" fill="rgb(105,216,216)" fg:x="84" fg:w="2"/><text x="40.0604%" y="655.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;rustls::kx::KeyExchange,enum2$ (1 samples, 0.47%)</title><rect x="40.2844%" y="629" width="0.4739%" height="15" fill="rgb(74,187,187)" fg:x="85" fg:w="1"/><text x="40.5344%" y="639.50"></text></g><g><title>osrs_gph.exe`rustls::client::tls13::initial_key_share(rustls::client::client_conn::ClientConfig*, enum2$ (1 samples, 0.47%)</title><rect x="40.2844%" y="613" width="0.4739%" height="15" fill="rgb(97,208,208)" fg:x="85" fg:w="1"/><text x="40.5344%" y="623.50"></text></g><g><title>osrs_gph.exe`rustls::kx::KeyExchange::start (1 samples, 0.47%)</title><rect x="40.2844%" y="597" width="0.4739%" height="15" fill="rgb(98,209,209)" fg:x="85" fg:w="1"/><text x="40.5344%" y="607.50"></text></g><g><title>osrs_gph.exe`ring::agreement::EphemeralPrivateKey::compute_public_key (1 samples, 0.47%)</title><rect x="40.2844%" y="581" width="0.4739%" height="15" fill="rgb(106,217,217)" fg:x="85" fg:w="1"/><text x="40.5344%" y="591.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;ring::ec::keys::PublicKey,ring::error::Unspecified&gt; &gt;::map(enum2$&lt;core::result::Result (1 samples, 0.47%)</title><rect x="40.2844%" y="565" width="0.4739%" height="15" fill="rgb(96,207,207)" fg:x="85" fg:w="1"/><text x="40.5344%" y="575.50"></text></g><g><title>osrs_gph.exe`ring::ec::keys::Seed::compute_public_key (1 samples, 0.47%)</title><rect x="40.2844%" y="549" width="0.4739%" height="15" fill="rgb(52,167,167)" fg:x="85" fg:w="1"/><text x="40.5344%" y="559.50"></text></g><g><title>osrs_gph.exe`ring::ec::curve25519::x25519::x25519_public_from_private(ref_mut$&lt;slice2$ (1 samples, 0.47%)</title><rect x="40.2844%" y="533" width="0.4739%" height="15" fill="rgb(63,177,177)" fg:x="85" fg:w="1"/><text x="40.5344%" y="543.50"></text></g><g><title>osrs_gph.exe`ring_core_0_17_7_x25519_public_from_private_generic_masked(unsigned char*, unsigned char const*, int) (1 samples, 0.47%)</title><rect x="40.2844%" y="517" width="0.4739%" height="15" fill="rgb(205,205,60)" fg:x="85" fg:w="1"/><text x="40.5344%" y="527.50"></text></g><g><title>osrs_gph.exe`fe_add(fe_loose*, fe const*, fe const*) (1 samples, 0.47%)</title><rect x="40.2844%" y="501" width="0.4739%" height="15" fill="rgb(223,223,67)" fg:x="85" fg:w="1"/><text x="40.5344%" y="511.50"></text></g><g><title>osrs_gph.exe`fiat_25519_add(unsigned long long*, unsigned long long const*, unsigned long long const*) (1 samples, 0.47%)</title><rect x="40.2844%" y="485" width="0.4739%" height="15" fill="rgb(221,221,66)" fg:x="85" fg:w="1"/><text x="40.5344%" y="495.50"></text></g><g><title>osrs_gph.exe`ring_core_0_17_7_x25519_ge_scalarmult_base(ge_p3*, unsigned char const*, int) (1 samples, 0.47%)</title><rect x="40.2844%" y="469" width="0.4739%" height="15" fill="rgb(204,204,60)" fg:x="85" fg:w="1"/><text x="40.5344%" y="479.50"></text></g><g><title>osrs_gph.exe`x25519_ge_p1p1_to_p3(ge_p3*, ge_p1p1 const*) (1 samples, 0.47%)</title><rect x="40.2844%" y="453" width="0.4739%" height="15" fill="rgb(222,222,67)" fg:x="85" fg:w="1"/><text x="40.5344%" y="463.50"></text></g><g><title>osrs_gph.exe`fe_mul_tll(fe*, fe_loose const*, fe_loose const*) (1 samples, 0.47%)</title><rect x="40.2844%" y="437" width="0.4739%" height="15" fill="rgb(189,189,55)" fg:x="85" fg:w="1"/><text x="40.5344%" y="447.50"></text></g><g><title>osrs_gph.exe`fe_mul_impl(unsigned long long*, unsigned long long const*, unsigned long long const*) (1 samples, 0.47%)</title><rect x="40.2844%" y="421" width="0.4739%" height="15" fill="rgb(183,183,53)" fg:x="85" fg:w="1"/><text x="40.5344%" y="431.50"></text></g><g><title>osrs_gph.exe`ge_madd(ge_p1p1*, ge_p3 const*, ge_precomp const*) (1 samples, 0.47%)</title><rect x="40.2844%" y="405" width="0.4739%" height="15" fill="rgb(190,190,55)" fg:x="85" fg:w="1"/><text x="40.5344%" y="415.50"></text></g><g><title>osrs_gph.exe`fe_add(fe_loose*, fe const*, fe const*) (1 samples, 0.47%)</title><rect x="40.2844%" y="389" width="0.4739%" height="15" fill="rgb(212,212,63)" fg:x="85" fg:w="1"/><text x="40.5344%" y="399.50"></text></g><g><title>osrs_gph.exe`fiat_25519_add(unsigned long long*, unsigned long long const*, unsigned long long const*) (1 samples, 0.47%)</title><rect x="40.2844%" y="373" width="0.4739%" height="15" fill="rgb(175,175,50)" fg:x="85" fg:w="1"/><text x="40.5344%" y="383.50"></text></g><g><title>osrs_gph.exe`fiat_25519_carry_mul(unsigned long long*, unsigned long long const*, unsigned long long const*) (1 samples, 0.47%)</title><rect x="40.2844%" y="357" width="0.4739%" height="15" fill="rgb(209,209,62)" fg:x="85" fg:w="1"/><text x="40.5344%" y="367.50"></text></g><g><title>osrs_gph.exe`fiat_25519_mulx_u64(unsigned long long*, unsigned long long*, unsigned long long, unsigned long long) (1 samples, 0.47%)</title><rect x="40.2844%" y="341" width="0.4739%" height="15" fill="rgb(181,181,52)" fg:x="85" fg:w="1"/><text x="40.5344%" y="351.50"></text></g><g><title>osrs_gph.exe`tokio::net::tcp::socket::impl$0::connect::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (1 samples, 0.47%)</title><rect x="40.7583%" y="661" width="0.4739%" height="15" fill="rgb(89,201,201)" fg:x="86" fg:w="1"/><text x="41.0083%" y="671.50"></text></g><g><title>osrs_gph.exe`tokio::net::tcp::stream::impl$0::connect_mio::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (1 samples, 0.47%)</title><rect x="40.7583%" y="645" width="0.4739%" height="15" fill="rgb(70,183,183)" fg:x="86" fg:w="1"/><text x="41.0083%" y="655.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (1 samples, 0.47%)</title><rect x="40.7583%" y="629" width="0.4739%" height="15" fill="rgb(51,166,166)" fg:x="86" fg:w="1"/><text x="41.0083%" y="639.50"></text></g><g><title>osrs_gph.exe`tokio::net::tcp::stream::TcpStream::new (1 samples, 0.47%)</title><rect x="40.7583%" y="613" width="0.4739%" height="15" fill="rgb(109,219,219)" fg:x="86" fg:w="1"/><text x="41.0083%" y="623.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tokio::io::poll_evented::PollEvented (1 samples, 0.47%)</title><rect x="40.7583%" y="597" width="0.4739%" height="15" fill="rgb(104,214,214)" fg:x="86" fg:w="1"/><text x="41.0083%" y="607.50"></text></g><g><title>osrs_gph.exe`tokio::io::poll_evented::PollEvented&lt;mio::net::tcp::stream::TcpStream&gt;::new&lt;mio::net::tcp::stream::TcpStream&gt; (1 samples, 0.47%)</title><rect x="40.7583%" y="581" width="0.4739%" height="15" fill="rgb(80,192,192)" fg:x="86" fg:w="1"/><text x="41.0083%" y="591.50"></text></g><g><title>osrs_gph.exe`hyper::client::connect::http::connect::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (2 samples, 0.95%)</title><rect x="40.7583%" y="677" width="0.9479%" height="15" fill="rgb(100,210,210)" fg:x="86" fg:w="2"/><text x="41.0083%" y="687.50"></text></g><g><title>osrs_gph.exe`futures_util::future::future::map::impl$2::poll&lt;futures_util::future::try_future::into_future::IntoFuture&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt; &gt;,futures_util::fns::MapErrFn&lt;hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt;,enum2$&lt;core::result::Result&lt;reqwest::connect::Conn,hyper::error::Error&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;futures_util::future::future::map::Map&lt;futures_util::future::try_future::into_future::IntoFuture&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt; &gt;,futures_util::fns::MapErrFn&lt;hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$ (8 samples, 3.79%)</title><rect x="38.3886%" y="821" width="3.7915%" height="15" fill="rgb(109,219,219)" fg:x="81" fg:w="8"/><text x="38.6386%" y="831.50">osrs..</text></g><g><title>osrs_gph.exe`hyper::service::oneshot::impl$0::poll&lt;reqwest::connect::Connector,http::uri::Uri&gt;(core::pin::Pin&lt;ref_mut$&lt;hyper::service::oneshot::Oneshot (8 samples, 3.79%)</title><rect x="38.3886%" y="805" width="3.7915%" height="15" fill="rgb(71,184,184)" fg:x="81" fg:w="8"/><text x="38.6386%" y="815.50">osrs..</text></g><g><title>osrs_gph.exe`reqwest::connect::with_timeout::async_fn$0&lt;reqwest::connect::Conn,enum2$&lt;reqwest::connect::impl$0::connect_with_maybe_proxy::async_fn_env$0&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;reqwest::connect::with_timeout::async_fn_env$0&lt;reqwest::connect::Conn,enum2$ (8 samples, 3.79%)</title><rect x="38.3886%" y="789" width="3.7915%" height="15" fill="rgb(109,219,219)" fg:x="81" fg:w="8"/><text x="38.6386%" y="799.50">osrs..</text></g><g><title>osrs_gph.exe`reqwest::connect::impl$0::connect_with_maybe_proxy::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (8 samples, 3.79%)</title><rect x="38.3886%" y="773" width="3.7915%" height="15" fill="rgb(100,211,211)" fg:x="81" fg:w="8"/><text x="38.6386%" y="783.50">osrs..</text></g><g><title>osrs_gph.exe`hyper_rustls::connector::impl$3::call::async_block$3&lt;hyper::client::connect::http::HttpConnector&lt;reqwest::dns::resolve::DynResolver&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper_rustls::connector::impl$3::call::async_block_env$3&lt;hyper::client::connect::http::HttpConnector (8 samples, 3.79%)</title><rect x="38.3886%" y="757" width="3.7915%" height="15" fill="rgb(102,213,213)" fg:x="81" fg:w="8"/><text x="38.6386%" y="767.50">osrs..</text></g><g><title>osrs_gph.exe`hyper::client::connect::http::impl$3::call::async_block$0&lt;reqwest::dns::resolve::DynResolver&gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::client::connect::http::impl$3::call::async_block_env$0 (3 samples, 1.42%)</title><rect x="40.7583%" y="741" width="1.4218%" height="15" fill="rgb(83,195,195)" fg:x="86" fg:w="3"/><text x="41.0083%" y="751.50"></text></g><g><title>osrs_gph.exe`hyper::client::connect::http::impl$4::call_async::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::client::connect::http::impl$4::call_async::async_fn_env$0 (3 samples, 1.42%)</title><rect x="40.7583%" y="725" width="1.4218%" height="15" fill="rgb(102,213,213)" fg:x="86" fg:w="3"/><text x="41.0083%" y="735.50"></text></g><g><title>osrs_gph.exe`hyper::client::connect::http::impl$15::connect::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (3 samples, 1.42%)</title><rect x="40.7583%" y="709" width="1.4218%" height="15" fill="rgb(77,190,190)" fg:x="86" fg:w="3"/><text x="41.0083%" y="719.50"></text></g><g><title>osrs_gph.exe`hyper::client::connect::http::impl$14::connect::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (3 samples, 1.42%)</title><rect x="40.7583%" y="693" width="1.4218%" height="15" fill="rgb(52,167,167)" fg:x="86" fg:w="3"/><text x="41.0083%" y="703.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$ (1 samples, 0.47%)</title><rect x="41.7062%" y="677" width="0.4739%" height="15" fill="rgb(106,216,216)" fg:x="88" fg:w="1"/><text x="41.9562%" y="687.50"></text></g><g><title>osrs_gph.exe`hyper::client::connect::http::connect(enum2$&lt;core::net::socket_addr::SocketAddr&gt;*, hyper::client::connect::http::Config*, enum2$&lt;core::option::Option (1 samples, 0.47%)</title><rect x="41.7062%" y="661" width="0.4739%" height="15" fill="rgb(102,212,212)" fg:x="88" fg:w="1"/><text x="41.9562%" y="671.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;socket2::socket::Socket,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;socket2::socket::Socket,std::io::error::Error&gt; &gt;, hyper::client::connect::http::impl$8::m::closure_env$0&lt;ref$ (1 samples, 0.47%)</title><rect x="41.7062%" y="645" width="0.4739%" height="15" fill="rgb(72,185,185)" fg:x="88" fg:w="1"/><text x="41.9562%" y="655.50"></text></g><g><title>osrs_gph.exe`socket2::socket::Socket::new(socket2::Domain, socket2::Type, enum2$&lt;core::option::Option (1 samples, 0.47%)</title><rect x="41.7062%" y="629" width="0.4739%" height="15" fill="rgb(78,190,190)" fg:x="88" fg:w="1"/><text x="41.9562%" y="639.50"></text></g><g><title>osrs_gph.exe`socket2::socket::Socket::new_raw(socket2::Domain, socket2::Type, enum2$&lt;core::option::Option (1 samples, 0.47%)</title><rect x="41.7062%" y="613" width="0.4739%" height="15" fill="rgb(104,215,215)" fg:x="88" fg:w="1"/><text x="41.9562%" y="623.50"></text></g><g><title>osrs_gph.exe`socket2::sys::socket (1 samples, 0.47%)</title><rect x="41.7062%" y="597" width="0.4739%" height="15" fill="rgb(53,168,168)" fg:x="88" fg:w="1"/><text x="41.9562%" y="607.50"></text></g><g><title>osrs_gph.exe`socket2::sys::init (1 samples, 0.47%)</title><rect x="41.7062%" y="581" width="0.4739%" height="15" fill="rgb(65,179,179)" fg:x="88" fg:w="1"/><text x="41.9562%" y="591.50"></text></g><g><title>osrs_gph.exe`std::sync::once::Once::call_once (1 samples, 0.47%)</title><rect x="41.7062%" y="565" width="0.4739%" height="15" fill="rgb(94,206,206)" fg:x="88" fg:w="1"/><text x="41.9562%" y="575.50"></text></g><g><title>osrs_gph.exe`std::sys_common::once::queue::Once::call (1 samples, 0.47%)</title><rect x="41.7062%" y="549" width="0.4739%" height="15" fill="rgb(102,213,213)" fg:x="88" fg:w="1"/><text x="41.9562%" y="559.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell::get (1 samples, 0.47%)</title><rect x="41.7062%" y="533" width="0.4739%" height="15" fill="rgb(104,214,214)" fg:x="88" fg:w="1"/><text x="41.9562%" y="543.50"></text></g><g><title>osrs_gph.exe`std::sync::once::impl$2::call_once::closure$0&lt;socket2::sys::init::closure_env$0&gt;(std::sync::once::impl$2::call_once::closure_env$0 (1 samples, 0.47%)</title><rect x="41.7062%" y="517" width="0.4739%" height="15" fill="rgb(58,172,172)" fg:x="88" fg:w="1"/><text x="41.9562%" y="527.50"></text></g><g><title>osrs_gph.exe`socket2::sys::init::closure$0 (1 samples, 0.47%)</title><rect x="41.7062%" y="501" width="0.4739%" height="15" fill="rgb(54,168,168)" fg:x="88" fg:w="1"/><text x="41.9562%" y="511.50"></text></g><g><title>osrs_gph.exe`std::net::udp::UdpSocket::bind(ref$ (1 samples, 0.47%)</title><rect x="41.7062%" y="485" width="0.4739%" height="15" fill="rgb(106,216,216)" fg:x="88" fg:w="1"/><text x="41.9562%" y="495.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;std::sys_common::net::UdpSocket,std::io::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;std::sys_common::net::UdpSocket,std::io::error::Error&gt; &gt;, std::net::udp::UdpSocket (*) (1 samples, 0.47%)</title><rect x="41.7062%" y="469" width="0.4739%" height="15" fill="rgb(107,217,217)" fg:x="88" fg:w="1"/><text x="41.9562%" y="479.50"></text></g><g><title>osrs_gph.exe`std::net::each_addr&lt;ref$&lt;str$&gt;,enum2$&lt;core::result::Result&lt;std::sys_common::net::UdpSocket,std::io::error::Error&gt; &gt; (*)(enum2$&lt;core::result::Result&lt;ref$&lt;enum2$&lt;core::net::socket_addr::SocketAddr&gt; &gt;,std::io::error::Error&gt; &gt;),std::sys_common::net::UdpSocket&gt;(ref$&lt;str$&gt;, enum2$&lt;core::result::Result&lt;std::sys_common::net::UdpSocket,std::io::error::Error&gt; &gt; (*)(enum2$&lt;core::result::Result&lt;ref$&lt;enum2$ (1 samples, 0.47%)</title><rect x="41.7062%" y="453" width="0.4739%" height="15" fill="rgb(93,204,204)" fg:x="88" fg:w="1"/><text x="41.9562%" y="463.50"></text></g><g><title>osrs_gph.exe`std::sys_common::net::UdpSocket::bind (1 samples, 0.47%)</title><rect x="41.7062%" y="437" width="0.4739%" height="15" fill="rgb(84,196,196)" fg:x="88" fg:w="1"/><text x="41.9562%" y="447.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::net::cvt (1 samples, 0.47%)</title><rect x="41.7062%" y="421" width="0.4739%" height="15" fill="rgb(64,178,178)" fg:x="88" fg:w="1"/><text x="41.9562%" y="431.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::net::impl$11::is_minus_one (1 samples, 0.47%)</title><rect x="41.7062%" y="405" width="0.4739%" height="15" fill="rgb(95,206,206)" fg:x="88" fg:w="1"/><text x="41.9562%" y="415.50"></text></g><g><title>`0x7FFE579C35F6 (1 samples, 0.47%)</title><rect x="41.7062%" y="389" width="0.4739%" height="15" fill="rgb(220,220,66)" fg:x="88" fg:w="1"/><text x="41.9562%" y="399.50"></text></g><g><title>`0x7FFE55B58E65 (1 samples, 0.47%)</title><rect x="41.7062%" y="373" width="0.4739%" height="15" fill="rgb(199,199,58)" fg:x="88" fg:w="1"/><text x="41.9562%" y="383.50"></text></g><g><title>`0x7FFE5944F454 (1 samples, 0.47%)</title><rect x="41.7062%" y="357" width="0.4739%" height="15" fill="rgb(220,220,66)" fg:x="88" fg:w="1"/><text x="41.9562%" y="367.50"></text></g><g><title>osrs_gph.exe`futures_util::future::future::map::impl$2::poll&lt;futures_util::future::try_future::into_future::IntoFuture&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt; &gt;,futures_util::fns::MapOkFn&lt;hyper::client::client::impl$3::connect_to::closure$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;futures_util::future::either::Either&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;enum2$&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::alloc::Global&gt; &gt;,futures_util::future::ready::Ready&lt;enum2$&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::error::Error&gt; &gt; &gt; &gt; &gt;,hyper::error::Error&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;futures_util::future::future::map::Map&lt;futures_util::future::try_future::into_future::IntoFuture&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt; &gt;,futures_util::fns::MapOkFn&lt;hyper::client::client::impl$3::connect_to::closure$0::closure_env$0 (9 samples, 4.27%)</title><rect x="38.3886%" y="837" width="4.2654%" height="15" fill="rgb(109,219,219)" fg:x="81" fg:w="9"/><text x="38.6386%" y="847.50">osrs_..</text></g><g><title>osrs_gph.exe`futures_util::fns::impl$12::call_once&lt;hyper::client::client::impl$3::connect_to::closure$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;,reqwest::connect::Conn,hyper::error::Error&gt;(futures_util::fns::MapOkFn&lt;hyper::client::client::impl$3::connect_to::closure$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;, enum2$&lt;core::result::Result (1 samples, 0.47%)</title><rect x="42.1801%" y="821" width="0.4739%" height="15" fill="rgb(59,173,173)" fg:x="89" fg:w="1"/><text x="42.4301%" y="831.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;reqwest::connect::Conn,hyper::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;reqwest::connect::Conn,hyper::error::Error&gt; &gt;, futures_util::fns::impl$12::call_once::closure_env$0&lt;hyper::client::client::impl$3::connect_to::closure$0::closure_env$0 (1 samples, 0.47%)</title><rect x="42.1801%" y="805" width="0.4739%" height="15" fill="rgb(77,190,190)" fg:x="89" fg:w="1"/><text x="42.4301%" y="815.50"></text></g><g><title>osrs_gph.exe`futures_util::fns::impl$0::call_once&lt;hyper::client::client::impl$3::connect_to::closure$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;,reqwest::connect::Conn,enum2$&lt;futures_util::future::either::Either&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;enum2$&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::alloc::Global&gt; &gt;,futures_util::future::ready::Ready&lt;enum2$&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::error::Error&gt; &gt; &gt; &gt; &gt; &gt;(hyper::client::client::impl$3::connect_to::closure$0::closure_env$0 (1 samples, 0.47%)</title><rect x="42.1801%" y="789" width="0.4739%" height="15" fill="rgb(73,186,186)" fg:x="89" fg:w="1"/><text x="42.4301%" y="799.50"></text></g><g><title>osrs_gph.exe`hyper::client::client::impl$3::connect_to::closure$0::closure$0(hyper::client::client::impl$3::connect_to::closure$0::closure_env$0 (1 samples, 0.47%)</title><rect x="42.1801%" y="773" width="0.4739%" height="15" fill="rgb(52,167,167)" fg:x="89" fg:w="1"/><text x="42.4301%" y="783.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::Harness&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;::poll&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;(tokio::runtime::task::harness::Harness&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt;,alloc::sync::Arc (12 samples, 5.69%)</title><rect x="37.4408%" y="1109" width="5.6872%" height="15" fill="rgb(85,197,197)" fg:x="79" fg:w="12"/><text x="37.6908%" y="1119.50">osrs_gp..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::Harness&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;::poll_inner (12 samples, 5.69%)</title><rect x="37.4408%" y="1093" width="5.6872%" height="15" fill="rgb(107,217,217)" fg:x="79" fg:w="12"/><text x="37.6908%" y="1103.50">osrs_gp..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::poll_future(tokio::runtime::task::core::Core&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt;,alloc::sync::Arc (12 samples, 5.69%)</title><rect x="37.4408%" y="1077" width="5.6872%" height="15" fill="rgb(75,188,188)" fg:x="79" fg:w="12"/><text x="37.6908%" y="1087.50">osrs_gp..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::core::Core&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt;::poll&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt; (12 samples, 5.69%)</title><rect x="37.4408%" y="1061" width="5.6872%" height="15" fill="rgb(109,219,219)" fg:x="79" fg:w="12"/><text x="37.6908%" y="1071.50">osrs_gp..</text></g><g><title>osrs_gph.exe`tokio::loom::std::unsafe_cell::UnsafeCell&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt; &gt; &gt; &gt;::with_mut(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt;,alloc::sync::Arc (12 samples, 5.69%)</title><rect x="37.4408%" y="1045" width="5.6872%" height="15" fill="rgb(67,180,180)" fg:x="79" fg:w="12"/><text x="37.6908%" y="1055.50">osrs_gp..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::core::impl$6::poll::closure$0(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0&lt;reqwest::async_impl::client::Pending&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt;, enum2$&lt;tokio::runtime::task::core::Stage&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0 (12 samples, 5.69%)</title><rect x="37.4408%" y="1029" width="5.6872%" height="15" fill="rgb(85,197,197)" fg:x="79" fg:w="12"/><text x="37.6908%" y="1039.50">osrs_gp..</text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (12 samples, 5.69%)</title><rect x="37.4408%" y="1013" width="5.6872%" height="15" fill="rgb(96,207,207)" fg:x="79" fg:w="12"/><text x="37.6908%" y="1023.50">osrs_gp..</text></g><g><title>osrs_gph.exe`reqwest::blocking::client::forward::async_fn$0&lt;reqwest::async_impl::client::Pending&gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;reqwest::blocking::client::forward::async_fn_env$0 (12 samples, 5.69%)</title><rect x="37.4408%" y="997" width="5.6872%" height="15" fill="rgb(91,203,203)" fg:x="79" fg:w="12"/><text x="37.6908%" y="1007.50">osrs_gp..</text></g><g><title>osrs_gph.exe`futures_util::future::poll_fn::impl$2::poll(core::pin::Pin&lt;ref_mut$&lt;futures_util::future::poll_fn::PollFn&lt;reqwest::blocking::client::forward::async_fn$0::closure_env$0 (12 samples, 5.69%)</title><rect x="37.4408%" y="981" width="5.6872%" height="15" fill="rgb(72,185,185)" fg:x="79" fg:w="12"/><text x="37.6908%" y="991.50">osrs_gp..</text></g><g><title>osrs_gph.exe`reqwest::blocking::client::forward::async_fn$0::closure$0(reqwest::blocking::client::forward::async_fn$0::closure_env$0 (12 samples, 5.69%)</title><rect x="37.4408%" y="965" width="5.6872%" height="15" fill="rgb(82,195,195)" fg:x="79" fg:w="12"/><text x="37.6908%" y="975.50">osrs_gp..</text></g><g><title>osrs_gph.exe`reqwest::async_impl::client::impl$13::poll(core::pin::Pin&lt;ref_mut$ (12 samples, 5.69%)</title><rect x="37.4408%" y="949" width="5.6872%" height="15" fill="rgb(64,178,178)" fg:x="79" fg:w="12"/><text x="37.6908%" y="959.50">osrs_gp..</text></g><g><title>osrs_gph.exe`hyper::client::client::impl$10::poll(core::pin::Pin&lt;ref_mut$ (12 samples, 5.69%)</title><rect x="37.4408%" y="933" width="5.6872%" height="15" fill="rgb(103,213,213)" fg:x="79" fg:w="12"/><text x="37.6908%" y="943.50">osrs_gp..</text></g><g><title>osrs_gph.exe`hyper::client::client::impl$3::retryably_send_request::async_fn$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::client::client::impl$3::retryably_send_request::async_fn_env$0 (12 samples, 5.69%)</title><rect x="37.4408%" y="917" width="5.6872%" height="15" fill="rgb(65,179,179)" fg:x="79" fg:w="12"/><text x="37.6908%" y="927.50">osrs_gp..</text></g><g><title>osrs_gph.exe`hyper::client::client::impl$3::send_request::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::client::client::impl$3::send_request::async_fn_env$0 (12 samples, 5.69%)</title><rect x="37.4408%" y="901" width="5.6872%" height="15" fill="rgb(100,211,211)" fg:x="79" fg:w="12"/><text x="37.6908%" y="911.50">osrs_gp..</text></g><g><title>osrs_gph.exe`hyper::client::client::impl$3::connection_for::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::client::client::impl$3::connection_for::async_fn_env$0 (12 samples, 5.69%)</title><rect x="37.4408%" y="885" width="5.6872%" height="15" fill="rgb(54,168,168)" fg:x="79" fg:w="12"/><text x="37.6908%" y="895.50">osrs_gp..</text></g><g><title>osrs_gph.exe`futures_util::future::select::impl$1::poll(core::pin::Pin&lt;ref_mut$&lt;futures_util::future::select::Select&lt;hyper::client::pool::Checkout&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::common::lazy::Lazy&lt;hyper::client::client::impl$3::connect_to::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;,enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::try_future::AndThen&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt;,enum2$&lt;futures_util::future::either::Either&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;enum2$&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::alloc::Global&gt; &gt;,futures_util::future::ready::Ready&lt;enum2$&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt; &gt;,hyper::error::Error&gt; &gt; &gt; &gt; &gt;,hyper::client::client::impl$3::connect_to::closure$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::ready::Ready&lt;enum2$&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient (11 samples, 5.21%)</title><rect x="37.9147%" y="869" width="5.2133%" height="15" fill="rgb(50,165,165)" fg:x="80" fg:w="11"/><text x="38.1647%" y="879.50">osrs_g..</text></g><g><title>osrs_gph.exe`futures_util::future::try_future::try_flatten::impl$2::poll&lt;futures_util::future::try_future::MapOk&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt;,hyper::client::client::impl$3::connect_to::closure$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;futures_util::future::try_future::MapOk&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error (*)(alloc::boxed::Box&lt;dyn$&lt;core::error::Error,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;)&gt;,hyper::client::client::impl$3::connect_to::closure$0::closure_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,enum2$&lt;futures_util::future::either::Either&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;enum2$&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::alloc::Global&gt; &gt;,futures_util::future::ready::Ready&lt;enum2$&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient (10 samples, 4.74%)</title><rect x="38.3886%" y="853" width="4.7393%" height="15" fill="rgb(83,195,195)" fg:x="81" fg:w="10"/><text x="38.6386%" y="863.50">osrs_g..</text></g><g><title>osrs_gph.exe`core::future::future::impl$1::poll&lt;alloc::boxed::Box&lt;enum2$&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block_env$0&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt; &gt;,alloc::alloc::Global&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;enum2$&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block_env$0 (1 samples, 0.47%)</title><rect x="42.6540%" y="837" width="0.4739%" height="15" fill="rgb(106,216,216)" fg:x="90" fg:w="1"/><text x="42.9040%" y="847.50"></text></g><g><title>osrs_gph.exe`hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::client::client::impl$3::connect_to::closure$0::closure$0::async_block_env$0 (1 samples, 0.47%)</title><rect x="42.6540%" y="821" width="0.4739%" height="15" fill="rgb(62,176,176)" fg:x="90" fg:w="1"/><text x="42.9040%" y="831.50"></text></g><g><title>osrs_gph.exe`hyper::client::conn::impl$11::handshake::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::client::conn::impl$11::handshake::async_block_env$0 (1 samples, 0.47%)</title><rect x="42.6540%" y="805" width="0.4739%" height="15" fill="rgb(97,208,208)" fg:x="90" fg:w="1"/><text x="42.9040%" y="815.50"></text></g><g><title>osrs_gph.exe`hyper::proto::h2::client::handshake::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::proto::h2::client::handshake::async_fn_env$0 (1 samples, 0.47%)</title><rect x="42.6540%" y="789" width="0.4739%" height="15" fill="rgb(106,217,217)" fg:x="90" fg:w="1"/><text x="42.9040%" y="799.50"></text></g><g><title>osrs_gph.exe`h2::client::impl$6::handshake2::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;h2::client::impl$6::handshake2::async_fn_env$0&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.47%)</title><rect x="42.6540%" y="773" width="0.4739%" height="15" fill="rgb(65,179,179)" fg:x="90" fg:w="1"/><text x="42.9040%" y="783.50"></text></g><g><title>osrs_gph.exe`h2::proto::connection::Connection&lt;reqwest::connect::Conn,h2::client::Peer,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt;::streams (1 samples, 0.47%)</title><rect x="42.6540%" y="757" width="0.4739%" height="15" fill="rgb(104,215,215)" fg:x="90" fg:w="1"/><text x="42.9040%" y="767.50"></text></g><g><title>osrs_gph.exe`h2::proto::connection::Connection&lt;reqwest::connect::Conn,h2::client::Peer,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt;::new&lt;reqwest::connect::Conn,h2::client::Peer,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt;(h2::codec::Codec&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.47%)</title><rect x="42.6540%" y="741" width="0.4739%" height="15" fill="rgb(70,183,183)" fg:x="90" fg:w="1"/><text x="42.9040%" y="751.50"></text></g><g><title>osrs_gph.exe`h2::proto::streams::streams::Streams&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt;,h2::client::Peer&gt;::new&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt;,h2::client::Peer&gt; (1 samples, 0.47%)</title><rect x="42.6540%" y="725" width="0.4739%" height="15" fill="rgb(76,189,189)" fg:x="90" fg:w="1"/><text x="42.9040%" y="735.50"></text></g><g><title>osrs_gph.exe`h2::proto::streams::streams::Inner::new (1 samples, 0.47%)</title><rect x="42.6540%" y="709" width="0.4739%" height="15" fill="rgb(101,212,212)" fg:x="90" fg:w="1"/><text x="42.9040%" y="719.50"></text></g><g><title>osrs_gph.exe`std::sync::mutex::Mutex&lt;h2::proto::streams::streams::Inner&gt;::lock (1 samples, 0.47%)</title><rect x="43.1280%" y="885" width="0.4739%" height="15" fill="rgb(75,188,188)" fg:x="91" fg:w="1"/><text x="43.3780%" y="895.50"></text></g><g><title>osrs_gph.exe`std::sync::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;::new(std::sync::mutex::Mutex (1 samples, 0.47%)</title><rect x="43.1280%" y="869" width="0.4739%" height="15" fill="rgb(73,186,186)" fg:x="91" fg:w="1"/><text x="43.3780%" y="879.50"></text></g><g><title>osrs_gph.exe`std::sync::poison::Flag::guard (1 samples, 0.47%)</title><rect x="43.1280%" y="853" width="0.4739%" height="15" fill="rgb(95,207,207)" fg:x="91" fg:w="1"/><text x="43.3780%" y="863.50"></text></g><g><title>osrs_gph.exe`std::thread::panicking (1 samples, 0.47%)</title><rect x="43.1280%" y="837" width="0.4739%" height="15" fill="rgb(69,182,182)" fg:x="91" fg:w="1"/><text x="43.3780%" y="847.50"></text></g><g><title>osrs_gph.exe`std::panicking::panicking (1 samples, 0.47%)</title><rect x="43.1280%" y="821" width="0.4739%" height="15" fill="rgb(66,180,180)" fg:x="91" fg:w="1"/><text x="43.3780%" y="831.50"></text></g><g><title>osrs_gph.exe`std::panicking::panic_count::count_is_zero (1 samples, 0.47%)</title><rect x="43.1280%" y="805" width="0.4739%" height="15" fill="rgb(71,184,184)" fg:x="91" fg:w="1"/><text x="43.3780%" y="815.50"></text></g><g><title>osrs_gph.exe`core::sync::atomic::AtomicUsize::load (1 samples, 0.47%)</title><rect x="43.1280%" y="789" width="0.4739%" height="15" fill="rgb(78,190,190)" fg:x="91" fg:w="1"/><text x="43.3780%" y="799.50"></text></g><g><title>osrs_gph.exe`core::sync::atomic::atomic_load (1 samples, 0.47%)</title><rect x="43.1280%" y="773" width="0.4739%" height="15" fill="rgb(50,165,165)" fg:x="91" fg:w="1"/><text x="43.3780%" y="783.50"></text></g><g><title>`0x7FFE593E7826 (1 samples, 0.47%)</title><rect x="43.1280%" y="757" width="0.4739%" height="15" fill="rgb(198,198,58)" fg:x="91" fg:w="1"/><text x="43.3780%" y="767.50"></text></g><g><title>osrs_gph.exe`h2::proto::streams::streams::Streams&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt;,h2::client::Peer&gt;::poll_complete&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt;,h2::client::Peer,reqwest::connect::Conn&gt;(core::task::wake::Context*, h2::codec::Codec&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (4 samples, 1.90%)</title><rect x="43.1280%" y="901" width="1.8957%" height="15" fill="rgb(79,191,191)" fg:x="91" fg:w="4"/><text x="43.3780%" y="911.50">o..</text></g><g><title>osrs_gph.exe`h2::proto::streams::streams::Inner::poll_complete(h2::proto::streams::streams::SendBuffer&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt;*, core::task::wake::Context*, h2::codec::Codec&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (3 samples, 1.42%)</title><rect x="43.6019%" y="885" width="1.4218%" height="15" fill="rgb(64,178,178)" fg:x="92" fg:w="3"/><text x="43.8519%" y="895.50"></text></g><g><title>osrs_gph.exe`h2::proto::streams::prioritize::Prioritize::poll_complete&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt;(core::task::wake::Context*, h2::proto::streams::buffer::Buffer&lt;enum2$&lt;h2::frame::Frame&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;*, h2::proto::streams::store::Store*, h2::proto::streams::counts::Counts*, h2::codec::Codec&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (3 samples, 1.42%)</title><rect x="43.6019%" y="869" width="1.4218%" height="15" fill="rgb(62,176,176)" fg:x="92" fg:w="3"/><text x="43.8519%" y="879.50"></text></g><g><title>osrs_gph.exe`h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt;::flush&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; (3 samples, 1.42%)</title><rect x="43.6019%" y="853" width="1.4218%" height="15" fill="rgb(55,169,169)" fg:x="92" fg:w="3"/><text x="43.8519%" y="863.50"></text></g><g><title>osrs_gph.exe`tokio_util::util::poll_buf::poll_write_buf&lt;reqwest::connect::Conn,std::io::cursor::Cursor&lt;bytes::bytes_mut::BytesMut&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;reqwest::connect::Conn&gt; &gt;, core::task::wake::Context*, std::io::cursor::Cursor (3 samples, 1.42%)</title><rect x="43.6019%" y="837" width="1.4218%" height="15" fill="rgb(103,213,213)" fg:x="92" fg:w="3"/><text x="43.8519%" y="847.50"></text></g><g><title>osrs_gph.exe`reqwest::connect::rustls_tls_conn::impl$2::poll_write&lt;tokio::net::tcp::stream::TcpStream&gt;(core::pin::Pin&lt;ref_mut$&lt;reqwest::connect::rustls_tls_conn::RustlsTlsConn&lt;tokio::net::tcp::stream::TcpStream&gt; &gt; &gt;, core::task::wake::Context*, ref$&lt;slice2$ (3 samples, 1.42%)</title><rect x="43.6019%" y="821" width="1.4218%" height="15" fill="rgb(87,199,199)" fg:x="92" fg:w="3"/><text x="43.8519%" y="831.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::common::impl$3::poll_write&lt;tokio::net::tcp::stream::TcpStream,rustls::client::client_conn::ClientConnection,rustls::client::client_conn::ClientConnectionData&gt;(core::pin::Pin&lt;ref_mut$&lt;tokio_rustls::common::Stream&lt;tokio::net::tcp::stream::TcpStream,rustls::client::client_conn::ClientConnection&gt; &gt; &gt;, core::task::wake::Context*, ref$&lt;slice2$ (3 samples, 1.42%)</title><rect x="43.6019%" y="805" width="1.4218%" height="15" fill="rgb(78,190,190)" fg:x="92" fg:w="3"/><text x="43.8519%" y="815.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::common::Stream&lt;tokio::net::tcp::stream::TcpStream,rustls::client::client_conn::ClientConnection&gt;::write_io (3 samples, 1.42%)</title><rect x="43.6019%" y="789" width="1.4218%" height="15" fill="rgb(71,185,185)" fg:x="92" fg:w="3"/><text x="43.8519%" y="799.50"></text></g><g><title>osrs_gph.exe`rustls::vecbuf::ChunkVecBuffer::write_to(ref_mut$&lt;dyn$ (3 samples, 1.42%)</title><rect x="43.6019%" y="773" width="1.4218%" height="15" fill="rgb(73,186,186)" fg:x="92" fg:w="3"/><text x="43.8519%" y="783.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (3 samples, 1.42%)</title><rect x="43.6019%" y="757" width="1.4218%" height="15" fill="rgb(51,165,165)" fg:x="92" fg:w="3"/><text x="43.8519%" y="767.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::common::impl$1::write_io::impl$1::write_vectored&lt;tokio::net::tcp::stream::TcpStream&gt;(tokio_rustls::common::impl$1::write_io::Writer&lt;tokio::net::tcp::stream::TcpStream&gt;*, ref$&lt;slice2$ (3 samples, 1.42%)</title><rect x="43.6019%" y="741" width="1.4218%" height="15" fill="rgb(108,218,218)" fg:x="92" fg:w="3"/><text x="43.8519%" y="751.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::common::impl$1::write_io::Writer&lt;tokio::net::tcp::stream::TcpStream&gt;::poll_with(tokio_rustls::common::impl$1::write_io::impl$1::write_vectored::closure_env$0 (3 samples, 1.42%)</title><rect x="43.6019%" y="725" width="1.4218%" height="15" fill="rgb(82,194,194)" fg:x="92" fg:w="3"/><text x="43.8519%" y="735.50"></text></g><g><title>osrs_gph.exe`tokio::net::tcp::stream::impl$3::poll_write_vectored(core::pin::Pin&lt;ref_mut$&lt;tokio::net::tcp::stream::TcpStream&gt; &gt;, core::task::wake::Context*, ref$&lt;slice2$ (3 samples, 1.42%)</title><rect x="43.6019%" y="709" width="1.4218%" height="15" fill="rgb(94,205,205)" fg:x="92" fg:w="3"/><text x="43.8519%" y="719.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::io::registration::Registration::poll_io&lt;usize,tokio::io::poll_evented::impl$6::poll_write_vectored::closure_env$0&lt;mio::net::tcp::stream::TcpStream&gt; &gt;(core::task::wake::Context*, tokio::runtime::io::driver::Direction, tokio::io::poll_evented::impl$6::poll_write_vectored::closure_env$0 (3 samples, 1.42%)</title><rect x="43.6019%" y="693" width="1.4218%" height="15" fill="rgb(62,176,176)" fg:x="92" fg:w="3"/><text x="43.8519%" y="703.50"></text></g><g><title>osrs_gph.exe`mio::net::tcp::stream::impl$4::write_vectored(mio::net::tcp::stream::TcpStream**, ref$&lt;slice2$ (3 samples, 1.42%)</title><rect x="43.6019%" y="677" width="1.4218%" height="15" fill="rgb(105,216,216)" fg:x="92" fg:w="3"/><text x="43.8519%" y="687.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::IoSourceState::do_io&lt;std::net::tcp::TcpStream,mio::net::tcp::stream::impl$3::write_vectored::closure_env$0,usize&gt; (3 samples, 1.42%)</title><rect x="43.6019%" y="661" width="1.4218%" height="15" fill="rgb(87,199,199)" fg:x="92" fg:w="3"/><text x="43.8519%" y="671.50"></text></g><g><title>osrs_gph.exe`std::net::tcp::impl$4::write_vectored (3 samples, 1.42%)</title><rect x="43.6019%" y="645" width="1.4218%" height="15" fill="rgb(72,185,185)" fg:x="92" fg:w="3"/><text x="43.8519%" y="655.50"></text></g><g><title>osrs_gph.exe`std::sys_common::net::TcpStream::write_vectored (3 samples, 1.42%)</title><rect x="43.6019%" y="629" width="1.4218%" height="15" fill="rgb(55,169,169)" fg:x="92" fg:w="3"/><text x="43.8519%" y="639.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::net::Socket::write_vectored (3 samples, 1.42%)</title><rect x="43.6019%" y="613" width="1.4218%" height="15" fill="rgb(73,186,186)" fg:x="92" fg:w="3"/><text x="43.8519%" y="623.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::net::cvt (3 samples, 1.42%)</title><rect x="43.6019%" y="597" width="1.4218%" height="15" fill="rgb(53,168,168)" fg:x="92" fg:w="3"/><text x="43.8519%" y="607.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::net::impl$11::is_minus_one (3 samples, 1.42%)</title><rect x="43.6019%" y="581" width="1.4218%" height="15" fill="rgb(67,181,181)" fg:x="92" fg:w="3"/><text x="43.8519%" y="591.50"></text></g><g><title>`0x7FFE579B282F (3 samples, 1.42%)</title><rect x="43.6019%" y="565" width="1.4218%" height="15" fill="rgb(184,184,53)" fg:x="92" fg:w="3"/><text x="43.8519%" y="575.50"></text></g><g><title>`0x7FFE55B522BA (3 samples, 1.42%)</title><rect x="43.6019%" y="549" width="1.4218%" height="15" fill="rgb(212,212,63)" fg:x="92" fg:w="3"/><text x="43.8519%" y="559.50"></text></g><g><title>`0x7FFE5944F454 (3 samples, 1.42%)</title><rect x="43.6019%" y="533" width="1.4218%" height="15" fill="rgb(197,197,58)" fg:x="92" fg:w="3"/><text x="43.8519%" y="543.50"></text></g><g><title>osrs_gph.exe`h2::proto::connection::DynConnection&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt;::recv_frame(enum2$&lt;core::option::Option&lt;enum2$&lt;h2::frame::Frame (1 samples, 0.47%)</title><rect x="45.0237%" y="885" width="0.4739%" height="15" fill="rgb(79,192,192)" fg:x="95" fg:w="1"/><text x="45.2737%" y="895.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$ (1 samples, 0.47%)</title><rect x="45.0237%" y="869" width="0.4739%" height="15" fill="rgb(85,197,197)" fg:x="95" fg:w="1"/><text x="45.2737%" y="879.50"></text></g><g><title>osrs_gph.exe`h2::proto::streams::streams::DynStreams&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt;::recv_headers&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; (1 samples, 0.47%)</title><rect x="45.0237%" y="853" width="0.4739%" height="15" fill="rgb(76,189,189)" fg:x="95" fg:w="1"/><text x="45.2737%" y="863.50"></text></g><g><title>osrs_gph.exe`h2::proto::streams::streams::Inner::recv_headers(h2::proto::peer::Dyn, h2::proto::streams::streams::SendBuffer&lt;enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.47%)</title><rect x="45.0237%" y="837" width="0.4739%" height="15" fill="rgb(57,172,172)" fg:x="95" fg:w="1"/><text x="45.2737%" y="847.50"></text></g><g><title>osrs_gph.exe`h2::proto::streams::counts::Counts::transition(h2::proto::streams::store::Ptr, h2::proto::streams::streams::impl$2::recv_headers::closure_env$0&lt;enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.47%)</title><rect x="45.0237%" y="821" width="0.4739%" height="15" fill="rgb(67,181,181)" fg:x="95" fg:w="1"/><text x="45.2737%" y="831.50"></text></g><g><title>osrs_gph.exe`h2::proto::streams::streams::impl$2::recv_headers::closure$0(h2::proto::streams::streams::impl$2::recv_headers::closure_env$0&lt;enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.47%)</title><rect x="45.0237%" y="805" width="0.4739%" height="15" fill="rgb(52,167,167)" fg:x="95" fg:w="1"/><text x="45.2737%" y="815.50"></text></g><g><title>osrs_gph.exe`h2::proto::streams::recv::Recv::recv_headers (1 samples, 0.47%)</title><rect x="45.0237%" y="789" width="0.4739%" height="15" fill="rgb(103,213,213)" fg:x="95" fg:w="1"/><text x="45.2737%" y="799.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;bool,enum2$ (1 samples, 0.47%)</title><rect x="45.0237%" y="773" width="0.4739%" height="15" fill="rgb(89,201,201)" fg:x="95" fg:w="1"/><text x="45.2737%" y="783.50"></text></g><g><title>osrs_gph.exe`h2::proto::streams::state::State::recv_open (1 samples, 0.47%)</title><rect x="45.0237%" y="757" width="0.4739%" height="15" fill="rgb(52,167,167)" fg:x="95" fg:w="1"/><text x="45.2737%" y="767.50"></text></g><g><title>osrs_gph.exe`rustls::msgs::deframer::MessageDeframer::read(ref_mut$&lt;dyn$ (1 samples, 0.47%)</title><rect x="45.4976%" y="709" width="0.4739%" height="15" fill="rgb(105,215,215)" fg:x="96" fg:w="1"/><text x="45.7476%" y="719.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (1 samples, 0.47%)</title><rect x="45.4976%" y="693" width="0.4739%" height="15" fill="rgb(109,219,219)" fg:x="96" fg:w="1"/><text x="45.7476%" y="703.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::common::impl$4::read&lt;tokio::net::tcp::stream::TcpStream&gt;(tokio_rustls::common::SyncReadAdapter&lt;tokio::net::tcp::stream::TcpStream&gt;*, ref_mut$&lt;slice2$ (1 samples, 0.47%)</title><rect x="45.4976%" y="677" width="0.4739%" height="15" fill="rgb(74,187,187)" fg:x="96" fg:w="1"/><text x="45.7476%" y="687.50"></text></g><g><title>osrs_gph.exe`tokio::net::tcp::stream::TcpStream::poll_read_priv (1 samples, 0.47%)</title><rect x="45.4976%" y="661" width="0.4739%" height="15" fill="rgb(52,167,167)" fg:x="96" fg:w="1"/><text x="45.7476%" y="671.50"></text></g><g><title>osrs_gph.exe`tokio::io::poll_evented::PollEvented&lt;mio::net::tcp::stream::TcpStream&gt;::poll_read (1 samples, 0.47%)</title><rect x="45.4976%" y="645" width="0.4739%" height="15" fill="rgb(105,215,215)" fg:x="96" fg:w="1"/><text x="45.7476%" y="655.50"></text></g><g><title>osrs_gph.exe`mio::net::tcp::stream::impl$2::read(mio::net::tcp::stream::TcpStream**, ref_mut$&lt;slice2$ (1 samples, 0.47%)</title><rect x="45.4976%" y="629" width="0.4739%" height="15" fill="rgb(89,201,201)" fg:x="96" fg:w="1"/><text x="45.7476%" y="639.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::IoSourceState::do_io&lt;std::net::tcp::TcpStream,mio::net::tcp::stream::impl$2::read::closure_env$0,usize&gt; (1 samples, 0.47%)</title><rect x="45.4976%" y="613" width="0.4739%" height="15" fill="rgb(93,205,205)" fg:x="96" fg:w="1"/><text x="45.7476%" y="623.50"></text></g><g><title>osrs_gph.exe`std::net::tcp::impl$3::read (1 samples, 0.47%)</title><rect x="45.4976%" y="597" width="0.4739%" height="15" fill="rgb(83,195,195)" fg:x="96" fg:w="1"/><text x="45.7476%" y="607.50"></text></g><g><title>osrs_gph.exe`std::sys_common::net::TcpStream::read (1 samples, 0.47%)</title><rect x="45.4976%" y="581" width="0.4739%" height="15" fill="rgb(70,183,183)" fg:x="96" fg:w="1"/><text x="45.7476%" y="591.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::net::Socket::read (1 samples, 0.47%)</title><rect x="45.4976%" y="565" width="0.4739%" height="15" fill="rgb(98,209,209)" fg:x="96" fg:w="1"/><text x="45.7476%" y="575.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::net::Socket::recv_with_flags (1 samples, 0.47%)</title><rect x="45.4976%" y="549" width="0.4739%" height="15" fill="rgb(81,193,193)" fg:x="96" fg:w="1"/><text x="45.7476%" y="559.50"></text></g><g><title>`0x7FFE579C2417 (1 samples, 0.47%)</title><rect x="45.4976%" y="533" width="0.4739%" height="15" fill="rgb(221,221,66)" fg:x="96" fg:w="1"/><text x="45.7476%" y="543.50"></text></g><g><title>`0x7FFE55B55945 (1 samples, 0.47%)</title><rect x="45.4976%" y="517" width="0.4739%" height="15" fill="rgb(222,222,67)" fg:x="96" fg:w="1"/><text x="45.7476%" y="527.50"></text></g><g><title>`0x7FFE5944F454 (1 samples, 0.47%)</title><rect x="45.4976%" y="501" width="0.4739%" height="15" fill="rgb(193,193,56)" fg:x="96" fg:w="1"/><text x="45.7476%" y="511.50"></text></g><g><title>osrs_gph.exe`rustls::conn::ConnectionCommon&lt;rustls::client::client_conn::ClientConnectionData&gt;::read_tls(ref_mut$&lt;dyn$ (2 samples, 0.95%)</title><rect x="45.4976%" y="725" width="0.9479%" height="15" fill="rgb(55,170,170)" fg:x="96" fg:w="2"/><text x="45.7476%" y="735.50"></text></g><g><title>osrs_gph.exe`rustls::msgs::base::Payload::read (1 samples, 0.47%)</title><rect x="46.4455%" y="645" width="0.4739%" height="15" fill="rgb(108,218,218)" fg:x="98" fg:w="1"/><text x="46.6955%" y="655.50"></text></g><g><title>osrs_gph.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="46.4455%" y="629" width="0.4739%" height="15" fill="rgb(61,175,175)" fg:x="98" fg:w="1"/><text x="46.6955%" y="639.50"></text></g><g><title>osrs_gph.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="46.4455%" y="613" width="0.4739%" height="15" fill="rgb(58,173,173)" fg:x="98" fg:w="1"/><text x="46.6955%" y="623.50"></text></g><g><title>osrs_gph.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="46.4455%" y="597" width="0.4739%" height="15" fill="rgb(52,166,166)" fg:x="98" fg:w="1"/><text x="46.6955%" y="607.50"></text></g><g><title>osrs_gph.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="46.4455%" y="581" width="0.4739%" height="15" fill="rgb(56,170,170)" fg:x="98" fg:w="1"/><text x="46.6955%" y="591.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.47%)</title><rect x="46.4455%" y="565" width="0.4739%" height="15" fill="rgb(98,209,209)" fg:x="98" fg:w="1"/><text x="46.6955%" y="575.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.47%)</title><rect x="46.4455%" y="549" width="0.4739%" height="15" fill="rgb(95,206,206)" fg:x="98" fg:w="1"/><text x="46.6955%" y="559.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::allocate_in (1 samples, 0.47%)</title><rect x="46.4455%" y="533" width="0.4739%" height="15" fill="rgb(100,210,210)" fg:x="98" fg:w="1"/><text x="46.6955%" y="543.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::impl$1::allocate (1 samples, 0.47%)</title><rect x="46.4455%" y="517" width="0.4739%" height="15" fill="rgb(85,197,197)" fg:x="98" fg:w="1"/><text x="46.6955%" y="527.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.47%)</title><rect x="46.4455%" y="501" width="0.4739%" height="15" fill="rgb(109,219,219)" fg:x="98" fg:w="1"/><text x="46.6955%" y="511.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::alloc (1 samples, 0.47%)</title><rect x="46.4455%" y="485" width="0.4739%" height="15" fill="rgb(78,191,191)" fg:x="98" fg:w="1"/><text x="46.6955%" y="495.50"></text></g><g><title>`0x7FFE593ECD59 (1 samples, 0.47%)</title><rect x="46.4455%" y="469" width="0.4739%" height="15" fill="rgb(184,184,53)" fg:x="98" fg:w="1"/><text x="46.6955%" y="479.50"></text></g><g><title>`0x7FFE593EF738 (1 samples, 0.47%)</title><rect x="46.4455%" y="453" width="0.4739%" height="15" fill="rgb(200,200,59)" fg:x="98" fg:w="1"/><text x="46.6955%" y="463.50"></text></g><g><title>`0x7FFE593F57DB (1 samples, 0.47%)</title><rect x="46.4455%" y="437" width="0.4739%" height="15" fill="rgb(197,197,58)" fg:x="98" fg:w="1"/><text x="46.6955%" y="447.50"></text></g><g><title>`0x7FFE593F5C25 (1 samples, 0.47%)</title><rect x="46.4455%" y="421" width="0.4739%" height="15" fill="rgb(225,225,68)" fg:x="98" fg:w="1"/><text x="46.6955%" y="431.50"></text></g><g><title>`0x7FFE593F5D75 (1 samples, 0.47%)</title><rect x="46.4455%" y="405" width="0.4739%" height="15" fill="rgb(177,177,50)" fg:x="98" fg:w="1"/><text x="46.6955%" y="415.50"></text></g><g><title>osrs_gph.exe`rustls::msgs::message::OpaqueMessage::read (3 samples, 1.42%)</title><rect x="46.4455%" y="661" width="1.4218%" height="15" fill="rgb(95,206,206)" fg:x="98" fg:w="3"/><text x="46.6955%" y="671.50"></text></g><g><title>osrs_gph.exe`tokio_rustls::common::Stream&lt;tokio::net::tcp::stream::TcpStream,rustls::client::client_conn::ClientConnection&gt;::read_io&lt;tokio::net::tcp::stream::TcpStream,rustls::client::client_conn::ClientConnection,rustls::client::client_conn::ClientConnectionData&gt; (6 samples, 2.84%)</title><rect x="45.4976%" y="741" width="2.8436%" height="15" fill="rgb(74,187,187)" fg:x="96" fg:w="6"/><text x="45.7476%" y="751.50">os..</text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;rustls::common_state::IoState,enum2$&lt;rustls::error::Error&gt; &gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;rustls::common_state::IoState,enum2$&lt;rustls::error::Error&gt; &gt; &gt;, tokio_rustls::common::impl$1::read_io::closure_env$0 (4 samples, 1.90%)</title><rect x="46.4455%" y="725" width="1.8957%" height="15" fill="rgb(104,215,215)" fg:x="98" fg:w="4"/><text x="46.6955%" y="735.50">o..</text></g><g><title>osrs_gph.exe`rustls::conn::ConnectionCore&lt;rustls::client::client_conn::ClientConnectionData&gt;::process_new_packets&lt;rustls::client::client_conn::ClientConnectionData&gt; (4 samples, 1.90%)</title><rect x="46.4455%" y="709" width="1.8957%" height="15" fill="rgb(51,166,166)" fg:x="98" fg:w="4"/><text x="46.6955%" y="719.50">o..</text></g><g><title>osrs_gph.exe`rustls::conn::ConnectionCore&lt;rustls::client::client_conn::ClientConnectionData&gt;::deframe(enum2$&lt;core::option::Option&lt;ref$&lt;dyn$&lt;rustls::common_state::State (4 samples, 1.90%)</title><rect x="46.4455%" y="693" width="1.8957%" height="15" fill="rgb(108,218,218)" fg:x="98" fg:w="4"/><text x="46.6955%" y="703.50">o..</text></g><g><title>osrs_gph.exe`rustls::msgs::deframer::MessageDeframer::pop (4 samples, 1.90%)</title><rect x="46.4455%" y="677" width="1.8957%" height="15" fill="rgb(83,195,195)" fg:x="98" fg:w="4"/><text x="46.6955%" y="687.50">o..</text></g><g><title>osrs_gph.exe`rustls::conn::impl$3::read(rustls::conn::Reader*, ref_mut$&lt;slice2$ (1 samples, 0.47%)</title><rect x="48.3412%" y="741" width="0.4739%" height="15" fill="rgb(76,189,189)" fg:x="102" fg:w="1"/><text x="48.5912%" y="751.50"></text></g><g><title>osrs_gph.exe`rustls::vecbuf::ChunkVecBuffer::read(ref_mut$&lt;slice2$ (1 samples, 0.47%)</title><rect x="48.3412%" y="725" width="0.4739%" height="15" fill="rgb(50,165,165)" fg:x="102" fg:w="1"/><text x="48.5912%" y="735.50"></text></g><g><title>`0x7FFE593EAB11 (1 samples, 0.47%)</title><rect x="48.3412%" y="709" width="0.4739%" height="15" fill="rgb(214,214,64)" fg:x="102" fg:w="1"/><text x="48.5912%" y="719.50"></text></g><g><title>`0x7FFE593EBE44 (1 samples, 0.47%)</title><rect x="48.3412%" y="693" width="0.4739%" height="15" fill="rgb(225,225,68)" fg:x="102" fg:w="1"/><text x="48.5912%" y="703.50"></text></g><g><title>`0x7FFE593E9110 (1 samples, 0.47%)</title><rect x="48.3412%" y="677" width="0.4739%" height="15" fill="rgb(179,179,51)" fg:x="102" fg:w="1"/><text x="48.5912%" y="687.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::Context::run_task(tokio::runtime::scheduler::current_thread::Core*, tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$1&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (26 samples, 12.32%)</title><rect x="36.9668%" y="1205" width="12.3223%" height="15" fill="rgb(92,204,204)" fg:x="78" fg:w="26"/><text x="37.2168%" y="1215.50">osrs_gph.exe`tokio..</text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::Context::enter(tokio::runtime::scheduler::current_thread::Core*, tokio::runtime::scheduler::current_thread::impl$3::run_task::closure_env$0&lt;tuple$&lt;&gt;,tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$1&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (26 samples, 12.32%)</title><rect x="36.9668%" y="1189" width="12.3223%" height="15" fill="rgb(78,191,191)" fg:x="78" fg:w="26"/><text x="37.2168%" y="1199.50">osrs_gph.exe`tokio..</text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::impl$3::run_task::closure$0(tokio::runtime::scheduler::current_thread::impl$3::run_task::closure_env$0&lt;tuple$&lt;&gt;,tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$1&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (26 samples, 12.32%)</title><rect x="36.9668%" y="1173" width="12.3223%" height="15" fill="rgb(56,170,170)" fg:x="78" fg:w="26"/><text x="37.2168%" y="1183.50">osrs_gph.exe`tokio..</text></g><g><title>osrs_gph.exe`tokio::runtime::coop::budget(tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$1&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (26 samples, 12.32%)</title><rect x="36.9668%" y="1157" width="12.3223%" height="15" fill="rgb(62,176,176)" fg:x="78" fg:w="26"/><text x="37.2168%" y="1167.50">osrs_gph.exe`tokio..</text></g><g><title>osrs_gph.exe`tokio::runtime::coop::with_budget(tokio::runtime::coop::Budget, tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$1&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (26 samples, 12.32%)</title><rect x="36.9668%" y="1141" width="12.3223%" height="15" fill="rgb(59,173,173)" fg:x="78" fg:w="26"/><text x="37.2168%" y="1151.50">osrs_gph.exe`tokio..</text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$&lt;core::result::Result (26 samples, 12.32%)</title><rect x="36.9668%" y="1125" width="12.3223%" height="15" fill="rgb(82,194,194)" fg:x="78" fg:w="26"/><text x="37.2168%" y="1135.50">osrs_gph.exe`core:..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::Harness&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;::poll&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;(tokio::runtime::task::harness::Harness&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc (13 samples, 6.16%)</title><rect x="43.1280%" y="1109" width="6.1611%" height="15" fill="rgb(106,217,217)" fg:x="91" fg:w="13"/><text x="43.3780%" y="1119.50">osrs_gph..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::Harness&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;::poll_inner (13 samples, 6.16%)</title><rect x="43.1280%" y="1093" width="6.1611%" height="15" fill="rgb(51,166,166)" fg:x="91" fg:w="13"/><text x="43.3780%" y="1103.50">osrs_gph..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::poll_future(tokio::runtime::task::core::Core&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc (13 samples, 6.16%)</title><rect x="43.1280%" y="1077" width="6.1611%" height="15" fill="rgb(72,185,185)" fg:x="91" fg:w="13"/><text x="43.3780%" y="1087.50">osrs_gph..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::core::Core&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt;::poll&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt; (13 samples, 6.16%)</title><rect x="43.1280%" y="1061" width="6.1611%" height="15" fill="rgb(89,201,201)" fg:x="91" fg:w="13"/><text x="43.3780%" y="1071.50">osrs_gph..</text></g><g><title>osrs_gph.exe`tokio::loom::std::unsafe_cell::UnsafeCell&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt; &gt; &gt; &gt;::with_mut(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc (13 samples, 6.16%)</title><rect x="43.1280%" y="1045" width="6.1611%" height="15" fill="rgb(91,203,203)" fg:x="91" fg:w="13"/><text x="43.3780%" y="1055.50">osrs_gph..</text></g><g><title>osrs_gph.exe`tokio::runtime::task::core::impl$6::poll::closure$0(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt;, enum2$&lt;tokio::runtime::task::core::Stage&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (13 samples, 6.16%)</title><rect x="43.1280%" y="1029" width="6.1611%" height="15" fill="rgb(58,173,173)" fg:x="91" fg:w="13"/><text x="43.3780%" y="1039.50">osrs_gph..</text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (13 samples, 6.16%)</title><rect x="43.1280%" y="1013" width="6.1611%" height="15" fill="rgb(75,188,188)" fg:x="91" fg:w="13"/><text x="43.3780%" y="1023.50">osrs_gph..</text></g><g><title>osrs_gph.exe`hyper::proto::h2::client::conn_task::async_fn$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (13 samples, 6.16%)</title><rect x="43.1280%" y="997" width="6.1611%" height="15" fill="rgb(68,181,181)" fg:x="91" fg:w="13"/><text x="43.3780%" y="1007.50">osrs_gph..</text></g><g><title>osrs_gph.exe`futures_util::future::select::impl$1::poll&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;futures_util::future::select::Select&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (13 samples, 6.16%)</title><rect x="43.1280%" y="981" width="6.1611%" height="15" fill="rgb(90,202,202)" fg:x="91" fg:w="13"/><text x="43.3780%" y="991.50">osrs_gph..</text></g><g><title>osrs_gph.exe`futures_util::future::future::map::impl$2::poll&lt;futures_util::future::try_future::into_future::IntoFuture&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt; &gt;,futures_util::fns::MapErrFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;futures_util::future::future::map::Map&lt;futures_util::future::try_future::into_future::IntoFuture&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt; &gt;,futures_util::fns::MapErrFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$2 (13 samples, 6.16%)</title><rect x="43.1280%" y="965" width="6.1611%" height="15" fill="rgb(98,209,209)" fg:x="91" fg:w="13"/><text x="43.3780%" y="975.50">osrs_gph..</text></g><g><title>osrs_gph.exe`h2::client::impl$7::poll&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf (13 samples, 6.16%)</title><rect x="43.1280%" y="949" width="6.1611%" height="15" fill="rgb(96,207,207)" fg:x="91" fg:w="13"/><text x="43.3780%" y="959.50">osrs_gph..</text></g><g><title>osrs_gph.exe`enum2$&lt;core::task::poll::Poll&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;h2::proto::error::Error&gt; &gt; &gt; &gt; &gt;::map_err(enum2$&lt;core::task::poll::Poll&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;h2::proto::error::Error&gt; &gt; &gt; &gt; &gt;, h2::error::Error (*)(enum2$ (13 samples, 6.16%)</title><rect x="43.1280%" y="933" width="6.1611%" height="15" fill="rgb(96,207,207)" fg:x="91" fg:w="13"/><text x="43.3780%" y="943.50">osrs_gph..</text></g><g><title>osrs_gph.exe`h2::proto::connection::Connection&lt;reqwest::connect::Conn,h2::client::Peer,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt;::poll&lt;reqwest::connect::Conn,h2::client::Peer,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; (13 samples, 6.16%)</title><rect x="43.1280%" y="917" width="6.1611%" height="15" fill="rgb(61,175,175)" fg:x="91" fg:w="13"/><text x="43.3780%" y="927.50">osrs_gph..</text></g><g><title>osrs_gph.exe`h2::proto::connection::Connection&lt;reqwest::connect::Conn,h2::client::Peer,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt;::poll2 (9 samples, 4.27%)</title><rect x="45.0237%" y="901" width="4.2654%" height="15" fill="rgb(96,207,207)" fg:x="95" fg:w="9"/><text x="45.2737%" y="911.50">osrs_..</text></g><g><title>osrs_gph.exe`core::task::poll::impl$6::branch(enum2$&lt;core::task::poll::Poll&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;h2::frame::Frame&lt;bytes::bytes::Bytes&gt; &gt;,enum2$ (8 samples, 3.79%)</title><rect x="45.4976%" y="885" width="3.7915%" height="15" fill="rgb(77,190,190)" fg:x="96" fg:w="8"/><text x="45.7476%" y="895.50">osrs..</text></g><g><title>osrs_gph.exe`h2::codec::framed_read::impl$1::poll_next&lt;h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;h2::codec::framed_read::FramedRead&lt;h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (8 samples, 3.79%)</title><rect x="45.4976%" y="869" width="3.7915%" height="15" fill="rgb(97,208,208)" fg:x="96" fg:w="8"/><text x="45.7476%" y="879.50">osrs..</text></g><g><title>osrs_gph.exe`tokio_util::codec::framed_impl::impl$8::poll_next&lt;h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt;,tokio_util::codec::length_delimited::LengthDelimitedCodec,tokio_util::codec::framed_impl::ReadFrame&gt;(core::pin::Pin&lt;ref_mut$&lt;tokio_util::codec::framed_impl::FramedImpl&lt;h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (8 samples, 3.79%)</title><rect x="45.4976%" y="853" width="3.7915%" height="15" fill="rgb(69,183,183)" fg:x="96" fg:w="8"/><text x="45.7476%" y="863.50">osrs..</text></g><g><title>osrs_gph.exe`enum2$&lt;core::task::poll::Poll&lt;enum2$&lt;core::result::Result&lt;usize,std::io::error::Error&gt; &gt; &gt; &gt;::map_err(enum2$&lt;core::task::poll::Poll&lt;enum2$&lt;core::result::Result&lt;usize,std::io::error::Error&gt; &gt; &gt; &gt;, tokio_util::codec::framed_impl::impl$8::poll_next::closure_env$2&lt;h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (8 samples, 3.79%)</title><rect x="45.4976%" y="837" width="3.7915%" height="15" fill="rgb(67,181,181)" fg:x="96" fg:w="8"/><text x="45.7476%" y="847.50">osrs..</text></g><g><title>osrs_gph.exe`tokio_util::util::poll_buf::poll_read_buf&lt;h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt;,bytes::bytes_mut::BytesMut&gt;(core::pin::Pin&lt;ref_mut$&lt;h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (8 samples, 3.79%)</title><rect x="45.4976%" y="821" width="3.7915%" height="15" fill="rgb(109,219,219)" fg:x="96" fg:w="8"/><text x="45.7476%" y="831.50">osrs..</text></g><g><title>osrs_gph.exe`core::task::poll::impl$4::branch(enum2$&lt;core::task::poll::Poll&lt;enum2$&lt;core::result::Result&lt;tuple$ (8 samples, 3.79%)</title><rect x="45.4976%" y="805" width="3.7915%" height="15" fill="rgb(86,198,198)" fg:x="96" fg:w="8"/><text x="45.7476%" y="815.50">osrs..</text></g><g><title>osrs_gph.exe`reqwest::connect::rustls_tls_conn::impl$1::poll_read&lt;tokio::net::tcp::stream::TcpStream&gt;(core::pin::Pin&lt;ref_mut$&lt;reqwest::connect::rustls_tls_conn::RustlsTlsConn (8 samples, 3.79%)</title><rect x="45.4976%" y="789" width="3.7915%" height="15" fill="rgb(75,188,188)" fg:x="96" fg:w="8"/><text x="45.7476%" y="799.50">osrs..</text></g><g><title>osrs_gph.exe`tokio_rustls::client::impl$3::poll_read(core::pin::Pin&lt;ref_mut$&lt;tokio_rustls::client::TlsStream (8 samples, 3.79%)</title><rect x="45.4976%" y="773" width="3.7915%" height="15" fill="rgb(71,184,184)" fg:x="96" fg:w="8"/><text x="45.7476%" y="783.50">osrs..</text></g><g><title>osrs_gph.exe`tokio_rustls::common::impl$2::poll_read&lt;tokio::net::tcp::stream::TcpStream,rustls::client::client_conn::ClientConnection,rustls::client::client_conn::ClientConnectionData&gt;(core::pin::Pin&lt;ref_mut$&lt;tokio_rustls::common::Stream (8 samples, 3.79%)</title><rect x="45.4976%" y="757" width="3.7915%" height="15" fill="rgb(96,207,207)" fg:x="96" fg:w="8"/><text x="45.7476%" y="767.50">osrs..</text></g><g><title>osrs_gph.exe`rustls::conn::ConnectionCommon&lt;rustls::client::client_conn::ClientConnectionData&gt;::reader (1 samples, 0.47%)</title><rect x="48.8152%" y="741" width="0.4739%" height="15" fill="rgb(99,210,210)" fg:x="103" fg:w="1"/><text x="49.0652%" y="751.50"></text></g><g><title>osrs_gph.exe`tokio::io::read_buf::ReadBuf::initialize_unfilled_to (1 samples, 0.47%)</title><rect x="48.8152%" y="725" width="0.4739%" height="15" fill="rgb(78,190,190)" fg:x="103" fg:w="1"/><text x="49.0652%" y="735.50"></text></g><g><title>`0x7FFE37DA1B0B (1 samples, 0.47%)</title><rect x="48.8152%" y="709" width="0.4739%" height="15" fill="rgb(205,205,61)" fg:x="103" fg:w="1"/><text x="49.0652%" y="719.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::time::handle::Handle::process (1 samples, 0.47%)</title><rect x="49.2891%" y="1093" width="0.4739%" height="15" fill="rgb(80,192,192)" fg:x="104" fg:w="1"/><text x="49.5391%" y="1103.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::time::source::TimeSource::now (1 samples, 0.47%)</title><rect x="49.2891%" y="1077" width="0.4739%" height="15" fill="rgb(82,194,194)" fg:x="104" fg:w="1"/><text x="49.5391%" y="1087.50"></text></g><g><title>osrs_gph.exe`std::time::Instant::now (1 samples, 0.47%)</title><rect x="49.2891%" y="1061" width="0.4739%" height="15" fill="rgb(96,208,208)" fg:x="104" fg:w="1"/><text x="49.5391%" y="1071.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::time::Instant::now (1 samples, 0.47%)</title><rect x="49.2891%" y="1045" width="0.4739%" height="15" fill="rgb(74,187,187)" fg:x="104" fg:w="1"/><text x="49.5391%" y="1055.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::time::perf_counter::PerformanceCounterInstant::now (1 samples, 0.47%)</title><rect x="49.2891%" y="1029" width="0.4739%" height="15" fill="rgb(52,167,167)" fg:x="104" fg:w="1"/><text x="49.5391%" y="1039.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::time::perf_counter::query (1 samples, 0.47%)</title><rect x="49.2891%" y="1013" width="0.4739%" height="15" fill="rgb(77,190,190)" fg:x="104" fg:w="1"/><text x="49.5391%" y="1023.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::cvt (1 samples, 0.47%)</title><rect x="49.2891%" y="997" width="0.4739%" height="15" fill="rgb(99,210,210)" fg:x="104" fg:w="1"/><text x="49.5391%" y="1007.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::impl$3::is_zero (1 samples, 0.47%)</title><rect x="49.2891%" y="981" width="0.4739%" height="15" fill="rgb(84,196,196)" fg:x="104" fg:w="1"/><text x="49.5391%" y="991.50"></text></g><g><title>`0x7FFE593C04C0 (1 samples, 0.47%)</title><rect x="49.2891%" y="965" width="0.4739%" height="15" fill="rgb(211,211,63)" fg:x="104" fg:w="1"/><text x="49.5391%" y="975.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::event::Events::clear (1 samples, 0.47%)</title><rect x="49.7630%" y="981" width="0.4739%" height="15" fill="rgb(96,207,207)" fg:x="105" fg:w="1"/><text x="50.0130%" y="991.50"></text></g><g><title>osrs_gph.exe`core::sync::atomic::AtomicBool::store (6 samples, 2.84%)</title><rect x="50.2370%" y="949" width="2.8436%" height="15" fill="rgb(67,181,181)" fg:x="106" fg:w="6"/><text x="50.4870%" y="959.50">os..</text></g><g><title>osrs_gph.exe`core::sync::atomic::atomic_store (6 samples, 2.84%)</title><rect x="50.2370%" y="933" width="2.8436%" height="15" fill="rgb(81,193,193)" fg:x="106" fg:w="6"/><text x="50.4870%" y="943.50">os..</text></g><g><title>osrs_gph.exe`mio::sys::windows::iocp::CompletionPort::get_many(ref_mut$&lt;slice2$&lt;mio::sys::windows::iocp::CompletionStatus&gt; &gt;, enum2$&lt;core::option::Option (6 samples, 2.84%)</title><rect x="50.2370%" y="917" width="2.8436%" height="15" fill="rgb(81,193,193)" fg:x="106" fg:w="6"/><text x="50.4870%" y="927.50">os..</text></g><g><title>`0x7FFE56BD0594 (6 samples, 2.84%)</title><rect x="50.2370%" y="901" width="2.8436%" height="15" fill="rgb(199,199,58)" fg:x="106" fg:w="6"/><text x="50.4870%" y="911.50">`0..</text></g><g><title>`0x7FFE59452304 (6 samples, 2.84%)</title><rect x="50.2370%" y="885" width="2.8436%" height="15" fill="rgb(214,214,64)" fg:x="106" fg:w="6"/><text x="50.4870%" y="895.50">`0..</text></g><g><title>osrs_gph.exe`tokio::runtime::time::Driver::park_thread_timeout (9 samples, 4.27%)</title><rect x="49.7630%" y="1093" width="4.2654%" height="15" fill="rgb(99,210,210)" fg:x="105" fg:w="9"/><text x="50.0130%" y="1103.50">osrs_..</text></g><g><title>osrs_gph.exe`enum2$&lt;tokio::runtime::driver::IoStack&gt;::park_timeout (9 samples, 4.27%)</title><rect x="49.7630%" y="1077" width="4.2654%" height="15" fill="rgb(60,174,174)" fg:x="105" fg:w="9"/><text x="50.0130%" y="1087.50">osrs_..</text></g><g><title>osrs_gph.exe`tokio::runtime::io::driver::Driver::park_timeout (9 samples, 4.27%)</title><rect x="49.7630%" y="1061" width="4.2654%" height="15" fill="rgb(57,172,172)" fg:x="105" fg:w="9"/><text x="50.0130%" y="1071.50">osrs_..</text></g><g><title>osrs_gph.exe`tokio::runtime::io::driver::Driver::turn(tokio::runtime::io::driver::Handle*, enum2$&lt;core::option::Option (9 samples, 4.27%)</title><rect x="49.7630%" y="1045" width="4.2654%" height="15" fill="rgb(54,169,169)" fg:x="105" fg:w="9"/><text x="50.0130%" y="1055.50">osrs_..</text></g><g><title>osrs_gph.exe`mio::poll::Poll::poll(mio::event::events::Events*, enum2$&lt;core::option::Option (9 samples, 4.27%)</title><rect x="49.7630%" y="1029" width="4.2654%" height="15" fill="rgb(69,183,183)" fg:x="105" fg:w="9"/><text x="50.0130%" y="1039.50">osrs_..</text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::Selector::select(mio::sys::windows::event::Events*, enum2$&lt;core::option::Option (9 samples, 4.27%)</title><rect x="49.7630%" y="1013" width="4.2654%" height="15" fill="rgb(52,167,167)" fg:x="105" fg:w="9"/><text x="50.0130%" y="1023.50">osrs_..</text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::SelectorInner::select(mio::sys::windows::event::Events*, enum2$&lt;core::option::Option (9 samples, 4.27%)</title><rect x="49.7630%" y="997" width="4.2654%" height="15" fill="rgb(99,210,210)" fg:x="105" fg:w="9"/><text x="50.0130%" y="1007.50">osrs_..</text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (8 samples, 3.79%)</title><rect x="50.2370%" y="981" width="3.7915%" height="15" fill="rgb(95,206,206)" fg:x="106" fg:w="8"/><text x="50.4870%" y="991.50">osrs..</text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::SelectorInner::select2(ref_mut$&lt;slice2$&lt;mio::sys::windows::iocp::CompletionStatus&gt; &gt;, alloc::vec::Vec&lt;mio::sys::windows::event::Event,alloc::alloc::Global&gt;*, enum2$&lt;core::option::Option (8 samples, 3.79%)</title><rect x="50.2370%" y="965" width="3.7915%" height="15" fill="rgb(56,171,171)" fg:x="106" fg:w="8"/><text x="50.4870%" y="975.50">osrs..</text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (2 samples, 0.95%)</title><rect x="53.0806%" y="949" width="0.9479%" height="15" fill="rgb(102,212,212)" fg:x="112" fg:w="2"/><text x="53.3306%" y="959.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::SelectorInner::update_sockets_events (2 samples, 0.95%)</title><rect x="53.0806%" y="933" width="0.9479%" height="15" fill="rgb(74,187,187)" fg:x="112" fg:w="2"/><text x="53.3306%" y="943.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::SockState::update(core::pin::Pin&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex (2 samples, 0.95%)</title><rect x="53.0806%" y="917" width="0.9479%" height="15" fill="rgb(72,185,185)" fg:x="112" fg:w="2"/><text x="53.3306%" y="927.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::afd::Afd::poll (2 samples, 0.95%)</title><rect x="53.0806%" y="901" width="0.9479%" height="15" fill="rgb(84,196,196)" fg:x="112" fg:w="2"/><text x="53.3306%" y="911.50"></text></g><g><title>`0x7FFE5944F454 (2 samples, 0.95%)</title><rect x="53.0806%" y="885" width="0.9479%" height="15" fill="rgb(181,181,52)" fg:x="112" fg:w="2"/><text x="53.3306%" y="895.50"></text></g><g><title>`0x7FFE56BD0594 (1 samples, 0.47%)</title><rect x="54.0284%" y="917" width="0.4739%" height="15" fill="rgb(225,225,68)" fg:x="114" fg:w="1"/><text x="54.2784%" y="927.50"></text></g><g><title>`0x7FFE59452304 (1 samples, 0.47%)</title><rect x="54.0284%" y="901" width="0.4739%" height="15" fill="rgb(207,207,61)" fg:x="114" fg:w="1"/><text x="54.2784%" y="911.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::Context::park (12 samples, 5.69%)</title><rect x="49.2891%" y="1205" width="5.6872%" height="15" fill="rgb(57,171,171)" fg:x="104" fg:w="12"/><text x="49.5391%" y="1215.50">osrs_gp..</text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::Context::enter (12 samples, 5.69%)</title><rect x="49.2891%" y="1189" width="5.6872%" height="15" fill="rgb(101,211,211)" fg:x="104" fg:w="12"/><text x="49.5391%" y="1199.50">osrs_gp..</text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::impl$3::park::closure$1 (12 samples, 5.69%)</title><rect x="49.2891%" y="1173" width="5.6872%" height="15" fill="rgb(51,166,166)" fg:x="104" fg:w="12"/><text x="49.5391%" y="1183.50">osrs_gp..</text></g><g><title>osrs_gph.exe`tokio::runtime::driver::Driver::park (12 samples, 5.69%)</title><rect x="49.2891%" y="1157" width="5.6872%" height="15" fill="rgb(109,219,219)" fg:x="104" fg:w="12"/><text x="49.5391%" y="1167.50">osrs_gp..</text></g><g><title>osrs_gph.exe`enum2$&lt;tokio::runtime::driver::TimeDriver&gt;::park (12 samples, 5.69%)</title><rect x="49.2891%" y="1141" width="5.6872%" height="15" fill="rgb(51,166,166)" fg:x="104" fg:w="12"/><text x="49.5391%" y="1151.50">osrs_gp..</text></g><g><title>osrs_gph.exe`tokio::runtime::time::Driver::park (12 samples, 5.69%)</title><rect x="49.2891%" y="1125" width="5.6872%" height="15" fill="rgb(89,200,200)" fg:x="104" fg:w="12"/><text x="49.5391%" y="1135.50">osrs_gp..</text></g><g><title>osrs_gph.exe`tokio::runtime::time::Driver::park_internal(tokio::runtime::driver::Handle*, enum2$&lt;core::option::Option (12 samples, 5.69%)</title><rect x="49.2891%" y="1109" width="5.6872%" height="15" fill="rgb(62,176,176)" fg:x="104" fg:w="12"/><text x="49.5391%" y="1119.50">osrs_gp..</text></g><g><title>osrs_gph.exe`enum2$&lt;tokio::runtime::driver::IoStack&gt;::park (2 samples, 0.95%)</title><rect x="54.0284%" y="1093" width="0.9479%" height="15" fill="rgb(103,214,214)" fg:x="114" fg:w="2"/><text x="54.2784%" y="1103.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::io::driver::Driver::park (2 samples, 0.95%)</title><rect x="54.0284%" y="1077" width="0.9479%" height="15" fill="rgb(72,185,185)" fg:x="114" fg:w="2"/><text x="54.2784%" y="1087.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::io::driver::Driver::turn(tokio::runtime::io::driver::Handle*, enum2$&lt;core::option::Option (2 samples, 0.95%)</title><rect x="54.0284%" y="1061" width="0.9479%" height="15" fill="rgb(54,169,169)" fg:x="114" fg:w="2"/><text x="54.2784%" y="1071.50"></text></g><g><title>osrs_gph.exe`mio::poll::Poll::poll(mio::event::events::Events*, enum2$&lt;core::option::Option (2 samples, 0.95%)</title><rect x="54.0284%" y="1045" width="0.9479%" height="15" fill="rgb(68,182,182)" fg:x="114" fg:w="2"/><text x="54.2784%" y="1055.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::Selector::select(mio::sys::windows::event::Events*, enum2$&lt;core::option::Option (2 samples, 0.95%)</title><rect x="54.0284%" y="1029" width="0.9479%" height="15" fill="rgb(62,176,176)" fg:x="114" fg:w="2"/><text x="54.2784%" y="1039.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::SelectorInner::select(mio::sys::windows::event::Events*, enum2$&lt;core::option::Option (2 samples, 0.95%)</title><rect x="54.0284%" y="1013" width="0.9479%" height="15" fill="rgb(63,177,177)" fg:x="114" fg:w="2"/><text x="54.2784%" y="1023.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (2 samples, 0.95%)</title><rect x="54.0284%" y="997" width="0.9479%" height="15" fill="rgb(101,212,212)" fg:x="114" fg:w="2"/><text x="54.2784%" y="1007.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::selector::SelectorInner::select2(ref_mut$&lt;slice2$&lt;mio::sys::windows::iocp::CompletionStatus&gt; &gt;, alloc::vec::Vec&lt;mio::sys::windows::event::Event,alloc::alloc::Global&gt;*, enum2$&lt;core::option::Option (2 samples, 0.95%)</title><rect x="54.0284%" y="981" width="0.9479%" height="15" fill="rgb(55,169,169)" fg:x="114" fg:w="2"/><text x="54.2784%" y="991.50"></text></g><g><title>osrs_gph.exe`core::sync::atomic::AtomicBool::store (2 samples, 0.95%)</title><rect x="54.0284%" y="965" width="0.9479%" height="15" fill="rgb(61,175,175)" fg:x="114" fg:w="2"/><text x="54.2784%" y="975.50"></text></g><g><title>osrs_gph.exe`core::sync::atomic::atomic_store (2 samples, 0.95%)</title><rect x="54.0284%" y="949" width="0.9479%" height="15" fill="rgb(53,168,168)" fg:x="114" fg:w="2"/><text x="54.2784%" y="959.50"></text></g><g><title>osrs_gph.exe`mio::sys::windows::iocp::CompletionPort::get_many(ref_mut$&lt;slice2$&lt;mio::sys::windows::iocp::CompletionStatus&gt; &gt;, enum2$&lt;core::option::Option (2 samples, 0.95%)</title><rect x="54.0284%" y="933" width="0.9479%" height="15" fill="rgb(107,217,217)" fg:x="114" fg:w="2"/><text x="54.2784%" y="943.50"></text></g><g><title>osrs_gph.exe`rustls::builder::ConfigBuilder&lt;rustls::client::client_conn::ClientConfig,rustls::client::builder::WantsTransparencyPolicyOrClientCert&gt;::with_no_client_auth(rustls::builder::ConfigBuilder (1 samples, 0.47%)</title><rect x="54.9763%" y="1093" width="0.4739%" height="15" fill="rgb(91,202,202)" fg:x="116" fg:w="1"/><text x="55.2263%" y="1103.50"></text></g><g><title>osrs_gph.exe`rustls::builder::ConfigBuilder&lt;rustls::client::client_conn::ClientConfig,rustls::client::builder::WantsClientCert&gt;::with_client_cert_resolver(rustls::builder::ConfigBuilder&lt;rustls::client::client_conn::ClientConfig,rustls::client::builder::WantsClientCert&gt;, alloc::sync::Arc&lt;dyn$ (1 samples, 0.47%)</title><rect x="54.9763%" y="1077" width="0.4739%" height="15" fill="rgb(63,177,177)" fg:x="116" fg:w="1"/><text x="55.2263%" y="1087.50"></text></g><g><title>osrs_gph.exe`rustls::client::client_conn::Resumption::in_memory_sessions (1 samples, 0.47%)</title><rect x="54.9763%" y="1061" width="0.4739%" height="15" fill="rgb(73,186,186)" fg:x="116" fg:w="1"/><text x="55.2263%" y="1071.50"></text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;rustls::client::handy::ClientSessionMemoryCache,alloc::alloc::Global&gt;::new (1 samples, 0.47%)</title><rect x="54.9763%" y="1045" width="0.4739%" height="15" fill="rgb(91,202,202)" fg:x="116" fg:w="1"/><text x="55.2263%" y="1055.50"></text></g><g><title>osrs_gph.exe`alloc::boxed::impl$0::new(alloc::sync::ArcInner (1 samples, 0.47%)</title><rect x="54.9763%" y="1029" width="0.4739%" height="15" fill="rgb(78,190,190)" fg:x="116" fg:w="1"/><text x="55.2263%" y="1039.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::exchange_malloc (1 samples, 0.47%)</title><rect x="54.9763%" y="1013" width="0.4739%" height="15" fill="rgb(98,209,209)" fg:x="116" fg:w="1"/><text x="55.2263%" y="1023.50"></text></g><g><title>`0x7FFE593EC7BA (1 samples, 0.47%)</title><rect x="54.9763%" y="997" width="0.4739%" height="15" fill="rgb(207,207,61)" fg:x="116" fg:w="1"/><text x="55.2263%" y="1007.50"></text></g><g><title>`0x7FFE593ED1E7 (1 samples, 0.47%)</title><rect x="54.9763%" y="981" width="0.4739%" height="15" fill="rgb(209,209,62)" fg:x="116" fg:w="1"/><text x="55.2263%" y="991.50"></text></g><g><title>osrs_gph.exe`reqwest::async_impl::client::ClientBuilder::build (2 samples, 0.95%)</title><rect x="54.9763%" y="1109" width="0.9479%" height="15" fill="rgb(69,183,183)" fg:x="116" fg:w="2"/><text x="55.2263%" y="1119.50"></text></g><g><title>osrs_gph.exe`core::iter::adapters::map::impl$2::fold&lt;rustls::anchors::OwnedTrustAnchor,core::slice::iter::Iter&lt;webpki_roots::TrustAnchor&gt;,reqwest::async_impl::client::impl$1::build::closure_env$0,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustls::anchors::OwnedTrustAnchor,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;rustls::anchors::OwnedTrustAnchor,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;webpki_roots::TrustAnchor&gt;,reqwest::async_impl::client::impl$1::build::closure_env$0&gt; &gt; &gt; &gt;(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;webpki_roots::TrustAnchor&gt;,reqwest::async_impl::client::impl$1::build::closure_env$0&gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustls::anchors::OwnedTrustAnchor,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;rustls::anchors::OwnedTrustAnchor,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter (1 samples, 0.47%)</title><rect x="55.4502%" y="1093" width="0.4739%" height="15" fill="rgb(95,206,206)" fg:x="117" fg:w="1"/><text x="55.7002%" y="1103.50"></text></g><g><title>osrs_gph.exe`core::slice::iter::impl$181::fold(core::slice::iter::Iter&lt;webpki_roots::TrustAnchor&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;webpki_roots::TrustAnchor&gt;,rustls::anchors::OwnedTrustAnchor,tuple$&lt;&gt;,reqwest::async_impl::client::impl$1::build::closure_env$0,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustls::anchors::OwnedTrustAnchor,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;rustls::anchors::OwnedTrustAnchor,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter (1 samples, 0.47%)</title><rect x="55.4502%" y="1077" width="0.4739%" height="15" fill="rgb(78,190,190)" fg:x="117" fg:w="1"/><text x="55.7002%" y="1087.50"></text></g><g><title>osrs_gph.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;webpki_roots::TrustAnchor&gt;,rustls::anchors::OwnedTrustAnchor,tuple$&lt;&gt;,reqwest::async_impl::client::impl$1::build::closure_env$0,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustls::anchors::OwnedTrustAnchor,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;rustls::anchors::OwnedTrustAnchor,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;webpki_roots::TrustAnchor&gt;,reqwest::async_impl::client::impl$1::build::closure_env$0&gt; &gt; &gt; &gt;*, tuple$ (1 samples, 0.47%)</title><rect x="55.4502%" y="1061" width="0.4739%" height="15" fill="rgb(81,193,193)" fg:x="117" fg:w="1"/><text x="55.7002%" y="1071.50"></text></g><g><title>osrs_gph.exe`reqwest::async_impl::client::impl$1::build::closure$0 (1 samples, 0.47%)</title><rect x="55.4502%" y="1045" width="0.4739%" height="15" fill="rgb(62,176,176)" fg:x="117" fg:w="1"/><text x="55.7002%" y="1055.50"></text></g><g><title>osrs_gph.exe`rustls::anchors::OwnedTrustAnchor::from_subject_spki_name_constraints(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$&lt;u8&gt; &gt;, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="55.4502%" y="1029" width="0.4739%" height="15" fill="rgb(96,207,207)" fg:x="117" fg:w="1"/><text x="55.7002%" y="1039.50"></text></g><g><title>osrs_gph.exe`core::num::impl$11::saturating_sub (1 samples, 0.47%)</title><rect x="55.4502%" y="1013" width="0.4739%" height="15" fill="rgb(81,194,194)" fg:x="117" fg:w="1"/><text x="55.7002%" y="1023.50"></text></g><g><title>osrs_gph.exe`rustls::x509::wrap_in_sequence(alloc::vec::Vec (1 samples, 0.47%)</title><rect x="55.4502%" y="997" width="0.4739%" height="15" fill="rgb(81,193,193)" fg:x="117" fg:w="1"/><text x="55.7002%" y="1007.50"></text></g><g><title>osrs_gph.exe`rustls::x509::wrap_in_asn1_len(alloc::vec::Vec (1 samples, 0.47%)</title><rect x="55.4502%" y="981" width="0.4739%" height="15" fill="rgb(92,204,204)" fg:x="117" fg:w="1"/><text x="55.7002%" y="991.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::insert (1 samples, 0.47%)</title><rect x="55.4502%" y="965" width="0.4739%" height="15" fill="rgb(105,216,216)" fg:x="117" fg:w="1"/><text x="55.7002%" y="975.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::reserve (1 samples, 0.47%)</title><rect x="55.4502%" y="949" width="0.4739%" height="15" fill="rgb(72,185,185)" fg:x="117" fg:w="1"/><text x="55.7002%" y="959.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::reserve (1 samples, 0.47%)</title><rect x="55.4502%" y="933" width="0.4739%" height="15" fill="rgb(62,176,176)" fg:x="117" fg:w="1"/><text x="55.7002%" y="943.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle&lt;u8,alloc::alloc::Global&gt;(alloc::raw_vec::RawVec (1 samples, 0.47%)</title><rect x="55.4502%" y="917" width="0.4739%" height="15" fill="rgb(56,171,171)" fg:x="117" fg:w="1"/><text x="55.7002%" y="927.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.47%)</title><rect x="55.4502%" y="901" width="0.4739%" height="15" fill="rgb(92,204,204)" fg:x="117" fg:w="1"/><text x="55.7002%" y="911.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.47%)</title><rect x="55.4502%" y="885" width="0.4739%" height="15" fill="rgb(100,211,211)" fg:x="117" fg:w="1"/><text x="55.7002%" y="895.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.47%)</title><rect x="55.4502%" y="869" width="0.4739%" height="15" fill="rgb(79,191,191)" fg:x="117" fg:w="1"/><text x="55.7002%" y="879.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (1 samples, 0.47%)</title><rect x="55.4502%" y="853" width="0.4739%" height="15" fill="rgb(108,218,218)" fg:x="117" fg:w="1"/><text x="55.7002%" y="863.50"></text></g><g><title>`0x7FFE593F1CAA (1 samples, 0.47%)</title><rect x="55.4502%" y="837" width="0.4739%" height="15" fill="rgb(217,217,65)" fg:x="117" fg:w="1"/><text x="55.7002%" y="847.50"></text></g><g><title>`0x7FFE593F1DE7 (1 samples, 0.47%)</title><rect x="55.4502%" y="821" width="0.4739%" height="15" fill="rgb(212,212,63)" fg:x="117" fg:w="1"/><text x="55.7002%" y="831.50"></text></g><g><title>`0x7FFE593F3025 (1 samples, 0.47%)</title><rect x="55.4502%" y="805" width="0.4739%" height="15" fill="rgb(204,204,60)" fg:x="117" fg:w="1"/><text x="55.7002%" y="815.50"></text></g><g><title>`0x7FFE593ECD59 (1 samples, 0.47%)</title><rect x="55.4502%" y="789" width="0.4739%" height="15" fill="rgb(197,197,58)" fg:x="117" fg:w="1"/><text x="55.7002%" y="799.50"></text></g><g><title>`0x7FFE593EF067 (1 samples, 0.47%)</title><rect x="55.4502%" y="773" width="0.4739%" height="15" fill="rgb(204,204,60)" fg:x="117" fg:w="1"/><text x="55.7002%" y="783.50"></text></g><g><title>`0x7FFE593F8ABE (1 samples, 0.47%)</title><rect x="55.4502%" y="757" width="0.4739%" height="15" fill="rgb(198,198,58)" fg:x="117" fg:w="1"/><text x="55.7002%" y="767.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::impl$0::block_on::closure$0(tokio::runtime::scheduler::current_thread::impl$0::block_on::closure_env$0&lt;enum2$ (41 samples, 19.43%)</title><rect x="36.9668%" y="1365" width="19.4313%" height="15" fill="rgb(89,201,201)" fg:x="78" fg:w="41"/><text x="37.2168%" y="1375.50">osrs_gph.exe`tokio::runtime::s..</text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::CoreGuard::block_on(tokio::runtime::scheduler::current_thread::CoreGuard, core::pin::Pin&lt;ref_mut$&lt;enum2$ (41 samples, 19.43%)</title><rect x="36.9668%" y="1349" width="19.4313%" height="15" fill="rgb(101,211,211)" fg:x="78" fg:w="41"/><text x="37.2168%" y="1359.50">osrs_gph.exe`tokio::runtime::s..</text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::CoreGuard::enter(tokio::runtime::scheduler::current_thread::CoreGuard, tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (41 samples, 19.43%)</title><rect x="36.9668%" y="1333" width="19.4313%" height="15" fill="rgb(102,213,213)" fg:x="78" fg:w="41"/><text x="37.2168%" y="1343.50">osrs_gph.exe`tokio::runtime::s..</text></g><g><title>osrs_gph.exe`tokio::runtime::context::set_scheduler(enum2$&lt;tokio::runtime::scheduler::Context&gt;*, tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;reqwest::blocking::client::impl$8::new::closure$0::async_block_env$0&gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;tuple$ (41 samples, 19.43%)</title><rect x="36.9668%" y="1317" width="19.4313%" height="15" fill="rgb(75,188,188)" fg:x="78" fg:w="41"/><text x="37.2168%" y="1327.50">osrs_gph.exe`tokio::runtime::c..</text></g><g><title>osrs_gph.exe`std::thread::local::LocalKey&lt;tokio::runtime::context::Context&gt;::with(tokio::runtime::context::set_scheduler::closure_env$0&lt;tuple$&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::current_thread::Core,alloc::alloc::Global&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;&gt; &gt; &gt; &gt;,tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;reqwest::blocking::client::impl$8::new::closure$0::async_block_env$0&gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;tuple$ (41 samples, 19.43%)</title><rect x="36.9668%" y="1301" width="19.4313%" height="15" fill="rgb(100,210,210)" fg:x="78" fg:w="41"/><text x="37.2168%" y="1311.50">osrs_gph.exe`std::thread::loca..</text></g><g><title>osrs_gph.exe`std::thread::local::LocalKey&lt;tokio::runtime::context::Context&gt;::try_with(tokio::runtime::context::set_scheduler::closure_env$0&lt;tuple$&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::current_thread::Core,alloc::alloc::Global&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;&gt; &gt; &gt; &gt;,tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;reqwest::blocking::client::impl$8::new::closure$0::async_block_env$0&gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;tuple$ (41 samples, 19.43%)</title><rect x="36.9668%" y="1285" width="19.4313%" height="15" fill="rgb(79,191,191)" fg:x="78" fg:w="41"/><text x="37.2168%" y="1295.50">osrs_gph.exe`std::thread::loca..</text></g><g><title>osrs_gph.exe`tokio::runtime::context::set_scheduler::closure$0(tokio::runtime::context::set_scheduler::closure_env$0&lt;tuple$&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::current_thread::Core,alloc::alloc::Global&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;&gt; &gt; &gt; &gt;,tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;reqwest::blocking::client::impl$8::new::closure$0::async_block_env$0&gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;tuple$ (41 samples, 19.43%)</title><rect x="36.9668%" y="1269" width="19.4313%" height="15" fill="rgb(103,213,213)" fg:x="78" fg:w="41"/><text x="37.2168%" y="1279.50">osrs_gph.exe`tokio::runtime::c..</text></g><g><title>osrs_gph.exe`tokio::runtime::context::scoped::Scoped&lt;enum2$&lt;tokio::runtime::scheduler::Context&gt; &gt;::set(enum2$&lt;tokio::runtime::scheduler::Context&gt;*, tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;reqwest::blocking::client::impl$8::new::closure$0::async_block_env$0&gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;tuple$ (41 samples, 19.43%)</title><rect x="36.9668%" y="1253" width="19.4313%" height="15" fill="rgb(82,194,194)" fg:x="78" fg:w="41"/><text x="37.2168%" y="1263.50">osrs_gph.exe`tokio::runtime::c..</text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::impl$8::enter::closure$0(tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;reqwest::blocking::client::impl$8::new::closure$0::async_block_env$0&gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;tuple$ (41 samples, 19.43%)</title><rect x="36.9668%" y="1237" width="19.4313%" height="15" fill="rgb(104,214,214)" fg:x="78" fg:w="41"/><text x="37.2168%" y="1247.50">osrs_gph.exe`tokio::runtime::s..</text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0(tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (41 samples, 19.43%)</title><rect x="36.9668%" y="1221" width="19.4313%" height="15" fill="rgb(96,207,207)" fg:x="78" fg:w="41"/><text x="37.2168%" y="1231.50">osrs_gph.exe`tokio::runtime::s..</text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::Context::enter(tokio::runtime::scheduler::current_thread::Core*, tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (3 samples, 1.42%)</title><rect x="54.9763%" y="1205" width="1.4218%" height="15" fill="rgb(84,196,196)" fg:x="116" fg:w="3"/><text x="55.2263%" y="1215.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure$0(tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (3 samples, 1.42%)</title><rect x="54.9763%" y="1189" width="1.4218%" height="15" fill="rgb(85,197,197)" fg:x="116" fg:w="3"/><text x="55.2263%" y="1199.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::coop::budget(tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure$0::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (3 samples, 1.42%)</title><rect x="54.9763%" y="1173" width="1.4218%" height="15" fill="rgb(59,173,173)" fg:x="116" fg:w="3"/><text x="55.2263%" y="1183.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::coop::with_budget(tokio::runtime::coop::Budget, tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure$0::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;enum2$ (3 samples, 1.42%)</title><rect x="54.9763%" y="1157" width="1.4218%" height="15" fill="rgb(62,176,176)" fg:x="116" fg:w="3"/><text x="55.2263%" y="1167.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$&lt;core::result::Result (3 samples, 1.42%)</title><rect x="54.9763%" y="1141" width="1.4218%" height="15" fill="rgb(52,167,167)" fg:x="116" fg:w="3"/><text x="55.2263%" y="1151.50"></text></g><g><title>osrs_gph.exe`reqwest::blocking::client::impl$8::new::closure$0::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (3 samples, 1.42%)</title><rect x="54.9763%" y="1125" width="1.4218%" height="15" fill="rgb(104,214,214)" fg:x="116" fg:w="3"/><text x="55.2263%" y="1135.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.47%)</title><rect x="55.9242%" y="1109" width="0.4739%" height="15" fill="rgb(75,188,188)" fg:x="118" fg:w="1"/><text x="56.1742%" y="1119.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::sync::Arc (1 samples, 0.47%)</title><rect x="55.9242%" y="1093" width="0.4739%" height="15" fill="rgb(77,190,190)" fg:x="118" fg:w="1"/><text x="56.1742%" y="1103.50"></text></g><g><title>osrs_gph.exe`alloc::sync::impl$33::drop(alloc::sync::Arc (1 samples, 0.47%)</title><rect x="55.9242%" y="1077" width="0.4739%" height="15" fill="rgb(75,188,188)" fg:x="118" fg:w="1"/><text x="56.1742%" y="1087.50"></text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;reqwest::async_impl::client::ClientRef,alloc::alloc::Global&gt;::drop_slow&lt;reqwest::async_impl::client::ClientRef,alloc::alloc::Global&gt; (1 samples, 0.47%)</title><rect x="55.9242%" y="1061" width="0.4739%" height="15" fill="rgb(100,210,210)" fg:x="118" fg:w="1"/><text x="56.1742%" y="1071.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::runtime::Runtime::block_on(enum2$ (42 samples, 19.91%)</title><rect x="36.9668%" y="1413" width="19.9052%" height="15" fill="rgb(109,219,219)" fg:x="78" fg:w="42"/><text x="37.2168%" y="1423.50">osrs_gph.exe`tokio::runtime::ru..</text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::CurrentThread::block_on(enum2$&lt;tokio::runtime::scheduler::Handle&gt;*, enum2$ (42 samples, 19.91%)</title><rect x="36.9668%" y="1397" width="19.9052%" height="15" fill="rgb(75,188,188)" fg:x="78" fg:w="42"/><text x="37.2168%" y="1407.50">osrs_gph.exe`tokio::runtime::sc..</text></g><g><title>osrs_gph.exe`tokio::runtime::context::runtime::enter_runtime(enum2$&lt;tokio::runtime::scheduler::Handle&gt;*, bool, tokio::runtime::scheduler::current_thread::impl$0::block_on::closure_env$0&lt;enum2$ (42 samples, 19.91%)</title><rect x="36.9668%" y="1381" width="19.9052%" height="15" fill="rgb(93,204,204)" fg:x="78" fg:w="42"/><text x="37.2168%" y="1391.50">osrs_gph.exe`tokio::runtime::co..</text></g><g><title>osrs_gph.exe`std::thread::local::LocalKey&lt;tokio::runtime::context::Context&gt;::with(tokio::runtime::context::runtime::enter_runtime::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$0::block_on::closure_env$0&lt;enum2$&lt;reqwest::blocking::client::impl$8::new::closure$0::async_block_env$0&gt; &gt;,tuple$ (1 samples, 0.47%)</title><rect x="56.3981%" y="1365" width="0.4739%" height="15" fill="rgb(94,205,205)" fg:x="119" fg:w="1"/><text x="56.6481%" y="1375.50"></text></g><g><title>osrs_gph.exe`std::thread::local::LocalKey&lt;tokio::runtime::context::Context&gt;::try_with(tokio::runtime::context::runtime::enter_runtime::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$0::block_on::closure_env$0&lt;enum2$&lt;reqwest::blocking::client::impl$8::new::closure$0::async_block_env$0&gt; &gt;,tuple$ (1 samples, 0.47%)</title><rect x="56.3981%" y="1349" width="0.4739%" height="15" fill="rgb(81,194,194)" fg:x="119" fg:w="1"/><text x="56.6481%" y="1359.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::context::runtime::enter_runtime::closure$0(tokio::runtime::context::runtime::enter_runtime::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$0::block_on::closure_env$0&lt;enum2$&lt;reqwest::blocking::client::impl$8::new::closure$0::async_block_env$0&gt; &gt;,tuple$ (1 samples, 0.47%)</title><rect x="56.3981%" y="1333" width="0.4739%" height="15" fill="rgb(60,174,174)" fg:x="119" fg:w="1"/><text x="56.6481%" y="1343.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::option::Option&lt;tokio::util::rand::FastRand&gt; &gt;::unwrap_or_else(enum2$&lt;core::option::Option&lt;tokio::util::rand::FastRand&gt; &gt;, tokio::util::rand::FastRand (*) (1 samples, 0.47%)</title><rect x="56.3981%" y="1317" width="0.4739%" height="15" fill="rgb(72,185,185)" fg:x="119" fg:w="1"/><text x="56.6481%" y="1327.50"></text></g><g><title>osrs_gph.exe`core::ops::function::FnOnce::call_once(tokio::util::rand::FastRand (*) (1 samples, 0.47%)</title><rect x="56.3981%" y="1301" width="0.4739%" height="15" fill="rgb(82,195,195)" fg:x="119" fg:w="1"/><text x="56.6481%" y="1311.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;tokio::runtime::runtime::Runtime&gt; (1 samples, 0.47%)</title><rect x="56.8720%" y="1365" width="0.4739%" height="15" fill="rgb(107,218,218)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1375.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$ (1 samples, 0.47%)</title><rect x="56.8720%" y="1349" width="0.4739%" height="15" fill="rgb(60,174,174)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1359.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::runtime::impl$1::drop (1 samples, 0.47%)</title><rect x="56.8720%" y="1333" width="0.4739%" height="15" fill="rgb(72,185,185)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1343.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::CurrentThread::shutdown(enum2$ (1 samples, 0.47%)</title><rect x="56.8720%" y="1317" width="0.4739%" height="15" fill="rgb(64,178,178)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1327.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::CoreGuard::enter (1 samples, 0.47%)</title><rect x="56.8720%" y="1301" width="0.4739%" height="15" fill="rgb(98,209,209)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1311.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::context::set_scheduler&lt;tuple$&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::current_thread::Core,alloc::alloc::Global&gt;,tuple$&lt;&gt; &gt;,tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$0::shutdown::closure_env$1,tuple$&lt;&gt; &gt; &gt;(enum2$&lt;tokio::runtime::scheduler::Context&gt;*, tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$0::shutdown::closure_env$1,tuple$ (1 samples, 0.47%)</title><rect x="56.8720%" y="1285" width="0.4739%" height="15" fill="rgb(91,202,202)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1295.50"></text></g><g><title>osrs_gph.exe`std::thread::local::LocalKey&lt;tokio::runtime::context::Context&gt;::with(tokio::runtime::context::set_scheduler::closure_env$0&lt;tuple$&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::current_thread::Core,alloc::alloc::Global&gt;,tuple$&lt;&gt; &gt;,tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$0::shutdown::closure_env$1,tuple$ (1 samples, 0.47%)</title><rect x="56.8720%" y="1269" width="0.4739%" height="15" fill="rgb(91,203,203)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1279.50"></text></g><g><title>osrs_gph.exe`std::thread::local::LocalKey&lt;tokio::runtime::context::Context&gt;::try_with(tokio::runtime::context::set_scheduler::closure_env$0&lt;tuple$&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::current_thread::Core,alloc::alloc::Global&gt;,tuple$&lt;&gt; &gt;,tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$0::shutdown::closure_env$1,tuple$ (1 samples, 0.47%)</title><rect x="56.8720%" y="1253" width="0.4739%" height="15" fill="rgb(103,213,213)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1263.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::context::set_scheduler::closure$0(tokio::runtime::context::set_scheduler::closure_env$0&lt;tuple$&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::current_thread::Core,alloc::alloc::Global&gt;,tuple$&lt;&gt; &gt;,tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$0::shutdown::closure_env$1,tuple$ (1 samples, 0.47%)</title><rect x="56.8720%" y="1237" width="0.4739%" height="15" fill="rgb(54,169,169)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1247.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::context::scoped::Scoped&lt;enum2$&lt;tokio::runtime::scheduler::Context&gt; &gt;::set(enum2$&lt;tokio::runtime::scheduler::Context&gt;*, tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$0::shutdown::closure_env$1,tuple$ (1 samples, 0.47%)</title><rect x="56.8720%" y="1221" width="0.4739%" height="15" fill="rgb(78,191,191)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1231.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tokio::runtime::context::scoped::impl$0::set::Reset&lt;enum2$ (1 samples, 0.47%)</title><rect x="56.8720%" y="1205" width="0.4739%" height="15" fill="rgb(91,202,202)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1215.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::context::scoped::impl$0::set::impl$0::drop(tokio::runtime::context::scoped::impl$0::set::Reset&lt;enum2$ (1 samples, 0.47%)</title><rect x="56.8720%" y="1189" width="0.4739%" height="15" fill="rgb(54,168,168)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1199.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;ptr_const$&lt;enum2$&lt;tokio::runtime::scheduler::Context&gt; &gt; &gt;::set(enum2$ (1 samples, 0.47%)</title><rect x="56.8720%" y="1173" width="0.4739%" height="15" fill="rgb(66,179,179)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1183.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;ptr_const$&lt;enum2$&lt;tokio::runtime::scheduler::Context&gt; &gt; &gt;::replace(enum2$ (1 samples, 0.47%)</title><rect x="56.8720%" y="1157" width="0.4739%" height="15" fill="rgb(72,185,185)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1167.50"></text></g><g><title>osrs_gph.exe`core::mem::replace(enum2$&lt;tokio::runtime::scheduler::Context&gt;**, enum2$ (1 samples, 0.47%)</title><rect x="56.8720%" y="1141" width="0.4739%" height="15" fill="rgb(69,182,182)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1151.50"></text></g><g><title>osrs_gph.exe`core::ptr::write(enum2$&lt;tokio::runtime::scheduler::Context&gt;**, enum2$ (1 samples, 0.47%)</title><rect x="56.8720%" y="1125" width="0.4739%" height="15" fill="rgb(95,207,207)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1135.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::scheduler::current_thread::shutdown2 (1 samples, 0.47%)</title><rect x="56.8720%" y="1109" width="0.4739%" height="15" fill="rgb(83,195,195)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1119.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::list::OwnedTasks&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt;::close_and_shutdown_all&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt; (1 samples, 0.47%)</title><rect x="56.8720%" y="1093" width="0.4739%" height="15" fill="rgb(81,193,193)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1103.50"></text></g><g><title>osrs_gph.exe`tokio::util::sharded_list::ShardedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt;,tokio::runtime::task::core::Header&gt;::pop_back (1 samples, 0.47%)</title><rect x="56.8720%" y="1077" width="0.4739%" height="15" fill="rgb(78,191,191)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1087.50"></text></g><g><title>osrs_gph.exe`tokio::util::sharded_list::ShardedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt;,tokio::runtime::task::core::Header&gt;::shard_inner (1 samples, 0.47%)</title><rect x="56.8720%" y="1061" width="0.4739%" height="15" fill="rgb(51,166,166)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1071.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::Harness&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;::shutdown&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;(tokio::runtime::task::harness::Harness&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc (1 samples, 0.47%)</title><rect x="56.8720%" y="1045" width="0.4739%" height="15" fill="rgb(58,172,172)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1055.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::cancel_task(tokio::runtime::task::core::Core&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc (1 samples, 0.47%)</title><rect x="56.8720%" y="1029" width="0.4739%" height="15" fill="rgb(87,199,199)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1039.50"></text></g><g><title>osrs_gph.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::cancel_task::closure_env$0&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc (1 samples, 0.47%)</title><rect x="56.8720%" y="1013" width="0.4739%" height="15" fill="rgb(102,213,213)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1023.50"></text></g><g><title>osrs_gph.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::cancel_task::closure_env$0&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc (1 samples, 0.47%)</title><rect x="56.8720%" y="997" width="0.4739%" height="15" fill="rgb(90,201,201)" fg:x="120" fg:w="1"/><text x="57.1220%" y="1007.50"></text></g><g><title>osrs_gph.exe`std::panicking::try::do_call (1 samples, 0.47%)</title><rect x="56.8720%" y="981" width="0.4739%" height="15" fill="rgb(77,190,190)" fg:x="120" fg:w="1"/><text x="57.1220%" y="991.50"></text></g><g><title>osrs_gph.exe`core::panic::unwind_safe::impl$23::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::cancel_task::closure_env$0&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc (1 samples, 0.47%)</title><rect x="56.8720%" y="965" width="0.4739%" height="15" fill="rgb(67,180,180)" fg:x="120" fg:w="1"/><text x="57.1220%" y="975.50"></text></g><g><title>osrs_gph.exe`core::ops::function::FnOnce::call_once(tokio::runtime::task::harness::cancel_task::closure_env$0&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc (1 samples, 0.47%)</title><rect x="56.8720%" y="949" width="0.4739%" height="15" fill="rgb(64,178,178)" fg:x="120" fg:w="1"/><text x="57.1220%" y="959.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::harness::cancel_task::closure$0(tokio::runtime::task::harness::cancel_task::closure_env$0&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc (1 samples, 0.47%)</title><rect x="56.8720%" y="933" width="0.4739%" height="15" fill="rgb(92,203,203)" fg:x="120" fg:w="1"/><text x="57.1220%" y="943.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::core::Core&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle,alloc::alloc::Global&gt; &gt;::drop_future_or_output (1 samples, 0.47%)</title><rect x="56.8720%" y="917" width="0.4739%" height="15" fill="rgb(105,216,216)" fg:x="120" fg:w="1"/><text x="57.1220%" y="927.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::core::Core&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt;::set_stage&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt;(enum2$&lt;tokio::runtime::task::core::Stage&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (1 samples, 0.47%)</title><rect x="56.8720%" y="901" width="0.4739%" height="15" fill="rgb(59,173,173)" fg:x="120" fg:w="1"/><text x="57.1220%" y="911.50"></text></g><g><title>osrs_gph.exe`tokio::loom::std::unsafe_cell::UnsafeCell&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt; &gt; &gt; &gt;::with_mut(tokio::runtime::task::core::impl$6::set_stage::closure_env$0&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc (1 samples, 0.47%)</title><rect x="56.8720%" y="885" width="0.4739%" height="15" fill="rgb(91,202,202)" fg:x="120" fg:w="1"/><text x="57.1220%" y="895.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::task::core::impl$6::set_stage::closure$0(tokio::runtime::task::core::impl$6::set_stage::closure_env$0&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle,alloc::alloc::Global&gt; &gt;, enum2$&lt;tokio::runtime::task::core::Stage&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (1 samples, 0.47%)</title><rect x="56.8720%" y="869" width="0.4739%" height="15" fill="rgb(89,201,201)" fg:x="120" fg:w="1"/><text x="57.1220%" y="879.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$&lt;tokio::runtime::task::core::Stage&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (1 samples, 0.47%)</title><rect x="56.8720%" y="853" width="0.4739%" height="15" fill="rgb(72,185,185)" fg:x="120" fg:w="1"/><text x="57.1220%" y="863.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt; &gt;(enum2$&lt;hyper::proto::h2::client::conn_task::async_fn_env$0&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (1 samples, 0.47%)</title><rect x="56.8720%" y="837" width="0.4739%" height="15" fill="rgb(67,181,181)" fg:x="120" fg:w="1"/><text x="57.1220%" y="847.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;futures_util::future::select::Select&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt; &gt;(futures_util::future::select::Select&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (1 samples, 0.47%)</title><rect x="56.8720%" y="821" width="0.4739%" height="15" fill="rgb(77,190,190)" fg:x="120" fg:w="1"/><text x="57.1220%" y="831.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;tuple$&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (1 samples, 0.47%)</title><rect x="56.8720%" y="805" width="0.4739%" height="15" fill="rgb(61,175,175)" fg:x="120" fg:w="1"/><text x="57.1220%" y="815.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tuple$&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (1 samples, 0.47%)</title><rect x="56.8720%" y="789" width="0.4739%" height="15" fill="rgb(51,166,166)" fg:x="120" fg:w="1"/><text x="57.1220%" y="799.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(futures_util::future::future::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (1 samples, 0.47%)</title><rect x="56.8720%" y="773" width="0.4739%" height="15" fill="rgb(55,170,170)" fg:x="120" fg:w="1"/><text x="57.1220%" y="783.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$&lt;futures_util::future::future::map::Map&lt;futures_util::stream::stream::into_future::StreamFuture&lt;futures_channel::mpsc::Receiver&lt;enum2$&lt;core::convert::Infallible&gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$0 (1 samples, 0.47%)</title><rect x="56.8720%" y="757" width="0.4739%" height="15" fill="rgb(108,218,218)" fg:x="120" fg:w="1"/><text x="57.1220%" y="767.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt; &gt;(futures_util::future::try_future::MapErr&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;,hyper::proto::h2::client::handshake::async_fn$0::closure_env$2 (1 samples, 0.47%)</title><rect x="56.8720%" y="741" width="0.4739%" height="15" fill="rgb(66,179,179)" fg:x="120" fg:w="1"/><text x="57.1220%" y="751.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(futures_util::future::future::Map&lt;futures_util::future::try_future::into_future::IntoFuture&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt; &gt;,futures_util::fns::MapErrFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$2 (1 samples, 0.47%)</title><rect x="56.8720%" y="725" width="0.4739%" height="15" fill="rgb(77,189,189)" fg:x="120" fg:w="1"/><text x="57.1220%" y="735.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$&lt;futures_util::future::future::map::Map&lt;futures_util::future::try_future::into_future::IntoFuture&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt; &gt;,futures_util::fns::MapErrFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$2 (1 samples, 0.47%)</title><rect x="56.8720%" y="709" width="0.4739%" height="15" fill="rgb(53,167,167)" fg:x="120" fg:w="1"/><text x="57.1220%" y="719.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(futures_util::future::try_future::into_future::IntoFuture&lt;enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.47%)</title><rect x="56.8720%" y="693" width="0.4739%" height="15" fill="rgb(63,177,177)" fg:x="120" fg:w="1"/><text x="57.1220%" y="703.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(enum2$&lt;futures_util::future::either::Either&lt;futures_util::future::poll_fn::PollFn&lt;hyper::proto::h2::client::handshake::async_fn$0::closure_env$1&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt; &gt;,h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.47%)</title><rect x="56.8720%" y="677" width="0.4739%" height="15" fill="rgb(75,188,188)" fg:x="120" fg:w="1"/><text x="57.1220%" y="687.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(h2::client::Connection&lt;reqwest::connect::Conn,enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.47%)</title><rect x="56.8720%" y="661" width="0.4739%" height="15" fill="rgb(69,183,183)" fg:x="120" fg:w="1"/><text x="57.1220%" y="671.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(h2::proto::connection::Connection&lt;reqwest::connect::Conn,h2::client::Peer,enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.47%)</title><rect x="56.8720%" y="645" width="0.4739%" height="15" fill="rgb(80,192,192)" fg:x="120" fg:w="1"/><text x="57.1220%" y="655.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;h2::codec::Codec&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt; &gt; &gt; &gt; &gt;(h2::codec::Codec&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.47%)</title><rect x="56.8720%" y="629" width="0.4739%" height="15" fill="rgb(90,201,201)" fg:x="120" fg:w="1"/><text x="57.1220%" y="639.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(h2::codec::framed_read::FramedRead&lt;h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.47%)</title><rect x="56.8720%" y="613" width="0.4739%" height="15" fill="rgb(61,175,175)" fg:x="120" fg:w="1"/><text x="57.1220%" y="623.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tokio_util::codec::framed_read::FramedRead&lt;h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.47%)</title><rect x="56.8720%" y="597" width="0.4739%" height="15" fill="rgb(109,219,219)" fg:x="120" fg:w="1"/><text x="57.1220%" y="607.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tokio_util::codec::framed_impl::FramedImpl&lt;h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.47%)</title><rect x="56.8720%" y="581" width="0.4739%" height="15" fill="rgb(70,183,183)" fg:x="120" fg:w="1"/><text x="57.1220%" y="591.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(h2::codec::framed_write::FramedWrite&lt;reqwest::connect::Conn,h2::proto::streams::prioritize::Prioritized&lt;enum2$&lt;hyper::proto::h2::SendBuf (1 samples, 0.47%)</title><rect x="56.8720%" y="565" width="0.4739%" height="15" fill="rgb(74,187,187)" fg:x="120" fg:w="1"/><text x="57.1220%" y="575.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.47%)</title><rect x="56.8720%" y="549" width="0.4739%" height="15" fill="rgb(107,217,217)" fg:x="120" fg:w="1"/><text x="57.1220%" y="559.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::boxed::Box&lt;dyn$ (1 samples, 0.47%)</title><rect x="56.8720%" y="533" width="0.4739%" height="15" fill="rgb(59,173,173)" fg:x="120" fg:w="1"/><text x="57.1220%" y="543.50"></text></g><g><title>osrs_gph.exe`alloc::boxed::impl$8::drop(alloc::boxed::Box&lt;dyn$ (1 samples, 0.47%)</title><rect x="56.8720%" y="517" width="0.4739%" height="15" fill="rgb(77,189,189)" fg:x="120" fg:w="1"/><text x="57.1220%" y="527.50"></text></g><g><title>osrs_gph.exe`core::alloc::layout::Layout::for_value_raw(ptr_const$&lt;dyn$ (1 samples, 0.47%)</title><rect x="56.8720%" y="501" width="0.4739%" height="15" fill="rgb(82,195,195)" fg:x="120" fg:w="1"/><text x="57.1220%" y="511.50"></text></g><g><title>osrs_gph.exe`core::mem::size_of_val_raw(ptr_const$&lt;dyn$ (1 samples, 0.47%)</title><rect x="56.8720%" y="485" width="0.4739%" height="15" fill="rgb(106,216,216)" fg:x="120" fg:w="1"/><text x="57.1220%" y="495.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;reqwest::connect::rustls_tls_conn::RustlsTlsConn&lt;tokio::net::tcp::stream::TcpStream&gt; &gt;(reqwest::connect::rustls_tls_conn::RustlsTlsConn (1 samples, 0.47%)</title><rect x="56.8720%" y="469" width="0.4739%" height="15" fill="rgb(107,218,218)" fg:x="120" fg:w="1"/><text x="57.1220%" y="479.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tokio_rustls::client::TlsStream (1 samples, 0.47%)</title><rect x="56.8720%" y="453" width="0.4739%" height="15" fill="rgb(106,216,216)" fg:x="120" fg:w="1"/><text x="57.1220%" y="463.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.47%)</title><rect x="56.8720%" y="437" width="0.4739%" height="15" fill="rgb(106,217,217)" fg:x="120" fg:w="1"/><text x="57.1220%" y="447.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tokio::io::poll_evented::PollEvented (1 samples, 0.47%)</title><rect x="56.8720%" y="421" width="0.4739%" height="15" fill="rgb(92,204,204)" fg:x="120" fg:w="1"/><text x="57.1220%" y="431.50"></text></g><g><title>osrs_gph.exe`tokio::io::poll_evented::impl$5::drop(tokio::io::poll_evented::PollEvented (1 samples, 0.47%)</title><rect x="56.8720%" y="405" width="0.4739%" height="15" fill="rgb(78,191,191)" fg:x="120" fg:w="1"/><text x="57.1220%" y="415.50"></text></g><g><title>`0x7FFE579BB815 (1 samples, 0.47%)</title><rect x="56.8720%" y="389" width="0.4739%" height="15" fill="rgb(215,215,64)" fg:x="120" fg:w="1"/><text x="57.1220%" y="399.50"></text></g><g><title>`0x7FFE55B59AC8 (1 samples, 0.47%)</title><rect x="56.8720%" y="373" width="0.4739%" height="15" fill="rgb(202,202,60)" fg:x="120" fg:w="1"/><text x="57.1220%" y="383.50"></text></g><g><title>`0x7FFE55B5ADCF (1 samples, 0.47%)</title><rect x="56.8720%" y="357" width="0.4739%" height="15" fill="rgb(222,222,67)" fg:x="120" fg:w="1"/><text x="57.1220%" y="367.50"></text></g><g><title>`0x7FFE5944F554 (1 samples, 0.47%)</title><rect x="56.8720%" y="341" width="0.4739%" height="15" fill="rgb(223,223,67)" fg:x="120" fg:w="1"/><text x="57.1220%" y="351.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::thread::impl$0::new::thread_start (97 samples, 45.97%)</title><rect x="11.8483%" y="1621" width="45.9716%" height="15" fill="rgb(81,193,193)" fg:x="25" fg:w="97"/><text x="12.0983%" y="1631.50">osrs_gph.exe`std::sys::windows::thread::impl$0::new::thread_start</text></g><g><title>osrs_gph.exe`alloc::boxed::impl$47::call_once (97 samples, 45.97%)</title><rect x="11.8483%" y="1605" width="45.9716%" height="15" fill="rgb(82,195,195)" fg:x="25" fg:w="97"/><text x="12.0983%" y="1615.50">osrs_gph.exe`alloc::boxed::impl$47::call_once</text></g><g><title>osrs_gph.exe`alloc::boxed::impl$47::call_once (97 samples, 45.97%)</title><rect x="11.8483%" y="1589" width="45.9716%" height="15" fill="rgb(75,188,188)" fg:x="25" fg:w="97"/><text x="12.0983%" y="1599.50">osrs_gph.exe`alloc::boxed::impl$47::call_once</text></g><g><title>osrs_gph.exe`alloc::boxed::impl$8::drop (97 samples, 45.97%)</title><rect x="11.8483%" y="1573" width="45.9716%" height="15" fill="rgb(61,175,175)" fg:x="25" fg:w="97"/><text x="12.0983%" y="1583.50">osrs_gph.exe`alloc::boxed::impl$8::drop</text></g><g><title>osrs_gph.exe`core::alloc::layout::Layout::for_value_raw (97 samples, 45.97%)</title><rect x="11.8483%" y="1557" width="45.9716%" height="15" fill="rgb(108,218,218)" fg:x="25" fg:w="97"/><text x="12.0983%" y="1567.50">osrs_gph.exe`core::alloc::layout::Layout::for_value_raw</text></g><g><title>osrs_gph.exe`core::mem::size_of_val_raw (97 samples, 45.97%)</title><rect x="11.8483%" y="1541" width="45.9716%" height="15" fill="rgb(57,171,171)" fg:x="25" fg:w="97"/><text x="12.0983%" y="1551.50">osrs_gph.exe`core::mem::size_of_val_raw</text></g><g><title>osrs_gph.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;reqwest::blocking::client::impl$8::new::closure_env$0,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;reqwest::blocking::client::impl$8::new::closure_env$0,tuple$ (44 samples, 20.85%)</title><rect x="36.9668%" y="1525" width="20.8531%" height="15" fill="rgb(107,217,217)" fg:x="78" fg:w="44"/><text x="37.2168%" y="1535.50">osrs_gph.exe`core::ops::function:..</text></g><g><title>osrs_gph.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;reqwest::blocking::client::impl$8::new::closure_env$0,tuple$ (44 samples, 20.85%)</title><rect x="36.9668%" y="1509" width="20.8531%" height="15" fill="rgb(94,206,206)" fg:x="78" fg:w="44"/><text x="37.2168%" y="1519.50">osrs_gph.exe`std::thread::impl$0:..</text></g><g><title>osrs_gph.exe`alloc::sync::impl$29::deref(alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$ (44 samples, 20.85%)</title><rect x="36.9668%" y="1493" width="20.8531%" height="15" fill="rgb(102,213,213)" fg:x="78" fg:w="44"/><text x="37.2168%" y="1503.50">osrs_gph.exe`alloc::sync::impl$29..</text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::inner (44 samples, 20.85%)</title><rect x="36.9668%" y="1477" width="20.8531%" height="15" fill="rgb(71,184,184)" fg:x="78" fg:w="44"/><text x="37.2168%" y="1487.50">osrs_gph.exe`alloc::sync::Arc&lt;std..</text></g><g><title>osrs_gph.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt; &gt; &gt;::as_ref (44 samples, 20.85%)</title><rect x="36.9668%" y="1461" width="20.8531%" height="15" fill="rgb(89,201,201)" fg:x="78" fg:w="44"/><text x="37.2168%" y="1471.50">osrs_gph.exe`core::ptr::non_null:..</text></g><g><title>osrs_gph.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;reqwest::blocking::client::impl$8::new::closure_env$0,tuple$&lt;&gt; &gt; (44 samples, 20.85%)</title><rect x="36.9668%" y="1445" width="20.8531%" height="15" fill="rgb(78,190,190)" fg:x="78" fg:w="44"/><text x="37.2168%" y="1455.50">osrs_gph.exe`std::sys_common::bac..</text></g><g><title>osrs_gph.exe`reqwest::blocking::client::impl$8::new::closure$0 (44 samples, 20.85%)</title><rect x="36.9668%" y="1429" width="20.8531%" height="15" fill="rgb(54,169,169)" fg:x="78" fg:w="44"/><text x="37.2168%" y="1439.50">osrs_gph.exe`reqwest::blocking::c..</text></g><g><title>osrs_gph.exe`log::max_level (2 samples, 0.95%)</title><rect x="56.8720%" y="1413" width="0.9479%" height="15" fill="rgb(56,171,171)" fg:x="120" fg:w="2"/><text x="57.1220%" y="1423.50"></text></g><g><title>osrs_gph.exe`core::sync::atomic::AtomicUsize::load (2 samples, 0.95%)</title><rect x="56.8720%" y="1397" width="0.9479%" height="15" fill="rgb(50,165,165)" fg:x="120" fg:w="2"/><text x="57.1220%" y="1407.50"></text></g><g><title>osrs_gph.exe`core::sync::atomic::atomic_load (2 samples, 0.95%)</title><rect x="56.8720%" y="1381" width="0.9479%" height="15" fill="rgb(52,167,167)" fg:x="120" fg:w="2"/><text x="57.1220%" y="1391.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place&lt;tokio::runtime::blocking::pool::BlockingPool&gt; (1 samples, 0.47%)</title><rect x="57.3460%" y="1365" width="0.4739%" height="15" fill="rgb(91,203,203)" fg:x="121" fg:w="1"/><text x="57.5960%" y="1375.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.47%)</title><rect x="57.3460%" y="1349" width="0.4739%" height="15" fill="rgb(95,206,206)" fg:x="121" fg:w="1"/><text x="57.5960%" y="1359.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::sync::Arc (1 samples, 0.47%)</title><rect x="57.3460%" y="1333" width="0.4739%" height="15" fill="rgb(52,167,167)" fg:x="121" fg:w="1"/><text x="57.5960%" y="1343.50"></text></g><g><title>osrs_gph.exe`alloc::sync::impl$33::drop(alloc::sync::Arc (1 samples, 0.47%)</title><rect x="57.3460%" y="1317" width="0.4739%" height="15" fill="rgb(105,215,215)" fg:x="121" fg:w="1"/><text x="57.5960%" y="1327.50"></text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;tokio::runtime::blocking::pool::Inner,alloc::alloc::Global&gt;::inner (1 samples, 0.47%)</title><rect x="57.3460%" y="1301" width="0.4739%" height="15" fill="rgb(51,165,165)" fg:x="121" fg:w="1"/><text x="57.5960%" y="1311.50"></text></g><g><title>osrs_gph.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;tokio::runtime::blocking::pool::Inner&gt; &gt;::as_ref (1 samples, 0.47%)</title><rect x="57.3460%" y="1285" width="0.4739%" height="15" fill="rgb(51,166,166)" fg:x="121" fg:w="1"/><text x="57.5960%" y="1295.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::blocking::pool::BlockingPool::shutdown(enum2$&lt;core::option::Option (1 samples, 0.47%)</title><rect x="57.3460%" y="1269" width="0.4739%" height="15" fill="rgb(84,196,196)" fg:x="121" fg:w="1"/><text x="57.5960%" y="1279.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::blocking::shutdown::Receiver::wait(enum2$&lt;core::option::Option (1 samples, 0.47%)</title><rect x="57.3460%" y="1253" width="0.4739%" height="15" fill="rgb(102,213,213)" fg:x="121" fg:w="1"/><text x="57.5960%" y="1263.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::context::blocking::BlockingRegionGuard::block_on(tokio::sync::oneshot::Receiver&lt;tuple$ (1 samples, 0.47%)</title><rect x="57.3460%" y="1237" width="0.4739%" height="15" fill="rgb(102,212,212)" fg:x="121" fg:w="1"/><text x="57.5960%" y="1247.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::park::CachedParkThread::block_on&lt;ref_mut$&lt;tokio::sync::oneshot::Receiver&lt;tuple$&lt;&gt; &gt; &gt; &gt;(tokio::sync::oneshot::Receiver&lt;tuple$ (1 samples, 0.47%)</title><rect x="57.3460%" y="1221" width="0.4739%" height="15" fill="rgb(52,167,167)" fg:x="121" fg:w="1"/><text x="57.5960%" y="1231.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::coop::budget(tokio::runtime::park::impl$4::block_on::closure_env$0&lt;ref_mut$&lt;tokio::sync::oneshot::Receiver&lt;tuple$ (1 samples, 0.47%)</title><rect x="57.3460%" y="1205" width="0.4739%" height="15" fill="rgb(104,215,215)" fg:x="121" fg:w="1"/><text x="57.5960%" y="1215.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::coop::with_budget(tokio::runtime::coop::Budget, tokio::runtime::park::impl$4::block_on::closure_env$0&lt;ref_mut$&lt;tokio::sync::oneshot::Receiver&lt;tuple$ (1 samples, 0.47%)</title><rect x="57.3460%" y="1189" width="0.4739%" height="15" fill="rgb(107,217,217)" fg:x="121" fg:w="1"/><text x="57.5960%" y="1199.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::context::budget(tokio::runtime::coop::with_budget::closure_env$0&lt;enum2$&lt;core::task::poll::Poll&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,tokio::sync::oneshot::error::RecvError&gt; &gt; &gt; &gt;,tokio::runtime::park::impl$4::block_on::closure_env$0&lt;ref_mut$&lt;tokio::sync::oneshot::Receiver&lt;tuple$ (1 samples, 0.47%)</title><rect x="57.3460%" y="1173" width="0.4739%" height="15" fill="rgb(91,202,202)" fg:x="121" fg:w="1"/><text x="57.5960%" y="1183.50"></text></g><g><title>osrs_gph.exe`std::thread::local::LocalKey&lt;tokio::runtime::context::Context&gt;::try_with(tokio::runtime::context::budget::closure_env$0&lt;tokio::runtime::coop::with_budget::ResetGuard,tokio::runtime::coop::with_budget::closure_env$0&lt;enum2$&lt;core::task::poll::Poll&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,tokio::sync::oneshot::error::RecvError&gt; &gt; &gt; &gt;,tokio::runtime::park::impl$4::block_on::closure_env$0&lt;ref_mut$&lt;tokio::sync::oneshot::Receiver&lt;tuple$ (1 samples, 0.47%)</title><rect x="57.3460%" y="1157" width="0.4739%" height="15" fill="rgb(53,168,168)" fg:x="121" fg:w="1"/><text x="57.5960%" y="1167.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::context::CONTEXT::__getit(enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;core::option::Option (1 samples, 0.47%)</title><rect x="57.3460%" y="1141" width="0.4739%" height="15" fill="rgb(75,188,188)" fg:x="121" fg:w="1"/><text x="57.5960%" y="1151.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;u8&gt;::get (1 samples, 0.47%)</title><rect x="57.3460%" y="1125" width="0.4739%" height="15" fill="rgb(101,212,212)" fg:x="121" fg:w="1"/><text x="57.5960%" y="1135.50"></text></g><g><title>osrs_gph.exe`tokio::runtime::park::Inner::park (1 samples, 0.47%)</title><rect x="57.3460%" y="1109" width="0.4739%" height="15" fill="rgb(77,189,189)" fg:x="121" fg:w="1"/><text x="57.5960%" y="1119.50"></text></g><g><title>`0x7FFE56B72E49 (1 samples, 0.47%)</title><rect x="57.3460%" y="1093" width="0.4739%" height="15" fill="rgb(183,183,53)" fg:x="121" fg:w="1"/><text x="57.5960%" y="1103.50"></text></g><g><title>`0x7FFE594191BD (1 samples, 0.47%)</title><rect x="57.3460%" y="1077" width="0.4739%" height="15" fill="rgb(178,178,51)" fg:x="121" fg:w="1"/><text x="57.5960%" y="1087.50"></text></g><g><title>osrs_gph.exe`winnow::parser::impl$14::parse_next(tuple$&lt;winnow::combinator::core::opt::closure_env$0&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,ref$&lt;slice2$&lt;u8&gt; &gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,ref$&lt;array$&lt;u8,3&gt; &gt; &gt;,toml_edit::parser::document::parse_ws::closure_env$0,winnow::combinator::parser::Map&lt;winnow::combinator::multi::repeat::closure_env$0&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,tuple$&lt;toml_edit::parser::document::document::closure_env$2,toml_edit::parser::document::parse_ws::closure_env$0&gt;,core::ops::range::RangeFrom&lt;usize&gt; &gt;,toml_edit::parser::document::document::closure_env$0,winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,enum2$&lt;winnow::error::ErrMode&lt;winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref_mut$&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt; &gt;)&gt;*, winnow::stream::Located&lt;ref$ (1 samples, 0.47%)</title><rect x="57.8199%" y="1141" width="0.4739%" height="15" fill="rgb(78,190,190)" fg:x="122" fg:w="1"/><text x="58.0699%" y="1151.50"></text></g><g><title>osrs_gph.exe`winnow::combinator::parser::impl$3::parse_next(winnow::combinator::parser::Map&lt;winnow::combinator::multi::repeat::closure_env$0&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,tuple$&lt;toml_edit::parser::document::document::closure_env$2,toml_edit::parser::document::parse_ws::closure_env$0&gt;,core::ops::range::RangeFrom&lt;usize&gt; &gt;,toml_edit::parser::document::document::closure_env$0,winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt; &gt;*, winnow::stream::Located&lt;ref$ (1 samples, 0.47%)</title><rect x="57.8199%" y="1125" width="0.4739%" height="15" fill="rgb(94,205,205)" fg:x="122" fg:w="1"/><text x="58.0699%" y="1135.50"></text></g><g><title>osrs_gph.exe`winnow::combinator::multi::repeat0_&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,tuple$&lt;toml_edit::parser::document::document::closure_env$2,toml_edit::parser::document::parse_ws::closure_env$0&gt; &gt;(tuple$&lt;toml_edit::parser::document::document::closure_env$2,toml_edit::parser::document::parse_ws::closure_env$0&gt;*, winnow::stream::Located&lt;ref$ (1 samples, 0.47%)</title><rect x="57.8199%" y="1109" width="0.4739%" height="15" fill="rgb(78,191,191)" fg:x="122" fg:w="1"/><text x="58.0699%" y="1119.50"></text></g><g><title>osrs_gph.exe`winnow::parser::impl$12::parse_next(tuple$&lt;toml_edit::parser::document::document::closure_env$2,toml_edit::parser::document::parse_ws::closure_env$0&gt;*, winnow::stream::Located&lt;ref$ (1 samples, 0.47%)</title><rect x="57.8199%" y="1093" width="0.4739%" height="15" fill="rgb(67,181,181)" fg:x="122" fg:w="1"/><text x="58.0699%" y="1103.50"></text></g><g><title>osrs_gph.exe`winnow::parser::impl$0::parse_next(toml_edit::parser::document::document::closure_env$2*, winnow::stream::Located&lt;ref$ (1 samples, 0.47%)</title><rect x="57.8199%" y="1077" width="0.4739%" height="15" fill="rgb(97,208,208)" fg:x="122" fg:w="1"/><text x="58.0699%" y="1087.50"></text></g><g><title>osrs_gph.exe`toml_edit::parser::document::document::closure$2(toml_edit::parser::document::document::closure_env$2*, winnow::stream::Located&lt;ref$ (1 samples, 0.47%)</title><rect x="57.8199%" y="1061" width="0.4739%" height="15" fill="rgb(109,219,219)" fg:x="122" fg:w="1"/><text x="58.0699%" y="1071.50"></text></g><g><title>osrs_gph.exe`winnow::parser::impl$0::parse_next(toml_edit::parser::document::parse_newline::closure_env$0*, winnow::stream::Located&lt;ref$ (1 samples, 0.47%)</title><rect x="57.8199%" y="1045" width="0.4739%" height="15" fill="rgb(56,171,171)" fg:x="122" fg:w="1"/><text x="58.0699%" y="1055.50"></text></g><g><title>osrs_gph.exe`winnow::combinator::core::cut_err::closure$0(winnow::combinator::core::cut_err::closure_env$0&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,tuple$&lt;&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,toml_edit::parser::document::keyval::closure_env$0&gt;*, winnow::stream::Located&lt;ref$ (1 samples, 0.47%)</title><rect x="57.8199%" y="1029" width="0.4739%" height="15" fill="rgb(101,212,212)" fg:x="122" fg:w="1"/><text x="58.0699%" y="1039.50"></text></g><g><title>osrs_gph.exe`winnow::parser::impl$0::parse_next(toml_edit::parser::document::keyval::closure_env$0*, winnow::stream::Located&lt;ref$ (1 samples, 0.47%)</title><rect x="57.8199%" y="1013" width="0.4739%" height="15" fill="rgb(97,208,208)" fg:x="122" fg:w="1"/><text x="58.0699%" y="1023.50"></text></g><g><title>osrs_gph.exe`toml_edit::parser::document::keyval::closure$0(toml_edit::parser::document::keyval::closure_env$0*, winnow::stream::Located&lt;ref$ (1 samples, 0.47%)</title><rect x="57.8199%" y="997" width="0.4739%" height="15" fill="rgb(73,186,186)" fg:x="122" fg:w="1"/><text x="58.0699%" y="1007.50"></text></g><g><title>osrs_gph.exe`winnow::combinator::parser::impl$5::parse_next(winnow::combinator::parser::TryMap&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;alloc::vec::Vec&lt;toml_edit::key::Key,alloc::alloc::Global&gt;,toml_edit::table::TableKeyValue&gt;,enum2$&lt;winnow::error::ErrMode&lt;winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref_mut$&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt; &gt;),toml_edit::parser::document::keyval::closure$0::closure_env$0,winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;,tuple$&lt;alloc::vec::Vec&lt;toml_edit::key::Key,alloc::alloc::Global&gt;,toml_edit::table::TableKeyValue&gt;,tuple$&lt;&gt;,winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt;,enum2$&lt;toml_edit::parser::error::CustomError&gt; &gt;*, winnow::stream::Located&lt;ref$ (1 samples, 0.47%)</title><rect x="57.8199%" y="981" width="0.4739%" height="15" fill="rgb(94,206,206)" fg:x="122" fg:w="1"/><text x="58.0699%" y="991.50"></text></g><g><title>osrs_gph.exe`toml_edit::parser::document::keyval::closure$0::closure$0(toml_edit::parser::document::keyval::closure$0::closure_env$0*, tuple$&lt;alloc::vec::Vec (1 samples, 0.47%)</title><rect x="57.8199%" y="965" width="0.4739%" height="15" fill="rgb(108,218,218)" fg:x="122" fg:w="1"/><text x="58.0699%" y="975.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(core::cell::RefMut (1 samples, 0.47%)</title><rect x="57.8199%" y="949" width="0.4739%" height="15" fill="rgb(50,165,165)" fg:x="122" fg:w="1"/><text x="58.0699%" y="959.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.47%)</title><rect x="57.8199%" y="933" width="0.4739%" height="15" fill="rgb(101,211,211)" fg:x="122" fg:w="1"/><text x="58.0699%" y="943.50"></text></g><g><title>osrs_gph.exe`core::cell::impl$42::drop (1 samples, 0.47%)</title><rect x="57.8199%" y="917" width="0.4739%" height="15" fill="rgb(78,191,191)" fg:x="122" fg:w="1"/><text x="58.0699%" y="927.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;isize&gt;::set (1 samples, 0.47%)</title><rect x="57.8199%" y="901" width="0.4739%" height="15" fill="rgb(73,186,186)" fg:x="122" fg:w="1"/><text x="58.0699%" y="911.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell&lt;isize&gt;::replace (1 samples, 0.47%)</title><rect x="57.8199%" y="885" width="0.4739%" height="15" fill="rgb(57,171,171)" fg:x="122" fg:w="1"/><text x="58.0699%" y="895.50"></text></g><g><title>osrs_gph.exe`core::mem::replace (1 samples, 0.47%)</title><rect x="57.8199%" y="869" width="0.4739%" height="15" fill="rgb(71,184,184)" fg:x="122" fg:w="1"/><text x="58.0699%" y="879.50"></text></g><g><title>osrs_gph.exe`core::ptr::write (1 samples, 0.47%)</title><rect x="57.8199%" y="853" width="0.4739%" height="15" fill="rgb(86,198,198)" fg:x="122" fg:w="1"/><text x="58.0699%" y="863.50"></text></g><g><title>osrs_gph.exe`toml_edit::parser::state::ParseState::on_keyval(alloc::vec::Vec (1 samples, 0.47%)</title><rect x="57.8199%" y="837" width="0.4739%" height="15" fill="rgb(77,190,190)" fg:x="122" fg:w="1"/><text x="58.0699%" y="847.50"></text></g><g><title>`0x7FFE593D8940 (1 samples, 0.47%)</title><rect x="58.2938%" y="805" width="0.4739%" height="15" fill="rgb(180,180,52)" fg:x="123" fg:w="1"/><text x="58.5438%" y="815.50"></text></g><g><title>`0x7FFE593DD62D (1 samples, 0.47%)</title><rect x="58.2938%" y="789" width="0.4739%" height="15" fill="rgb(197,197,58)" fg:x="123" fg:w="1"/><text x="58.5438%" y="799.50"></text></g><g><title>`0x7FFE5941CDFE (1 samples, 0.47%)</title><rect x="58.2938%" y="773" width="0.4739%" height="15" fill="rgb(186,186,54)" fg:x="123" fg:w="1"/><text x="58.5438%" y="783.50"></text></g><g><title>`0x7FFE5941D04D (1 samples, 0.47%)</title><rect x="58.2938%" y="757" width="0.4739%" height="15" fill="rgb(224,224,67)" fg:x="123" fg:w="1"/><text x="58.5438%" y="767.50"></text></g><g><title>`0x7FFE593D869F (1 samples, 0.47%)</title><rect x="58.2938%" y="741" width="0.4739%" height="15" fill="rgb(188,188,54)" fg:x="123" fg:w="1"/><text x="58.5438%" y="751.50"></text></g><g><title>`0x7FFE56F10CFA (1 samples, 0.47%)</title><rect x="58.2938%" y="725" width="0.4739%" height="15" fill="rgb(176,176,50)" fg:x="123" fg:w="1"/><text x="58.5438%" y="735.50"></text></g><g><title>`0x7FFE56EF6F62 (1 samples, 0.47%)</title><rect x="58.2938%" y="709" width="0.4739%" height="15" fill="rgb(187,187,54)" fg:x="123" fg:w="1"/><text x="58.5438%" y="719.50"></text></g><g><title>`0x7FFE56EF6DC0 (1 samples, 0.47%)</title><rect x="58.2938%" y="693" width="0.4739%" height="15" fill="rgb(207,207,61)" fg:x="123" fg:w="1"/><text x="58.5438%" y="703.50"></text></g><g><title>`0x7FFE593E14E0 (1 samples, 0.47%)</title><rect x="58.2938%" y="677" width="0.4739%" height="15" fill="rgb(200,200,59)" fg:x="123" fg:w="1"/><text x="58.5438%" y="687.50"></text></g><g><title>`0x7FFE593E21CA (1 samples, 0.47%)</title><rect x="58.2938%" y="661" width="0.4739%" height="15" fill="rgb(188,188,54)" fg:x="123" fg:w="1"/><text x="58.5438%" y="671.50"></text></g><g><title>`0x7FFE593E2057 (1 samples, 0.47%)</title><rect x="58.2938%" y="645" width="0.4739%" height="15" fill="rgb(175,175,50)" fg:x="123" fg:w="1"/><text x="58.5438%" y="655.50"></text></g><g><title>`0x7FFE59452DC4 (1 samples, 0.47%)</title><rect x="58.2938%" y="629" width="0.4739%" height="15" fill="rgb(225,225,68)" fg:x="123" fg:w="1"/><text x="58.5438%" y="639.50"></text></g><g><title>`0x7FFE570D55D3 (2 samples, 0.95%)</title><rect x="58.2938%" y="901" width="0.9479%" height="15" fill="rgb(176,176,50)" fg:x="123" fg:w="2"/><text x="58.5438%" y="911.50"></text></g><g><title>`0x7FFE570D7969 (2 samples, 0.95%)</title><rect x="58.2938%" y="885" width="0.9479%" height="15" fill="rgb(215,215,64)" fg:x="123" fg:w="2"/><text x="58.5438%" y="895.50"></text></g><g><title>`0x7FFE570D7E85 (2 samples, 0.95%)</title><rect x="58.2938%" y="869" width="0.9479%" height="15" fill="rgb(186,186,54)" fg:x="123" fg:w="2"/><text x="58.5438%" y="879.50"></text></g><g><title>`0x7FFE56B26452 (2 samples, 0.95%)</title><rect x="58.2938%" y="853" width="0.9479%" height="15" fill="rgb(199,199,58)" fg:x="123" fg:w="2"/><text x="58.5438%" y="863.50"></text></g><g><title>`0x7FFE593DA25A (2 samples, 0.95%)</title><rect x="58.2938%" y="837" width="0.9479%" height="15" fill="rgb(224,224,68)" fg:x="123" fg:w="2"/><text x="58.5438%" y="847.50"></text></g><g><title>`0x7FFE593C8CAC (2 samples, 0.95%)</title><rect x="58.2938%" y="821" width="0.9479%" height="15" fill="rgb(198,198,58)" fg:x="123" fg:w="2"/><text x="58.5438%" y="831.50"></text></g><g><title>`0x7FFE593D88B6 (1 samples, 0.47%)</title><rect x="58.7678%" y="805" width="0.4739%" height="15" fill="rgb(182,182,52)" fg:x="124" fg:w="1"/><text x="59.0178%" y="815.50"></text></g><g><title>`0x7FFE593DDDA9 (1 samples, 0.47%)</title><rect x="58.7678%" y="789" width="0.4739%" height="15" fill="rgb(217,217,65)" fg:x="124" fg:w="1"/><text x="59.0178%" y="799.50"></text></g><g><title>`0x7FFE593DCE29 (1 samples, 0.47%)</title><rect x="58.7678%" y="773" width="0.4739%" height="15" fill="rgb(208,208,62)" fg:x="124" fg:w="1"/><text x="59.0178%" y="783.50"></text></g><g><title>`0x7FFE593DC254 (1 samples, 0.47%)</title><rect x="58.7678%" y="757" width="0.4739%" height="15" fill="rgb(217,217,65)" fg:x="124" fg:w="1"/><text x="59.0178%" y="767.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.47%)</title><rect x="58.7678%" y="741" width="0.4739%" height="15" fill="rgb(177,177,50)" fg:x="124" fg:w="1"/><text x="59.0178%" y="751.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.47%)</title><rect x="58.7678%" y="725" width="0.4739%" height="15" fill="rgb(207,207,61)" fg:x="124" fg:w="1"/><text x="59.0178%" y="735.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.47%)</title><rect x="58.7678%" y="709" width="0.4739%" height="15" fill="rgb(225,225,68)" fg:x="124" fg:w="1"/><text x="59.0178%" y="719.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;toml_edit::de::Deserializer,toml_edit::de::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;toml_edit::de::Deserializer,toml_edit::de::Error&gt; &gt;, toml::de::Error (*) (4 samples, 1.90%)</title><rect x="57.8199%" y="1269" width="1.8957%" height="15" fill="rgb(61,175,175)" fg:x="122" fg:w="4"/><text x="58.0699%" y="1279.50">o..</text></g><g><title>osrs_gph.exe`toml_edit::de::impl$7::from_str(ref$ (4 samples, 1.90%)</title><rect x="57.8199%" y="1253" width="1.8957%" height="15" fill="rgb(52,167,167)" fg:x="122" fg:w="4"/><text x="58.0699%" y="1263.50">o..</text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;toml_edit::document::Document,toml_edit::error::TomlError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;toml_edit::document::Document,toml_edit::error::TomlError&gt; &gt;, toml_edit::de::Error (*) (4 samples, 1.90%)</title><rect x="57.8199%" y="1237" width="1.8957%" height="15" fill="rgb(71,184,184)" fg:x="122" fg:w="4"/><text x="58.0699%" y="1247.50">o..</text></g><g><title>osrs_gph.exe`toml_edit::parser::parse_document(ref$ (4 samples, 1.90%)</title><rect x="57.8199%" y="1221" width="1.8957%" height="15" fill="rgb(80,192,192)" fg:x="122" fg:w="4"/><text x="58.0699%" y="1231.50">o..</text></g><g><title>osrs_gph.exe`winnow::parser::Parser::parse(enum2$&lt;core::result::Result&lt;toml_edit::document::Document,enum2$&lt;winnow::error::ErrMode&lt;winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt; &gt; &gt; &gt; &gt; (**)(winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt;*), winnow::stream::Located&lt;ref$ (4 samples, 1.90%)</title><rect x="57.8199%" y="1205" width="1.8957%" height="15" fill="rgb(71,184,184)" fg:x="122" fg:w="4"/><text x="58.0699%" y="1215.50">o..</text></g><g><title>osrs_gph.exe`winnow::parser::impl$12::parse_next(tuple$&lt;winnow::combinator::parser::ByRef&lt;enum2$&lt;core::result::Result&lt;toml_edit::document::Document,enum2$&lt;winnow::error::ErrMode&lt;winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref_mut$&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt; &gt;)&gt;,enum2$&lt;core::result::Result&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,enum2$&lt;winnow::error::ErrMode&lt;winnow::error::ContextError&lt;enum2$&lt;winnow::error::StrContext&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref_mut$&lt;winnow::stream::Located&lt;ref$&lt;winnow::stream::BStr&gt; &gt; &gt;)&gt;*, winnow::stream::Located&lt;ref$ (4 samples, 1.90%)</title><rect x="57.8199%" y="1189" width="1.8957%" height="15" fill="rgb(109,219,219)" fg:x="122" fg:w="4"/><text x="58.0699%" y="1199.50">o..</text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;toml_edit::document::Document,enum2$&lt;winnow::error::ErrMode&lt;winnow::error::ContextError&lt;enum2$ (4 samples, 1.90%)</title><rect x="57.8199%" y="1173" width="1.8957%" height="15" fill="rgb(86,198,198)" fg:x="122" fg:w="4"/><text x="58.0699%" y="1183.50">o..</text></g><g><title>osrs_gph.exe`toml_edit::parser::document::document(winnow::stream::Located&lt;ref$ (4 samples, 1.90%)</title><rect x="57.8199%" y="1157" width="1.8957%" height="15" fill="rgb(98,209,209)" fg:x="122" fg:w="4"/><text x="58.0699%" y="1167.50">o..</text></g><g><title>osrs_gph.exe`core::cell::RefCell&lt;toml_edit::parser::state::ParseState&gt;::new (3 samples, 1.42%)</title><rect x="58.2938%" y="1141" width="1.4218%" height="15" fill="rgb(100,211,211)" fg:x="123" fg:w="3"/><text x="58.5438%" y="1151.50"></text></g><g><title>osrs_gph.exe`toml_edit::parser::state::impl$1::default (3 samples, 1.42%)</title><rect x="58.2938%" y="1125" width="1.4218%" height="15" fill="rgb(67,180,180)" fg:x="123" fg:w="3"/><text x="58.5438%" y="1135.50"></text></g><g><title>osrs_gph.exe`toml_edit::table::Table::new (3 samples, 1.42%)</title><rect x="58.2938%" y="1109" width="1.4218%" height="15" fill="rgb(106,216,216)" fg:x="123" fg:w="3"/><text x="58.5438%" y="1119.50"></text></g><g><title>osrs_gph.exe`toml_edit::table::impl$15::default (3 samples, 1.42%)</title><rect x="58.2938%" y="1093" width="1.4218%" height="15" fill="rgb(73,186,186)" fg:x="123" fg:w="3"/><text x="58.5438%" y="1103.50"></text></g><g><title>osrs_gph.exe`indexmap::map::impl$16::default (3 samples, 1.42%)</title><rect x="58.2938%" y="1077" width="1.4218%" height="15" fill="rgb(76,189,189)" fg:x="123" fg:w="3"/><text x="58.5438%" y="1087.50"></text></g><g><title>osrs_gph.exe`indexmap::map::IndexMap&lt;toml_edit::internal_string::InternalString,toml_edit::table::TableKeyValue,std::collections::hash::map::RandomState&gt;::with_capacity_and_hasher (3 samples, 1.42%)</title><rect x="58.2938%" y="1061" width="1.4218%" height="15" fill="rgb(71,184,184)" fg:x="123" fg:w="3"/><text x="58.5438%" y="1071.50"></text></g><g><title>osrs_gph.exe`indexmap::map::IndexMap&lt;toml_edit::internal_string::InternalString,toml_edit::table::TableKeyValue,std::collections::hash::map::RandomState&gt;::with_hasher (3 samples, 1.42%)</title><rect x="58.2938%" y="1045" width="1.4218%" height="15" fill="rgb(93,205,205)" fg:x="123" fg:w="3"/><text x="58.5438%" y="1055.50"></text></g><g><title>osrs_gph.exe`std::sys::common::thread_local::fast_local::Key&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_initialize&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt;,std::collections::hash::map::impl$82::new::KEYS::__getit::closure_env$0&gt; (3 samples, 1.42%)</title><rect x="58.2938%" y="1029" width="1.4218%" height="15" fill="rgb(77,189,189)" fg:x="123" fg:w="3"/><text x="58.5438%" y="1039.50"></text></g><g><title>osrs_gph.exe`std::sys::common::thread_local::lazy::LazyKeyInner&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::initialize (3 samples, 1.42%)</title><rect x="58.2938%" y="1013" width="1.4218%" height="15" fill="rgb(55,170,170)" fg:x="123" fg:w="3"/><text x="58.5438%" y="1023.50"></text></g><g><title>osrs_gph.exe`core::mem::replace(enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (3 samples, 1.42%)</title><rect x="58.2938%" y="997" width="1.4218%" height="15" fill="rgb(71,184,184)" fg:x="123" fg:w="3"/><text x="58.5438%" y="1007.50"></text></g><g><title>osrs_gph.exe`core::ptr::write(enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (3 samples, 1.42%)</title><rect x="58.2938%" y="981" width="1.4218%" height="15" fill="rgb(87,199,199)" fg:x="123" fg:w="3"/><text x="58.5438%" y="991.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::rand::hashmap_random_keys (3 samples, 1.42%)</title><rect x="58.2938%" y="965" width="1.4218%" height="15" fill="rgb(57,171,171)" fg:x="123" fg:w="3"/><text x="58.5438%" y="975.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::c::nt_success (3 samples, 1.42%)</title><rect x="58.2938%" y="949" width="1.4218%" height="15" fill="rgb(63,177,177)" fg:x="123" fg:w="3"/><text x="58.5438%" y="959.50"></text></g><g><title>`0x7FFE570D177C (3 samples, 1.42%)</title><rect x="58.2938%" y="933" width="1.4218%" height="15" fill="rgb(226,226,68)" fg:x="123" fg:w="3"/><text x="58.5438%" y="943.50"></text></g><g><title>`0x7FFE570D18D6 (3 samples, 1.42%)</title><rect x="58.2938%" y="917" width="1.4218%" height="15" fill="rgb(217,217,65)" fg:x="123" fg:w="3"/><text x="58.5438%" y="927.50"></text></g><g><title>`0x7FFE570D46FF (1 samples, 0.47%)</title><rect x="59.2417%" y="901" width="0.4739%" height="15" fill="rgb(218,218,65)" fg:x="125" fg:w="1"/><text x="59.4917%" y="911.50"></text></g><g><title>`0x7FFE570D3E20 (1 samples, 0.47%)</title><rect x="59.2417%" y="885" width="0.4739%" height="15" fill="rgb(180,180,52)" fg:x="125" fg:w="1"/><text x="59.4917%" y="895.50"></text></g><g><title>`0x7FFE570D62C9 (1 samples, 0.47%)</title><rect x="59.2417%" y="869" width="0.4739%" height="15" fill="rgb(199,199,58)" fg:x="125" fg:w="1"/><text x="59.4917%" y="879.50"></text></g><g><title>`0x7FFE570D6413 (1 samples, 0.47%)</title><rect x="59.2417%" y="853" width="0.4739%" height="15" fill="rgb(208,208,62)" fg:x="125" fg:w="1"/><text x="59.4917%" y="863.50"></text></g><g><title>`0x7FFE5944F454 (1 samples, 0.47%)</title><rect x="59.2417%" y="837" width="0.4739%" height="15" fill="rgb(192,192,56)" fg:x="125" fg:w="1"/><text x="59.4917%" y="847.50"></text></g><g><title>osrs_gph.exe`toml::table::impl$2::from_str(ref$ (5 samples, 2.37%)</title><rect x="57.8199%" y="1349" width="2.3697%" height="15" fill="rgb(79,192,192)" fg:x="122" fg:w="5"/><text x="58.0699%" y="1359.50">os..</text></g><g><title>osrs_gph.exe`toml::de::from_str(ref$ (5 samples, 2.37%)</title><rect x="57.8199%" y="1333" width="2.3697%" height="15" fill="rgb(83,196,196)" fg:x="122" fg:w="5"/><text x="58.0699%" y="1343.50">os..</text></g><g><title>osrs_gph.exe`toml::map::impl$8::deserialize (5 samples, 2.37%)</title><rect x="57.8199%" y="1317" width="2.3697%" height="15" fill="rgb(56,171,171)" fg:x="122" fg:w="5"/><text x="58.0699%" y="1327.50">os..</text></g><g><title>osrs_gph.exe`toml::de::impl$5::deserialize_map (5 samples, 2.37%)</title><rect x="57.8199%" y="1301" width="2.3697%" height="15" fill="rgb(98,209,209)" fg:x="122" fg:w="5"/><text x="58.0699%" y="1311.50">os..</text></g><g><title>osrs_gph.exe`toml::de::impl$5::deserialize_any (5 samples, 2.37%)</title><rect x="57.8199%" y="1285" width="2.3697%" height="15" fill="rgb(91,203,203)" fg:x="122" fg:w="5"/><text x="58.0699%" y="1295.50">os..</text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;toml::map::Map&lt;alloc::string::String,enum2$&lt;toml::value::Value&gt; &gt;,toml_edit::de::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;toml::map::Map&lt;alloc::string::String,enum2$&lt;toml::value::Value&gt; &gt;,toml_edit::de::Error&gt; &gt;, toml::de::Error (*) (1 samples, 0.47%)</title><rect x="59.7156%" y="1269" width="0.4739%" height="15" fill="rgb(72,185,185)" fg:x="126" fg:w="1"/><text x="59.9656%" y="1279.50"></text></g><g><title>osrs_gph.exe`toml_edit::de::impl$8::deserialize_any&lt;toml::map::impl$8::deserialize::Visitor&gt; (1 samples, 0.47%)</title><rect x="59.7156%" y="1253" width="0.4739%" height="15" fill="rgb(101,212,212)" fg:x="126" fg:w="1"/><text x="59.9656%" y="1263.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;toml::map::Map&lt;alloc::string::String,enum2$&lt;toml::value::Value&gt; &gt;,toml_edit::de::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;toml::map::Map&lt;alloc::string::String,enum2$&lt;toml::value::Value&gt; &gt;,toml_edit::de::Error&gt; &gt;, toml_edit::de::impl$8::deserialize_any::closure_env$0 (1 samples, 0.47%)</title><rect x="59.7156%" y="1237" width="0.4739%" height="15" fill="rgb(67,180,180)" fg:x="126" fg:w="1"/><text x="59.9656%" y="1247.50"></text></g><g><title>osrs_gph.exe`toml_edit::de::value::impl$1::deserialize_any&lt;toml::map::impl$8::deserialize::Visitor&gt; (1 samples, 0.47%)</title><rect x="59.7156%" y="1221" width="0.4739%" height="15" fill="rgb(88,200,200)" fg:x="126" fg:w="1"/><text x="59.9656%" y="1231.50"></text></g><g><title>osrs_gph.exe`std::io::default_read_to_string (1 samples, 0.47%)</title><rect x="60.1896%" y="1333" width="0.4739%" height="15" fill="rgb(87,199,199)" fg:x="127" fg:w="1"/><text x="60.4396%" y="1343.50"></text></g><g><title>osrs_gph.exe`std::io::append_to_string (1 samples, 0.47%)</title><rect x="60.1896%" y="1317" width="0.4739%" height="15" fill="rgb(55,169,169)" fg:x="127" fg:w="1"/><text x="60.4396%" y="1327.50"></text></g><g><title>osrs_gph.exe`std::io::default_read_to_end&lt;std::fs::File&gt; (1 samples, 0.47%)</title><rect x="60.1896%" y="1301" width="0.4739%" height="15" fill="rgb(107,217,217)" fg:x="127" fg:w="1"/><text x="60.4396%" y="1311.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::handle::Handle::read_buf (1 samples, 0.47%)</title><rect x="60.1896%" y="1285" width="0.4739%" height="15" fill="rgb(101,211,211)" fg:x="127" fg:w="1"/><text x="60.4396%" y="1295.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::handle::Handle::synchronous_read (1 samples, 0.47%)</title><rect x="60.1896%" y="1269" width="0.4739%" height="15" fill="rgb(52,167,167)" fg:x="127" fg:w="1"/><text x="60.4396%" y="1279.50"></text></g><g><title>`0x7FFE5944F434 (1 samples, 0.47%)</title><rect x="60.1896%" y="1253" width="0.4739%" height="15" fill="rgb(175,175,50)" fg:x="127" fg:w="1"/><text x="60.4396%" y="1263.50"></text></g><g><title>osrs_gph.exe`toml::map::impl$4::index(toml::map::Map&lt;alloc::string::String,enum2$&lt;toml::value::Value&gt; &gt;*, ref$ (7 samples, 3.32%)</title><rect x="57.8199%" y="1429" width="3.3175%" height="15" fill="rgb(63,176,176)" fg:x="122" fg:w="7"/><text x="58.0699%" y="1439.50">osr..</text></g><g><title>osrs_gph.exe`alloc::collections::btree::map::impl$88::index(alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,enum2$&lt;toml::value::Value&gt;,alloc::alloc::Global&gt;*, ref$ (7 samples, 3.32%)</title><rect x="57.8199%" y="1413" width="3.3175%" height="15" fill="rgb(76,189,189)" fg:x="122" fg:w="7"/><text x="58.0699%" y="1423.50">osr..</text></g><g><title>osrs_gph.exe`alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,enum2$&lt;toml::value::Value&gt;,alloc::alloc::Global&gt;::get(ref$ (7 samples, 3.32%)</title><rect x="57.8199%" y="1397" width="3.3175%" height="15" fill="rgb(97,208,208)" fg:x="122" fg:w="7"/><text x="58.0699%" y="1407.50">osr..</text></g><g><title>osrs_gph.exe`enum2$&lt;core::option::Option&lt;alloc::collections::btree::node::NodeRef&lt;enum2$&lt;alloc::collections::btree::node::marker::Owned&gt;,alloc::string::String,enum2$&lt;toml::value::Value&gt;,enum2$&lt;alloc::collections::btree::node::marker::LeafOrInternal&gt; &gt; &gt; &gt;::as_ref (7 samples, 3.32%)</title><rect x="57.8199%" y="1381" width="3.3175%" height="15" fill="rgb(52,167,167)" fg:x="122" fg:w="7"/><text x="58.0699%" y="1391.50">osr..</text></g><g><title>osrs_gph.exe`osrs_gph::convenience::load_config&lt;ref$&lt;str$&gt; &gt;(ref$ (7 samples, 3.32%)</title><rect x="57.8199%" y="1365" width="3.3175%" height="15" fill="rgb(81,193,193)" fg:x="122" fg:w="7"/><text x="58.0699%" y="1375.50">osr..</text></g><g><title>osrs_gph.exe`std::fs::read_to_string::inner (2 samples, 0.95%)</title><rect x="60.1896%" y="1349" width="0.9479%" height="15" fill="rgb(88,199,199)" fg:x="127" fg:w="2"/><text x="60.4396%" y="1359.50"></text></g><g><title>osrs_gph.exe`std::fs::File::open (1 samples, 0.47%)</title><rect x="60.6635%" y="1333" width="0.4739%" height="15" fill="rgb(64,178,178)" fg:x="128" fg:w="1"/><text x="60.9135%" y="1343.50"></text></g><g><title>osrs_gph.exe`std::fs::OpenOptions::open (1 samples, 0.47%)</title><rect x="60.6635%" y="1317" width="0.4739%" height="15" fill="rgb(79,191,191)" fg:x="128" fg:w="1"/><text x="60.9135%" y="1327.50"></text></g><g><title>osrs_gph.exe`std::fs::OpenOptions::_open (1 samples, 0.47%)</title><rect x="60.6635%" y="1301" width="0.4739%" height="15" fill="rgb(100,211,211)" fg:x="128" fg:w="1"/><text x="60.9135%" y="1311.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::fs::File::open (1 samples, 0.47%)</title><rect x="60.6635%" y="1285" width="0.4739%" height="15" fill="rgb(103,213,213)" fg:x="128" fg:w="1"/><text x="60.9135%" y="1295.50"></text></g><g><title>osrs_gph.exe`core::convert::impl$6::try_into (1 samples, 0.47%)</title><rect x="60.6635%" y="1269" width="0.4739%" height="15" fill="rgb(74,187,187)" fg:x="128" fg:w="1"/><text x="60.9135%" y="1279.50"></text></g><g><title>osrs_gph.exe`std::os::windows::io::handle::impl$12::try_from (1 samples, 0.47%)</title><rect x="60.6635%" y="1253" width="0.4739%" height="15" fill="rgb(50,165,165)" fg:x="128" fg:w="1"/><text x="60.9135%" y="1263.50"></text></g><g><title>`0x7FFE56B24CDC (1 samples, 0.47%)</title><rect x="60.6635%" y="1237" width="0.4739%" height="15" fill="rgb(194,194,57)" fg:x="128" fg:w="1"/><text x="60.9135%" y="1247.50"></text></g><g><title>`0x7FFE56B25370 (1 samples, 0.47%)</title><rect x="60.6635%" y="1221" width="0.4739%" height="15" fill="rgb(215,215,64)" fg:x="128" fg:w="1"/><text x="60.9135%" y="1231.50"></text></g><g><title>`0x7FFE5944FE14 (1 samples, 0.47%)</title><rect x="60.6635%" y="1205" width="0.4739%" height="15" fill="rgb(219,219,66)" fg:x="128" fg:w="1"/><text x="60.9135%" y="1215.50"></text></g><g><title>osrs_gph.exe`osrs_gph::logging::Logging&lt;osrs_gph::file_io::FileIO&lt;ref$&lt;str$&gt; &gt; &gt;::file&lt;ref$&lt;str$&gt; &gt; (2 samples, 0.95%)</title><rect x="61.1374%" y="1397" width="0.9479%" height="15" fill="rgb(107,217,217)" fg:x="129" fg:w="2"/><text x="61.3874%" y="1407.50"></text></g><g><title>osrs_gph.exe`std::fs::OpenOptions::open(ref$ (2 samples, 0.95%)</title><rect x="61.1374%" y="1381" width="0.9479%" height="15" fill="rgb(101,211,211)" fg:x="129" fg:w="2"/><text x="61.3874%" y="1391.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::fs::File::open (2 samples, 0.95%)</title><rect x="61.1374%" y="1365" width="0.9479%" height="15" fill="rgb(101,211,211)" fg:x="129" fg:w="2"/><text x="61.3874%" y="1375.50"></text></g><g><title>osrs_gph.exe`core::convert::impl$6::try_into (2 samples, 0.95%)</title><rect x="61.1374%" y="1349" width="0.9479%" height="15" fill="rgb(66,180,180)" fg:x="129" fg:w="2"/><text x="61.3874%" y="1359.50"></text></g><g><title>osrs_gph.exe`std::os::windows::io::handle::impl$12::try_from (2 samples, 0.95%)</title><rect x="61.1374%" y="1333" width="0.9479%" height="15" fill="rgb(52,167,167)" fg:x="129" fg:w="2"/><text x="61.3874%" y="1343.50"></text></g><g><title>`0x7FFE56B24CDC (2 samples, 0.95%)</title><rect x="61.1374%" y="1317" width="0.9479%" height="15" fill="rgb(200,200,59)" fg:x="129" fg:w="2"/><text x="61.3874%" y="1327.50"></text></g><g><title>`0x7FFE56B25370 (2 samples, 0.95%)</title><rect x="61.1374%" y="1301" width="0.9479%" height="15" fill="rgb(180,180,51)" fg:x="129" fg:w="2"/><text x="61.3874%" y="1311.50"></text></g><g><title>`0x7FFE5944FE14 (2 samples, 0.95%)</title><rect x="61.1374%" y="1285" width="0.9479%" height="15" fill="rgb(201,201,59)" fg:x="129" fg:w="2"/><text x="61.3874%" y="1295.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::impl$9::end&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt;(enum2$&lt;serde_json::ser::Compound&lt;std::io::buffered::bufwriter::BufWriter (1 samples, 0.47%)</title><rect x="62.0853%" y="1189" width="0.4739%" height="15" fill="rgb(106,216,216)" fg:x="131" fg:w="1"/><text x="62.3353%" y="1199.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::impl$8::end(enum2$&lt;serde_json::ser::Compound&lt;std::io::buffered::bufwriter::BufWriter (1 samples, 0.47%)</title><rect x="62.0853%" y="1173" width="0.4739%" height="15" fill="rgb(63,177,177)" fg:x="131" fg:w="1"/><text x="62.3353%" y="1183.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::impl$16::end_object(serde_json::ser::PrettyFormatter*, std::io::buffered::bufwriter::BufWriter (1 samples, 0.47%)</title><rect x="62.0853%" y="1157" width="0.4739%" height="15" fill="rgb(83,195,195)" fg:x="131" fg:w="1"/><text x="62.3353%" y="1167.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::indent(std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;*, unsigned long long, ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="62.0853%" y="1141" width="0.4739%" height="15" fill="rgb(97,208,208)" fg:x="131" fg:w="1"/><text x="62.3353%" y="1151.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufwriter::impl$6::write_all(std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;*, ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="62.0853%" y="1125" width="0.4739%" height="15" fill="rgb(50,165,165)" fg:x="131" fg:w="1"/><text x="62.3353%" y="1135.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;::write_to_buffer_unchecked(ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="62.0853%" y="1109" width="0.4739%" height="15" fill="rgb(93,204,204)" fg:x="131" fg:w="1"/><text x="62.3353%" y="1119.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::set_len (1 samples, 0.47%)</title><rect x="62.0853%" y="1093" width="0.4739%" height="15" fill="rgb(92,204,204)" fg:x="131" fg:w="1"/><text x="62.3353%" y="1103.50"></text></g><g><title>osrs_gph.exe`core::ptr::const_ptr::impl$0::offset (1 samples, 0.47%)</title><rect x="62.5592%" y="1029" width="0.4739%" height="15" fill="rgb(81,194,194)" fg:x="132" fg:w="1"/><text x="62.8092%" y="1039.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::Formatter::write_i32(serde_json::ser::PrettyFormatter*, std::io::buffered::bufwriter::BufWriter (2 samples, 0.95%)</title><rect x="62.5592%" y="1077" width="0.9479%" height="15" fill="rgb(77,189,189)" fg:x="132" fg:w="2"/><text x="62.8092%" y="1087.50"></text></g><g><title>osrs_gph.exe`itoa::Buffer::format (2 samples, 0.95%)</title><rect x="62.5592%" y="1061" width="0.9479%" height="15" fill="rgb(105,215,215)" fg:x="132" fg:w="2"/><text x="62.8092%" y="1071.50"></text></g><g><title>osrs_gph.exe`itoa::impl$13::write(int, core::mem::maybe_uninit::MaybeUninit (2 samples, 0.95%)</title><rect x="62.5592%" y="1045" width="0.9479%" height="15" fill="rgb(53,168,168)" fg:x="132" fg:w="2"/><text x="62.8092%" y="1055.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::impl$8::serialize_value(enum2$&lt;serde_json::ser::Compound&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt;*, enum2$&lt;core::option::Option (3 samples, 1.42%)</title><rect x="62.5592%" y="1157" width="1.4218%" height="15" fill="rgb(106,216,216)" fg:x="132" fg:w="3"/><text x="62.8092%" y="1167.50"></text></g><g><title>osrs_gph.exe`serde::ser::impls::impl$5::serialize(enum2$&lt;core::option::Option&lt;i32&gt; &gt;*, serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter (3 samples, 1.42%)</title><rect x="62.5592%" y="1141" width="1.4218%" height="15" fill="rgb(65,178,178)" fg:x="132" fg:w="3"/><text x="62.8092%" y="1151.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::impl$3::serialize_some(serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter (3 samples, 1.42%)</title><rect x="62.5592%" y="1125" width="1.4218%" height="15" fill="rgb(79,191,191)" fg:x="132" fg:w="3"/><text x="62.8092%" y="1135.50"></text></g><g><title>osrs_gph.exe`serde::ser::impls::impl$38::serialize(int*, serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter (3 samples, 1.42%)</title><rect x="62.5592%" y="1109" width="1.4218%" height="15" fill="rgb(59,174,174)" fg:x="132" fg:w="3"/><text x="62.8092%" y="1119.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::impl$3::serialize_i32(serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter (3 samples, 1.42%)</title><rect x="62.5592%" y="1093" width="1.4218%" height="15" fill="rgb(100,211,211)" fg:x="132" fg:w="3"/><text x="62.8092%" y="1103.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt;, serde_json::error::Error (*) (1 samples, 0.47%)</title><rect x="63.5071%" y="1077" width="0.4739%" height="15" fill="rgb(64,178,178)" fg:x="134" fg:w="1"/><text x="63.7571%" y="1087.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;::write_all_cold&lt;std::fs::File&gt;(ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="63.5071%" y="1061" width="0.4739%" height="15" fill="rgb(70,184,184)" fg:x="134" fg:w="1"/><text x="63.7571%" y="1071.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 0.47%)</title><rect x="63.5071%" y="1045" width="0.4739%" height="15" fill="rgb(63,177,177)" fg:x="134" fg:w="1"/><text x="63.7571%" y="1055.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;::flush_buf&lt;std::fs::File&gt; (1 samples, 0.47%)</title><rect x="63.5071%" y="1029" width="0.4739%" height="15" fill="rgb(101,212,212)" fg:x="134" fg:w="1"/><text x="63.7571%" y="1039.50"></text></g><g><title>osrs_gph.exe`std::fs::impl$9::write (1 samples, 0.47%)</title><rect x="63.5071%" y="1013" width="0.4739%" height="15" fill="rgb(94,205,205)" fg:x="134" fg:w="1"/><text x="63.7571%" y="1023.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::handle::Handle::synchronous_write (1 samples, 0.47%)</title><rect x="63.5071%" y="997" width="0.4739%" height="15" fill="rgb(57,172,172)" fg:x="134" fg:w="1"/><text x="63.7571%" y="1007.50"></text></g><g><title>`0x7FFE5944F474 (1 samples, 0.47%)</title><rect x="63.5071%" y="981" width="0.4739%" height="15" fill="rgb(215,215,64)" fg:x="134" fg:w="1"/><text x="63.7571%" y="991.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::impl$16::begin_object_key(serde_json::ser::PrettyFormatter*, std::io::buffered::bufwriter::BufWriter (1 samples, 0.47%)</title><rect x="63.9810%" y="1141" width="0.4739%" height="15" fill="rgb(68,181,181)" fg:x="135" fg:w="1"/><text x="64.2310%" y="1151.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::indent(std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;*, unsigned long long, ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="63.9810%" y="1125" width="0.4739%" height="15" fill="rgb(96,207,207)" fg:x="135" fg:w="1"/><text x="64.2310%" y="1135.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufwriter::impl$6::write_all(std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;*, ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="63.9810%" y="1109" width="0.4739%" height="15" fill="rgb(70,183,183)" fg:x="135" fg:w="1"/><text x="64.2310%" y="1119.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;::write_to_buffer_unchecked(ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="63.9810%" y="1093" width="0.4739%" height="15" fill="rgb(59,173,173)" fg:x="135" fg:w="1"/><text x="64.2310%" y="1103.50"></text></g><g><title>`0x7FFE37DA1324 (1 samples, 0.47%)</title><rect x="63.9810%" y="1077" width="0.4739%" height="15" fill="rgb(197,197,58)" fg:x="135" fg:w="1"/><text x="64.2310%" y="1087.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::impl$8::serialize_key&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter,str$&gt;(enum2$&lt;serde_json::ser::Compound&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt;*, ref$ (2 samples, 0.95%)</title><rect x="63.9810%" y="1157" width="0.9479%" height="15" fill="rgb(65,179,179)" fg:x="135" fg:w="2"/><text x="64.2310%" y="1167.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::impl$8::serialize_value(enum2$&lt;serde_json::ser::Compound&lt;std::io::buffered::bufwriter::BufWriter (8 samples, 3.79%)</title><rect x="62.0853%" y="1221" width="3.7915%" height="15" fill="rgb(71,184,184)" fg:x="131" fg:w="8"/><text x="62.3353%" y="1231.50">osrs..</text></g><g><title>osrs_gph.exe`osrs_gph::data_types::impl$2::serialize&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt; &gt;(osrs_gph::data_types::PriceDatum*, serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter (8 samples, 3.79%)</title><rect x="62.0853%" y="1205" width="3.7915%" height="15" fill="rgb(74,187,187)" fg:x="131" fg:w="8"/><text x="62.3353%" y="1215.50">osrs..</text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (7 samples, 3.32%)</title><rect x="62.5592%" y="1189" width="3.3175%" height="15" fill="rgb(56,170,170)" fg:x="132" fg:w="7"/><text x="62.8092%" y="1199.50">osr..</text></g><g><title>osrs_gph.exe`serde::ser::SerializeMap::serialize_entry&lt;enum2$&lt;serde_json::ser::Compound&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt;,str$,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;(enum2$&lt;serde_json::ser::Compound&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt;*, ref$&lt;str$&gt;, enum2$&lt;core::option::Option (7 samples, 3.32%)</title><rect x="62.5592%" y="1173" width="3.3175%" height="15" fill="rgb(69,182,182)" fg:x="132" fg:w="7"/><text x="62.8092%" y="1183.50">osr..</text></g><g><title>osrs_gph.exe`serde_json::ser::impl$11::serialize_str&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt;(serde_json::ser::MapKeySerializer&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt;, ref$ (2 samples, 0.95%)</title><rect x="64.9289%" y="1157" width="0.9479%" height="15" fill="rgb(60,174,174)" fg:x="137" fg:w="2"/><text x="65.1789%" y="1167.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::impl$3::serialize_str(serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt;*, ref$ (2 samples, 0.95%)</title><rect x="64.9289%" y="1141" width="0.9479%" height="15" fill="rgb(70,183,183)" fg:x="137" fg:w="2"/><text x="65.1789%" y="1151.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::format_escaped_str(std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;*, serde_json::ser::PrettyFormatter*, ref$ (2 samples, 0.95%)</title><rect x="64.9289%" y="1125" width="0.9479%" height="15" fill="rgb(65,179,179)" fg:x="137" fg:w="2"/><text x="65.1789%" y="1135.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;::write_all_cold&lt;std::fs::File&gt;(ref$&lt;slice2$ (2 samples, 0.95%)</title><rect x="64.9289%" y="1109" width="0.9479%" height="15" fill="rgb(66,180,180)" fg:x="137" fg:w="2"/><text x="65.1789%" y="1119.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (2 samples, 0.95%)</title><rect x="64.9289%" y="1093" width="0.9479%" height="15" fill="rgb(79,192,192)" fg:x="137" fg:w="2"/><text x="65.1789%" y="1103.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;::flush_buf&lt;std::fs::File&gt; (2 samples, 0.95%)</title><rect x="64.9289%" y="1077" width="0.9479%" height="15" fill="rgb(89,201,201)" fg:x="137" fg:w="2"/><text x="65.1789%" y="1087.50"></text></g><g><title>osrs_gph.exe`std::fs::impl$9::write (2 samples, 0.95%)</title><rect x="64.9289%" y="1061" width="0.9479%" height="15" fill="rgb(64,177,177)" fg:x="137" fg:w="2"/><text x="65.1789%" y="1071.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::handle::Handle::synchronous_write (2 samples, 0.95%)</title><rect x="64.9289%" y="1045" width="0.9479%" height="15" fill="rgb(56,171,171)" fg:x="137" fg:w="2"/><text x="65.1789%" y="1055.50"></text></g><g><title>`0x7FFE5944F474 (2 samples, 0.95%)</title><rect x="64.9289%" y="1029" width="0.9479%" height="15" fill="rgb(207,207,61)" fg:x="137" fg:w="2"/><text x="65.1789%" y="1039.50"></text></g><g><title>osrs_gph.exe`osrs_gph::data_types::impl$3::serialize&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt; &gt;(osrs_gph::data_types::PriceDataType*, serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter (9 samples, 4.27%)</title><rect x="62.0853%" y="1397" width="4.2654%" height="15" fill="rgb(93,204,204)" fg:x="131" fg:w="9"/><text x="62.3353%" y="1407.50">osrs_..</text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (9 samples, 4.27%)</title><rect x="62.0853%" y="1381" width="4.2654%" height="15" fill="rgb(87,199,199)" fg:x="131" fg:w="9"/><text x="62.3353%" y="1391.50">osrs_..</text></g><g><title>osrs_gph.exe`serde::ser::SerializeMap::serialize_entry&lt;enum2$&lt;serde_json::ser::Compound&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt;,str$,std::collections::hash::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt; &gt;(enum2$&lt;serde_json::ser::Compound&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt;*, ref$&lt;str$&gt;, std::collections::hash::map::HashMap (9 samples, 4.27%)</title><rect x="62.0853%" y="1365" width="4.2654%" height="15" fill="rgb(97,208,208)" fg:x="131" fg:w="9"/><text x="62.3353%" y="1375.50">osrs_..</text></g><g><title>osrs_gph.exe`serde_json::ser::impl$8::serialize_value(enum2$&lt;serde_json::ser::Compound&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt;*, std::collections::hash::map::HashMap (9 samples, 4.27%)</title><rect x="62.0853%" y="1349" width="4.2654%" height="15" fill="rgb(79,192,192)" fg:x="131" fg:w="9"/><text x="62.3353%" y="1359.50">osrs_..</text></g><g><title>osrs_gph.exe`serde::ser::impls::impl$105::serialize(std::collections::hash::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt;*, serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter (9 samples, 4.27%)</title><rect x="62.0853%" y="1333" width="4.2654%" height="15" fill="rgb(109,219,219)" fg:x="131" fg:w="9"/><text x="62.3353%" y="1343.50">osrs_..</text></g><g><title>osrs_gph.exe`serde::ser::Serializer::collect_map(serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt;*, std::collections::hash::map::HashMap (9 samples, 4.27%)</title><rect x="62.0853%" y="1317" width="4.2654%" height="15" fill="rgb(98,209,209)" fg:x="131" fg:w="9"/><text x="62.3353%" y="1327.50">osrs_..</text></g><g><title>osrs_gph.exe`core::iter::traits::iterator::Iterator::try_for_each(std::collections::hash::map::Iter&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;*, serde::ser::Serializer::collect_map::closure_env$0&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt;,ref$&lt;alloc::string::String&gt;,ref$&lt;osrs_gph::data_types::PriceDatum&gt;,ref$&lt;std::collections::hash::map::HashMap (9 samples, 4.27%)</title><rect x="62.0853%" y="1301" width="4.2654%" height="15" fill="rgb(65,179,179)" fg:x="131" fg:w="9"/><text x="62.3353%" y="1311.50">osrs_..</text></g><g><title>osrs_gph.exe`core::iter::traits::iterator::Iterator::try_fold(std::collections::hash::map::Iter&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;tuple$&lt;ref$&lt;alloc::string::String&gt;,ref$&lt;osrs_gph::data_types::PriceDatum&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,serde_json::error::Error&gt; &gt;,serde::ser::Serializer::collect_map::closure_env$0&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt;,ref$&lt;alloc::string::String&gt;,ref$&lt;osrs_gph::data_types::PriceDatum&gt;,ref$&lt;std::collections::hash::map::HashMap (9 samples, 4.27%)</title><rect x="62.0853%" y="1285" width="4.2654%" height="15" fill="rgb(72,186,186)" fg:x="131" fg:w="9"/><text x="62.3353%" y="1295.50">osrs_..</text></g><g><title>osrs_gph.exe`core::iter::traits::iterator::Iterator::try_for_each::call::closure$0(core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;tuple$&lt;ref$&lt;alloc::string::String&gt;,ref$&lt;osrs_gph::data_types::PriceDatum&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,serde_json::error::Error&gt; &gt;,serde::ser::Serializer::collect_map::closure_env$0&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt;,ref$&lt;alloc::string::String&gt;,ref$&lt;osrs_gph::data_types::PriceDatum&gt;,ref$&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, tuple$&lt;ref$&lt;alloc::string::String&gt;,ref$ (9 samples, 4.27%)</title><rect x="62.0853%" y="1269" width="4.2654%" height="15" fill="rgb(69,182,182)" fg:x="131" fg:w="9"/><text x="62.3353%" y="1279.50">osrs_..</text></g><g><title>osrs_gph.exe`serde::ser::Serializer::collect_map::closure$0(serde::ser::Serializer::collect_map::closure_env$0&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt; &gt;,ref$&lt;alloc::string::String&gt;,ref$&lt;osrs_gph::data_types::PriceDatum&gt;,ref$&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt; &gt; &gt;*, tuple$&lt;ref$&lt;alloc::string::String&gt;,ref$ (9 samples, 4.27%)</title><rect x="62.0853%" y="1253" width="4.2654%" height="15" fill="rgb(84,196,196)" fg:x="131" fg:w="9"/><text x="62.3353%" y="1263.50">osrs_..</text></g><g><title>osrs_gph.exe`serde::ser::SerializeMap::serialize_entry(enum2$&lt;serde_json::ser::Compound&lt;std::io::buffered::bufwriter::BufWriter (9 samples, 4.27%)</title><rect x="62.0853%" y="1237" width="4.2654%" height="15" fill="rgb(76,189,189)" fg:x="131" fg:w="9"/><text x="62.3353%" y="1247.50">osrs_..</text></g><g><title>osrs_gph.exe`serde_json::ser::impl$11::serialize_str&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt;(serde_json::ser::MapKeySerializer&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt;, ref$ (1 samples, 0.47%)</title><rect x="65.8768%" y="1221" width="0.4739%" height="15" fill="rgb(87,198,198)" fg:x="139" fg:w="1"/><text x="66.1268%" y="1231.50"></text></g><g><title>osrs_gph.exe`serde_json::ser::impl$3::serialize_str(serde_json::ser::Serializer&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;,serde_json::ser::PrettyFormatter&gt;*, ref$ (1 samples, 0.47%)</title><rect x="65.8768%" y="1205" width="0.4739%" height="15" fill="rgb(109,219,219)" fg:x="139" fg:w="1"/><text x="66.1268%" y="1215.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt;, serde_json::error::Error (*) (1 samples, 0.47%)</title><rect x="65.8768%" y="1189" width="0.4739%" height="15" fill="rgb(68,181,181)" fg:x="139" fg:w="1"/><text x="66.1268%" y="1199.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;::write_all_cold&lt;std::fs::File&gt;(ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="65.8768%" y="1173" width="0.4739%" height="15" fill="rgb(91,203,203)" fg:x="139" fg:w="1"/><text x="66.1268%" y="1183.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 0.47%)</title><rect x="65.8768%" y="1157" width="0.4739%" height="15" fill="rgb(67,181,181)" fg:x="139" fg:w="1"/><text x="66.1268%" y="1167.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;::flush_buf&lt;std::fs::File&gt; (1 samples, 0.47%)</title><rect x="65.8768%" y="1141" width="0.4739%" height="15" fill="rgb(79,191,191)" fg:x="139" fg:w="1"/><text x="66.1268%" y="1151.50"></text></g><g><title>osrs_gph.exe`std::fs::impl$9::write (1 samples, 0.47%)</title><rect x="65.8768%" y="1125" width="0.4739%" height="15" fill="rgb(58,173,173)" fg:x="139" fg:w="1"/><text x="66.1268%" y="1135.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::handle::Handle::synchronous_write (1 samples, 0.47%)</title><rect x="65.8768%" y="1109" width="0.4739%" height="15" fill="rgb(80,193,193)" fg:x="139" fg:w="1"/><text x="66.1268%" y="1119.50"></text></g><g><title>`0x7FFE5944F474 (1 samples, 0.47%)</title><rect x="65.8768%" y="1093" width="0.4739%" height="15" fill="rgb(205,205,61)" fg:x="139" fg:w="1"/><text x="66.1268%" y="1103.50"></text></g><g><title>osrs_gph.exe`osrs_gph::write_api_data(osrs_gph::logging::Logging&lt;osrs_gph::file_io::FileIO&lt;ref$ (12 samples, 5.69%)</title><rect x="61.1374%" y="1429" width="5.6872%" height="15" fill="rgb(55,170,170)" fg:x="129" fg:w="12"/><text x="61.3874%" y="1439.50">osrs_gp..</text></g><g><title>osrs_gph.exe`osrs_gph::logging::Logging&lt;osrs_gph::file_io::FileIO&lt;ref$&lt;str$&gt; &gt; &gt;::write&lt;ref$&lt;str$&gt;,ref$&lt;osrs_gph::data_types::PriceDataType&gt;,serde_json::ser::PrettyFormatter&gt; (12 samples, 5.69%)</title><rect x="61.1374%" y="1413" width="5.6872%" height="15" fill="rgb(95,206,206)" fg:x="129" fg:w="12"/><text x="61.3874%" y="1423.50">osrs_gp..</text></g><g><title>`0x7FFE56B240AF (1 samples, 0.47%)</title><rect x="66.3507%" y="1397" width="0.4739%" height="15" fill="rgb(211,211,63)" fg:x="140" fg:w="1"/><text x="66.6007%" y="1407.50"></text></g><g><title>`0x7FFE5944F554 (1 samples, 0.47%)</title><rect x="66.3507%" y="1381" width="0.4739%" height="15" fill="rgb(198,198,58)" fg:x="140" fg:w="1"/><text x="66.6007%" y="1391.50"></text></g><g><title>osrs_gph.exe`osrs_gph::logging::LogConfig&lt;ref$&lt;str$&gt; &gt;::create_logger&lt;ref$&lt;str$&gt; &gt; (1 samples, 0.47%)</title><rect x="66.8246%" y="1429" width="0.4739%" height="15" fill="rgb(95,206,206)" fg:x="141" fg:w="1"/><text x="67.0746%" y="1439.50"></text></g><g><title>osrs_gph.exe`sloggers::file::impl$1::build (1 samples, 0.47%)</title><rect x="66.8246%" y="1413" width="0.4739%" height="15" fill="rgb(80,192,192)" fg:x="141" fg:w="1"/><text x="67.0746%" y="1423.50"></text></g><g><title>osrs_gph.exe`sloggers::build::BuilderCommon::build_with_drain&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt;(slog_term::CompactFormat&lt;slog_term::PlainDecorator (1 samples, 0.47%)</title><rect x="66.8246%" y="1397" width="0.4739%" height="15" fill="rgb(68,182,182)" fg:x="141" fg:w="1"/><text x="67.0746%" y="1407.50"></text></g><g><title>osrs_gph.exe`slog_async::AsyncBuilder&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt;::build(slog_async::AsyncBuilder&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (1 samples, 0.47%)</title><rect x="66.8246%" y="1381" width="0.4739%" height="15" fill="rgb(82,195,195)" fg:x="141" fg:w="1"/><text x="67.0746%" y="1391.50"></text></g><g><title>osrs_gph.exe`slog_async::AsyncCoreBuilder&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt;::build_no_guard&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt;(slog_async::AsyncCoreBuilder&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (1 samples, 0.47%)</title><rect x="66.8246%" y="1365" width="0.4739%" height="15" fill="rgb(100,210,210)" fg:x="141" fg:w="1"/><text x="67.0746%" y="1375.50"></text></g><g><title>osrs_gph.exe`slog_async::AsyncCoreBuilder&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt;::spawn_thread(slog_async::AsyncCoreBuilder&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (1 samples, 0.47%)</title><rect x="66.8246%" y="1349" width="0.4739%" height="15" fill="rgb(96,208,208)" fg:x="141" fg:w="1"/><text x="67.0746%" y="1359.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;std::thread::JoinHandle&lt;tuple$&lt;&gt; &gt;,std::io::error::Error&gt; &gt;::unwrap(enum2$&lt;core::result::Result&lt;std::thread::JoinHandle&lt;tuple$ (1 samples, 0.47%)</title><rect x="66.8246%" y="1333" width="0.4739%" height="15" fill="rgb(101,212,212)" fg:x="141" fg:w="1"/><text x="67.0746%" y="1343.50"></text></g><g><title>osrs_gph.exe`std::thread::Builder::spawn_unchecked&lt;slog_async::impl$5::spawn_thread::closure_env$0&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::Builder, slog_async::impl$5::spawn_thread::closure_env$0&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator (1 samples, 0.47%)</title><rect x="66.8246%" y="1317" width="0.4739%" height="15" fill="rgb(100,211,211)" fg:x="141" fg:w="1"/><text x="67.0746%" y="1327.50"></text></g><g><title>osrs_gph.exe`std::thread::Builder::spawn_unchecked_(std::thread::Builder, slog_async::impl$5::spawn_thread::closure_env$0&lt;slog::Fuse&lt;slog_term::CompactFormat&lt;slog_term::PlainDecorator&lt;sloggers::file::FileAppender&gt; &gt; &gt; &gt;, enum2$&lt;core::option::Option&lt;alloc::sync::Arc (1 samples, 0.47%)</title><rect x="66.8246%" y="1301" width="0.4739%" height="15" fill="rgb(59,173,173)" fg:x="141" fg:w="1"/><text x="67.0746%" y="1311.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::thread::Thread::new (1 samples, 0.47%)</title><rect x="66.8246%" y="1285" width="0.4739%" height="15" fill="rgb(84,196,196)" fg:x="141" fg:w="1"/><text x="67.0746%" y="1295.50"></text></g><g><title>`0x7FFE57DC44ED (1 samples, 0.47%)</title><rect x="66.8246%" y="1269" width="0.4739%" height="15" fill="rgb(207,207,61)" fg:x="141" fg:w="1"/><text x="67.0746%" y="1279.50"></text></g><g><title>`0x7FFE56B3F24F (1 samples, 0.47%)</title><rect x="66.8246%" y="1253" width="0.4739%" height="15" fill="rgb(229,229,69)" fg:x="141" fg:w="1"/><text x="67.0746%" y="1263.50"></text></g><g><title>`0x7FFE59450C44 (1 samples, 0.47%)</title><rect x="66.8246%" y="1237" width="0.4739%" height="15" fill="rgb(176,176,50)" fg:x="141" fg:w="1"/><text x="67.0746%" y="1247.50"></text></g><g><title>osrs_gph.exe`reqwest::blocking::request::RequestBuilder::send (1 samples, 0.47%)</title><rect x="67.2986%" y="1397" width="0.4739%" height="15" fill="rgb(69,182,182)" fg:x="142" fg:w="1"/><text x="67.5486%" y="1407.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.47%)</title><rect x="67.2986%" y="1381" width="0.4739%" height="15" fill="rgb(55,169,169)" fg:x="142" fg:w="1"/><text x="67.5486%" y="1391.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.47%)</title><rect x="67.2986%" y="1365" width="0.4739%" height="15" fill="rgb(57,171,171)" fg:x="142" fg:w="1"/><text x="67.5486%" y="1375.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::sync::Arc (1 samples, 0.47%)</title><rect x="67.2986%" y="1349" width="0.4739%" height="15" fill="rgb(60,174,174)" fg:x="142" fg:w="1"/><text x="67.5486%" y="1359.50"></text></g><g><title>osrs_gph.exe`alloc::sync::impl$33::drop(alloc::sync::Arc (1 samples, 0.47%)</title><rect x="67.2986%" y="1333" width="0.4739%" height="15" fill="rgb(100,211,211)" fg:x="142" fg:w="1"/><text x="67.5486%" y="1343.50"></text></g><g><title>osrs_gph.exe`alloc::sync::Arc&lt;reqwest::blocking::client::InnerClientHandle,alloc::alloc::Global&gt;::inner (1 samples, 0.47%)</title><rect x="67.2986%" y="1317" width="0.4739%" height="15" fill="rgb(64,178,178)" fg:x="142" fg:w="1"/><text x="67.5486%" y="1327.50"></text></g><g><title>osrs_gph.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;reqwest::blocking::client::InnerClientHandle&gt; &gt;::as_ref (1 samples, 0.47%)</title><rect x="67.2986%" y="1301" width="0.4739%" height="15" fill="rgb(88,200,200)" fg:x="142" fg:w="1"/><text x="67.5486%" y="1311.50"></text></g><g><title>osrs_gph.exe`reqwest::blocking::client::Client::execute (1 samples, 0.47%)</title><rect x="67.2986%" y="1285" width="0.4739%" height="15" fill="rgb(85,197,197)" fg:x="142" fg:w="1"/><text x="67.5486%" y="1295.50"></text></g><g><title>osrs_gph.exe`reqwest::blocking::client::ClientHandle::execute_request (1 samples, 0.47%)</title><rect x="67.2986%" y="1269" width="0.4739%" height="15" fill="rgb(56,170,170)" fg:x="142" fg:w="1"/><text x="67.5486%" y="1279.50"></text></g><g><title>osrs_gph.exe`tokio::sync::mpsc::unbounded::UnboundedSender&lt;tuple$&lt;reqwest::async_impl::request::Request,tokio::sync::oneshot::Sender&lt;enum2$&lt;core::result::Result&lt;reqwest::async_impl::response::Response,reqwest::error::Error&gt; &gt; &gt; &gt; &gt;::send(tuple$&lt;reqwest::async_impl::request::Request,tokio::sync::oneshot::Sender&lt;enum2$&lt;core::result::Result (1 samples, 0.47%)</title><rect x="67.2986%" y="1253" width="0.4739%" height="15" fill="rgb(102,212,212)" fg:x="142" fg:w="1"/><text x="67.5486%" y="1263.50"></text></g><g><title>osrs_gph.exe`tokio::sync::mpsc::chan::Tx&lt;tuple$&lt;reqwest::async_impl::request::Request,tokio::sync::oneshot::Sender&lt;enum2$&lt;core::result::Result&lt;reqwest::async_impl::response::Response,reqwest::error::Error&gt; &gt; &gt; &gt;,tokio::sync::mpsc::unbounded::Semaphore&gt;::send(tuple$&lt;reqwest::async_impl::request::Request,tokio::sync::oneshot::Sender&lt;enum2$&lt;core::result::Result (1 samples, 0.47%)</title><rect x="67.2986%" y="1237" width="0.4739%" height="15" fill="rgb(93,204,204)" fg:x="142" fg:w="1"/><text x="67.5486%" y="1247.50"></text></g><g><title>osrs_gph.exe`tokio::sync::mpsc::chan::Chan&lt;tuple$&lt;reqwest::async_impl::request::Request,tokio::sync::oneshot::Sender&lt;enum2$&lt;core::result::Result&lt;reqwest::async_impl::response::Response,reqwest::error::Error&gt; &gt; &gt; &gt;,tokio::sync::mpsc::unbounded::Semaphore&gt;::send(tuple$&lt;reqwest::async_impl::request::Request,tokio::sync::oneshot::Sender&lt;enum2$&lt;core::result::Result (1 samples, 0.47%)</title><rect x="67.2986%" y="1221" width="0.4739%" height="15" fill="rgb(50,165,165)" fg:x="142" fg:w="1"/><text x="67.5486%" y="1231.50"></text></g><g><title>osrs_gph.exe`tokio::sync::task::atomic_waker::AtomicWaker::wake (1 samples, 0.47%)</title><rect x="67.2986%" y="1205" width="0.4739%" height="15" fill="rgb(70,184,184)" fg:x="142" fg:w="1"/><text x="67.5486%" y="1215.50"></text></g><g><title>osrs_gph.exe`core::task::wake::Waker::wake (1 samples, 0.47%)</title><rect x="67.2986%" y="1189" width="0.4739%" height="15" fill="rgb(84,196,196)" fg:x="142" fg:w="1"/><text x="67.5486%" y="1199.50"></text></g><g><title>osrs_gph.exe`reqwest::blocking::client::Client::request&lt;alloc::string::String&gt; (1 samples, 0.47%)</title><rect x="67.7725%" y="1397" width="0.4739%" height="15" fill="rgb(57,171,171)" fg:x="143" fg:w="1"/><text x="68.0225%" y="1407.50"></text></g><g><title>osrs_gph.exe`reqwest::into_url::impl$7::into_url (1 samples, 0.47%)</title><rect x="67.7725%" y="1381" width="0.4739%" height="15" fill="rgb(76,189,189)" fg:x="143" fg:w="1"/><text x="68.0225%" y="1391.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.47%)</title><rect x="67.7725%" y="1365" width="0.4739%" height="15" fill="rgb(54,169,169)" fg:x="143" fg:w="1"/><text x="68.0225%" y="1375.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.47%)</title><rect x="67.7725%" y="1349" width="0.4739%" height="15" fill="rgb(72,185,185)" fg:x="143" fg:w="1"/><text x="68.0225%" y="1359.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.47%)</title><rect x="67.7725%" y="1333" width="0.4739%" height="15" fill="rgb(73,186,186)" fg:x="143" fg:w="1"/><text x="68.0225%" y="1343.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1 samples, 0.47%)</title><rect x="67.7725%" y="1317" width="0.4739%" height="15" fill="rgb(65,178,178)" fg:x="143" fg:w="1"/><text x="68.0225%" y="1327.50"></text></g><g><title>osrs_gph.exe`reqwest::into_url::impl$5::into_url(ref$ (1 samples, 0.47%)</title><rect x="67.7725%" y="1301" width="0.4739%" height="15" fill="rgb(53,167,167)" fg:x="143" fg:w="1"/><text x="68.0225%" y="1311.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;url::Url,url::parser::ParseError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;url::Url,url::parser::ParseError&gt; &gt;, reqwest::error::Error (*) (1 samples, 0.47%)</title><rect x="67.7725%" y="1285" width="0.4739%" height="15" fill="rgb(83,195,195)" fg:x="143" fg:w="1"/><text x="68.0225%" y="1295.50"></text></g><g><title>osrs_gph.exe`url::ParseOptions::parse(url::ParseOptions, ref$ (1 samples, 0.47%)</title><rect x="67.7725%" y="1269" width="0.4739%" height="15" fill="rgb(58,173,173)" fg:x="143" fg:w="1"/><text x="68.0225%" y="1279.50"></text></g><g><title>osrs_gph.exe`reqwest::blocking::client::ClientBuilder::new (1 samples, 0.47%)</title><rect x="68.2464%" y="1381" width="0.4739%" height="15" fill="rgb(106,216,216)" fg:x="144" fg:w="1"/><text x="68.4964%" y="1391.50"></text></g><g><title>osrs_gph.exe`reqwest::async_impl::client::ClientBuilder::new (1 samples, 0.47%)</title><rect x="68.2464%" y="1365" width="0.4739%" height="15" fill="rgb(99,210,210)" fg:x="144" fg:w="1"/><text x="68.4964%" y="1375.50"></text></g><g><title>osrs_gph.exe`reqwest::blocking::client::Client::new (2 samples, 0.95%)</title><rect x="68.2464%" y="1397" width="0.9479%" height="15" fill="rgb(53,168,168)" fg:x="144" fg:w="2"/><text x="68.4964%" y="1407.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;reqwest::blocking::client::Client,reqwest::error::Error&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;reqwest::blocking::client::Client,reqwest::error::Error&gt; &gt;, ref$ (1 samples, 0.47%)</title><rect x="68.7204%" y="1381" width="0.4739%" height="15" fill="rgb(75,188,188)" fg:x="145" fg:w="1"/><text x="68.9704%" y="1391.50"></text></g><g><title>osrs_gph.exe`reqwest::blocking::client::ClientBuilder::build (1 samples, 0.47%)</title><rect x="68.7204%" y="1365" width="0.4739%" height="15" fill="rgb(107,217,217)" fg:x="145" fg:w="1"/><text x="68.9704%" y="1375.50"></text></g><g><title>osrs_gph.exe`reqwest::blocking::client::ClientHandle::new (1 samples, 0.47%)</title><rect x="68.7204%" y="1349" width="0.4739%" height="15" fill="rgb(65,179,179)" fg:x="145" fg:w="1"/><text x="68.9704%" y="1359.50"></text></g><g><title>osrs_gph.exe`reqwest::blocking::wait::timeout(tokio::sync::oneshot::Receiver&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,reqwest::error::Error&gt; &gt; &gt;, enum2$&lt;core::option::Option (1 samples, 0.47%)</title><rect x="68.7204%" y="1333" width="0.4739%" height="15" fill="rgb(53,168,168)" fg:x="145" fg:w="1"/><text x="68.9704%" y="1343.50"></text></g><g><title>osrs_gph.exe`tokio::sync::oneshot::impl$5::poll&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,reqwest::error::Error&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;tokio::sync::oneshot::Receiver&lt;enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 0.47%)</title><rect x="68.7204%" y="1317" width="0.4739%" height="15" fill="rgb(84,196,196)" fg:x="145" fg:w="1"/><text x="68.9704%" y="1327.50"></text></g><g><title>osrs_gph.exe`tokio::sync::oneshot::Inner&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,reqwest::error::Error&gt; &gt; &gt;::poll_recv (1 samples, 0.47%)</title><rect x="68.7204%" y="1301" width="0.4739%" height="15" fill="rgb(96,208,208)" fg:x="145" fg:w="1"/><text x="68.9704%" y="1311.50"></text></g><g><title>osrs_gph.exe`tokio::sync::oneshot::Task::set_task (1 samples, 0.47%)</title><rect x="68.7204%" y="1285" width="0.4739%" height="15" fill="rgb(56,170,170)" fg:x="145" fg:w="1"/><text x="68.9704%" y="1295.50"></text></g><g><title>osrs_gph.exe`tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::mem::maybe_uninit::MaybeUninit&lt;core::task::wake::Waker&gt; &gt;::with_mut (1 samples, 0.47%)</title><rect x="68.7204%" y="1269" width="0.4739%" height="15" fill="rgb(98,209,209)" fg:x="145" fg:w="1"/><text x="68.9704%" y="1279.50"></text></g><g><title>osrs_gph.exe`tokio::sync::oneshot::impl$0::set_task::closure$0(tokio::sync::oneshot::impl$0::set_task::closure_env$0, core::mem::maybe_uninit::MaybeUninit (1 samples, 0.47%)</title><rect x="68.7204%" y="1253" width="0.4739%" height="15" fill="rgb(95,206,206)" fg:x="145" fg:w="1"/><text x="68.9704%" y="1263.50"></text></g><g><title>osrs_gph.exe`core::task::wake::impl$8::clone (1 samples, 0.47%)</title><rect x="68.7204%" y="1237" width="0.4739%" height="15" fill="rgb(103,214,214)" fg:x="145" fg:w="1"/><text x="68.9704%" y="1247.50"></text></g><g><title>osrs_gph.exe`core::ptr::write (1 samples, 0.47%)</title><rect x="68.7204%" y="1221" width="0.4739%" height="15" fill="rgb(105,215,215)" fg:x="145" fg:w="1"/><text x="68.9704%" y="1231.50"></text></g><g><title>osrs_gph.exe`futures_task::waker::clone_arc_raw&lt;reqwest::blocking::wait::ThreadWaker&gt;(tuple$ (1 samples, 0.47%)</title><rect x="68.7204%" y="1205" width="0.4739%" height="15" fill="rgb(96,207,207)" fg:x="145" fg:w="1"/><text x="68.9704%" y="1215.50"></text></g><g><title>osrs_gph.exe`futures_task::waker::increase_refcount(tuple$ (1 samples, 0.47%)</title><rect x="68.7204%" y="1189" width="0.4739%" height="15" fill="rgb(106,216,216)" fg:x="145" fg:w="1"/><text x="68.9704%" y="1199.50"></text></g><g><title>osrs_gph.exe`core::mem::manually_drop::impl$5::clone(core::mem::manually_drop::ManuallyDrop&lt;alloc::sync::Arc (1 samples, 0.47%)</title><rect x="68.7204%" y="1173" width="0.4739%" height="15" fill="rgb(59,173,173)" fg:x="145" fg:w="1"/><text x="68.9704%" y="1183.50"></text></g><g><title>osrs_gph.exe`alloc::sync::impl$28::clone(alloc::sync::Arc (1 samples, 0.47%)</title><rect x="68.7204%" y="1157" width="0.4739%" height="15" fill="rgb(99,210,210)" fg:x="145" fg:w="1"/><text x="68.9704%" y="1167.50"></text></g><g><title>osrs_gph.exe`core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.47%)</title><rect x="68.7204%" y="1141" width="0.4739%" height="15" fill="rgb(103,213,213)" fg:x="145" fg:w="1"/><text x="68.9704%" y="1151.50"></text></g><g><title>osrs_gph.exe`core::sync::atomic::atomic_add (1 samples, 0.47%)</title><rect x="68.7204%" y="1125" width="0.4739%" height="15" fill="rgb(68,182,182)" fg:x="145" fg:w="1"/><text x="68.9704%" y="1135.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$28::next(hashbrown::raw::RawIter&lt;tuple$ (1 samples, 0.47%)</title><rect x="69.1943%" y="1205" width="0.4739%" height="15" fill="rgb(63,177,177)" fg:x="146" fg:w="1"/><text x="69.4443%" y="1215.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt; &gt;::next_impl (1 samples, 0.47%)</title><rect x="69.1943%" y="1189" width="0.4739%" height="15" fill="rgb(93,205,205)" fg:x="146" fg:w="1"/><text x="69.4443%" y="1199.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::bitmask::impl$3::next (1 samples, 0.47%)</title><rect x="69.1943%" y="1173" width="0.4739%" height="15" fill="rgb(75,188,188)" fg:x="146" fg:w="1"/><text x="69.4443%" y="1183.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.47%)</title><rect x="69.1943%" y="1157" width="0.4739%" height="15" fill="rgb(82,194,194)" fg:x="146" fg:w="1"/><text x="69.4443%" y="1167.50"></text></g><g><title>osrs_gph.exe`alloc::string::impl$6::clone (1 samples, 0.47%)</title><rect x="69.1943%" y="1141" width="0.4739%" height="15" fill="rgb(71,184,184)" fg:x="146" fg:w="1"/><text x="69.4443%" y="1151.50"></text></g><g><title>osrs_gph.exe`alloc::vec::impl$10::clone (1 samples, 0.47%)</title><rect x="69.1943%" y="1125" width="0.4739%" height="15" fill="rgb(81,193,193)" fg:x="146" fg:w="1"/><text x="69.4443%" y="1135.50"></text></g><g><title>osrs_gph.exe`alloc::slice::impl$0::to_vec_in (1 samples, 0.47%)</title><rect x="69.1943%" y="1109" width="0.4739%" height="15" fill="rgb(96,207,207)" fg:x="146" fg:w="1"/><text x="69.4443%" y="1119.50"></text></g><g><title>osrs_gph.exe`alloc::slice::hack::to_vec (1 samples, 0.47%)</title><rect x="69.1943%" y="1093" width="0.4739%" height="15" fill="rgb(86,198,198)" fg:x="146" fg:w="1"/><text x="69.4443%" y="1103.50"></text></g><g><title>osrs_gph.exe`alloc::slice::hack::impl$1::to_vec (1 samples, 0.47%)</title><rect x="69.1943%" y="1077" width="0.4739%" height="15" fill="rgb(55,170,170)" fg:x="146" fg:w="1"/><text x="69.4443%" y="1087.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.47%)</title><rect x="69.1943%" y="1061" width="0.4739%" height="15" fill="rgb(85,197,197)" fg:x="146" fg:w="1"/><text x="69.4443%" y="1071.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.47%)</title><rect x="69.1943%" y="1045" width="0.4739%" height="15" fill="rgb(52,167,167)" fg:x="146" fg:w="1"/><text x="69.4443%" y="1055.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec::allocate_in (1 samples, 0.47%)</title><rect x="69.1943%" y="1029" width="0.4739%" height="15" fill="rgb(54,169,169)" fg:x="146" fg:w="1"/><text x="69.4443%" y="1039.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::impl$1::allocate (1 samples, 0.47%)</title><rect x="69.1943%" y="1013" width="0.4739%" height="15" fill="rgb(104,215,215)" fg:x="146" fg:w="1"/><text x="69.4443%" y="1023.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.47%)</title><rect x="69.1943%" y="997" width="0.4739%" height="15" fill="rgb(109,219,219)" fg:x="146" fg:w="1"/><text x="69.4443%" y="1007.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::alloc (1 samples, 0.47%)</title><rect x="69.1943%" y="981" width="0.4739%" height="15" fill="rgb(72,185,185)" fg:x="146" fg:w="1"/><text x="69.4443%" y="991.50"></text></g><g><title>`0x7FFE593EC69E (1 samples, 0.47%)</title><rect x="69.1943%" y="965" width="0.4739%" height="15" fill="rgb(223,223,67)" fg:x="146" fg:w="1"/><text x="69.4443%" y="975.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::impl$9::index(std::collections::hash::map::HashMap&lt;alloc::string::String,std::collections::hash::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt;,std::collections::hash::map::RandomState&gt;*, ref$ (2 samples, 0.95%)</title><rect x="69.1943%" y="1285" width="0.9479%" height="15" fill="rgb(78,191,191)" fg:x="146" fg:w="2"/><text x="69.4443%" y="1295.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::impl$0::clone(hashbrown::map::HashMap (2 samples, 0.95%)</title><rect x="69.1943%" y="1269" width="0.9479%" height="15" fill="rgb(103,214,214)" fg:x="146" fg:w="2"/><text x="69.4443%" y="1279.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$13::clone&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (2 samples, 0.95%)</title><rect x="69.1943%" y="1253" width="0.9479%" height="15" fill="rgb(93,205,205)" fg:x="146" fg:w="2"/><text x="69.4443%" y="1263.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$14::clone_from_spec(hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;*, hashbrown::raw::RawTable&lt;tuple$ (2 samples, 0.95%)</title><rect x="69.1943%" y="1237" width="0.9479%" height="15" fill="rgb(77,190,190)" fg:x="146" fg:w="2"/><text x="69.4443%" y="1247.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;::clone_from_impl(hashbrown::raw::RawTable&lt;tuple$ (2 samples, 0.95%)</title><rect x="69.1943%" y="1221" width="0.9479%" height="15" fill="rgb(109,219,219)" fg:x="146" fg:w="2"/><text x="69.4443%" y="1231.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;::bucket_index(hashbrown::raw::Bucket&lt;tuple$ (1 samples, 0.47%)</title><rect x="69.6682%" y="1205" width="0.4739%" height="15" fill="rgb(84,196,196)" fg:x="147" fg:w="1"/><text x="69.9182%" y="1215.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt; &gt;::to_base_index(core::ptr::non_null::NonNull&lt;tuple$ (1 samples, 0.47%)</title><rect x="69.6682%" y="1189" width="0.4739%" height="15" fill="rgb(88,199,199)" fg:x="147" fg:w="1"/><text x="69.9182%" y="1199.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::offset_from(tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;*, tuple$ (1 samples, 0.47%)</title><rect x="69.6682%" y="1173" width="0.4739%" height="15" fill="rgb(66,179,179)" fg:x="147" fg:w="1"/><text x="69.9182%" y="1183.50"></text></g><g><title>osrs_gph.exe`core::ptr::const_ptr::impl$0::offset_from(tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;*, tuple$ (1 samples, 0.47%)</title><rect x="69.6682%" y="1157" width="0.4739%" height="15" fill="rgb(82,195,195)" fg:x="147" fg:w="1"/><text x="69.9182%" y="1167.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;::insert_in_slot(unsigned long long, hashbrown::raw::InsertSlot, tuple$ (1 samples, 0.47%)</title><rect x="70.1422%" y="1205" width="0.4739%" height="15" fill="rgb(101,211,211)" fg:x="148" fg:w="1"/><text x="70.3922%" y="1215.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt; &gt;::write(tuple$ (1 samples, 0.47%)</title><rect x="70.1422%" y="1189" width="0.4739%" height="15" fill="rgb(62,176,176)" fg:x="148" fg:w="1"/><text x="70.3922%" y="1199.50"></text></g><g><title>osrs_gph.exe`core::ptr::mut_ptr::impl$0::write(tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;*, tuple$ (1 samples, 0.47%)</title><rect x="70.1422%" y="1173" width="0.4739%" height="15" fill="rgb(77,189,189)" fg:x="148" fg:w="1"/><text x="70.3922%" y="1183.50"></text></g><g><title>osrs_gph.exe`core::ptr::write(tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;*, tuple$ (1 samples, 0.47%)</title><rect x="70.1422%" y="1157" width="0.4739%" height="15" fill="rgb(89,201,201)" fg:x="148" fg:w="1"/><text x="70.3922%" y="1167.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::impl$46::next(std::collections::hash::map::IntoIter (2 samples, 0.95%)</title><rect x="70.1422%" y="1285" width="0.9479%" height="15" fill="rgb(65,179,179)" fg:x="148" fg:w="2"/><text x="70.3922%" y="1295.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::impl$67::next(hashbrown::map::IntoIter (2 samples, 0.95%)</title><rect x="70.1422%" y="1269" width="0.9479%" height="15" fill="rgb(102,213,213)" fg:x="148" fg:w="2"/><text x="70.3922%" y="1279.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$39::next(hashbrown::raw::RawIntoIter&lt;tuple$ (2 samples, 0.95%)</title><rect x="70.1422%" y="1253" width="0.9479%" height="15" fill="rgb(71,184,184)" fg:x="148" fg:w="2"/><text x="70.3922%" y="1263.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$28::next(hashbrown::raw::RawIter&lt;tuple$ (2 samples, 0.95%)</title><rect x="70.1422%" y="1237" width="0.9479%" height="15" fill="rgb(61,175,175)" fg:x="148" fg:w="2"/><text x="70.3922%" y="1247.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState,alloc::alloc::Global&gt; (2 samples, 0.95%)</title><rect x="70.1422%" y="1221" width="0.9479%" height="15" fill="rgb(57,171,171)" fg:x="148" fg:w="2"/><text x="70.3922%" y="1231.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;alloc::string::String,alloc::string::String,osrs_gph::data_types::PriceDatum&gt;, hashbrown::map::make_hasher::closure_env$0 (1 samples, 0.47%)</title><rect x="70.6161%" y="1205" width="0.4739%" height="15" fill="rgb(66,179,179)" fg:x="149" fg:w="1"/><text x="70.8661%" y="1215.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (1 samples, 0.47%)</title><rect x="70.6161%" y="1189" width="0.4739%" height="15" fill="rgb(95,206,206)" fg:x="149" fg:w="1"/><text x="70.8661%" y="1199.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$8::find_or_find_insert_slot::closure$0(hashbrown::raw::impl$8::find_or_find_insert_slot::closure_env$0&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0&lt;alloc::string::String,alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,hashbrown::map::make_hasher::closure_env$0 (1 samples, 0.47%)</title><rect x="70.6161%" y="1173" width="0.4739%" height="15" fill="rgb(63,177,177)" fg:x="149" fg:w="1"/><text x="70.8661%" y="1183.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (1 samples, 0.47%)</title><rect x="71.0900%" y="1173" width="0.4739%" height="15" fill="rgb(73,186,186)" fg:x="150" fg:w="1"/><text x="71.3400%" y="1183.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::sse2::Group::match_byte (1 samples, 0.47%)</title><rect x="71.0900%" y="1157" width="0.4739%" height="15" fill="rgb(64,178,178)" fg:x="150" fg:w="1"/><text x="71.3400%" y="1167.50"></text></g><g><title>osrs_gph.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.47%)</title><rect x="71.0900%" y="1141" width="0.4739%" height="15" fill="rgb(83,195,195)" fg:x="150" fg:w="1"/><text x="71.3400%" y="1151.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::prepare_insert_slot (1 samples, 0.47%)</title><rect x="71.5640%" y="1125" width="0.4739%" height="15" fill="rgb(75,188,188)" fg:x="151" fg:w="1"/><text x="71.8140%" y="1135.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::find_insert_slot (1 samples, 0.47%)</title><rect x="71.5640%" y="1109" width="0.4739%" height="15" fill="rgb(94,205,205)" fg:x="151" fg:w="1"/><text x="71.8140%" y="1119.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::probe_seq (1 samples, 0.47%)</title><rect x="71.5640%" y="1093" width="0.4739%" height="15" fill="rgb(98,209,209)" fg:x="151" fg:w="1"/><text x="71.8140%" y="1103.50"></text></g><g><title>osrs_gph.exe`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;alloc::string::String&gt; &gt; (1 samples, 0.47%)</title><rect x="71.5640%" y="1077" width="0.4739%" height="15" fill="rgb(61,175,175)" fg:x="151" fg:w="1"/><text x="71.8140%" y="1087.50"></text></g><g><title>osrs_gph.exe`core::hash::impls::impl$5::hash (1 samples, 0.47%)</title><rect x="71.5640%" y="1061" width="0.4739%" height="15" fill="rgb(50,165,165)" fg:x="151" fg:w="1"/><text x="71.8140%" y="1071.50"></text></g><g><title>osrs_gph.exe`alloc::string::impl$23::hash (1 samples, 0.47%)</title><rect x="71.5640%" y="1045" width="0.4739%" height="15" fill="rgb(54,169,169)" fg:x="151" fg:w="1"/><text x="71.8140%" y="1055.50"></text></g><g><title>osrs_gph.exe`core::hash::impls::impl$2::hash(ref$ (1 samples, 0.47%)</title><rect x="71.5640%" y="1029" width="0.4739%" height="15" fill="rgb(97,208,208)" fg:x="151" fg:w="1"/><text x="71.8140%" y="1039.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::impl$86::write_str(std::collections::hash::map::DefaultHasher*, ref$ (1 samples, 0.47%)</title><rect x="71.5640%" y="1013" width="0.4739%" height="15" fill="rgb(80,193,193)" fg:x="151" fg:w="1"/><text x="71.8140%" y="1023.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$4::write_str(core::hash::sip::SipHasher13*, ref$ (1 samples, 0.47%)</title><rect x="71.5640%" y="997" width="0.4739%" height="15" fill="rgb(108,218,218)" fg:x="151" fg:w="1"/><text x="71.8140%" y="1007.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$5::write_str(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$ (1 samples, 0.47%)</title><rect x="71.5640%" y="981" width="0.4739%" height="15" fill="rgb(57,172,172)" fg:x="151" fg:w="1"/><text x="71.8140%" y="991.50"></text></g><g><title>osrs_gph.exe`core::hash::Hasher::write_u8(core::hash::sip::Hasher (1 samples, 0.47%)</title><rect x="71.5640%" y="965" width="0.4739%" height="15" fill="rgb(69,183,183)" fg:x="151" fg:w="1"/><text x="71.8140%" y="975.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="71.5640%" y="949" width="0.4739%" height="15" fill="rgb(68,182,182)" fg:x="151" fg:w="1"/><text x="71.8140%" y="959.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="71.5640%" y="933" width="0.4739%" height="15" fill="rgb(76,189,189)" fg:x="151" fg:w="1"/><text x="71.8140%" y="943.50"></text></g><g><title>osrs_gph.exe`core::intrinsics::copy_nonoverlapping (1 samples, 0.47%)</title><rect x="71.5640%" y="917" width="0.4739%" height="15" fill="rgb(51,166,166)" fg:x="151" fg:w="1"/><text x="71.8140%" y="927.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt;::insert (3 samples, 1.42%)</title><rect x="71.0900%" y="1221" width="1.4218%" height="15" fill="rgb(97,208,208)" fg:x="150" fg:w="3"/><text x="71.3400%" y="1231.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState,alloc::alloc::Global&gt; (3 samples, 1.42%)</title><rect x="71.0900%" y="1205" width="1.4218%" height="15" fill="rgb(108,218,218)" fg:x="150" fg:w="3"/><text x="71.3400%" y="1215.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;alloc::string::String,alloc::string::String,osrs_gph::data_types::PriceDatum&gt;, hashbrown::map::make_hasher::closure_env$0 (3 samples, 1.42%)</title><rect x="71.0900%" y="1189" width="1.4218%" height="15" fill="rgb(101,212,212)" fg:x="150" fg:w="3"/><text x="71.3400%" y="1199.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt; &gt;(unsigned long long, hashbrown::map::make_hasher::closure_env$0 (2 samples, 0.95%)</title><rect x="71.5640%" y="1173" width="0.9479%" height="15" fill="rgb(62,176,176)" fg:x="151" fg:w="2"/><text x="71.8140%" y="1183.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::reserve_rehash_inner(alloc::alloc::Global*, unsigned long long, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;ref_mut$&lt;hashbrown::raw::RawTableInner&gt;,usize&gt;,assoc$&lt;Output,u64&gt; &gt; &gt; &gt;, hashbrown::raw::Fallibility, hashbrown::raw::TableLayout, enum2$&lt;core::option::Option&lt;void (*)(ptr_mut$ (2 samples, 0.95%)</title><rect x="71.5640%" y="1157" width="0.9479%" height="15" fill="rgb(67,180,180)" fg:x="151" fg:w="2"/><text x="71.8140%" y="1167.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::resize_inner(alloc::alloc::Global*, unsigned long long, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;ref_mut$&lt;hashbrown::raw::RawTableInner&gt;,usize&gt;,assoc$ (2 samples, 0.95%)</title><rect x="71.5640%" y="1141" width="0.9479%" height="15" fill="rgb(81,194,194)" fg:x="151" fg:w="2"/><text x="71.8140%" y="1151.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner,hashbrown::raw::impl$12::prepare_resize::closure_env$0 (1 samples, 0.47%)</title><rect x="72.0379%" y="1125" width="0.4739%" height="15" fill="rgb(68,181,181)" fg:x="152" fg:w="1"/><text x="72.2879%" y="1135.50"></text></g><g><title>osrs_gph.exe`hashbrown::scopeguard::impl$3::drop(hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner,hashbrown::raw::impl$12::prepare_resize::closure_env$0 (1 samples, 0.47%)</title><rect x="72.0379%" y="1109" width="0.4739%" height="15" fill="rgb(72,185,185)" fg:x="152" fg:w="1"/><text x="72.2879%" y="1119.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$12::prepare_resize::closure$0(hashbrown::raw::impl$12::prepare_resize::closure_env$0 (1 samples, 0.47%)</title><rect x="72.0379%" y="1093" width="0.4739%" height="15" fill="rgb(63,177,177)" fg:x="152" fg:w="1"/><text x="72.2879%" y="1103.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::free_buckets (1 samples, 0.47%)</title><rect x="72.0379%" y="1077" width="0.4739%" height="15" fill="rgb(54,169,169)" fg:x="152" fg:w="1"/><text x="72.2879%" y="1087.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.47%)</title><rect x="72.0379%" y="1061" width="0.4739%" height="15" fill="rgb(78,190,190)" fg:x="152" fg:w="1"/><text x="72.2879%" y="1071.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::dealloc (1 samples, 0.47%)</title><rect x="72.0379%" y="1045" width="0.4739%" height="15" fill="rgb(96,207,207)" fg:x="152" fg:w="1"/><text x="72.2879%" y="1055.50"></text></g><g><title>`0x7FFE593EAB11 (1 samples, 0.47%)</title><rect x="72.0379%" y="1029" width="0.4739%" height="15" fill="rgb(221,221,66)" fg:x="152" fg:w="1"/><text x="72.2879%" y="1039.50"></text></g><g><title>`0x7FFE593EBE44 (1 samples, 0.47%)</title><rect x="72.0379%" y="1013" width="0.4739%" height="15" fill="rgb(214,214,64)" fg:x="152" fg:w="1"/><text x="72.2879%" y="1023.50"></text></g><g><title>`0x7FFE593E9728 (1 samples, 0.47%)</title><rect x="72.0379%" y="997" width="0.4739%" height="15" fill="rgb(181,181,52)" fg:x="152" fg:w="1"/><text x="72.2879%" y="1007.50"></text></g><g><title>`0x7FFE593F4B1B (1 samples, 0.47%)</title><rect x="72.0379%" y="981" width="0.4739%" height="15" fill="rgb(211,211,63)" fg:x="152" fg:w="1"/><text x="72.2879%" y="991.50"></text></g><g><title>`0x7FFE593F63FA (1 samples, 0.47%)</title><rect x="72.0379%" y="965" width="0.4739%" height="15" fill="rgb(223,223,67)" fg:x="152" fg:w="1"/><text x="72.2879%" y="975.50"></text></g><g><title>`0x7FFE593F64A8 (1 samples, 0.47%)</title><rect x="72.0379%" y="949" width="0.4739%" height="15" fill="rgb(214,214,64)" fg:x="152" fg:w="1"/><text x="72.2879%" y="959.50"></text></g><g><title>`0x7FFE593F65E6 (1 samples, 0.47%)</title><rect x="72.0379%" y="933" width="0.4739%" height="15" fill="rgb(223,223,67)" fg:x="152" fg:w="1"/><text x="72.2879%" y="943.50"></text></g><g><title>`0x7FFE5944F734 (1 samples, 0.47%)</title><rect x="72.0379%" y="917" width="0.4739%" height="15" fill="rgb(213,213,63)" fg:x="152" fg:w="1"/><text x="72.2879%" y="927.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::impl$9::index(std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState&gt;*, ref$ (1 samples, 0.47%)</title><rect x="72.5118%" y="1109" width="0.4739%" height="15" fill="rgb(97,208,208)" fg:x="153" fg:w="1"/><text x="72.7618%" y="1119.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState&gt;::get(ref$ (1 samples, 0.47%)</title><rect x="72.5118%" y="1093" width="0.4739%" height="15" fill="rgb(100,211,211)" fg:x="153" fg:w="1"/><text x="72.7618%" y="1103.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::get(ref$ (1 samples, 0.47%)</title><rect x="72.5118%" y="1077" width="0.4739%" height="15" fill="rgb(84,196,196)" fg:x="153" fg:w="1"/><text x="72.7618%" y="1087.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::get_inner(ref$ (1 samples, 0.47%)</title><rect x="72.5118%" y="1061" width="0.4739%" height="15" fill="rgb(66,180,180)" fg:x="153" fg:w="1"/><text x="72.7618%" y="1071.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;,alloc::alloc::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::string::String,enum2$&lt;core::option::Option (1 samples, 0.47%)</title><rect x="72.5118%" y="1045" width="0.4739%" height="15" fill="rgb(97,208,208)" fg:x="153" fg:w="1"/><text x="72.7618%" y="1055.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::string::String,enum2$&lt;core::option::Option (1 samples, 0.47%)</title><rect x="72.5118%" y="1029" width="0.4739%" height="15" fill="rgb(62,176,176)" fg:x="153" fg:w="1"/><text x="72.7618%" y="1039.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (1 samples, 0.47%)</title><rect x="72.5118%" y="1013" width="0.4739%" height="15" fill="rgb(62,176,176)" fg:x="153" fg:w="1"/><text x="72.7618%" y="1023.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::h2 (1 samples, 0.47%)</title><rect x="72.5118%" y="997" width="0.4739%" height="15" fill="rgb(93,204,204)" fg:x="153" fg:w="1"/><text x="72.7618%" y="1007.50"></text></g><g><title>osrs_gph.exe`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;str$&gt; &gt;(std::collections::hash::map::RandomState*, ref$ (1 samples, 0.47%)</title><rect x="72.5118%" y="981" width="0.4739%" height="15" fill="rgb(73,186,186)" fg:x="153" fg:w="1"/><text x="72.7618%" y="991.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::impl$86::finish (1 samples, 0.47%)</title><rect x="72.5118%" y="965" width="0.4739%" height="15" fill="rgb(80,193,193)" fg:x="153" fg:w="1"/><text x="72.7618%" y="975.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$4::finish (1 samples, 0.47%)</title><rect x="72.5118%" y="949" width="0.4739%" height="15" fill="rgb(87,199,199)" fg:x="153" fg:w="1"/><text x="72.7618%" y="959.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (1 samples, 0.47%)</title><rect x="72.5118%" y="933" width="0.4739%" height="15" fill="rgb(56,170,170)" fg:x="153" fg:w="1"/><text x="72.7618%" y="943.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="72.5118%" y="917" width="0.4739%" height="15" fill="rgb(69,183,183)" fg:x="153" fg:w="1"/><text x="72.7618%" y="927.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="72.5118%" y="901" width="0.4739%" height="15" fill="rgb(91,203,203)" fg:x="153" fg:w="1"/><text x="72.7618%" y="911.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState&gt;::with_capacity (1 samples, 0.47%)</title><rect x="72.9858%" y="1109" width="0.4739%" height="15" fill="rgb(81,193,193)" fg:x="154" fg:w="1"/><text x="73.2358%" y="1119.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::impl$87::default (1 samples, 0.47%)</title><rect x="72.9858%" y="1093" width="0.4739%" height="15" fill="rgb(97,208,208)" fg:x="154" fg:w="1"/><text x="73.2358%" y="1103.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::with_capacity_and_hasher (1 samples, 0.47%)</title><rect x="72.9858%" y="1077" width="0.4739%" height="15" fill="rgb(57,171,171)" fg:x="154" fg:w="1"/><text x="73.2358%" y="1087.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.47%)</title><rect x="72.9858%" y="1061" width="0.4739%" height="15" fill="rgb(58,172,172)" fg:x="154" fg:w="1"/><text x="73.2358%" y="1071.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.47%)</title><rect x="72.9858%" y="1045" width="0.4739%" height="15" fill="rgb(65,179,179)" fg:x="154" fg:w="1"/><text x="73.2358%" y="1055.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::with_capacity (1 samples, 0.47%)</title><rect x="72.9858%" y="1029" width="0.4739%" height="15" fill="rgb(102,213,213)" fg:x="154" fg:w="1"/><text x="73.2358%" y="1039.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::fallible_with_capacity (1 samples, 0.47%)</title><rect x="72.9858%" y="1013" width="0.4739%" height="15" fill="rgb(103,214,214)" fg:x="154" fg:w="1"/><text x="73.2358%" y="1023.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.47%)</title><rect x="72.9858%" y="997" width="0.4739%" height="15" fill="rgb(67,181,181)" fg:x="154" fg:w="1"/><text x="73.2358%" y="1007.50"></text></g><g><title>`0x7FFE593EC7BA (1 samples, 0.47%)</title><rect x="72.9858%" y="981" width="0.4739%" height="15" fill="rgb(198,198,58)" fg:x="154" fg:w="1"/><text x="73.2358%" y="991.50"></text></g><g><title>`0x7FFE593ED0A8 (1 samples, 0.47%)</title><rect x="72.9858%" y="965" width="0.4739%" height="15" fill="rgb(202,202,59)" fg:x="154" fg:w="1"/><text x="73.2358%" y="975.50"></text></g><g><title>osrs_gph.exe`serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;::parse_object_colon&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt; (1 samples, 0.47%)</title><rect x="73.4597%" y="1061" width="0.4739%" height="15" fill="rgb(65,178,178)" fg:x="155" fg:w="1"/><text x="73.7097%" y="1071.50"></text></g><g><title>osrs_gph.exe`serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;::parse_whitespace&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt; (1 samples, 0.47%)</title><rect x="73.9336%" y="1013" width="0.4739%" height="15" fill="rgb(68,181,181)" fg:x="156" fg:w="1"/><text x="74.1836%" y="1023.50"></text></g><g><title>osrs_gph.exe`serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;::parse_number&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt; (1 samples, 0.47%)</title><rect x="74.4076%" y="949" width="0.4739%" height="15" fill="rgb(72,185,185)" fg:x="157" fg:w="1"/><text x="74.6576%" y="959.50"></text></g><g><title>osrs_gph.exe`std::io::uninlined_slow_read_byte&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;(std::io::buffered::bufreader::BufReader&lt;ref_mut$ (1 samples, 0.47%)</title><rect x="74.8815%" y="869" width="0.4739%" height="15" fill="rgb(60,174,174)" fg:x="158" fg:w="1"/><text x="75.1315%" y="879.50"></text></g><g><title>osrs_gph.exe`std::io::inlined_slow_read_byte(std::io::buffered::bufreader::BufReader&lt;ref_mut$ (1 samples, 0.47%)</title><rect x="74.8815%" y="853" width="0.4739%" height="15" fill="rgb(102,212,212)" fg:x="158" fg:w="1"/><text x="75.1315%" y="863.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufreader::impl$4::read&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt;(std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt;*, ref_mut$&lt;slice2$ (1 samples, 0.47%)</title><rect x="74.8815%" y="837" width="0.4739%" height="15" fill="rgb(94,205,205)" fg:x="158" fg:w="1"/><text x="75.1315%" y="847.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufreader::impl$5::fill_buf(std::io::buffered::bufreader::BufReader&lt;ref_mut$ (1 samples, 0.47%)</title><rect x="74.8815%" y="821" width="0.4739%" height="15" fill="rgb(102,212,212)" fg:x="158" fg:w="1"/><text x="75.1315%" y="831.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufreader::buffer::Buffer::fill_buf (1 samples, 0.47%)</title><rect x="74.8815%" y="805" width="0.4739%" height="15" fill="rgb(61,175,175)" fg:x="158" fg:w="1"/><text x="75.1315%" y="815.50"></text></g><g><title>osrs_gph.exe`std::io::impls::impl$0::read_buf (1 samples, 0.47%)</title><rect x="74.8815%" y="789" width="0.4739%" height="15" fill="rgb(97,208,208)" fg:x="158" fg:w="1"/><text x="75.1315%" y="799.50"></text></g><g><title>osrs_gph.exe`std::io::impls::impl$0::read_buf (1 samples, 0.47%)</title><rect x="74.8815%" y="773" width="0.4739%" height="15" fill="rgb(95,206,206)" fg:x="158" fg:w="1"/><text x="75.1315%" y="783.50"></text></g><g><title>osrs_gph.exe`std::io::Read::read_buf (1 samples, 0.47%)</title><rect x="74.8815%" y="757" width="0.4739%" height="15" fill="rgb(60,174,174)" fg:x="158" fg:w="1"/><text x="75.1315%" y="767.50"></text></g><g><title>osrs_gph.exe`std::io::default_read_buf(std::io::Read::read_buf::closure_env$0 (1 samples, 0.47%)</title><rect x="74.8815%" y="741" width="0.4739%" height="15" fill="rgb(60,174,174)" fg:x="158" fg:w="1"/><text x="75.1315%" y="751.50"></text></g><g><title>osrs_gph.exe`core::io::borrowed_buf::BorrowedCursor::ensure_init (1 samples, 0.47%)</title><rect x="74.8815%" y="725" width="0.4739%" height="15" fill="rgb(76,189,189)" fg:x="158" fg:w="1"/><text x="75.1315%" y="735.50"></text></g><g><title>osrs_gph.exe`reqwest::blocking::response::impl$2::read(reqwest::blocking::response::Response*, ref_mut$&lt;slice2$ (1 samples, 0.47%)</title><rect x="74.8815%" y="709" width="0.4739%" height="15" fill="rgb(86,198,198)" fg:x="158" fg:w="1"/><text x="75.1315%" y="719.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;usize,enum2$&lt;reqwest::blocking::wait::Waited&lt;std::io::error::Error&gt; &gt; &gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;usize,enum2$&lt;reqwest::blocking::wait::Waited (1 samples, 0.47%)</title><rect x="74.8815%" y="693" width="0.4739%" height="15" fill="rgb(102,213,213)" fg:x="158" fg:w="1"/><text x="75.1315%" y="703.50"></text></g><g><title>osrs_gph.exe`reqwest::blocking::wait::timeout&lt;futures_util::io::read::Read&lt;core::pin::Pin&lt;ref_mut$&lt;dyn$&lt;futures_io::if_std::AsyncRead&gt; &gt; &gt; &gt;,usize,std::io::error::Error&gt;(futures_util::io::read::Read&lt;core::pin::Pin&lt;ref_mut$&lt;dyn$&lt;futures_io::if_std::AsyncRead&gt; &gt; &gt; &gt;, enum2$&lt;core::option::Option (1 samples, 0.47%)</title><rect x="74.8815%" y="677" width="0.4739%" height="15" fill="rgb(81,194,194)" fg:x="158" fg:w="1"/><text x="75.1315%" y="687.50"></text></g><g><title>osrs_gph.exe`std::thread::park_timeout (1 samples, 0.47%)</title><rect x="74.8815%" y="661" width="0.4739%" height="15" fill="rgb(107,217,217)" fg:x="158" fg:w="1"/><text x="75.1315%" y="671.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::thread_parking::Parker::park_timeout (1 samples, 0.47%)</title><rect x="74.8815%" y="645" width="0.4739%" height="15" fill="rgb(85,197,197)" fg:x="158" fg:w="1"/><text x="75.1315%" y="655.50"></text></g><g><title>`0x7FFE56B72DF3 (1 samples, 0.47%)</title><rect x="74.8815%" y="629" width="0.4739%" height="15" fill="rgb(183,183,53)" fg:x="158" fg:w="1"/><text x="75.1315%" y="639.50"></text></g><g><title>`0x7FFE593FBA93 (1 samples, 0.47%)</title><rect x="74.8815%" y="613" width="0.4739%" height="15" fill="rgb(188,188,54)" fg:x="158" fg:w="1"/><text x="75.1315%" y="623.50"></text></g><g><title>`0x7FFE593FF9CC (1 samples, 0.47%)</title><rect x="74.8815%" y="597" width="0.4739%" height="15" fill="rgb(183,183,53)" fg:x="158" fg:w="1"/><text x="75.1315%" y="607.50"></text></g><g><title>`0x7FFE593E39BE (1 samples, 0.47%)</title><rect x="74.8815%" y="581" width="0.4739%" height="15" fill="rgb(185,185,53)" fg:x="158" fg:w="1"/><text x="75.1315%" y="591.50"></text></g><g><title>osrs_gph.exe`serde_json::iter::impl$1::next(serde_json::iter::LineColIterator&lt;std::io::Bytes&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (2 samples, 0.95%)</title><rect x="74.8815%" y="885" width="0.9479%" height="15" fill="rgb(61,175,175)" fg:x="158" fg:w="2"/><text x="75.1315%" y="895.50"></text></g><g><title>osrs_gph.exe`serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;::parse_integer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt; (4 samples, 1.90%)</title><rect x="74.8815%" y="949" width="1.8957%" height="15" fill="rgb(103,214,214)" fg:x="158" fg:w="4"/><text x="75.1315%" y="959.50">o..</text></g><g><title>osrs_gph.exe`serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;::peek_or_null (4 samples, 1.90%)</title><rect x="74.8815%" y="933" width="1.8957%" height="15" fill="rgb(93,205,205)" fg:x="158" fg:w="4"/><text x="75.1315%" y="943.50">o..</text></g><g><title>osrs_gph.exe`serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;::peek (4 samples, 1.90%)</title><rect x="74.8815%" y="917" width="1.8957%" height="15" fill="rgb(67,180,180)" fg:x="158" fg:w="4"/><text x="75.1315%" y="927.50">o..</text></g><g><title>osrs_gph.exe`serde_json::read::impl$4::peek(serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (4 samples, 1.90%)</title><rect x="74.8815%" y="901" width="1.8957%" height="15" fill="rgb(82,194,194)" fg:x="158" fg:w="4"/><text x="75.1315%" y="911.50">o..</text></g><g><title>osrs_gph.exe`serde_json::de::impl$7::deserialize_i32&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;,serde::de::impls::impl$49::deserialize::PrimitiveVisitor&gt;(serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (6 samples, 2.84%)</title><rect x="74.4076%" y="981" width="2.8436%" height="15" fill="rgb(66,180,180)" fg:x="157" fg:w="6"/><text x="74.6576%" y="991.50">os..</text></g><g><title>osrs_gph.exe`serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;::deserialize_number (6 samples, 2.84%)</title><rect x="74.4076%" y="965" width="2.8436%" height="15" fill="rgb(51,166,166)" fg:x="157" fg:w="6"/><text x="74.6576%" y="975.50">os..</text></g><g><title>osrs_gph.exe`serde_json::de::impl$11::next_value_seed(serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;*, core::marker::PhantomData&lt;enum2$&lt;core::option::Option (9 samples, 4.27%)</title><rect x="73.4597%" y="1077" width="4.2654%" height="15" fill="rgb(73,186,186)" fg:x="155" fg:w="9"/><text x="73.7097%" y="1087.50">osrs_..</text></g><g><title>osrs_gph.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;, serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (8 samples, 3.79%)</title><rect x="73.9336%" y="1061" width="3.7915%" height="15" fill="rgb(90,202,202)" fg:x="156" fg:w="8"/><text x="74.1836%" y="1071.50">osrs..</text></g><g><title>osrs_gph.exe`serde::de::impls::impl$16::deserialize(serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (8 samples, 3.79%)</title><rect x="73.9336%" y="1045" width="3.7915%" height="15" fill="rgb(64,178,178)" fg:x="156" fg:w="8"/><text x="74.1836%" y="1055.50">osrs..</text></g><g><title>osrs_gph.exe`serde_json::de::impl$7::deserialize_option(serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;*, serde::de::impls::OptionVisitor (8 samples, 3.79%)</title><rect x="73.9336%" y="1029" width="3.7915%" height="15" fill="rgb(93,204,204)" fg:x="156" fg:w="8"/><text x="74.1836%" y="1039.50">osrs..</text></g><g><title>osrs_gph.exe`serde::de::impls::impl$15::visit_some(serde::de::impls::OptionVisitor&lt;i32&gt;, serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (7 samples, 3.32%)</title><rect x="74.4076%" y="1013" width="3.3175%" height="15" fill="rgb(97,208,208)" fg:x="157" fg:w="7"/><text x="74.6576%" y="1023.50">osr..</text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;i32,serde_json::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;i32,serde_json::error::Error&gt; &gt;, enum2$&lt;core::option::Option&lt;i32&gt; &gt; (*) (7 samples, 3.32%)</title><rect x="74.4076%" y="997" width="3.3175%" height="15" fill="rgb(52,166,166)" fg:x="157" fg:w="7"/><text x="74.6576%" y="1007.50">osr..</text></g><g><title>osrs_gph.exe`core::ops::function::FnOnce::call_once(enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,serde_json::error::Error&gt; &gt; (*)(serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;*, ref$&lt;slice2$&lt;u8&gt; &gt;), serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;*, ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="77.7251%" y="965" width="0.4739%" height="15" fill="rgb(52,167,167)" fg:x="164" fg:w="1"/><text x="77.9751%" y="975.50"></text></g><g><title>osrs_gph.exe`serde_json::read::as_str(serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;*, ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="77.7251%" y="949" width="0.4739%" height="15" fill="rgb(54,169,169)" fg:x="164" fg:w="1"/><text x="77.9751%" y="959.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,core::str::error::Utf8Error&gt; &gt;::or_else(enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,core::str::error::Utf8Error&gt; &gt;, serde_json::read::as_str::closure_env$0&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (1 samples, 0.47%)</title><rect x="77.7251%" y="933" width="0.4739%" height="15" fill="rgb(51,166,166)" fg:x="164" fg:w="1"/><text x="77.9751%" y="943.50"></text></g><g><title>osrs_gph.exe`core::str::converts::from_utf8 (1 samples, 0.47%)</title><rect x="77.7251%" y="917" width="0.4739%" height="15" fill="rgb(54,169,169)" fg:x="164" fg:w="1"/><text x="77.9751%" y="927.50"></text></g><g><title>osrs_gph.exe`serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;::parse_str_bytes(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, bool, enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,serde_json::error::Error&gt; &gt; (*)(serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;*, ref$&lt;slice2$ (2 samples, 0.95%)</title><rect x="77.7251%" y="981" width="0.9479%" height="15" fill="rgb(94,205,205)" fg:x="164" fg:w="2"/><text x="77.9751%" y="991.50"></text></g><g><title>osrs_gph.exe`serde_json::read::impl$4::parse_str&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;(serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;*, alloc::vec::Vec (4 samples, 1.90%)</title><rect x="77.7251%" y="997" width="1.8957%" height="15" fill="rgb(76,188,188)" fg:x="164" fg:w="4"/><text x="77.9751%" y="1007.50">o..</text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,serde_json::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,serde_json::error::Error&gt; &gt;, enum2$&lt;serde_json::read::Reference&lt;str$&gt; &gt; (*)(ref$ (2 samples, 0.95%)</title><rect x="78.6730%" y="981" width="0.9479%" height="15" fill="rgb(70,183,183)" fg:x="166" fg:w="2"/><text x="78.9230%" y="991.50"></text></g><g><title>`0x7FFE593ED6DF (1 samples, 0.47%)</title><rect x="79.6209%" y="917" width="0.4739%" height="15" fill="rgb(179,179,51)" fg:x="168" fg:w="1"/><text x="79.8709%" y="927.50"></text></g><g><title>`0x7FFE593F146B (1 samples, 0.47%)</title><rect x="79.6209%" y="901" width="0.4739%" height="15" fill="rgb(189,189,55)" fg:x="168" fg:w="1"/><text x="79.8709%" y="911.50"></text></g><g><title>`0x7FFE593ED54E (1 samples, 0.47%)</title><rect x="80.0948%" y="917" width="0.4739%" height="15" fill="rgb(197,197,58)" fg:x="169" fg:w="1"/><text x="80.3448%" y="927.50"></text></g><g><title>`0x7FFE59453121 (1 samples, 0.47%)</title><rect x="80.0948%" y="901" width="0.4739%" height="15" fill="rgb(216,216,65)" fg:x="169" fg:w="1"/><text x="80.3448%" y="911.50"></text></g><g><title>`0x7FFE593ED242 (1 samples, 0.47%)</title><rect x="80.5687%" y="917" width="0.4739%" height="15" fill="rgb(192,192,56)" fg:x="170" fg:w="1"/><text x="80.8187%" y="927.50"></text></g><g><title>`0x7FFE593ED102 (2 samples, 0.95%)</title><rect x="81.0427%" y="917" width="0.9479%" height="15" fill="rgb(204,204,60)" fg:x="171" fg:w="2"/><text x="81.2927%" y="927.50"></text></g><g><title>`0x7FFE593EC7BA (6 samples, 2.84%)</title><rect x="79.6209%" y="933" width="2.8436%" height="15" fill="rgb(215,215,64)" fg:x="168" fg:w="6"/><text x="79.8709%" y="943.50">`0..</text></g><g><title>`0x7FFE593ECFF0 (1 samples, 0.47%)</title><rect x="81.9905%" y="917" width="0.4739%" height="15" fill="rgb(202,202,59)" fg:x="173" fg:w="1"/><text x="82.2405%" y="927.50"></text></g><g><title>osrs_gph.exe`serde_json::de::impl$11::next_key_seed&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;,core::marker::PhantomData&lt;alloc::string::String&gt; &gt;(serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;*, core::marker::PhantomData (11 samples, 5.21%)</title><rect x="77.7251%" y="1077" width="5.2133%" height="15" fill="rgb(61,175,175)" fg:x="164" fg:w="11"/><text x="77.9751%" y="1087.50">osrs_g..</text></g><g><title>osrs_gph.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;alloc::string::String&gt;, serde_json::de::MapKey&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (11 samples, 5.21%)</title><rect x="77.7251%" y="1061" width="5.2133%" height="15" fill="rgb(57,172,172)" fg:x="164" fg:w="11"/><text x="77.9751%" y="1071.50">osrs_g..</text></g><g><title>osrs_gph.exe`serde::de::impls::impl$8::deserialize(serde_json::de::MapKey&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (11 samples, 5.21%)</title><rect x="77.7251%" y="1045" width="5.2133%" height="15" fill="rgb(69,182,182)" fg:x="164" fg:w="11"/><text x="77.9751%" y="1055.50">osrs_g..</text></g><g><title>osrs_gph.exe`serde_json::de::impl$19::deserialize_string(serde_json::de::MapKey&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (11 samples, 5.21%)</title><rect x="77.7251%" y="1029" width="5.2133%" height="15" fill="rgb(109,219,219)" fg:x="164" fg:w="11"/><text x="77.9751%" y="1039.50">osrs_g..</text></g><g><title>osrs_gph.exe`serde_json::de::impl$19::deserialize_any(serde_json::de::MapKey&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (11 samples, 5.21%)</title><rect x="77.7251%" y="1013" width="5.2133%" height="15" fill="rgb(102,213,213)" fg:x="164" fg:w="11"/><text x="77.9751%" y="1023.50">osrs_g..</text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::allocate_in (7 samples, 3.32%)</title><rect x="79.6209%" y="997" width="3.3175%" height="15" fill="rgb(108,218,218)" fg:x="168" fg:w="7"/><text x="79.8709%" y="1007.50">osr..</text></g><g><title>osrs_gph.exe`alloc::alloc::impl$1::allocate (7 samples, 3.32%)</title><rect x="79.6209%" y="981" width="3.3175%" height="15" fill="rgb(53,168,168)" fg:x="168" fg:w="7"/><text x="79.8709%" y="991.50">osr..</text></g><g><title>osrs_gph.exe`alloc::alloc::Global::alloc_impl (7 samples, 3.32%)</title><rect x="79.6209%" y="965" width="3.3175%" height="15" fill="rgb(76,189,189)" fg:x="168" fg:w="7"/><text x="79.8709%" y="975.50">osr..</text></g><g><title>osrs_gph.exe`alloc::alloc::alloc (7 samples, 3.32%)</title><rect x="79.6209%" y="949" width="3.3175%" height="15" fill="rgb(77,189,189)" fg:x="168" fg:w="7"/><text x="79.8709%" y="959.50">osr..</text></g><g><title>`0x7FFE593EC700 (1 samples, 0.47%)</title><rect x="82.4645%" y="933" width="0.4739%" height="15" fill="rgb(227,227,69)" fg:x="174" fg:w="1"/><text x="82.7145%" y="943.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$8::d_rounds (1 samples, 0.47%)</title><rect x="82.9384%" y="965" width="0.4739%" height="15" fill="rgb(91,202,202)" fg:x="175" fg:w="1"/><text x="83.1884%" y="975.50"></text></g><g><title>osrs_gph.exe`core::num::impl$9::wrapping_add (1 samples, 0.47%)</title><rect x="82.9384%" y="949" width="0.4739%" height="15" fill="rgb(52,167,167)" fg:x="175" fg:w="1"/><text x="83.1884%" y="959.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::impl$86::finish (2 samples, 0.95%)</title><rect x="82.9384%" y="1013" width="0.9479%" height="15" fill="rgb(69,182,182)" fg:x="175" fg:w="2"/><text x="83.1884%" y="1023.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$4::finish (2 samples, 0.95%)</title><rect x="82.9384%" y="997" width="0.9479%" height="15" fill="rgb(70,184,184)" fg:x="175" fg:w="2"/><text x="83.1884%" y="1007.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (2 samples, 0.95%)</title><rect x="82.9384%" y="981" width="0.9479%" height="15" fill="rgb(52,167,167)" fg:x="175" fg:w="2"/><text x="83.1884%" y="991.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$8::c_rounds (1 samples, 0.47%)</title><rect x="83.4123%" y="965" width="0.4739%" height="15" fill="rgb(85,197,197)" fg:x="176" fg:w="1"/><text x="83.6623%" y="975.50"></text></g><g><title>osrs_gph.exe`core::num::impl$9::rotate_left (1 samples, 0.47%)</title><rect x="83.4123%" y="949" width="0.4739%" height="15" fill="rgb(83,195,195)" fg:x="176" fg:w="1"/><text x="83.6623%" y="959.50"></text></g><g><title>osrs_gph.exe`hashbrown::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;(alloc::string::String, enum2$&lt;core::option::Option (3 samples, 1.42%)</title><rect x="82.9384%" y="1077" width="1.4218%" height="15" fill="rgb(61,175,175)" fg:x="175" fg:w="3"/><text x="83.1884%" y="1087.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;alloc::string::String,alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;, hashbrown::map::make_hasher::closure_env$0&lt;alloc::string::String,enum2$&lt;core::option::Option (3 samples, 1.42%)</title><rect x="82.9384%" y="1061" width="1.4218%" height="15" fill="rgb(64,178,178)" fg:x="175" fg:w="3"/><text x="83.1884%" y="1071.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt;,alloc::alloc::Global&gt;::reserve(unsigned long long, hashbrown::map::make_hasher::closure_env$0&lt;alloc::string::String,enum2$&lt;core::option::Option (3 samples, 1.42%)</title><rect x="82.9384%" y="1045" width="1.4218%" height="15" fill="rgb(60,174,174)" fg:x="175" fg:w="3"/><text x="83.1884%" y="1055.50"></text></g><g><title>osrs_gph.exe`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;alloc::string::String&gt; &gt; (3 samples, 1.42%)</title><rect x="82.9384%" y="1029" width="1.4218%" height="15" fill="rgb(70,183,183)" fg:x="175" fg:w="3"/><text x="83.1884%" y="1039.50"></text></g><g><title>osrs_gph.exe`core::hash::impls::impl$5::hash (1 samples, 0.47%)</title><rect x="83.8863%" y="1013" width="0.4739%" height="15" fill="rgb(77,190,190)" fg:x="177" fg:w="1"/><text x="84.1363%" y="1023.50"></text></g><g><title>osrs_gph.exe`alloc::string::impl$23::hash (1 samples, 0.47%)</title><rect x="83.8863%" y="997" width="0.4739%" height="15" fill="rgb(84,196,196)" fg:x="177" fg:w="1"/><text x="84.1363%" y="1007.50"></text></g><g><title>osrs_gph.exe`core::hash::impls::impl$2::hash(ref$ (1 samples, 0.47%)</title><rect x="83.8863%" y="981" width="0.4739%" height="15" fill="rgb(70,183,183)" fg:x="177" fg:w="1"/><text x="84.1363%" y="991.50"></text></g><g><title>osrs_gph.exe`std::collections::hash::map::impl$86::write_str(std::collections::hash::map::DefaultHasher*, ref$ (1 samples, 0.47%)</title><rect x="83.8863%" y="965" width="0.4739%" height="15" fill="rgb(85,197,197)" fg:x="177" fg:w="1"/><text x="84.1363%" y="975.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$4::write_str(core::hash::sip::SipHasher13*, ref$ (1 samples, 0.47%)</title><rect x="83.8863%" y="949" width="0.4739%" height="15" fill="rgb(78,191,191)" fg:x="177" fg:w="1"/><text x="84.1363%" y="959.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$5::write_str(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$ (1 samples, 0.47%)</title><rect x="83.8863%" y="933" width="0.4739%" height="15" fill="rgb(88,200,200)" fg:x="177" fg:w="1"/><text x="84.1363%" y="943.50"></text></g><g><title>osrs_gph.exe`core::hash::Hasher::write_u8(core::hash::sip::Hasher (1 samples, 0.47%)</title><rect x="83.8863%" y="917" width="0.4739%" height="15" fill="rgb(64,178,178)" fg:x="177" fg:w="1"/><text x="84.1363%" y="927.50"></text></g><g><title>osrs_gph.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (1 samples, 0.47%)</title><rect x="83.8863%" y="901" width="0.4739%" height="15" fill="rgb(102,213,213)" fg:x="177" fg:w="1"/><text x="84.1363%" y="911.50"></text></g><g><title>osrs_gph.exe`serde::de::MapAccess::next_entry(serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (24 samples, 11.37%)</title><rect x="73.4597%" y="1109" width="11.3744%" height="15" fill="rgb(92,203,203)" fg:x="155" fg:w="24"/><text x="73.7097%" y="1119.50">osrs_gph.exe`serd..</text></g><g><title>osrs_gph.exe`serde::de::MapAccess::next_entry_seed(serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;*, core::marker::PhantomData&lt;alloc::string::String&gt;, core::marker::PhantomData&lt;enum2$&lt;core::option::Option (24 samples, 11.37%)</title><rect x="73.4597%" y="1093" width="11.3744%" height="15" fill="rgb(88,199,199)" fg:x="155" fg:w="24"/><text x="73.7097%" y="1103.50">osrs_gph.exe`serd..</text></g><g><title>osrs_gph.exe`osrs_gph::data_types::impl$0::deserialize::impl$0::visit_map&lt;serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt; &gt;(osrs_gph::data_types::impl$0::deserialize::PriceDatumVisitor, serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (27 samples, 12.80%)</title><rect x="72.5118%" y="1125" width="12.7962%" height="15" fill="rgb(62,176,176)" fg:x="153" fg:w="27"/><text x="72.7618%" y="1135.50">osrs_gph.exe`osrs_g..</text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option (1 samples, 0.47%)</title><rect x="84.8341%" y="1109" width="0.4739%" height="15" fill="rgb(85,197,197)" fg:x="179" fg:w="1"/><text x="85.0841%" y="1119.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(hashbrown::map::HashMap&lt;alloc::string::String,enum2$&lt;core::option::Option (1 samples, 0.47%)</title><rect x="84.8341%" y="1093" width="0.4739%" height="15" fill="rgb(109,219,219)" fg:x="179" fg:w="1"/><text x="85.0841%" y="1103.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option (1 samples, 0.47%)</title><rect x="84.8341%" y="1077" width="0.4739%" height="15" fill="rgb(89,201,201)" fg:x="179" fg:w="1"/><text x="85.0841%" y="1087.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$18::drop(hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option (1 samples, 0.47%)</title><rect x="84.8341%" y="1061" width="0.4739%" height="15" fill="rgb(68,181,181)" fg:x="179" fg:w="1"/><text x="85.0841%" y="1071.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.47%)</title><rect x="84.8341%" y="1045" width="0.4739%" height="15" fill="rgb(86,198,198)" fg:x="179" fg:w="1"/><text x="85.0841%" y="1055.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::drop_elements (1 samples, 0.47%)</title><rect x="84.8341%" y="1029" width="0.4739%" height="15" fill="rgb(64,178,178)" fg:x="179" fg:w="1"/><text x="85.0841%" y="1039.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;i32&gt; &gt; &gt; &gt;::drop (1 samples, 0.47%)</title><rect x="84.8341%" y="1013" width="0.4739%" height="15" fill="rgb(84,196,196)" fg:x="179" fg:w="1"/><text x="85.0841%" y="1023.50"></text></g><g><title>osrs_gph.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option (1 samples, 0.47%)</title><rect x="84.8341%" y="997" width="0.4739%" height="15" fill="rgb(78,190,190)" fg:x="179" fg:w="1"/><text x="85.0841%" y="1007.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tuple$&lt;alloc::string::String,enum2$&lt;core::option::Option (1 samples, 0.47%)</title><rect x="84.8341%" y="981" width="0.4739%" height="15" fill="rgb(56,170,170)" fg:x="179" fg:w="1"/><text x="85.0841%" y="991.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.47%)</title><rect x="84.8341%" y="965" width="0.4739%" height="15" fill="rgb(86,198,198)" fg:x="179" fg:w="1"/><text x="85.0841%" y="975.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.47%)</title><rect x="84.8341%" y="949" width="0.4739%" height="15" fill="rgb(71,184,184)" fg:x="179" fg:w="1"/><text x="85.0841%" y="959.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.47%)</title><rect x="84.8341%" y="933" width="0.4739%" height="15" fill="rgb(77,189,189)" fg:x="179" fg:w="1"/><text x="85.0841%" y="943.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1 samples, 0.47%)</title><rect x="84.8341%" y="917" width="0.4739%" height="15" fill="rgb(99,210,210)" fg:x="179" fg:w="1"/><text x="85.0841%" y="927.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.47%)</title><rect x="84.8341%" y="901" width="0.4739%" height="15" fill="rgb(86,198,198)" fg:x="179" fg:w="1"/><text x="85.0841%" y="911.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::dealloc (1 samples, 0.47%)</title><rect x="84.8341%" y="885" width="0.4739%" height="15" fill="rgb(91,202,202)" fg:x="179" fg:w="1"/><text x="85.0841%" y="895.50"></text></g><g><title>`0x7FFE593EAB11 (1 samples, 0.47%)</title><rect x="84.8341%" y="869" width="0.4739%" height="15" fill="rgb(228,228,69)" fg:x="179" fg:w="1"/><text x="85.0841%" y="879.50"></text></g><g><title>`0x7FFE5945BFA1 (1 samples, 0.47%)</title><rect x="84.8341%" y="853" width="0.4739%" height="15" fill="rgb(188,188,54)" fg:x="179" fg:w="1"/><text x="85.0841%" y="863.50"></text></g><g><title>osrs_gph.exe`serde_json::de::impl$11::next_value_seed(serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;*, core::marker::PhantomData (28 samples, 13.27%)</title><rect x="72.5118%" y="1189" width="13.2701%" height="15" fill="rgb(62,176,176)" fg:x="153" fg:w="28"/><text x="72.7618%" y="1199.50">osrs_gph.exe`serde_j..</text></g><g><title>osrs_gph.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;osrs_gph::data_types::PriceDatum&gt;, serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (28 samples, 13.27%)</title><rect x="72.5118%" y="1173" width="13.2701%" height="15" fill="rgb(78,191,191)" fg:x="153" fg:w="28"/><text x="72.7618%" y="1183.50">osrs_gph.exe`serde::..</text></g><g><title>osrs_gph.exe`osrs_gph::data_types::impl$0::deserialize(serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (28 samples, 13.27%)</title><rect x="72.5118%" y="1157" width="13.2701%" height="15" fill="rgb(90,202,202)" fg:x="153" fg:w="28"/><text x="72.7618%" y="1167.50">osrs_gph.exe`osrs_gp..</text></g><g><title>osrs_gph.exe`serde_json::de::impl$7::deserialize_any(serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (28 samples, 13.27%)</title><rect x="72.5118%" y="1141" width="13.2701%" height="15" fill="rgb(68,181,181)" fg:x="153" fg:w="28"/><text x="72.7618%" y="1151.50">osrs_gph.exe`serde_j..</text></g><g><title>osrs_gph.exe`osrs_gph::data_types::impl$1::deserialize::impl$0::visit_map(osrs_gph::data_types::impl$1::deserialize::PriceDataTypeVisitor, serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (36 samples, 17.06%)</title><rect x="69.1943%" y="1301" width="17.0616%" height="15" fill="rgb(78,190,190)" fg:x="146" fg:w="36"/><text x="69.4443%" y="1311.50">osrs_gph.exe`osrs_gph::dat..</text></g><g><title>osrs_gph.exe`serde::de::MapAccess::next_entry(serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (32 samples, 15.17%)</title><rect x="71.0900%" y="1285" width="15.1659%" height="15" fill="rgb(84,196,196)" fg:x="150" fg:w="32"/><text x="71.3400%" y="1295.50">osrs_gph.exe`serde::de:..</text></g><g><title>osrs_gph.exe`serde::de::MapAccess::next_entry_seed(serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;*, core::marker::PhantomData&lt;alloc::string::String&gt;, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (32 samples, 15.17%)</title><rect x="71.0900%" y="1269" width="15.1659%" height="15" fill="rgb(69,182,182)" fg:x="150" fg:w="32"/><text x="71.3400%" y="1279.50">osrs_gph.exe`serde::de:..</text></g><g><title>osrs_gph.exe`serde_json::de::impl$7::deserialize_map&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;,serde::de::impls::impl$190::deserialize::MapVisitor&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt; &gt;(serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;*, serde::de::impls::impl$190::deserialize::MapVisitor (32 samples, 15.17%)</title><rect x="71.0900%" y="1253" width="15.1659%" height="15" fill="rgb(65,178,178)" fg:x="150" fg:w="32"/><text x="71.3400%" y="1263.50">osrs_gph.exe`serde_json..</text></g><g><title>osrs_gph.exe`serde::de::impls::impl$190::deserialize::impl$0::visit_map(serde::de::impls::impl$190::deserialize::MapVisitor&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt;, serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (32 samples, 15.17%)</title><rect x="71.0900%" y="1237" width="15.1659%" height="15" fill="rgb(108,218,218)" fg:x="150" fg:w="32"/><text x="71.3400%" y="1247.50">osrs_gph.exe`serde::de:..</text></g><g><title>osrs_gph.exe`serde::de::MapAccess::next_entry(serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (29 samples, 13.74%)</title><rect x="72.5118%" y="1221" width="13.7441%" height="15" fill="rgb(60,174,174)" fg:x="153" fg:w="29"/><text x="72.7618%" y="1231.50">osrs_gph.exe`serde::d..</text></g><g><title>osrs_gph.exe`serde::de::MapAccess::next_entry_seed(serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;*, core::marker::PhantomData&lt;alloc::string::String&gt;, core::marker::PhantomData (29 samples, 13.74%)</title><rect x="72.5118%" y="1205" width="13.7441%" height="15" fill="rgb(68,182,182)" fg:x="153" fg:w="29"/><text x="72.7618%" y="1215.50">osrs_gph.exe`serde::d..</text></g><g><title>osrs_gph.exe`serde_json::de::impl$11::next_key_seed&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;,core::marker::PhantomData&lt;alloc::string::String&gt; &gt;(serde_json::de::MapAccess&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;*, core::marker::PhantomData (1 samples, 0.47%)</title><rect x="85.7820%" y="1189" width="0.4739%" height="15" fill="rgb(100,211,211)" fg:x="181" fg:w="1"/><text x="86.0320%" y="1199.50"></text></g><g><title>osrs_gph.exe`serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;::parse_whitespace (1 samples, 0.47%)</title><rect x="85.7820%" y="1173" width="0.4739%" height="15" fill="rgb(60,174,174)" fg:x="181" fg:w="1"/><text x="86.0320%" y="1183.50"></text></g><g><title>osrs_gph.exe`serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt; &gt;::peek (1 samples, 0.47%)</title><rect x="85.7820%" y="1157" width="0.4739%" height="15" fill="rgb(72,185,185)" fg:x="181" fg:w="1"/><text x="86.0320%" y="1167.50"></text></g><g><title>osrs_gph.exe`serde_json::read::impl$4::peek(serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (1 samples, 0.47%)</title><rect x="85.7820%" y="1141" width="0.4739%" height="15" fill="rgb(68,181,181)" fg:x="181" fg:w="1"/><text x="86.0320%" y="1151.50"></text></g><g><title>osrs_gph.exe`serde_json::iter::impl$1::next(serde_json::iter::LineColIterator&lt;std::io::Bytes&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (1 samples, 0.47%)</title><rect x="85.7820%" y="1125" width="0.4739%" height="15" fill="rgb(101,211,211)" fg:x="181" fg:w="1"/><text x="86.0320%" y="1135.50"></text></g><g><title>osrs_gph.exe`std::io::uninlined_slow_read_byte&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt; &gt;(std::io::buffered::bufreader::BufReader&lt;ref_mut$ (1 samples, 0.47%)</title><rect x="85.7820%" y="1109" width="0.4739%" height="15" fill="rgb(61,175,175)" fg:x="181" fg:w="1"/><text x="86.0320%" y="1119.50"></text></g><g><title>osrs_gph.exe`std::io::inlined_slow_read_byte(std::io::buffered::bufreader::BufReader&lt;ref_mut$ (1 samples, 0.47%)</title><rect x="85.7820%" y="1093" width="0.4739%" height="15" fill="rgb(67,180,180)" fg:x="181" fg:w="1"/><text x="86.0320%" y="1103.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufreader::impl$4::read&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt;(std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt;*, ref_mut$&lt;slice2$ (1 samples, 0.47%)</title><rect x="85.7820%" y="1077" width="0.4739%" height="15" fill="rgb(84,196,196)" fg:x="181" fg:w="1"/><text x="86.0320%" y="1087.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufreader::impl$5::fill_buf(std::io::buffered::bufreader::BufReader&lt;ref_mut$ (1 samples, 0.47%)</title><rect x="85.7820%" y="1061" width="0.4739%" height="15" fill="rgb(102,213,213)" fg:x="181" fg:w="1"/><text x="86.0320%" y="1071.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufreader::buffer::Buffer::fill_buf (1 samples, 0.47%)</title><rect x="85.7820%" y="1045" width="0.4739%" height="15" fill="rgb(75,188,188)" fg:x="181" fg:w="1"/><text x="86.0320%" y="1055.50"></text></g><g><title>osrs_gph.exe`std::io::impls::impl$0::read_buf (1 samples, 0.47%)</title><rect x="85.7820%" y="1029" width="0.4739%" height="15" fill="rgb(90,201,201)" fg:x="181" fg:w="1"/><text x="86.0320%" y="1039.50"></text></g><g><title>osrs_gph.exe`std::io::impls::impl$0::read_buf (1 samples, 0.47%)</title><rect x="85.7820%" y="1013" width="0.4739%" height="15" fill="rgb(75,188,188)" fg:x="181" fg:w="1"/><text x="86.0320%" y="1023.50"></text></g><g><title>osrs_gph.exe`std::io::Read::read_buf (1 samples, 0.47%)</title><rect x="85.7820%" y="997" width="0.4739%" height="15" fill="rgb(64,178,178)" fg:x="181" fg:w="1"/><text x="86.0320%" y="1007.50"></text></g><g><title>osrs_gph.exe`std::io::default_read_buf(std::io::Read::read_buf::closure_env$0 (1 samples, 0.47%)</title><rect x="85.7820%" y="981" width="0.4739%" height="15" fill="rgb(65,179,179)" fg:x="181" fg:w="1"/><text x="86.0320%" y="991.50"></text></g><g><title>osrs_gph.exe`core::io::borrowed_buf::BorrowedCursor::ensure_init (1 samples, 0.47%)</title><rect x="85.7820%" y="965" width="0.4739%" height="15" fill="rgb(63,177,177)" fg:x="181" fg:w="1"/><text x="86.0320%" y="975.50"></text></g><g><title>osrs_gph.exe`reqwest::blocking::response::impl$2::read(reqwest::blocking::response::Response*, ref_mut$&lt;slice2$ (1 samples, 0.47%)</title><rect x="85.7820%" y="949" width="0.4739%" height="15" fill="rgb(93,204,204)" fg:x="181" fg:w="1"/><text x="86.0320%" y="959.50"></text></g><g><title>osrs_gph.exe`enum2$&lt;core::result::Result&lt;usize,enum2$&lt;reqwest::blocking::wait::Waited&lt;std::io::error::Error&gt; &gt; &gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;usize,enum2$&lt;reqwest::blocking::wait::Waited (1 samples, 0.47%)</title><rect x="85.7820%" y="933" width="0.4739%" height="15" fill="rgb(83,195,195)" fg:x="181" fg:w="1"/><text x="86.0320%" y="943.50"></text></g><g><title>osrs_gph.exe`reqwest::blocking::wait::timeout&lt;futures_util::io::read::Read&lt;core::pin::Pin&lt;ref_mut$&lt;dyn$&lt;futures_io::if_std::AsyncRead&gt; &gt; &gt; &gt;,usize,std::io::error::Error&gt;(futures_util::io::read::Read&lt;core::pin::Pin&lt;ref_mut$&lt;dyn$&lt;futures_io::if_std::AsyncRead&gt; &gt; &gt; &gt;, enum2$&lt;core::option::Option (1 samples, 0.47%)</title><rect x="85.7820%" y="917" width="0.4739%" height="15" fill="rgb(77,189,189)" fg:x="181" fg:w="1"/><text x="86.0320%" y="927.50"></text></g><g><title>osrs_gph.exe`std::thread::park_timeout (1 samples, 0.47%)</title><rect x="85.7820%" y="901" width="0.4739%" height="15" fill="rgb(104,215,215)" fg:x="181" fg:w="1"/><text x="86.0320%" y="911.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::thread_parking::Parker::park_timeout (1 samples, 0.47%)</title><rect x="85.7820%" y="885" width="0.4739%" height="15" fill="rgb(64,178,178)" fg:x="181" fg:w="1"/><text x="86.0320%" y="895.50"></text></g><g><title>`0x7FFE56B72DF3 (1 samples, 0.47%)</title><rect x="85.7820%" y="869" width="0.4739%" height="15" fill="rgb(211,211,63)" fg:x="181" fg:w="1"/><text x="86.0320%" y="879.50"></text></g><g><title>`0x7FFE593FBA93 (1 samples, 0.47%)</title><rect x="85.7820%" y="853" width="0.4739%" height="15" fill="rgb(186,186,54)" fg:x="181" fg:w="1"/><text x="86.0320%" y="863.50"></text></g><g><title>`0x7FFE593FF9CC (1 samples, 0.47%)</title><rect x="85.7820%" y="837" width="0.4739%" height="15" fill="rgb(179,179,51)" fg:x="181" fg:w="1"/><text x="86.0320%" y="847.50"></text></g><g><title>`0x7FFE593E39BE (1 samples, 0.47%)</title><rect x="85.7820%" y="821" width="0.4739%" height="15" fill="rgb(217,217,65)" fg:x="181" fg:w="1"/><text x="86.0320%" y="831.50"></text></g><g><title>osrs_gph.exe`serde_json::de::from_trait(serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (37 samples, 17.54%)</title><rect x="69.1943%" y="1349" width="17.5355%" height="15" fill="rgb(70,183,183)" fg:x="146" fg:w="37"/><text x="69.4443%" y="1359.50">osrs_gph.exe`serde_json::de..</text></g><g><title>osrs_gph.exe`osrs_gph::data_types::impl$1::deserialize(serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (37 samples, 17.54%)</title><rect x="69.1943%" y="1333" width="17.5355%" height="15" fill="rgb(74,187,187)" fg:x="146" fg:w="37"/><text x="69.4443%" y="1343.50">osrs_gph.exe`osrs_gph::data..</text></g><g><title>osrs_gph.exe`serde_json::de::impl$7::deserialize_any(serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$ (37 samples, 17.54%)</title><rect x="69.1943%" y="1317" width="17.5355%" height="15" fill="rgb(90,201,201)" fg:x="146" fg:w="37"/><text x="69.4443%" y="1327.50">osrs_gph.exe`serde_json::de..</text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;alloc::string::String,std::collections::hash::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt; &gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,std::collections::hash::map::HashMap (1 samples, 0.47%)</title><rect x="86.2559%" y="1301" width="0.4739%" height="15" fill="rgb(53,167,167)" fg:x="182" fg:w="1"/><text x="86.5059%" y="1311.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.47%)</title><rect x="86.2559%" y="1285" width="0.4739%" height="15" fill="rgb(93,204,204)" fg:x="182" fg:w="1"/><text x="86.5059%" y="1295.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::drop_elements (1 samples, 0.47%)</title><rect x="86.2559%" y="1269" width="0.4739%" height="15" fill="rgb(101,212,212)" fg:x="182" fg:w="1"/><text x="86.5059%" y="1279.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,std::collections::hash::map::HashMap&lt;alloc::string::String,osrs_gph::data_types::PriceDatum,std::collections::hash::map::RandomState&gt; &gt; &gt;::drop (1 samples, 0.47%)</title><rect x="86.2559%" y="1253" width="0.4739%" height="15" fill="rgb(68,181,181)" fg:x="182" fg:w="1"/><text x="86.5059%" y="1263.50"></text></g><g><title>osrs_gph.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$&lt;alloc::string::String,std::collections::hash::map::HashMap (1 samples, 0.47%)</title><rect x="86.2559%" y="1237" width="0.4739%" height="15" fill="rgb(57,172,172)" fg:x="182" fg:w="1"/><text x="86.5059%" y="1247.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tuple$&lt;alloc::string::String,std::collections::hash::map::HashMap (1 samples, 0.47%)</title><rect x="86.2559%" y="1221" width="0.4739%" height="15" fill="rgb(107,217,217)" fg:x="182" fg:w="1"/><text x="86.5059%" y="1231.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (1 samples, 0.47%)</title><rect x="86.2559%" y="1205" width="0.4739%" height="15" fill="rgb(67,180,180)" fg:x="182" fg:w="1"/><text x="86.5059%" y="1215.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (1 samples, 0.47%)</title><rect x="86.2559%" y="1189" width="0.4739%" height="15" fill="rgb(82,194,194)" fg:x="182" fg:w="1"/><text x="86.5059%" y="1199.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (1 samples, 0.47%)</title><rect x="86.2559%" y="1173" width="0.4739%" height="15" fill="rgb(90,202,202)" fg:x="182" fg:w="1"/><text x="86.5059%" y="1183.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (1 samples, 0.47%)</title><rect x="86.2559%" y="1157" width="0.4739%" height="15" fill="rgb(57,171,171)" fg:x="182" fg:w="1"/><text x="86.5059%" y="1167.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.47%)</title><rect x="86.2559%" y="1141" width="0.4739%" height="15" fill="rgb(60,174,174)" fg:x="182" fg:w="1"/><text x="86.5059%" y="1151.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::drop_elements (1 samples, 0.47%)</title><rect x="86.2559%" y="1125" width="0.4739%" height="15" fill="rgb(74,187,187)" fg:x="182" fg:w="1"/><text x="86.5059%" y="1135.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt; &gt;::drop (1 samples, 0.47%)</title><rect x="86.2559%" y="1109" width="0.4739%" height="15" fill="rgb(91,203,203)" fg:x="182" fg:w="1"/><text x="86.5059%" y="1119.50"></text></g><g><title>osrs_gph.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (1 samples, 0.47%)</title><rect x="86.2559%" y="1093" width="0.4739%" height="15" fill="rgb(92,204,204)" fg:x="182" fg:w="1"/><text x="86.5059%" y="1103.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tuple$ (1 samples, 0.47%)</title><rect x="86.2559%" y="1077" width="0.4739%" height="15" fill="rgb(73,186,186)" fg:x="182" fg:w="1"/><text x="86.5059%" y="1087.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.47%)</title><rect x="86.2559%" y="1061" width="0.4739%" height="15" fill="rgb(93,205,205)" fg:x="182" fg:w="1"/><text x="86.5059%" y="1071.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.47%)</title><rect x="86.2559%" y="1045" width="0.4739%" height="15" fill="rgb(71,184,184)" fg:x="182" fg:w="1"/><text x="86.5059%" y="1055.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.47%)</title><rect x="86.2559%" y="1029" width="0.4739%" height="15" fill="rgb(79,192,192)" fg:x="182" fg:w="1"/><text x="86.5059%" y="1039.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1 samples, 0.47%)</title><rect x="86.2559%" y="1013" width="0.4739%" height="15" fill="rgb(63,177,177)" fg:x="182" fg:w="1"/><text x="86.5059%" y="1023.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.47%)</title><rect x="86.2559%" y="997" width="0.4739%" height="15" fill="rgb(67,181,181)" fg:x="182" fg:w="1"/><text x="86.5059%" y="1007.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::dealloc (1 samples, 0.47%)</title><rect x="86.2559%" y="981" width="0.4739%" height="15" fill="rgb(97,208,208)" fg:x="182" fg:w="1"/><text x="86.5059%" y="991.50"></text></g><g><title>`0x7FFE593EAB11 (1 samples, 0.47%)</title><rect x="86.2559%" y="965" width="0.4739%" height="15" fill="rgb(206,206,61)" fg:x="182" fg:w="1"/><text x="86.5059%" y="975.50"></text></g><g><title>`0x7FFE5945C048 (1 samples, 0.47%)</title><rect x="86.2559%" y="949" width="0.4739%" height="15" fill="rgb(201,201,59)" fg:x="182" fg:w="1"/><text x="86.5059%" y="959.50"></text></g><g><title>osrs_gph.exe`osrs_gph::api_request(osrs_gph::logging::Logging&lt;osrs_gph::api::API (42 samples, 19.91%)</title><rect x="67.2986%" y="1429" width="19.9052%" height="15" fill="rgb(63,177,177)" fg:x="142" fg:w="42"/><text x="67.5486%" y="1439.50">osrs_gph.exe`osrs_gph::api_requ..</text></g><g><title>osrs_gph.exe`osrs_gph::logging::Logging&lt;osrs_gph::api::API&lt;alloc::string::String&gt; &gt;::request&lt;alloc::string::String,enum2$&lt;core::result::Result&lt;osrs_gph::data_types::PriceDataType,serde_json::error::Error&gt; &gt;,alloc::string::String,ref$&lt;osrs_gph::api_request::closure_env$0&gt; &gt;(alloc::string::String, osrs_gph::api_request::closure_env$0*, enum2$&lt;core::option::Option&lt;ref$ (42 samples, 19.91%)</title><rect x="67.2986%" y="1413" width="19.9052%" height="15" fill="rgb(64,178,178)" fg:x="142" fg:w="42"/><text x="67.5486%" y="1423.50">osrs_gph.exe`osrs_gph::logging:..</text></g><g><title>osrs_gph.exe`core::ops::function::impls::impl$2::call_once (38 samples, 18.01%)</title><rect x="69.1943%" y="1397" width="18.0095%" height="15" fill="rgb(101,211,211)" fg:x="146" fg:w="38"/><text x="69.4443%" y="1407.50">osrs_gph.exe`core::ops::func..</text></g><g><title>osrs_gph.exe`osrs_gph::api_request::closure$0 (38 samples, 18.01%)</title><rect x="69.1943%" y="1381" width="18.0095%" height="15" fill="rgb(86,198,198)" fg:x="146" fg:w="38"/><text x="69.4443%" y="1391.50">osrs_gph.exe`osrs_gph::api_r..</text></g><g><title>osrs_gph.exe`serde_json::de::from_reader&lt;std::io::buffered::bufreader::BufReader&lt;ref_mut$&lt;reqwest::blocking::response::Response&gt; &gt;,osrs_gph::data_types::PriceDataType&gt;(std::io::buffered::bufreader::BufReader&lt;ref_mut$ (38 samples, 18.01%)</title><rect x="69.1943%" y="1365" width="18.0095%" height="15" fill="rgb(79,191,191)" fg:x="146" fg:w="38"/><text x="69.4443%" y="1375.50">osrs_gph.exe`serde_json::de:..</text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.47%)</title><rect x="87.2038%" y="1429" width="0.4739%" height="15" fill="rgb(100,211,211)" fg:x="184" fg:w="1"/><text x="87.4538%" y="1439.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (1 samples, 0.47%)</title><rect x="87.2038%" y="1413" width="0.4739%" height="15" fill="rgb(68,181,181)" fg:x="184" fg:w="1"/><text x="87.4538%" y="1423.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (1 samples, 0.47%)</title><rect x="87.2038%" y="1397" width="0.4739%" height="15" fill="rgb(83,195,195)" fg:x="184" fg:w="1"/><text x="87.4538%" y="1407.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (1 samples, 0.47%)</title><rect x="87.2038%" y="1381" width="0.4739%" height="15" fill="rgb(96,208,208)" fg:x="184" fg:w="1"/><text x="87.4538%" y="1391.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::impl$18::drop(hashbrown::raw::RawTable&lt;tuple$ (1 samples, 0.47%)</title><rect x="87.2038%" y="1365" width="0.4739%" height="15" fill="rgb(68,182,182)" fg:x="184" fg:w="1"/><text x="87.4538%" y="1375.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.47%)</title><rect x="87.2038%" y="1349" width="0.4739%" height="15" fill="rgb(105,215,215)" fg:x="184" fg:w="1"/><text x="87.4538%" y="1359.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::RawTableInner::drop_elements (1 samples, 0.47%)</title><rect x="87.2038%" y="1333" width="0.4739%" height="15" fill="rgb(88,200,200)" fg:x="184" fg:w="1"/><text x="87.4538%" y="1343.50"></text></g><g><title>osrs_gph.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,osrs_gph::data_types::PriceDatum&gt; &gt;::drop (1 samples, 0.47%)</title><rect x="87.2038%" y="1317" width="0.4739%" height="15" fill="rgb(83,195,195)" fg:x="184" fg:w="1"/><text x="87.4538%" y="1327.50"></text></g><g><title>osrs_gph.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (1 samples, 0.47%)</title><rect x="87.2038%" y="1301" width="0.4739%" height="15" fill="rgb(77,190,190)" fg:x="184" fg:w="1"/><text x="87.4538%" y="1311.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(tuple$ (1 samples, 0.47%)</title><rect x="87.2038%" y="1285" width="0.4739%" height="15" fill="rgb(58,172,172)" fg:x="184" fg:w="1"/><text x="87.4538%" y="1295.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place (1 samples, 0.47%)</title><rect x="87.2038%" y="1269" width="0.4739%" height="15" fill="rgb(50,165,165)" fg:x="184" fg:w="1"/><text x="87.4538%" y="1279.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.47%)</title><rect x="87.2038%" y="1253" width="0.4739%" height="15" fill="rgb(87,199,199)" fg:x="184" fg:w="1"/><text x="87.4538%" y="1263.50"></text></g><g><title>osrs_gph.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.47%)</title><rect x="87.2038%" y="1237" width="0.4739%" height="15" fill="rgb(92,204,204)" fg:x="184" fg:w="1"/><text x="87.4538%" y="1247.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1 samples, 0.47%)</title><rect x="87.2038%" y="1221" width="0.4739%" height="15" fill="rgb(53,168,168)" fg:x="184" fg:w="1"/><text x="87.4538%" y="1231.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.47%)</title><rect x="87.2038%" y="1205" width="0.4739%" height="15" fill="rgb(67,180,180)" fg:x="184" fg:w="1"/><text x="87.4538%" y="1215.50"></text></g><g><title>osrs_gph.exe`alloc::alloc::dealloc (1 samples, 0.47%)</title><rect x="87.2038%" y="1189" width="0.4739%" height="15" fill="rgb(79,191,191)" fg:x="184" fg:w="1"/><text x="87.4538%" y="1199.50"></text></g><g><title>`0x7FFE593EAB11 (1 samples, 0.47%)</title><rect x="87.2038%" y="1173" width="0.4739%" height="15" fill="rgb(196,196,57)" fg:x="184" fg:w="1"/><text x="87.4538%" y="1183.50"></text></g><g><title>`0x7FFE5945C06F (1 samples, 0.47%)</title><rect x="87.2038%" y="1157" width="0.4739%" height="15" fill="rgb(189,189,55)" fg:x="184" fg:w="1"/><text x="87.4538%" y="1167.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufreader::impl$5::fill_buf (1 samples, 0.47%)</title><rect x="87.6777%" y="1285" width="0.4739%" height="15" fill="rgb(65,178,178)" fg:x="185" fg:w="1"/><text x="87.9277%" y="1295.50"></text></g><g><title>osrs_gph.exe`std::io::buffered::bufreader::buffer::Buffer::fill_buf (1 samples, 0.47%)</title><rect x="87.6777%" y="1269" width="0.4739%" height="15" fill="rgb(94,205,205)" fg:x="185" fg:w="1"/><text x="87.9277%" y="1279.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch (1 samples, 0.47%)</title><rect x="87.6777%" y="1253" width="0.4739%" height="15" fill="rgb(106,217,217)" fg:x="185" fg:w="1"/><text x="87.9277%" y="1263.50"></text></g><g><title>osrs_gph.exe`std::io::stdio::impl$0::read_buf (1 samples, 0.47%)</title><rect x="87.6777%" y="1237" width="0.4739%" height="15" fill="rgb(88,200,200)" fg:x="185" fg:w="1"/><text x="87.9277%" y="1247.50"></text></g><g><title>osrs_gph.exe`std::io::Read::read_buf (1 samples, 0.47%)</title><rect x="87.6777%" y="1221" width="0.4739%" height="15" fill="rgb(95,206,206)" fg:x="185" fg:w="1"/><text x="87.9277%" y="1231.50"></text></g><g><title>osrs_gph.exe`std::io::default_read_buf (1 samples, 0.47%)</title><rect x="87.6777%" y="1205" width="0.4739%" height="15" fill="rgb(75,188,188)" fg:x="185" fg:w="1"/><text x="87.9277%" y="1215.50"></text></g><g><title>osrs_gph.exe`core::io::borrowed_buf::BorrowedCursor::ensure_init (1 samples, 0.47%)</title><rect x="87.6777%" y="1189" width="0.4739%" height="15" fill="rgb(52,167,167)" fg:x="185" fg:w="1"/><text x="87.9277%" y="1199.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::stdio::impl$2::read (1 samples, 0.47%)</title><rect x="87.6777%" y="1173" width="0.4739%" height="15" fill="rgb(52,166,166)" fg:x="185" fg:w="1"/><text x="87.9277%" y="1183.50"></text></g><g><title>osrs_gph.exe`core::result::impl$26::branch (1 samples, 0.47%)</title><rect x="87.6777%" y="1157" width="0.4739%" height="15" fill="rgb(71,184,184)" fg:x="185" fg:w="1"/><text x="87.9277%" y="1167.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::stdio::read_u16s_fixup_surrogates (1 samples, 0.47%)</title><rect x="87.6777%" y="1141" width="0.4739%" height="15" fill="rgb(63,177,177)" fg:x="185" fg:w="1"/><text x="87.9277%" y="1151.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::stdio::read_u16s (1 samples, 0.47%)</title><rect x="87.6777%" y="1125" width="0.4739%" height="15" fill="rgb(76,189,189)" fg:x="185" fg:w="1"/><text x="87.9277%" y="1135.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::cvt (1 samples, 0.47%)</title><rect x="87.6777%" y="1109" width="0.4739%" height="15" fill="rgb(88,200,200)" fg:x="185" fg:w="1"/><text x="87.9277%" y="1119.50"></text></g><g><title>osrs_gph.exe`std::sys::windows::impl$3::is_zero (1 samples, 0.47%)</title><rect x="87.6777%" y="1093" width="0.4739%" height="15" fill="rgb(87,199,199)" fg:x="185" fg:w="1"/><text x="87.9277%" y="1103.50"></text></g><g><title>`0x7FFE56BB64E0 (1 samples, 0.47%)</title><rect x="87.6777%" y="1077" width="0.4739%" height="15" fill="rgb(181,181,52)" fg:x="185" fg:w="1"/><text x="87.9277%" y="1087.50"></text></g><g><title>osrs_gph.exe`std::rt::lang_start_internal::closure$2 (65 samples, 30.81%)</title><rect x="57.8199%" y="1509" width="30.8057%" height="15" fill="rgb(93,204,204)" fg:x="122" fg:w="65"/><text x="58.0699%" y="1519.50">osrs_gph.exe`std::rt::lang_start_internal::closure..</text></g><g><title>osrs_gph.exe`std::panic::catch_unwind (65 samples, 30.81%)</title><rect x="57.8199%" y="1493" width="30.8057%" height="15" fill="rgb(78,191,191)" fg:x="122" fg:w="65"/><text x="58.0699%" y="1503.50">osrs_gph.exe`std::panic::catch_unwind</text></g><g><title>osrs_gph.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (65 samples, 30.81%)</title><rect x="57.8199%" y="1477" width="30.8057%" height="15" fill="rgb(101,212,212)" fg:x="122" fg:w="65"/><text x="58.0699%" y="1487.50">osrs_gph.exe`std::rt::lang_start::closure$0&lt;tuple$..</text></g><g><title>osrs_gph.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (65 samples, 30.81%)</title><rect x="57.8199%" y="1461" width="30.8057%" height="15" fill="rgb(72,185,185)" fg:x="122" fg:w="65"/><text x="58.0699%" y="1471.50">osrs_gph.exe`std::sys_common::backtrace::__rust_be..</text></g><g><title>osrs_gph.exe`osrs_gph::main (65 samples, 30.81%)</title><rect x="57.8199%" y="1445" width="30.8057%" height="15" fill="rgb(54,169,169)" fg:x="122" fg:w="65"/><text x="58.0699%" y="1455.50">osrs_gph.exe`osrs_gph::main</text></g><g><title>osrs_gph.exe`alloc::string::impl$38::deref (2 samples, 0.95%)</title><rect x="87.6777%" y="1429" width="0.9479%" height="15" fill="rgb(72,185,185)" fg:x="185" fg:w="2"/><text x="87.9277%" y="1439.50"></text></g><g><title>osrs_gph.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (2 samples, 0.95%)</title><rect x="87.6777%" y="1413" width="0.9479%" height="15" fill="rgb(98,209,209)" fg:x="185" fg:w="2"/><text x="87.9277%" y="1423.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_ptr (2 samples, 0.95%)</title><rect x="87.6777%" y="1397" width="0.9479%" height="15" fill="rgb(80,192,192)" fg:x="185" fg:w="2"/><text x="87.9277%" y="1407.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (2 samples, 0.95%)</title><rect x="87.6777%" y="1381" width="0.9479%" height="15" fill="rgb(95,206,206)" fg:x="185" fg:w="2"/><text x="87.9277%" y="1391.50"></text></g><g><title>osrs_gph.exe`osrs_gph::convenience::impl$1::input&lt;ref$&lt;str$&gt; &gt;(slog::Logger&lt;alloc::sync::Arc&lt;dyn$&lt;slog::SendSyncRefUnwindSafeDrain&lt;assoc$&lt;Err,slog::private::NeverStruct&gt;,assoc$&lt;Ok,tuple$&lt;&gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;*, ref$ (2 samples, 0.95%)</title><rect x="87.6777%" y="1365" width="0.9479%" height="15" fill="rgb(56,170,170)" fg:x="185" fg:w="2"/><text x="87.9277%" y="1375.50"></text></g><g><title>osrs_gph.exe`std::io::stdio::impl$7::read_line (2 samples, 0.95%)</title><rect x="87.6777%" y="1349" width="0.9479%" height="15" fill="rgb(105,215,215)" fg:x="185" fg:w="2"/><text x="87.9277%" y="1359.50"></text></g><g><title>osrs_gph.exe`std::sync::mutex::impl$11::deref_mut (2 samples, 0.95%)</title><rect x="87.6777%" y="1333" width="0.9479%" height="15" fill="rgb(62,176,176)" fg:x="185" fg:w="2"/><text x="87.9277%" y="1343.50"></text></g><g><title>osrs_gph.exe`std::io::append_to_string (2 samples, 0.95%)</title><rect x="87.6777%" y="1317" width="0.9479%" height="15" fill="rgb(75,188,188)" fg:x="185" fg:w="2"/><text x="87.9277%" y="1327.50"></text></g><g><title>osrs_gph.exe`std::io::read_until&lt;std::io::buffered::bufreader::BufReader&lt;std::io::stdio::StdinRaw&gt; &gt; (2 samples, 0.95%)</title><rect x="87.6777%" y="1301" width="0.9479%" height="15" fill="rgb(63,177,177)" fg:x="185" fg:w="2"/><text x="87.9277%" y="1311.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec::extend_from_slice (1 samples, 0.47%)</title><rect x="88.1517%" y="1285" width="0.4739%" height="15" fill="rgb(83,195,195)" fg:x="186" fg:w="1"/><text x="88.4017%" y="1295.50"></text></g><g><title>osrs_gph.exe`alloc::vec::spec_extend::impl$4::spec_extend (1 samples, 0.47%)</title><rect x="88.1517%" y="1269" width="0.4739%" height="15" fill="rgb(85,197,197)" fg:x="186" fg:w="1"/><text x="88.4017%" y="1279.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec::append_elements (1 samples, 0.47%)</title><rect x="88.1517%" y="1253" width="0.4739%" height="15" fill="rgb(54,168,168)" fg:x="186" fg:w="1"/><text x="88.4017%" y="1263.50"></text></g><g><title>osrs_gph.exe`alloc::vec::Vec::reserve (1 samples, 0.47%)</title><rect x="88.1517%" y="1237" width="0.4739%" height="15" fill="rgb(98,209,209)" fg:x="186" fg:w="1"/><text x="88.4017%" y="1247.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::RawVec::reserve (1 samples, 0.47%)</title><rect x="88.1517%" y="1221" width="0.4739%" height="15" fill="rgb(50,165,165)" fg:x="186" fg:w="1"/><text x="88.4017%" y="1231.50"></text></g><g><title>osrs_gph.exe`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle&lt;u8,alloc::alloc::Global&gt; (1 samples, 0.47%)</title><rect x="88.1517%" y="1205" width="0.4739%" height="15" fill="rgb(68,181,181)" fg:x="186" fg:w="1"/><text x="88.4017%" y="1215.50"></text></g><g><title>`0x7FFE579C0AFA (1 samples, 0.47%)</title><rect x="88.6256%" y="1381" width="0.4739%" height="15" fill="rgb(177,177,50)" fg:x="187" fg:w="1"/><text x="88.8756%" y="1391.50"></text></g><g><title>`0x7FFE56B38F6E (1 samples, 0.47%)</title><rect x="88.6256%" y="1365" width="0.4739%" height="15" fill="rgb(211,211,63)" fg:x="187" fg:w="1"/><text x="88.8756%" y="1375.50"></text></g><g><title>`0x7FFE593DCEC2 (1 samples, 0.47%)</title><rect x="88.6256%" y="1349" width="0.4739%" height="15" fill="rgb(213,213,64)" fg:x="187" fg:w="1"/><text x="88.8756%" y="1359.50"></text></g><g><title>`0x7FFE593D2129 (1 samples, 0.47%)</title><rect x="88.6256%" y="1333" width="0.4739%" height="15" fill="rgb(178,178,51)" fg:x="187" fg:w="1"/><text x="88.8756%" y="1343.50"></text></g><g><title>`0x7FFE59423620 (1 samples, 0.47%)</title><rect x="88.6256%" y="1317" width="0.4739%" height="15" fill="rgb(222,222,67)" fg:x="187" fg:w="1"/><text x="88.8756%" y="1327.50"></text></g><g><title>`0x7FFE5944F8B4 (1 samples, 0.47%)</title><rect x="88.6256%" y="1301" width="0.4739%" height="15" fill="rgb(227,227,68)" fg:x="187" fg:w="1"/><text x="88.8756%" y="1311.50"></text></g><g><title>osrs_gph.exe`invoke_main() (67 samples, 31.75%)</title><rect x="57.8199%" y="1605" width="31.7536%" height="15" fill="rgb(210,210,62)" fg:x="122" fg:w="67"/><text x="58.0699%" y="1615.50">osrs_gph.exe`invoke_main()</text></g><g><title>osrs_gph.exe`std::rt::lang_start&lt;tuple$&lt;&gt; &gt;(void (*) (67 samples, 31.75%)</title><rect x="57.8199%" y="1589" width="31.7536%" height="15" fill="rgb(57,171,171)" fg:x="122" fg:w="67"/><text x="58.0699%" y="1599.50">osrs_gph.exe`std::rt::lang_start&lt;tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>osrs_gph.exe`std::rt::lang_start_internal (67 samples, 31.75%)</title><rect x="57.8199%" y="1573" width="31.7536%" height="15" fill="rgb(106,217,217)" fg:x="122" fg:w="67"/><text x="58.0699%" y="1583.50">osrs_gph.exe`std::rt::lang_start_internal</text></g><g><title>osrs_gph.exe`std::panic::catch_unwind (67 samples, 31.75%)</title><rect x="57.8199%" y="1557" width="31.7536%" height="15" fill="rgb(51,166,166)" fg:x="122" fg:w="67"/><text x="58.0699%" y="1567.50">osrs_gph.exe`std::panic::catch_unwind</text></g><g><title>osrs_gph.exe`std::panicking::try (67 samples, 31.75%)</title><rect x="57.8199%" y="1541" width="31.7536%" height="15" fill="rgb(81,193,193)" fg:x="122" fg:w="67"/><text x="58.0699%" y="1551.50">osrs_gph.exe`std::panicking::try</text></g><g><title>osrs_gph.exe`std::panicking::try::do_call (67 samples, 31.75%)</title><rect x="57.8199%" y="1525" width="31.7536%" height="15" fill="rgb(56,170,170)" fg:x="122" fg:w="67"/><text x="58.0699%" y="1535.50">osrs_gph.exe`std::panicking::try::do_call</text></g><g><title>osrs_gph.exe`core::ops::function::FnOnce::call_once (2 samples, 0.95%)</title><rect x="88.6256%" y="1509" width="0.9479%" height="15" fill="rgb(52,167,167)" fg:x="187" fg:w="2"/><text x="88.8756%" y="1519.50"></text></g><g><title>osrs_gph.exe`std::rt::cleanup (2 samples, 0.95%)</title><rect x="88.6256%" y="1493" width="0.9479%" height="15" fill="rgb(76,188,188)" fg:x="187" fg:w="2"/><text x="88.8756%" y="1503.50"></text></g><g><title>osrs_gph.exe`std::sync::once::Once::call_once (2 samples, 0.95%)</title><rect x="88.6256%" y="1477" width="0.9479%" height="15" fill="rgb(84,196,196)" fg:x="187" fg:w="2"/><text x="88.8756%" y="1487.50"></text></g><g><title>osrs_gph.exe`std::sys_common::once::queue::Once::call (2 samples, 0.95%)</title><rect x="88.6256%" y="1461" width="0.9479%" height="15" fill="rgb(83,195,195)" fg:x="187" fg:w="2"/><text x="88.8756%" y="1471.50"></text></g><g><title>osrs_gph.exe`core::cell::Cell::get (2 samples, 0.95%)</title><rect x="88.6256%" y="1445" width="0.9479%" height="15" fill="rgb(67,180,180)" fg:x="187" fg:w="2"/><text x="88.8756%" y="1455.50"></text></g><g><title>osrs_gph.exe`std::sync::once::impl$2::call_once::closure$0&lt;std::rt::cleanup::closure_env$0&gt; (2 samples, 0.95%)</title><rect x="88.6256%" y="1429" width="0.9479%" height="15" fill="rgb(99,210,210)" fg:x="187" fg:w="2"/><text x="88.8756%" y="1439.50"></text></g><g><title>`0x7FFE579C1480 (2 samples, 0.95%)</title><rect x="88.6256%" y="1413" width="0.9479%" height="15" fill="rgb(200,200,59)" fg:x="187" fg:w="2"/><text x="88.8756%" y="1423.50"></text></g><g><title>`0x7FFE579C1496 (2 samples, 0.95%)</title><rect x="88.6256%" y="1397" width="0.9479%" height="15" fill="rgb(196,196,57)" fg:x="187" fg:w="2"/><text x="88.8756%" y="1407.50"></text></g><g><title>`0x7FFE579C0A3D (1 samples, 0.47%)</title><rect x="89.0995%" y="1381" width="0.4739%" height="15" fill="rgb(210,210,62)" fg:x="188" fg:w="1"/><text x="89.3495%" y="1391.50"></text></g><g><title>`0x7FFE579BED1A (1 samples, 0.47%)</title><rect x="89.0995%" y="1365" width="0.4739%" height="15" fill="rgb(213,213,64)" fg:x="188" fg:w="1"/><text x="89.3495%" y="1375.50"></text></g><g><title>`0x7FFE579C459C (1 samples, 0.47%)</title><rect x="89.0995%" y="1349" width="0.4739%" height="15" fill="rgb(211,211,63)" fg:x="188" fg:w="1"/><text x="89.3495%" y="1359.50"></text></g><g><title>`0x7FFE579C4622 (1 samples, 0.47%)</title><rect x="89.0995%" y="1333" width="0.4739%" height="15" fill="rgb(220,220,66)" fg:x="188" fg:w="1"/><text x="89.3495%" y="1343.50"></text></g><g><title>`0x7FFE55B60C49 (1 samples, 0.47%)</title><rect x="89.0995%" y="1317" width="0.4739%" height="15" fill="rgb(215,215,64)" fg:x="188" fg:w="1"/><text x="89.3495%" y="1327.50"></text></g><g><title>`0x7FFE55B6E902 (1 samples, 0.47%)</title><rect x="89.0995%" y="1301" width="0.4739%" height="15" fill="rgb(199,199,59)" fg:x="188" fg:w="1"/><text x="89.3495%" y="1311.50"></text></g><g><title>`0x7FFE5944F554 (1 samples, 0.47%)</title><rect x="89.0995%" y="1285" width="0.4739%" height="15" fill="rgb(180,180,51)" fg:x="188" fg:w="1"/><text x="89.3495%" y="1295.50"></text></g><g><title>`0x7FFE567CBB18 (1 samples, 0.47%)</title><rect x="89.5735%" y="1589" width="0.4739%" height="15" fill="rgb(206,206,61)" fg:x="189" fg:w="1"/><text x="89.8235%" y="1599.50"></text></g><g><title>`0x7FFE57DC7FAB (1 samples, 0.47%)</title><rect x="89.5735%" y="1573" width="0.4739%" height="15" fill="rgb(197,197,58)" fg:x="189" fg:w="1"/><text x="89.8235%" y="1583.50"></text></g><g><title>`0x7FFE59400C9D (1 samples, 0.47%)</title><rect x="89.5735%" y="1557" width="0.4739%" height="15" fill="rgb(228,228,69)" fg:x="189" fg:w="1"/><text x="89.8235%" y="1567.50"></text></g><g><title>`0x7FFE594010A6 (1 samples, 0.47%)</title><rect x="89.5735%" y="1541" width="0.4739%" height="15" fill="rgb(197,197,58)" fg:x="189" fg:w="1"/><text x="89.8235%" y="1551.50"></text></g><g><title>`0x7FFE593D869F (1 samples, 0.47%)</title><rect x="89.5735%" y="1525" width="0.4739%" height="15" fill="rgb(228,228,69)" fg:x="189" fg:w="1"/><text x="89.8235%" y="1535.50"></text></g><g><title>`0x7FFE579C5BDA (1 samples, 0.47%)</title><rect x="89.5735%" y="1509" width="0.4739%" height="15" fill="rgb(217,217,65)" fg:x="189" fg:w="1"/><text x="89.8235%" y="1519.50"></text></g><g><title>`0x7FFE579C6830 (1 samples, 0.47%)</title><rect x="89.5735%" y="1493" width="0.4739%" height="15" fill="rgb(211,211,63)" fg:x="189" fg:w="1"/><text x="89.8235%" y="1503.50"></text></g><g><title>`0x7FFE579C4692 (1 samples, 0.47%)</title><rect x="89.5735%" y="1477" width="0.4739%" height="15" fill="rgb(225,225,68)" fg:x="189" fg:w="1"/><text x="89.8235%" y="1487.50"></text></g><g><title>`0x7FFE5942D0B6 (1 samples, 0.47%)</title><rect x="89.5735%" y="1461" width="0.4739%" height="15" fill="rgb(229,229,69)" fg:x="189" fg:w="1"/><text x="89.8235%" y="1471.50"></text></g><g><title>`0x7FFE593DFB60 (1 samples, 0.47%)</title><rect x="89.5735%" y="1445" width="0.4739%" height="15" fill="rgb(221,221,66)" fg:x="189" fg:w="1"/><text x="89.8235%" y="1455.50"></text></g><g><title>`0x7FFE5944F554 (1 samples, 0.47%)</title><rect x="89.5735%" y="1429" width="0.4739%" height="15" fill="rgb(181,181,52)" fg:x="189" fg:w="1"/><text x="89.8235%" y="1439.50"></text></g><g><title>`0x7FFE593DC3F8 (1 samples, 0.47%)</title><rect x="90.0474%" y="1429" width="0.4739%" height="15" fill="rgb(215,215,64)" fg:x="190" fg:w="1"/><text x="90.2974%" y="1439.50"></text></g><g><title>`0x7FFE593D4774 (1 samples, 0.47%)</title><rect x="90.0474%" y="1413" width="0.4739%" height="15" fill="rgb(229,229,69)" fg:x="190" fg:w="1"/><text x="90.2974%" y="1423.50"></text></g><g><title>`0x7FFE593D3C6C (1 samples, 0.47%)</title><rect x="90.0474%" y="1397" width="0.4739%" height="15" fill="rgb(184,184,53)" fg:x="190" fg:w="1"/><text x="90.2974%" y="1407.50"></text></g><g><title>`0x7FFE593C070F (2 samples, 0.95%)</title><rect x="90.0474%" y="1445" width="0.9479%" height="15" fill="rgb(186,186,54)" fg:x="190" fg:w="2"/><text x="90.2974%" y="1455.50"></text></g><g><title>`0x7FFE593DC254 (1 samples, 0.47%)</title><rect x="90.5213%" y="1429" width="0.4739%" height="15" fill="rgb(204,204,60)" fg:x="191" fg:w="1"/><text x="90.7713%" y="1439.50"></text></g><g><title>`0x7FFE593DC0CA (1 samples, 0.47%)</title><rect x="90.5213%" y="1413" width="0.4739%" height="15" fill="rgb(191,191,55)" fg:x="191" fg:w="1"/><text x="90.7713%" y="1423.50"></text></g><g><title>`0x7FFE593DC4CC (1 samples, 0.47%)</title><rect x="90.5213%" y="1397" width="0.4739%" height="15" fill="rgb(185,185,53)" fg:x="191" fg:w="1"/><text x="90.7713%" y="1407.50"></text></g><g><title>`0x7FFE5944F874 (1 samples, 0.47%)</title><rect x="90.5213%" y="1381" width="0.4739%" height="15" fill="rgb(187,187,54)" fg:x="191" fg:w="1"/><text x="90.7713%" y="1391.50"></text></g><g><title>osrs_gph.exe`__scrt_common_main_seh() (71 samples, 33.65%)</title><rect x="57.8199%" y="1621" width="33.6493%" height="15" fill="rgb(206,206,61)" fg:x="122" fg:w="71"/><text x="58.0699%" y="1631.50">osrs_gph.exe`__scrt_common_main_seh()</text></g><g><title>`0x7FFE567CBCD9 (4 samples, 1.90%)</title><rect x="89.5735%" y="1605" width="1.8957%" height="15" fill="rgb(229,229,69)" fg:x="189" fg:w="4"/><text x="89.8235%" y="1615.50">`..</text></g><g><title>`0x7FFE567CBAE8 (3 samples, 1.42%)</title><rect x="90.0474%" y="1589" width="1.4218%" height="15" fill="rgb(198,198,58)" fg:x="190" fg:w="3"/><text x="90.2974%" y="1599.50"></text></g><g><title>`0x7FFE567D8F91 (3 samples, 1.42%)</title><rect x="90.0474%" y="1573" width="1.4218%" height="15" fill="rgb(193,193,56)" fg:x="190" fg:w="3"/><text x="90.2974%" y="1583.50"></text></g><g><title>`0x7FFE567D1843 (3 samples, 1.42%)</title><rect x="90.0474%" y="1557" width="1.4218%" height="15" fill="rgb(206,206,61)" fg:x="190" fg:w="3"/><text x="90.2974%" y="1567.50"></text></g><g><title>`0x7FFE56B26452 (3 samples, 1.42%)</title><rect x="90.0474%" y="1541" width="1.4218%" height="15" fill="rgb(187,187,54)" fg:x="190" fg:w="3"/><text x="90.2974%" y="1551.50"></text></g><g><title>`0x7FFE593DA25A (3 samples, 1.42%)</title><rect x="90.0474%" y="1525" width="1.4218%" height="15" fill="rgb(195,195,57)" fg:x="190" fg:w="3"/><text x="90.2974%" y="1535.50"></text></g><g><title>`0x7FFE593C8CAC (3 samples, 1.42%)</title><rect x="90.0474%" y="1509" width="1.4218%" height="15" fill="rgb(190,190,55)" fg:x="190" fg:w="3"/><text x="90.2974%" y="1519.50"></text></g><g><title>`0x7FFE593D88D4 (3 samples, 1.42%)</title><rect x="90.0474%" y="1493" width="1.4218%" height="15" fill="rgb(210,210,62)" fg:x="190" fg:w="3"/><text x="90.2974%" y="1503.50"></text></g><g><title>`0x7FFE593C0EBF (3 samples, 1.42%)</title><rect x="90.0474%" y="1477" width="1.4218%" height="15" fill="rgb(210,210,62)" fg:x="190" fg:w="3"/><text x="90.2974%" y="1487.50"></text></g><g><title>`0x7FFE593C10F0 (3 samples, 1.42%)</title><rect x="90.0474%" y="1461" width="1.4218%" height="15" fill="rgb(218,218,65)" fg:x="190" fg:w="3"/><text x="90.2974%" y="1471.50"></text></g><g><title>`0x7FFE593C06B6 (1 samples, 0.47%)</title><rect x="90.9953%" y="1445" width="0.4739%" height="15" fill="rgb(188,188,54)" fg:x="192" fg:w="1"/><text x="91.2453%" y="1455.50"></text></g><g><title>`0x7FFE5944FCB4 (1 samples, 0.47%)</title><rect x="90.9953%" y="1429" width="0.4739%" height="15" fill="rgb(184,184,53)" fg:x="192" fg:w="1"/><text x="91.2453%" y="1439.50"></text></g><g><title>`0x7FFE57DC1081 (1 samples, 0.47%)</title><rect x="91.4692%" y="1477" width="0.4739%" height="15" fill="rgb(215,215,64)" fg:x="193" fg:w="1"/><text x="91.7192%" y="1487.50"></text></g><g><title>`0x7FFE56B84DB0 (1 samples, 0.47%)</title><rect x="91.4692%" y="1461" width="0.4739%" height="15" fill="rgb(194,194,56)" fg:x="193" fg:w="1"/><text x="91.7192%" y="1471.50"></text></g><g><title>`0x7FFE57DB67A7 (1 samples, 0.47%)</title><rect x="91.4692%" y="1445" width="0.4739%" height="15" fill="rgb(217,217,65)" fg:x="193" fg:w="1"/><text x="91.7192%" y="1455.50"></text></g><g><title>`0x7FFE57DB6D0D (1 samples, 0.47%)</title><rect x="91.4692%" y="1429" width="0.4739%" height="15" fill="rgb(179,179,51)" fg:x="193" fg:w="1"/><text x="91.7192%" y="1439.50"></text></g><g><title>`0x7FFE57DB7BF5 (1 samples, 0.47%)</title><rect x="91.4692%" y="1413" width="0.4739%" height="15" fill="rgb(179,179,51)" fg:x="193" fg:w="1"/><text x="91.7192%" y="1423.50"></text></g><g><title>`0x7FFE593C19D4 (1 samples, 0.47%)</title><rect x="91.4692%" y="1397" width="0.4739%" height="15" fill="rgb(215,215,64)" fg:x="193" fg:w="1"/><text x="91.7192%" y="1407.50"></text></g><g><title>`0x7FFE593C378E (1 samples, 0.47%)</title><rect x="91.4692%" y="1381" width="0.4739%" height="15" fill="rgb(196,196,57)" fg:x="193" fg:w="1"/><text x="91.7192%" y="1391.50"></text></g><g><title>`0x7FFE593C3512 (1 samples, 0.47%)</title><rect x="91.4692%" y="1365" width="0.4739%" height="15" fill="rgb(198,198,58)" fg:x="193" fg:w="1"/><text x="91.7192%" y="1375.50"></text></g><g><title>`0x7FFE593C3818 (1 samples, 0.47%)</title><rect x="91.4692%" y="1349" width="0.4739%" height="15" fill="rgb(196,196,57)" fg:x="193" fg:w="1"/><text x="91.7192%" y="1359.50"></text></g><g><title>`0x7FFE593C51E4 (1 samples, 0.47%)</title><rect x="91.4692%" y="1333" width="0.4739%" height="15" fill="rgb(221,221,66)" fg:x="193" fg:w="1"/><text x="91.7192%" y="1343.50"></text></g><g><title>`0x7FFE593DC3F8 (2 samples, 0.95%)</title><rect x="91.4692%" y="1525" width="0.9479%" height="15" fill="rgb(205,205,61)" fg:x="193" fg:w="2"/><text x="91.7192%" y="1535.50"></text></g><g><title>`0x7FFE593D452F (2 samples, 0.95%)</title><rect x="91.4692%" y="1509" width="0.9479%" height="15" fill="rgb(214,214,64)" fg:x="193" fg:w="2"/><text x="91.7192%" y="1519.50"></text></g><g><title>`0x7FFE5942152C (2 samples, 0.95%)</title><rect x="91.4692%" y="1493" width="0.9479%" height="15" fill="rgb(180,180,51)" fg:x="193" fg:w="2"/><text x="91.7192%" y="1503.50"></text></g><g><title>`0x7FFE57DC1024 (1 samples, 0.47%)</title><rect x="91.9431%" y="1477" width="0.4739%" height="15" fill="rgb(187,187,54)" fg:x="194" fg:w="1"/><text x="92.1931%" y="1487.50"></text></g><g><title>`0x7FFE593B5219 (1 samples, 0.47%)</title><rect x="91.9431%" y="1461" width="0.4739%" height="15" fill="rgb(214,214,64)" fg:x="194" fg:w="1"/><text x="92.1931%" y="1471.50"></text></g><g><title>`0x7FFE593B5438 (1 samples, 0.47%)</title><rect x="91.9431%" y="1445" width="0.4739%" height="15" fill="rgb(203,203,60)" fg:x="194" fg:w="1"/><text x="92.1931%" y="1455.50"></text></g><g><title>`0x7FFE593D2307 (1 samples, 0.47%)</title><rect x="91.9431%" y="1429" width="0.4739%" height="15" fill="rgb(203,203,60)" fg:x="194" fg:w="1"/><text x="92.1931%" y="1439.50"></text></g><g><title>`0x7FFE5944F7D4 (1 samples, 0.47%)</title><rect x="91.9431%" y="1413" width="0.4739%" height="15" fill="rgb(191,191,55)" fg:x="194" fg:w="1"/><text x="92.1931%" y="1423.50"></text></g><g><title>`0x7FFE593C070F (5 samples, 2.37%)</title><rect x="91.4692%" y="1541" width="2.3697%" height="15" fill="rgb(221,221,66)" fg:x="193" fg:w="5"/><text x="91.7192%" y="1551.50">`0..</text></g><g><title>`0x7FFE593DC254 (3 samples, 1.42%)</title><rect x="92.4171%" y="1525" width="1.4218%" height="15" fill="rgb(195,195,57)" fg:x="195" fg:w="3"/><text x="92.6671%" y="1535.50"></text></g><g><title>`0x7FFE593DC0CA (3 samples, 1.42%)</title><rect x="92.4171%" y="1509" width="1.4218%" height="15" fill="rgb(177,177,51)" fg:x="195" fg:w="3"/><text x="92.6671%" y="1519.50"></text></g><g><title>`0x7FFE593DC4CC (3 samples, 1.42%)</title><rect x="92.4171%" y="1493" width="1.4218%" height="15" fill="rgb(188,188,54)" fg:x="195" fg:w="3"/><text x="92.6671%" y="1503.50"></text></g><g><title>`0x7FFE5944F874 (3 samples, 1.42%)</title><rect x="92.4171%" y="1477" width="1.4218%" height="15" fill="rgb(199,199,58)" fg:x="195" fg:w="3"/><text x="92.6671%" y="1487.50"></text></g><g><title>`0x7FFE593C0BC8 (7 samples, 3.32%)</title><rect x="91.4692%" y="1557" width="3.3175%" height="15" fill="rgb(213,213,63)" fg:x="193" fg:w="7"/><text x="91.7192%" y="1567.50">`0x..</text></g><g><title>`0x7FFE593C065C (2 samples, 0.95%)</title><rect x="93.8389%" y="1541" width="0.9479%" height="15" fill="rgb(202,202,59)" fg:x="198" fg:w="2"/><text x="94.0889%" y="1551.50"></text></g><g><title>`0x7FFE5944F9D4 (2 samples, 0.95%)</title><rect x="93.8389%" y="1525" width="0.9479%" height="15" fill="rgb(214,214,64)" fg:x="198" fg:w="2"/><text x="94.0889%" y="1535.50"></text></g><g><title>`0x7FFE593C0F90 (9 samples, 4.27%)</title><rect x="91.4692%" y="1573" width="4.2654%" height="15" fill="rgb(181,181,52)" fg:x="193" fg:w="9"/><text x="91.7192%" y="1583.50">`0x7F..</text></g><g><title>`0x7FFE593C0AFE (2 samples, 0.95%)</title><rect x="94.7867%" y="1557" width="0.9479%" height="15" fill="rgb(188,188,54)" fg:x="200" fg:w="2"/><text x="95.0367%" y="1567.50"></text></g><g><title>`0x7FFE593DDB51 (2 samples, 0.95%)</title><rect x="94.7867%" y="1541" width="0.9479%" height="15" fill="rgb(189,189,55)" fg:x="200" fg:w="2"/><text x="95.0367%" y="1551.50"></text></g><g><title>`0x7FFE593DA407 (2 samples, 0.95%)</title><rect x="94.7867%" y="1525" width="0.9479%" height="15" fill="rgb(181,181,52)" fg:x="200" fg:w="2"/><text x="95.0367%" y="1535.50"></text></g><g><title>`0x7FFE593DAC49 (2 samples, 0.95%)</title><rect x="94.7867%" y="1509" width="0.9479%" height="15" fill="rgb(225,225,68)" fg:x="200" fg:w="2"/><text x="95.0367%" y="1519.50"></text></g><g><title>`0x7FFE5944FB14 (2 samples, 0.95%)</title><rect x="94.7867%" y="1493" width="0.9479%" height="15" fill="rgb(225,225,68)" fg:x="200" fg:w="2"/><text x="95.0367%" y="1503.50"></text></g><g><title>`0x7FFE593D4246 (1 samples, 0.47%)</title><rect x="95.7346%" y="1557" width="0.4739%" height="15" fill="rgb(215,215,64)" fg:x="202" fg:w="1"/><text x="95.9846%" y="1567.50"></text></g><g><title>`0x7FFE593B4520 (1 samples, 0.47%)</title><rect x="95.7346%" y="1541" width="0.4739%" height="15" fill="rgb(217,217,65)" fg:x="202" fg:w="1"/><text x="95.9846%" y="1551.50"></text></g><g><title>`0x7FFE5944FD74 (1 samples, 0.47%)</title><rect x="95.7346%" y="1525" width="0.4739%" height="15" fill="rgb(222,222,67)" fg:x="202" fg:w="1"/><text x="95.9846%" y="1535.50"></text></g><g><title>`0x7FFE593D3D67 (1 samples, 0.47%)</title><rect x="96.2085%" y="1557" width="0.4739%" height="15" fill="rgb(191,191,56)" fg:x="203" fg:w="1"/><text x="96.4585%" y="1567.50"></text></g><g><title>`0x7FFE593D3D65 (1 samples, 0.47%)</title><rect x="96.6825%" y="1557" width="0.4739%" height="15" fill="rgb(225,225,68)" fg:x="204" fg:w="1"/><text x="96.9325%" y="1567.50"></text></g><g><title>`0x7FFE5940AA58 (181 samples, 85.78%)</title><rect x="11.8483%" y="1653" width="85.7820%" height="15" fill="rgb(198,198,58)" fg:x="25" fg:w="181"/><text x="12.0983%" y="1663.50">`0x7FFE5940AA58</text></g><g><title>`0x7FFE57DC257D (181 samples, 85.78%)</title><rect x="11.8483%" y="1637" width="85.7820%" height="15" fill="rgb(194,194,57)" fg:x="25" fg:w="181"/><text x="12.0983%" y="1647.50">`0x7FFE57DC257D</text></g><g><title>`0x7FFE593E5986 (13 samples, 6.16%)</title><rect x="91.4692%" y="1621" width="6.1611%" height="15" fill="rgb(229,229,69)" fg:x="193" fg:w="13"/><text x="91.7192%" y="1631.50">`0x7FFE5..</text></g><g><title>`0x7FFE594123CA (13 samples, 6.16%)</title><rect x="91.4692%" y="1605" width="6.1611%" height="15" fill="rgb(198,198,58)" fg:x="193" fg:w="13"/><text x="91.7192%" y="1615.50">`0x7FFE5..</text></g><g><title>`0x7FFE593C0DCB (13 samples, 6.16%)</title><rect x="91.4692%" y="1589" width="6.1611%" height="15" fill="rgb(196,196,57)" fg:x="193" fg:w="13"/><text x="91.7192%" y="1599.50">`0x7FFE5..</text></g><g><title>`0x7FFE593C0E8B (4 samples, 1.90%)</title><rect x="95.7346%" y="1573" width="1.8957%" height="15" fill="rgb(224,224,68)" fg:x="202" fg:w="4"/><text x="95.9846%" y="1583.50">`..</text></g><g><title>`0x7FFE593D3D60 (1 samples, 0.47%)</title><rect x="97.1564%" y="1557" width="0.4739%" height="15" fill="rgb(182,182,52)" fg:x="205" fg:w="1"/><text x="97.4064%" y="1567.50"></text></g><g><title>`0x7FFE5940AA30 (4 samples, 1.90%)</title><rect x="97.6303%" y="1653" width="1.8957%" height="15" fill="rgb(211,211,63)" fg:x="206" fg:w="4"/><text x="97.8803%" y="1663.50">`..</text></g><g><title>all (211 samples, 100%)</title><rect x="0.0000%" y="1669" width="100.0000%" height="15" fill="rgb(214,214,64)" fg:x="0" fg:w="211"/><text x="0.2500%" y="1679.50"></text></g><g><title>`0x14 (1 samples, 0.47%)</title><rect x="99.5261%" y="1653" width="0.4739%" height="15" fill="rgb(223,223,67)" fg:x="210" fg:w="1"/><text x="99.7761%" y="1663.50"></text></g><g><title>osrs_gph.exe`ring_core_0_17_7_sha512_block_data_order (1 samples, 0.47%)</title><rect x="99.5261%" y="1637" width="0.4739%" height="15" fill="rgb(177,177,50)" fg:x="210" fg:w="1"/><text x="99.7761%" y="1647.50"></text></g></svg></svg>